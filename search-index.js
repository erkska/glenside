var searchIndex = JSON.parse('{\
"adler32":{"doc":"A minimal implementation of Adler32 for Rust.","i":[[3,"RollingAdler32","adler32","A rolling version of the Adler32 hash, which can \'forget\'…",null,null],[5,"adler32","","Consume a Read object and returns the Adler32 hash.",null,[[["read",8]],["result",6]]],[11,"new","","Creates an empty Adler32 context (with hash 1).",0,[[],["rollingadler32",3]]],[11,"from_value","","Creates an Adler32 context with the given initial value.",0,[[],["rollingadler32",3]]],[11,"from_buffer","","Convenience function initializing a context from the hash…",0,[[],["rollingadler32",3]]],[11,"hash","","Returns the current hash.",0,[[]]],[11,"remove","","Removes the given `byte` that was fed to the algorithm…",0,[[]]],[11,"update","","Feeds a new `byte` to the algorithm to update the hash.",0,[[]]],[11,"update_buffer","","Feeds a vector of bytes to the algorithm to update the hash.",0,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"clone","","",0,[[],["rollingadler32",3]]],[11,"default","","",0,[[],["rollingadler32",3]]]],"p":[[3,"RollingAdler32"]]},\
"aho_corasick":{"doc":"An implementation of the Aho-Corasick string search…","i":[[3,"Match","aho_corasick","Records a match in the search text.",null,null],[12,"pati","","The pattern index.",0,null],[12,"start","","The starting byte offset of the match in the search text.",0,null],[12,"end","","The ending byte offset of the match in the search text.",0,null],[3,"Matches","","An iterator of non-overlapping matches for in-memory text.",null,null],[3,"MatchesOverlapping","","An iterator of overlapping matches for in-memory text.",null,null],[3,"StreamMatches","","An iterator of non-overlapping matches for streaming text.",null,null],[3,"StreamMatchesOverlapping","","An iterator of overlapping matches for streaming text.",null,null],[3,"FullAcAutomaton","","A complete Aho-Corasick automaton.",null,null],[3,"AcAutomaton","","An Aho-Corasick finite automaton.",null,null],[3,"Dense","","State transitions that can be stored either sparsely or…",null,null],[3,"Sparse","","State transitions that are always sparse.",null,null],[11,"new","","Build a new expanded Aho-Corasick automaton from an…",1,[[["acautomaton",3],["transitions",8]],["fullacautomaton",3]]],[6,"StateIdx","","The integer type used for the state index.",null,null],[8,"Automaton","","An abstraction over automatons and their corresponding…",null,null],[10,"next_state","","Return the next state given the current state and next…",2,[[["stateidx",6]],["stateidx",6]]],[10,"has_match","","Return true if and only if the given state and current…",2,[[["stateidx",6]]]],[10,"get_match","","Build a match given the current state, pattern index and…",2,[[["stateidx",6]],["match",3]]],[10,"start_bytes","","Return the set of bytes that have transitions in the root…",2,[[]]],[10,"patterns","","Returns all of the patterns matched by this automaton.",2,[[]]],[10,"pattern","","Returns the pattern indexed at `i`.",2,[[]]],[11,"len","","Return the number of patterns in the automaton.",2,[[]]],[11,"is_empty","","Returns true if the automaton has no patterns.",2,[[]]],[11,"find","","Returns an iterator of non-overlapping matches in `s`.",2,[[],["matches",3]]],[11,"find_overlapping","","Returns an iterator of overlapping matches in `s`.",2,[[],["matchesoverlapping",3]]],[11,"stream_find","","Returns an iterator of non-overlapping matches in the…",2,[[["read",8]],[["read",8],["streammatches",3]]]],[11,"stream_find_overlapping","","Returns an iterator of overlapping matches in the given…",2,[[["read",8]],[["streammatchesoverlapping",3],["read",8]]]],[8,"Transitions","","An abstraction over state transition strategies.",null,null],[10,"new","","Return a new state at the given depth.",3,[[]]],[10,"goto","","Return the next state index given the next character.",3,[[],["stateidx",6]]],[10,"set_goto","","Set the next state index for the character given.",3,[[["stateidx",6]]]],[10,"heap_bytes","","The memory use in bytes (on the heap) of this set of…",3,[[]]],[11,"new","","Create a new automaton from an iterator of patterns.",4,[[],[["acautomaton",3],["dense",3]]]],[11,"with_transitions","","Create a new automaton from an iterator of patterns.",4,[[],["acautomaton",3]]],[11,"into_full","","Build out the entire automaton into a single matrix.",4,[[],["fullacautomaton",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"into_iter","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"into_iter","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into_iter","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"into_iter","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"next_state","","",1,[[["stateidx",6]],["stateidx",6]]],[11,"get_match","","",1,[[["stateidx",6]],["match",3]]],[11,"has_match","","",1,[[["stateidx",6]]]],[11,"start_bytes","","",1,[[]]],[11,"patterns","","",1,[[]]],[11,"pattern","","",1,[[]]],[11,"next_state","","",4,[[["stateidx",6]],["stateidx",6]]],[11,"get_match","","",4,[[["stateidx",6]],["match",3]]],[11,"has_match","","",4,[[["stateidx",6]]]],[11,"start_bytes","","",4,[[]]],[11,"patterns","","",4,[[]]],[11,"pattern","","",4,[[]]],[11,"new","","",9,[[],["dense",3]]],[11,"goto","","",9,[[],["stateidx",6]]],[11,"set_goto","","",9,[[["stateidx",6]]]],[11,"heap_bytes","","",9,[[]]],[11,"new","","",10,[[],["sparse",3]]],[11,"goto","","",10,[[],["stateidx",6]]],[11,"set_goto","","",10,[[["stateidx",6]]]],[11,"heap_bytes","","",10,[[]]],[11,"next","","",5,[[],[["option",4],["match",3]]]],[11,"next","","",7,[[],[["result",6],["option",4]]]],[11,"next","","",6,[[],[["option",4],["match",3]]]],[11,"next","","",8,[[],[["result",6],["option",4]]]],[11,"clone","","",0,[[],["match",3]]],[11,"clone","","",1,[[],["fullacautomaton",3]]],[11,"clone","","",4,[[],["acautomaton",3]]],[11,"clone","","",9,[[],["dense",3]]],[11,"clone","","",10,[[],["sparse",3]]],[11,"eq","","",0,[[["match",3]]]],[11,"ne","","",0,[[["match",3]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"hash","","",0,[[]]],[11,"from_iter","","Create an automaton from an iterator of strings.",4,[[],["acautomaton",3]]],[11,"len","","Return the number of patterns in the automaton.",2,[[]]],[11,"is_empty","","Returns true if the automaton has no patterns.",2,[[]]],[11,"find","","Returns an iterator of non-overlapping matches in `s`.",2,[[],["matches",3]]],[11,"find_overlapping","","Returns an iterator of overlapping matches in `s`.",2,[[],["matchesoverlapping",3]]],[11,"stream_find","","Returns an iterator of non-overlapping matches in the…",2,[[["read",8]],[["read",8],["streammatches",3]]]],[11,"stream_find_overlapping","","Returns an iterator of overlapping matches in the given…",2,[[["read",8]],[["streammatchesoverlapping",3],["read",8]]]]],"p":[[3,"Match"],[3,"FullAcAutomaton"],[8,"Automaton"],[8,"Transitions"],[3,"AcAutomaton"],[3,"Matches"],[3,"MatchesOverlapping"],[3,"StreamMatches"],[3,"StreamMatchesOverlapping"],[3,"Dense"],[3,"Sparse"]]},\
"ansi_term":{"doc":"This is a library for controlling colours and formatting,…","i":[[3,"Prefix","ansi_term","Like `ANSIString`, but only displays the style prefix.",null,null],[3,"Infix","","Like `ANSIString`, but only displays the difference…",null,null],[3,"Suffix","","Like `ANSIString`, but only displays the style suffix.",null,null],[3,"Style","","A style is a collection of properties that can format a…",null,null],[12,"foreground","","The style\'s foreground colour, if it has one.",0,null],[12,"background","","The style\'s background colour, if it has one.",0,null],[12,"is_bold","","Whether this style is bold.",0,null],[12,"is_dimmed","","Whether this style is dimmed.",0,null],[12,"is_italic","","Whether this style is italic.",0,null],[12,"is_underline","","Whether this style is underlined.",0,null],[12,"is_blink","","Whether this style is blinking.",0,null],[12,"is_reverse","","Whether this style has reverse colours.",0,null],[12,"is_hidden","","Whether this style is hidden.",0,null],[12,"is_strikethrough","","Whether this style is struckthrough.",0,null],[3,"ANSIGenericString","","An `ANSIGenericString` includes a generic string type and…",null,null],[3,"ANSIGenericStrings","","A set of `ANSIGenericString`s collected together, in order…",null,null],[12,"0","","",1,null],[4,"Colour","","A colour is one specific type of ANSI escape code, and can…",null,null],[13,"Black","","Colour #0 (foreground code `30`, background code `40`).",2,null],[13,"Red","","Colour #1 (foreground code `31`, background code `41`).",2,null],[13,"Green","","Colour #2 (foreground code `32`, background code `42`).",2,null],[13,"Yellow","","Colour #3 (foreground code `33`, background code `43`).",2,null],[13,"Blue","","Colour #4 (foreground code `34`, background code `44`).",2,null],[13,"Purple","","Colour #5 (foreground code `35`, background code `45`).",2,null],[13,"Cyan","","Colour #6 (foreground code `36`, background code `46`).",2,null],[13,"White","","Colour #7 (foreground code `37`, background code `47`).",2,null],[13,"Fixed","","A colour number from 0 to 255, for use in 256-colour…",2,null],[13,"RGB","","A 24-bit RGB color, as specified by ISO-8613-3.",2,null],[4,"Color","","A colour is one specific type of ANSI escape code, and can…",null,null],[13,"Black","","Colour #0 (foreground code `30`, background code `40`).",2,null],[13,"Red","","Colour #1 (foreground code `31`, background code `41`).",2,null],[13,"Green","","Colour #2 (foreground code `32`, background code `42`).",2,null],[13,"Yellow","","Colour #3 (foreground code `33`, background code `43`).",2,null],[13,"Blue","","Colour #4 (foreground code `34`, background code `44`).",2,null],[13,"Purple","","Colour #5 (foreground code `35`, background code `45`).",2,null],[13,"Cyan","","Colour #6 (foreground code `36`, background code `46`).",2,null],[13,"White","","Colour #7 (foreground code `37`, background code `47`).",2,null],[13,"Fixed","","A colour number from 0 to 255, for use in 256-colour…",2,null],[13,"RGB","","A 24-bit RGB color, as specified by ISO-8613-3.",2,null],[5,"ANSIStrings","","A function to construct an `ANSIStrings` instance.",null,[[],["ansistrings",6]]],[5,"ANSIByteStrings","","A function to construct an `ANSIByteStrings` instance.",null,[[],["ansibytestrings",6]]],[11,"prefix","","The prefix for this style.",0,[[],["prefix",3]]],[11,"infix","","The infix between this style and another.",0,[[["style",3]],["infix",3]]],[11,"suffix","","The suffix for this style.",0,[[],["suffix",3]]],[11,"prefix","","The prefix for this colour.",2,[[],["prefix",3]]],[11,"infix","","The infix between this colour and another.",2,[[["colour",4]],["infix",3]]],[11,"suffix","","The suffix for this colour.",2,[[],["suffix",3]]],[11,"new","","Creates a new Style with no differences.",0,[[],["style",3]]],[11,"bold","","Returns a `Style` with the bold property set.",0,[[],["style",3]]],[11,"dimmed","","Returns a `Style` with the dimmed property set.",0,[[],["style",3]]],[11,"italic","","Returns a `Style` with the italic property set.",0,[[],["style",3]]],[11,"underline","","Returns a `Style` with the underline property set.",0,[[],["style",3]]],[11,"blink","","Returns a `Style` with the blink property set.",0,[[],["style",3]]],[11,"reverse","","Returns a `Style` with the reverse property set.",0,[[],["style",3]]],[11,"hidden","","Returns a `Style` with the hidden property set.",0,[[],["style",3]]],[11,"strikethrough","","Returns a `Style` with the hidden property set.",0,[[],["style",3]]],[11,"fg","","Returns a `Style` with the foreground colour property set.",0,[[["colour",4]],["style",3]]],[11,"on","","Returns a `Style` with the background colour property set.",0,[[["colour",4]],["style",3]]],[11,"is_plain","","Return true if this `Style` has no actual styles, and can…",0,[[]]],[11,"normal","","Return a `Style` with the foreground colour set to this…",2,[[],["style",3]]],[11,"bold","","Returns a `Style` with the bold property set.",2,[[],["style",3]]],[11,"dimmed","","Returns a `Style` with the dimmed property set.",2,[[],["style",3]]],[11,"italic","","Returns a `Style` with the italic property set.",2,[[],["style",3]]],[11,"underline","","Returns a `Style` with the underline property set.",2,[[],["style",3]]],[11,"blink","","Returns a `Style` with the blink property set.",2,[[],["style",3]]],[11,"reverse","","Returns a `Style` with the reverse property set.",2,[[],["style",3]]],[11,"hidden","","Returns a `Style` with the hidden property set.",2,[[],["style",3]]],[11,"strikethrough","","Returns a `Style` with the strikethrough property set.",2,[[],["style",3]]],[11,"on","","Returns a `Style` with the background colour property set.",2,[[["colour",4]],["style",3]]],[11,"paint","","Paints the given text with this colour, returning an ANSI…",0,[[],[["ansigenericstring",3],["toowned",8],["sized",8]]]],[11,"paint","","Paints the given text with this colour, returning an ANSI…",2,[[],[["ansigenericstring",3],["toowned",8],["sized",8]]]],[11,"write_to","","Write an `ANSIByteString` to an `io::Write`. This writes…",3,[[],["result",6]]],[11,"write_to","","Write `ANSIByteStrings` to an `io::Write`. This writes the…",1,[[],["result",6]]],[6,"ANSIString","","An ANSI String is a string coupled with the `Style` to…",null,null],[6,"ANSIByteString","","An `ANSIByteString` represents a formatted series of…",null,null],[6,"ANSIStrings","","A set of `ANSIString`s collected together, in order to be…",null,null],[6,"ANSIByteStrings","","A set of `ANSIByteString`s collected together, in order to…",null,null],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","You can turn a `Colour` into a `Style` with the foreground…",0,[[["colour",4]],["style",3]]],[11,"from","","",3,[[],["ansigenericstring",3]]],[11,"clone","","",4,[[],["prefix",3]]],[11,"clone","","",5,[[],["infix",3]]],[11,"clone","","",6,[[],["suffix",3]]],[11,"clone","","",0,[[],["style",3]]],[11,"clone","","",2,[[],["colour",4]]],[11,"clone","","",3,[[],["ansigenericstring",3]]],[11,"default","","Returns a style with no properties set. Formatting text…",0,[[],["style",3]]],[11,"eq","","",0,[[["style",3]]]],[11,"ne","","",0,[[["style",3]]]],[11,"eq","","",2,[[["colour",4]]]],[11,"ne","","",2,[[["colour",4]]]],[11,"eq","","",3,[[["ansigenericstring",3]]]],[11,"ne","","",3,[[["ansigenericstring",3]]]],[11,"deref","","",3,[[]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"write_to","","Write an `ANSIByteString` to an `io::Write`. This writes…",9,[[],["result",6]]],[11,"write_to","","Write `ANSIByteStrings` to an `io::Write`. This writes the…",10,[[],["result",6]]]],"p":[[3,"Style"],[3,"ANSIGenericStrings"],[4,"Colour"],[3,"ANSIGenericString"],[3,"Prefix"],[3,"Infix"],[3,"Suffix"],[6,"ANSIString"],[6,"ANSIStrings"],[6,"ANSIByteString"],[6,"ANSIByteStrings"]]},\
"anyhow":{"doc":"github crates-io docs-rs","i":[[3,"Error","anyhow","The `Error` type, a wrapper around a dynamic error type.",null,null],[3,"Chain","","Iterator of a chain of source errors.",null,null],[11,"new","","",0,[[["stderror",8]]]],[11,"new","","Create a new error object from any error type.",1,[[]]],[11,"msg","","Create a new error object from a printable error message.",1,[[]]],[11,"context","","Wrap the error value with additional context.",1,[[]]],[11,"backtrace","","Get the backtrace for this Error.",1,[[],["backtrace",3]]],[11,"chain","","An iterator of the chain of source errors contained by…",1,[[],["chain",3]]],[11,"root_cause","","The lowest level cause of this error — this error\'s…",1,[[],["stderror",8]]],[11,"is","","Returns true if `E` is the type held by this error object.",1,[[]]],[11,"downcast","","Attempt to downcast the error object to a concrete type.",1,[[],["result",4]]],[11,"downcast_ref","","Downcast this error object by reference.",1,[[],["option",4]]],[11,"downcast_mut","","Downcast this error object by mutable reference.",1,[[],["option",4]]],[6,"Result","","`Result<T, Error>`",null,null],[8,"Context","","Provides the `context` method for `Result`.",null,null],[10,"context","","Wrap the error value with additional context.",2,[[],[["error",3],["result",6]]]],[10,"with_context","","Wrap the error value with additional context that is…",2,[[],[["error",3],["result",6]]]],[14,"bail","","Return early with an error.",null,null],[14,"ensure","","Return early with an error if a condition is not satisfied.",null,null],[14,"anyhow","","Construct an ad-hoc error from a string.",null,null],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"into_iter","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"drop","","",1,[[]]],[11,"as_ref","","",1,[[],["stderror",8]]],[11,"as_ref","","",1,[[],["stderror",8]]],[11,"from","","",1,[[]]],[11,"next_back","","",0,[[],["option",4]]],[11,"len","","",0,[[]]],[11,"next","","",0,[[],["option",4]]],[11,"size_hint","","",0,[[]]],[11,"clone","","",0,[[],["chain",3]]],[11,"default","","",0,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]]],"p":[[3,"Chain"],[3,"Error"],[8,"Context"]]},\
"approx":{"doc":"A crate that provides facilities for testing the…","i":[[3,"AbsDiff","approx","The requisite parameters for testing for approximate…",null,null],[12,"epsilon","","The tolerance to use when testing values that are close…",0,null],[3,"Relative","","The requisite parameters for testing for approximate…",null,null],[12,"epsilon","","The tolerance to use when testing values that are close…",1,null],[12,"max_relative","","The relative tolerance for testing values that are…",1,null],[3,"Ulps","","The requisite parameters for testing for approximate…",null,null],[12,"epsilon","","The tolerance to use when testing values that are close…",2,null],[12,"max_ulps","","The ULPs to tolerate when testing values that are far-apart.",2,null],[8,"AbsDiffEq","","Equality that is defined using the absolute difference of…",null,null],[16,"Epsilon","","Used for specifying relative comparisons.",3,null],[10,"default_epsilon","","The default tolerance to use when testing values that are…",3,[[]]],[10,"abs_diff_eq","","A test for equality that uses the absolute difference to…",3,[[]]],[11,"abs_diff_ne","","The inverse of `ApproxEq::abs_diff_eq`.",3,[[]]],[8,"RelativeEq","","Equality comparisons between two numbers using both the…",null,null],[10,"default_max_relative","","The default relative tolerance for testing values that are…",4,[[]]],[10,"relative_eq","","A test for equality that uses a relative comparison if the…",4,[[]]],[11,"relative_ne","","The inverse of `ApproxEq::relative_eq`.",4,[[]]],[8,"UlpsEq","","Equality comparisons between two numbers using both the…",null,null],[10,"default_max_ulps","","The default ULPs to tolerate when testing values that are…",5,[[]]],[10,"ulps_eq","","A test for equality that uses units in the last place…",5,[[]]],[11,"ulps_ne","","The inverse of `ApproxEq::ulps_eq`.",5,[[]]],[11,"epsilon","","Replace the epsilon value with the one specified.",0,[[],["absdiff",3]]],[11,"eq","","Peform the equality comparison",0,[[]]],[11,"ne","","Peform the inequality comparison",0,[[]]],[11,"epsilon","","Replace the epsilon value with the one specified.",1,[[],["relative",3]]],[11,"max_relative","","Replace the maximum relative value with the one specified.",1,[[],["relative",3]]],[11,"eq","","Peform the equality comparison",1,[[]]],[11,"ne","","Peform the inequality comparison",1,[[]]],[11,"epsilon","","Replace the epsilon value with the one specified.",2,[[],["ulps",3]]],[11,"max_ulps","","Replace the max ulps value with the one specified.",2,[[],["ulps",3]]],[11,"eq","","Peform the equality comparison",2,[[]]],[11,"ne","","Peform the inequality comparison",2,[[]]],[14,"abs_diff_eq","","Approximate equality of using the absolute difference.",null,null],[14,"abs_diff_ne","","Approximate inequality of using the absolute difference.",null,null],[14,"relative_eq","","Approximate equality using both the absolute difference…",null,null],[14,"relative_ne","","Approximate inequality using both the absolute difference…",null,null],[14,"ulps_eq","","Approximate equality using both the absolute difference…",null,null],[14,"ulps_ne","","Approximate inequality using both the absolute difference…",null,null],[14,"assert_abs_diff_eq","","An assertion that delegates to `abs_diff_eq!`, and panics…",null,null],[14,"assert_abs_diff_ne","","An assertion that delegates to `abs_diff_ne!`, and panics…",null,null],[14,"assert_relative_eq","","An assertion that delegates to `relative_eq!`, and panics…",null,null],[14,"assert_relative_ne","","An assertion that delegates to `relative_ne!`, and panics…",null,null],[14,"assert_ulps_eq","","An assertion that delegates to `ulps_eq!`, and panics with…",null,null],[14,"assert_ulps_ne","","An assertion that delegates to `ulps_ne!`, and panics with…",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"default","","",0,[[],["absdiff",3]]],[11,"default","","",1,[[],["relative",3]]],[11,"default","","",2,[[],["ulps",3]]],[11,"abs_diff_ne","","The inverse of `ApproxEq::abs_diff_eq`.",3,[[]]],[11,"relative_ne","","The inverse of `ApproxEq::relative_eq`.",4,[[]]],[11,"ulps_ne","","The inverse of `ApproxEq::ulps_eq`.",5,[[]]]],"p":[[3,"AbsDiff"],[3,"Relative"],[3,"Ulps"],[8,"AbsDiffEq"],[8,"RelativeEq"],[8,"UlpsEq"]]},\
"atty":{"doc":"atty is a simple utility that answers one question","i":[[4,"Stream","atty","possible stream sources",null,null],[13,"Stdout","","",0,null],[13,"Stderr","","",0,null],[13,"Stdin","","",0,null],[5,"is","","returns true if this is a tty",null,[[["stream",4]]]],[5,"isnt","","returns true if this is not a tty",null,[[["stream",4]]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"clone","","",0,[[],["stream",4]]]],"p":[[4,"Stream"]]},\
"bitflags":{"doc":"A typesafe bitmask flag generator useful for sets of…","i":[[14,"bitflags","bitflags","The macro used to generate the flag structure.",null,null]],"p":[]},\
"byteorder":{"doc":"This crate provides convenience methods for encoding and…","i":[[4,"BigEndian","byteorder","Defines big-endian serialization.",null,null],[4,"LittleEndian","","Defines little-endian serialization.",null,null],[6,"BE","","A type alias for `BigEndian`.",null,null],[6,"LE","","A type alias for `LittleEndian`.",null,null],[6,"NetworkEndian","","Defines network byte order serialization.",null,null],[6,"NativeEndian","","Defines system native-endian serialization.",null,null],[8,"ReadBytesExt","","Extends `Read` with methods for reading numbers. (For…",null,null],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_u24","","Reads an unsigned 24 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_i24","","Reads a signed 24 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_u48","","Reads an unsigned 48 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_i48","","Reads a signed 48 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_u128","","Reads an unsigned 128 bit integer from the underlying…",0,[[],["result",6]]],[11,"read_i128","","Reads a signed 128 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying…",0,[[],["result",6]]],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,[[],["result",6]]],[11,"read_uint128","","Reads an unsigned n-bytes integer from the underlying…",0,[[],["result",6]]],[11,"read_int128","","Reads a signed n-bytes integer from the underlying reader.",0,[[],["result",6]]],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point…",0,[[],["result",6]]],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point…",0,[[],["result",6]]],[11,"read_u16_into","","Reads a sequence of unsigned 16 bit integers from the…",0,[[],["result",6]]],[11,"read_u32_into","","Reads a sequence of unsigned 32 bit integers from the…",0,[[],["result",6]]],[11,"read_u64_into","","Reads a sequence of unsigned 64 bit integers from the…",0,[[],["result",6]]],[11,"read_u128_into","","Reads a sequence of unsigned 128 bit integers from the…",0,[[],["result",6]]],[11,"read_i8_into","","Reads a sequence of signed 8 bit integers from the…",0,[[],["result",6]]],[11,"read_i16_into","","Reads a sequence of signed 16 bit integers from the…",0,[[],["result",6]]],[11,"read_i32_into","","Reads a sequence of signed 32 bit integers from the…",0,[[],["result",6]]],[11,"read_i64_into","","Reads a sequence of signed 64 bit integers from the…",0,[[],["result",6]]],[11,"read_i128_into","","Reads a sequence of signed 128 bit integers from the…",0,[[],["result",6]]],[11,"read_f32_into","","Reads a sequence of IEEE754 single-precision (4 bytes)…",0,[[],["result",6]]],[11,"read_f32_into_unchecked","","DEPRECATED.",0,[[],["result",6]]],[11,"read_f64_into","","Reads a sequence of IEEE754 double-precision (8 bytes)…",0,[[],["result",6]]],[11,"read_f64_into_unchecked","","DEPRECATED.",0,[[],["result",6]]],[8,"WriteBytesExt","","Extends `Write` with methods for writing numbers. (For…",null,null],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_u24","","Writes an unsigned 24 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_i24","","Writes a signed 24 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_u48","","Writes an unsigned 48 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_i48","","Writes a signed 48 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_u128","","Writes an unsigned 128 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_i128","","Writes a signed 128 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying writer.",1,[[],["result",6]]],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,[[],["result",6]]],[11,"write_uint128","","Writes an unsigned n-bytes integer to the underlying writer.",1,[[],["result",6]]],[11,"write_int128","","Writes a signed n-bytes integer to the underlying writer.",1,[[],["result",6]]],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point…",1,[[],["result",6]]],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point…",1,[[],["result",6]]],[8,"ByteOrder","","`ByteOrder` describes types that can serialize integers as…",null,null],[10,"read_u16","","Reads an unsigned 16 bit integer from `buf`.",2,[[]]],[11,"read_u24","","Reads an unsigned 24 bit integer from `buf`, stored in u32.",2,[[]]],[10,"read_u32","","Reads an unsigned 32 bit integer from `buf`.",2,[[]]],[11,"read_u48","","Reads an unsigned 48 bit integer from `buf`, stored in u64.",2,[[]]],[10,"read_u64","","Reads an unsigned 64 bit integer from `buf`.",2,[[]]],[10,"read_u128","","Reads an unsigned 128 bit integer from `buf`.",2,[[]]],[10,"read_uint","","Reads an unsigned n-bytes integer from `buf`.",2,[[]]],[10,"read_uint128","","Reads an unsigned n-bytes integer from `buf`.",2,[[]]],[10,"write_u16","","Writes an unsigned 16 bit integer `n` to `buf`.",2,[[]]],[11,"write_u24","","Writes an unsigned 24 bit integer `n` to `buf`, stored in…",2,[[]]],[10,"write_u32","","Writes an unsigned 32 bit integer `n` to `buf`.",2,[[]]],[11,"write_u48","","Writes an unsigned 48 bit integer `n` to `buf`, stored in…",2,[[]]],[10,"write_u64","","Writes an unsigned 64 bit integer `n` to `buf`.",2,[[]]],[10,"write_u128","","Writes an unsigned 128 bit integer `n` to `buf`.",2,[[]]],[10,"write_uint","","Writes an unsigned integer `n` to `buf` using only `nbytes`.",2,[[]]],[10,"write_uint128","","Writes an unsigned integer `n` to `buf` using only `nbytes`.",2,[[]]],[11,"read_i16","","Reads a signed 16 bit integer from `buf`.",2,[[]]],[11,"read_i24","","Reads a signed 24 bit integer from `buf`, stored in i32.",2,[[]]],[11,"read_i32","","Reads a signed 32 bit integer from `buf`.",2,[[]]],[11,"read_i48","","Reads a signed 48 bit integer from `buf`, stored in i64.",2,[[]]],[11,"read_i64","","Reads a signed 64 bit integer from `buf`.",2,[[]]],[11,"read_i128","","Reads a signed 128 bit integer from `buf`.",2,[[]]],[11,"read_int","","Reads a signed n-bytes integer from `buf`.",2,[[]]],[11,"read_int128","","Reads a signed n-bytes integer from `buf`.",2,[[]]],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point…",2,[[]]],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point…",2,[[]]],[11,"write_i16","","Writes a signed 16 bit integer `n` to `buf`.",2,[[]]],[11,"write_i24","","Writes a signed 24 bit integer `n` to `buf`, stored in i32.",2,[[]]],[11,"write_i32","","Writes a signed 32 bit integer `n` to `buf`.",2,[[]]],[11,"write_i48","","Writes a signed 48 bit integer `n` to `buf`, stored in i64.",2,[[]]],[11,"write_i64","","Writes a signed 64 bit integer `n` to `buf`.",2,[[]]],[11,"write_i128","","Writes a signed 128 bit integer `n` to `buf`.",2,[[]]],[11,"write_int","","Writes a signed integer `n` to `buf` using only `nbytes`.",2,[[]]],[11,"write_int128","","Writes a signed integer `n` to `buf` using only `nbytes`.",2,[[]]],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point…",2,[[]]],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point…",2,[[]]],[10,"read_u16_into","","Reads unsigned 16 bit integers from `src` into `dst`.",2,[[]]],[10,"read_u32_into","","Reads unsigned 32 bit integers from `src` into `dst`.",2,[[]]],[10,"read_u64_into","","Reads unsigned 64 bit integers from `src` into `dst`.",2,[[]]],[10,"read_u128_into","","Reads unsigned 128 bit integers from `src` into `dst`.",2,[[]]],[11,"read_i16_into","","Reads signed 16 bit integers from `src` to `dst`.",2,[[]]],[11,"read_i32_into","","Reads signed 32 bit integers from `src` into `dst`.",2,[[]]],[11,"read_i64_into","","Reads signed 64 bit integers from `src` into `dst`.",2,[[]]],[11,"read_i128_into","","Reads signed 128 bit integers from `src` into `dst`.",2,[[]]],[11,"read_f32_into","","Reads IEEE754 single-precision (4 bytes) floating point…",2,[[]]],[11,"read_f32_into_unchecked","","DEPRECATED.",2,[[]]],[11,"read_f64_into","","Reads IEEE754 single-precision (4 bytes) floating point…",2,[[]]],[11,"read_f64_into_unchecked","","DEPRECATED.",2,[[]]],[10,"write_u16_into","","Writes unsigned 16 bit integers from `src` into `dst`.",2,[[]]],[10,"write_u32_into","","Writes unsigned 32 bit integers from `src` into `dst`.",2,[[]]],[10,"write_u64_into","","Writes unsigned 64 bit integers from `src` into `dst`.",2,[[]]],[10,"write_u128_into","","Writes unsigned 128 bit integers from `src` into `dst`.",2,[[]]],[11,"write_i8_into","","Writes signed 8 bit integers from `src` into `dst`.",2,[[]]],[11,"write_i16_into","","Writes signed 16 bit integers from `src` into `dst`.",2,[[]]],[11,"write_i32_into","","Writes signed 32 bit integers from `src` into `dst`.",2,[[]]],[11,"write_i64_into","","Writes signed 64 bit integers from `src` into `dst`.",2,[[]]],[11,"write_i128_into","","Writes signed 128 bit integers from `src` into `dst`.",2,[[]]],[11,"write_f32_into","","Writes IEEE754 single-precision (4 bytes) floating point…",2,[[]]],[11,"write_f64_into","","Writes IEEE754 double-precision (8 bytes) floating point…",2,[[]]],[10,"from_slice_u16","","Converts the given slice of unsigned 16 bit integers to a…",2,[[]]],[10,"from_slice_u32","","Converts the given slice of unsigned 32 bit integers to a…",2,[[]]],[10,"from_slice_u64","","Converts the given slice of unsigned 64 bit integers to a…",2,[[]]],[10,"from_slice_u128","","Converts the given slice of unsigned 128 bit integers to a…",2,[[]]],[11,"from_slice_i16","","Converts the given slice of signed 16 bit integers to a…",2,[[]]],[11,"from_slice_i32","","Converts the given slice of signed 32 bit integers to a…",2,[[]]],[11,"from_slice_i64","","Converts the given slice of signed 64 bit integers to a…",2,[[]]],[11,"from_slice_i128","","Converts the given slice of signed 128 bit integers to a…",2,[[]]],[10,"from_slice_f32","","Converts the given slice of IEEE754 single-precision (4…",2,[[]]],[10,"from_slice_f64","","Converts the given slice of IEEE754 double-precision (8…",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"read_u16","","",3,[[]]],[11,"read_u32","","",3,[[]]],[11,"read_u64","","",3,[[]]],[11,"read_u128","","",3,[[]]],[11,"read_uint","","",3,[[]]],[11,"read_uint128","","",3,[[]]],[11,"write_u16","","",3,[[]]],[11,"write_u32","","",3,[[]]],[11,"write_u64","","",3,[[]]],[11,"write_u128","","",3,[[]]],[11,"write_uint","","",3,[[]]],[11,"write_uint128","","",3,[[]]],[11,"read_u16_into","","",3,[[]]],[11,"read_u32_into","","",3,[[]]],[11,"read_u64_into","","",3,[[]]],[11,"read_u128_into","","",3,[[]]],[11,"write_u16_into","","",3,[[]]],[11,"write_u32_into","","",3,[[]]],[11,"write_u64_into","","",3,[[]]],[11,"write_u128_into","","",3,[[]]],[11,"from_slice_u16","","",3,[[]]],[11,"from_slice_u32","","",3,[[]]],[11,"from_slice_u64","","",3,[[]]],[11,"from_slice_u128","","",3,[[]]],[11,"from_slice_f32","","",3,[[]]],[11,"from_slice_f64","","",3,[[]]],[11,"read_u16","","",4,[[]]],[11,"read_u32","","",4,[[]]],[11,"read_u64","","",4,[[]]],[11,"read_u128","","",4,[[]]],[11,"read_uint","","",4,[[]]],[11,"read_uint128","","",4,[[]]],[11,"write_u16","","",4,[[]]],[11,"write_u32","","",4,[[]]],[11,"write_u64","","",4,[[]]],[11,"write_u128","","",4,[[]]],[11,"write_uint","","",4,[[]]],[11,"write_uint128","","",4,[[]]],[11,"read_u16_into","","",4,[[]]],[11,"read_u32_into","","",4,[[]]],[11,"read_u64_into","","",4,[[]]],[11,"read_u128_into","","",4,[[]]],[11,"write_u16_into","","",4,[[]]],[11,"write_u32_into","","",4,[[]]],[11,"write_u64_into","","",4,[[]]],[11,"write_u128_into","","",4,[[]]],[11,"from_slice_u16","","",4,[[]]],[11,"from_slice_u32","","",4,[[]]],[11,"from_slice_u64","","",4,[[]]],[11,"from_slice_u128","","",4,[[]]],[11,"from_slice_f32","","",4,[[]]],[11,"from_slice_f64","","",4,[[]]],[11,"clone","","",3,[[],["bigendian",4]]],[11,"clone","","",4,[[],["littleendian",4]]],[11,"default","","",3,[[],["bigendian",4]]],[11,"default","","",4,[[],["littleendian",4]]],[11,"cmp","","",3,[[["bigendian",4]],["ordering",4]]],[11,"cmp","","",4,[[["littleendian",4]],["ordering",4]]],[11,"eq","","",3,[[["bigendian",4]]]],[11,"eq","","",4,[[["littleendian",4]]]],[11,"partial_cmp","","",3,[[["bigendian",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",4,[[["littleendian",4]],[["ordering",4],["option",4]]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"hash","","",3,[[]]],[11,"hash","","",4,[[]]],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_u24","","Reads an unsigned 24 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_i24","","Reads a signed 24 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_u48","","Reads an unsigned 48 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_i48","","Reads a signed 48 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_u128","","Reads an unsigned 128 bit integer from the underlying…",0,[[],["result",6]]],[11,"read_i128","","Reads a signed 128 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying…",0,[[],["result",6]]],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,[[],["result",6]]],[11,"read_uint128","","Reads an unsigned n-bytes integer from the underlying…",0,[[],["result",6]]],[11,"read_int128","","Reads a signed n-bytes integer from the underlying reader.",0,[[],["result",6]]],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point…",0,[[],["result",6]]],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point…",0,[[],["result",6]]],[11,"read_u16_into","","Reads a sequence of unsigned 16 bit integers from the…",0,[[],["result",6]]],[11,"read_u32_into","","Reads a sequence of unsigned 32 bit integers from the…",0,[[],["result",6]]],[11,"read_u64_into","","Reads a sequence of unsigned 64 bit integers from the…",0,[[],["result",6]]],[11,"read_u128_into","","Reads a sequence of unsigned 128 bit integers from the…",0,[[],["result",6]]],[11,"read_i8_into","","Reads a sequence of signed 8 bit integers from the…",0,[[],["result",6]]],[11,"read_i16_into","","Reads a sequence of signed 16 bit integers from the…",0,[[],["result",6]]],[11,"read_i32_into","","Reads a sequence of signed 32 bit integers from the…",0,[[],["result",6]]],[11,"read_i64_into","","Reads a sequence of signed 64 bit integers from the…",0,[[],["result",6]]],[11,"read_i128_into","","Reads a sequence of signed 128 bit integers from the…",0,[[],["result",6]]],[11,"read_f32_into","","Reads a sequence of IEEE754 single-precision (4 bytes)…",0,[[],["result",6]]],[11,"read_f32_into_unchecked","","DEPRECATED.",0,[[],["result",6]]],[11,"read_f64_into","","Reads a sequence of IEEE754 double-precision (8 bytes)…",0,[[],["result",6]]],[11,"read_f64_into_unchecked","","DEPRECATED.",0,[[],["result",6]]],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_u24","","Writes an unsigned 24 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_i24","","Writes a signed 24 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_u48","","Writes an unsigned 48 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_i48","","Writes a signed 48 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_u128","","Writes an unsigned 128 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_i128","","Writes a signed 128 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying writer.",1,[[],["result",6]]],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,[[],["result",6]]],[11,"write_uint128","","Writes an unsigned n-bytes integer to the underlying writer.",1,[[],["result",6]]],[11,"write_int128","","Writes a signed n-bytes integer to the underlying writer.",1,[[],["result",6]]],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point…",1,[[],["result",6]]],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point…",1,[[],["result",6]]]],"p":[[8,"ReadBytesExt"],[8,"WriteBytesExt"],[8,"ByteOrder"],[4,"BigEndian"],[4,"LittleEndian"]]},\
"cfg_if":{"doc":"A macro for defining `#[cfg]` if-else statements.","i":[[14,"cfg_if","cfg_if","The main macro provided by this crate. See crate…",null,null]],"p":[]},\
"clap":{"doc":"`clap` is a simple-to-use, efficient, and full-featured…","i":[[3,"App","clap","Used to create a representation of a command line program…",null,null],[3,"Arg","","The abstract representation of a command line argument.…",null,null],[3,"ArgGroup","","`ArgGroup`s are a family of related arguments and way for…",null,null],[3,"ArgMatches","","Used to get information about the arguments that were…",null,null],[3,"OsValues","","An iterator for getting multiple values out of an argument…",null,null],[3,"SubCommand","","The abstract representation of a command line subcommand.",null,null],[3,"Values","","An iterator for getting multiple values out of an argument…",null,null],[3,"Error","","Command Line Argument Parser Error",null,null],[12,"message","","Formatted error message",0,null],[12,"kind","","The type of error",0,null],[12,"info","","Any additional information passed along, such as the…",0,null],[4,"AppSettings","","Application level settings, which affect how `App` operates",null,null],[13,"AllowInvalidUtf8","","Specifies that any invalid UTF-8 code points should not be…",1,null],[13,"AllArgsOverrideSelf","","Essentially sets [`Arg::overrides_with(\\\"itself\\\")`] for all…",1,null],[13,"AllowLeadingHyphen","","Specifies that leading hyphens are allowed in argument…",1,null],[13,"AllowNegativeNumbers","","Allows negative numbers to pass as values. This is similar…",1,null],[13,"AllowMissingPositional","","Allows one to implement two styles of CLIs where…",1,null],[13,"AllowExternalSubcommands","","Specifies that an unexpected positional argument, which…",1,null],[13,"ArgsNegateSubcommands","","Specifies that use of a valid argument negates subcommands…",1,null],[13,"ArgRequiredElseHelp","","Specifies that the help text should be displayed (and then…",1,null],[13,"ColoredHelp","","Uses colorized help messages.",1,null],[13,"ColorAuto","","Enables colored output only when the output is going to a…",1,null],[13,"ColorAlways","","Enables colored output regardless of whether or not the…",1,null],[13,"ColorNever","","Disables colored output no matter if the output is going…",1,null],[13,"DontCollapseArgsInUsage","","Disables the automatic collapsing of positional args into…",1,null],[13,"DontDelimitTrailingValues","","Disables the automatic delimiting of values when `--` or…",1,null],[13,"DisableHelpFlags","","Disables `-h` and `--help` `App` without affecting any of…",1,null],[13,"DisableHelpSubcommand","","Disables the `help` subcommand",1,null],[13,"DisableVersion","","Disables `-V` and `--version` `App` without affecting any…",1,null],[13,"DeriveDisplayOrder","","Displays the arguments and `SubCommand`s in the help…",1,null],[13,"GlobalVersion","","Specifies to use the version of the current command for…",1,null],[13,"Hidden","","Specifies that this `SubCommand` should be hidden from…",1,null],[13,"HidePossibleValuesInHelp","","Tells `clap` not to print possible values when displaying…",1,null],[13,"InferSubcommands","","Tries to match unknown args to partial `subcommands` or…",1,null],[13,"NoBinaryName","","Specifies that the parser should not assume the first…",1,null],[13,"NextLineHelp","","Places the help string for all arguments on the line after…",1,null],[13,"PropagateGlobalValuesDown","","DEPRECATED: This setting is no longer required in order to…",1,null],[13,"SubcommandsNegateReqs","","Allows `SubCommand`s to override all requirements of the…",1,null],[13,"SubcommandRequiredElseHelp","","Specifies that the help text should be displayed (before…",1,null],[13,"StrictUtf8","","Specifies that any invalid UTF-8 code points should be…",1,null],[13,"SubcommandRequired","","Allows specifying that if no `SubCommand` is present at…",1,null],[13,"TrailingVarArg","","Specifies that the final positional argument is a \\\"VarArg\\\"…",1,null],[13,"UnifiedHelpMessage","","Groups flags and options together, presenting a more…",1,null],[13,"VersionlessSubcommands","","Disables `-V` and `--version` for all `SubCommand`s…",1,null],[13,"WaitOnError","","Will display a message \\\"Press [ENTER]/[RETURN] to…",1,null],[4,"ArgSettings","","Various settings that apply to arguments and may be set,…",null,null],[13,"Required","","The argument must be used",2,null],[13,"Multiple","","The argument may be used multiple times such as `--flag…",2,null],[13,"EmptyValues","","The argument allows empty values such as `--option \\\"\\\"`",2,null],[13,"Global","","The argument should be propagated down through all child…",2,null],[13,"Hidden","","The argument should not be shown in help text",2,null],[13,"TakesValue","","The argument accepts a value, such as `--option <value>`",2,null],[13,"UseValueDelimiter","","Determines if the argument allows values to be grouped via…",2,null],[13,"NextLineHelp","","Prints the help text on the line after the argument",2,null],[13,"RequireDelimiter","","Requires the use of a value delimiter for all multiple…",2,null],[13,"HidePossibleValues","","Hides the possible values from the help string",2,null],[13,"AllowLeadingHyphen","","Allows vals that start with a \'-\'",2,null],[13,"RequireEquals","","Require options use `--option=val` syntax",2,null],[13,"Last","","Specifies that the arg is the last positional argument and…",2,null],[13,"HideDefaultValue","","Hides the default value from the help string",2,null],[13,"CaseInsensitive","","Makes `Arg::possible_values` case insensitive",2,null],[13,"HideEnvValues","","Hides ENV values in the help message",2,null],[13,"HiddenShortHelp","","The argument should not be shown in short help text",2,null],[13,"HiddenLongHelp","","The argument should not be shown in long help text",2,null],[4,"Shell","","Describes which shell to produce a completions file for",null,null],[13,"Bash","","Generates a .bash completion file for the Bourne Again…",3,null],[13,"Fish","","Generates a .fish completion file for the Friendly…",3,null],[13,"Zsh","","Generates a completion file for the Z SHell (ZSH)",3,null],[13,"PowerShell","","Generates a completion file for PowerShell",3,null],[13,"Elvish","","Generates a completion file for Elvish",3,null],[4,"ErrorKind","","Command line argument parser kind of error",null,null],[13,"InvalidValue","","Occurs when an `Arg` has a set of possible values, and the…",4,null],[13,"UnknownArgument","","Occurs when a user provides a flag, option, argument or…",4,null],[13,"InvalidSubcommand","","Occurs when the user provides an unrecognized…",4,null],[13,"UnrecognizedSubcommand","","Occurs when the user provides an unrecognized `SubCommand`…",4,null],[13,"EmptyValue","","Occurs when the user provides an empty value for an option…",4,null],[13,"ValueValidation","","Occurs when the user provides a value for an argument with…",4,null],[13,"TooManyValues","","Occurs when a user provides more values for an argument…",4,null],[13,"TooFewValues","","Occurs when the user provides fewer values for an argument…",4,null],[13,"WrongNumberOfValues","","Occurs when the user provides a different number of values…",4,null],[13,"ArgumentConflict","","Occurs when the user provides two values which conflict…",4,null],[13,"MissingRequiredArgument","","Occurs when the user does not provide one or more required…",4,null],[13,"MissingSubcommand","","Occurs when a subcommand is required (as defined by…",4,null],[13,"MissingArgumentOrSubcommand","","Occurs when either an argument or `SubCommand` is…",4,null],[13,"UnexpectedMultipleUsage","","Occurs when the user provides multiple values to an…",4,null],[13,"InvalidUtf8","","Occurs when the user provides a value containing invalid…",4,null],[13,"HelpDisplayed","","Not a true \\\"error\\\" as it means `--help` or similar was…",4,null],[13,"VersionDisplayed","","Not a true \\\"error\\\" as it means `--version` or similar was…",4,null],[13,"ArgumentNotFound","","Occurs when using the [`value_t!`] and [`values_t!`]…",4,null],[13,"Io","","Represents an [I/O error]. Can occur when writing to…",4,null],[13,"Format","","Represents a Format error (which is a part of `Display`).…",4,null],[11,"new","","Creates a new instance of an application requiring a name.…",5,[[["string",3],["into",8]]]],[11,"get_name","","Get the name of the app",5,[[]]],[11,"get_bin_name","","Get the name of the binary",5,[[],["option",4]]],[11,"with_defaults","","Creates a new instance of an application requiring a name,…",5,[[["string",3],["into",8]]]],[11,"author","","Sets a string of author(s) that will be displayed to the…",5,[[["into",8]]]],[11,"bin_name","","Overrides the system-determined binary name. This should…",5,[[["string",3],["into",8]]]],[11,"about","","Sets a string describing what the program does. This will…",5,[[["into",8]]]],[11,"long_about","","Sets a string describing what the program does. This will…",5,[[["into",8]]]],[11,"name","","Sets the program\'s name. This will be displayed when…",5,[[["string",3],["into",8]]]],[11,"after_help","","Adds additional help information to be displayed in…",5,[[["into",8]]]],[11,"before_help","","Adds additional help information to be displayed in…",5,[[["into",8]]]],[11,"version","","Sets a string of the version number to be displayed when…",5,[[["into",8]]]],[11,"long_version","","Sets a string of the version number to be displayed when…",5,[[["into",8]]]],[11,"usage","","Sets a custom usage string to override the auto-generated…",5,[[["into",8]]]],[11,"help","","Sets a custom help message and overrides the…",5,[[["into",8]]]],[11,"help_short","","Sets the `short` for the auto-generated `help` argument.",5,[[["asref",8]]]],[11,"version_short","","Sets the `short` for the auto-generated `version` argument.",5,[[["asref",8]]]],[11,"help_message","","Sets the help text for the auto-generated `help` argument.",5,[[["into",8]]]],[11,"version_message","","Sets the help text for the auto-generated `version`…",5,[[["into",8]]]],[11,"template","","Sets the help template to be used, overriding the default…",5,[[["into",8]]]],[11,"setting","","Enables a single command, or `SubCommand`, level settings.",5,[[["appsettings",4]]]],[11,"settings","","Enables multiple command, or `SubCommand`, level settings",5,[[]]],[11,"global_setting","","Enables a single setting that is propagated down through…",5,[[["appsettings",4]]]],[11,"global_settings","","Enables multiple settings which are propagated down…",5,[[]]],[11,"unset_setting","","Disables a single command, or `SubCommand`, level setting.",5,[[["appsettings",4]]]],[11,"unset_settings","","Disables multiple command, or `SubCommand`, level settings.",5,[[]]],[11,"set_term_width","","Sets the terminal width at which to wrap help messages.…",5,[[]]],[11,"max_term_width","","Sets the max terminal width at which to wrap help…",5,[[]]],[11,"arg","","Adds an argument to the list of valid possibilities.",5,[[["arg",3],["into",8]]]],[11,"args","","Adds multiple arguments to the list of valid possibilities",5,[[]]],[11,"arg_from_usage","","A convenience method for adding a single argument from a…",5,[[]]],[11,"args_from_usage","","Adds multiple arguments at once from a usage string, one…",5,[[]]],[11,"alias","","Allows adding a `SubCommand` alias, which function as…",5,[[["into",8]]]],[11,"aliases","","Allows adding `SubCommand` aliases, which function as…",5,[[]]],[11,"visible_alias","","Allows adding a `SubCommand` alias that functions exactly…",5,[[["into",8]]]],[11,"visible_aliases","","Allows adding multiple `SubCommand` aliases that functions…",5,[[]]],[11,"group","","Adds an `ArgGroup` to the application. `ArgGroup`s are a…",5,[[["arggroup",3]]]],[11,"groups","","Adds multiple `ArgGroup`s to the `App` at once.",5,[[]]],[11,"subcommand","","Adds a `SubCommand` to the list of valid possibilities.…",5,[[["app",3]]]],[11,"subcommands","","Adds multiple subcommands to the list of valid…",5,[[]]],[11,"display_order","","Allows custom ordering of `SubCommand`s within the help…",5,[[]]],[11,"print_help","","Prints the full help message to `io::stdout()` using a…",5,[[],["clapresult",6]]],[11,"print_long_help","","Prints the full help message to `io::stdout()` using a…",5,[[],["clapresult",6]]],[11,"write_help","","Writes the full help message to the user to a `io::Write`…",5,[[],["clapresult",6]]],[11,"write_long_help","","Writes the full help message to the user to a `io::Write`…",5,[[],["clapresult",6]]],[11,"write_version","","Writes the version message to the user to a `io::Write`…",5,[[],["clapresult",6]]],[11,"write_long_version","","Writes the version message to the user to a `io::Write`…",5,[[],["clapresult",6]]],[11,"gen_completions","","Generate a completions file for a specified shell at…",5,[[["into",8],["osstring",3],["string",3],["into",8],["shell",4]]]],[11,"gen_completions_to","","Generate a completions file for a specified shell at…",5,[[["string",3],["shell",4],["into",8]]]],[11,"get_matches","","Starts the parsing process, upon a failed parse an error…",5,[[],["argmatches",3]]],[11,"get_matches_safe","","Starts the parsing process. This method will return a…",5,[[],[["clapresult",6],["argmatches",3]]]],[11,"get_matches_from","","Starts the parsing process. Like `App::get_matches` this…",5,[[],["argmatches",3]]],[11,"get_matches_from_safe","","Starts the parsing process. A combination of…",5,[[],[["clapresult",6],["argmatches",3]]]],[11,"get_matches_from_safe_borrow","","Starts the parsing process without consuming the `App`…",5,[[],[["clapresult",6],["argmatches",3]]]],[11,"with_name","","Creates a new instance of `Arg` using a unique string…",6,[[]]],[11,"from_usage","","Creates a new instance of `Arg` from a usage string.…",6,[[]]],[11,"short","","Sets the short version of the argument without the…",6,[[["asref",8]]]],[11,"long","","Sets the long version of the argument without the…",6,[[]]],[11,"alias","","Allows adding a `Arg` alias, which function as \\\"hidden\\\"…",6,[[["into",8]]]],[11,"aliases","","Allows adding `Arg` aliases, which function as \\\"hidden\\\"…",6,[[]]],[11,"visible_alias","","Allows adding a `Arg` alias that functions exactly like…",6,[[["into",8]]]],[11,"visible_aliases","","Allows adding multiple `Arg` aliases that functions…",6,[[]]],[11,"help","","Sets the short help text of the argument that will be…",6,[[]]],[11,"long_help","","Sets the long help text of the argument that will be…",6,[[]]],[11,"last","","Specifies that this arg is the last, or final, positional…",6,[[]]],[11,"required","","Sets whether or not the argument is required by default.…",6,[[]]],[11,"require_equals","","Requires that options use the `--option=val` syntax (i.e.…",6,[[]]],[11,"allow_hyphen_values","","Allows values which start with a leading hyphen (`-`)",6,[[]]],[11,"required_unless","","Sets an arg that override this arg\'s required setting.…",6,[[]]],[11,"required_unless_all","","Sets args that override this arg\'s required setting. (i.e.…",6,[[]]],[11,"required_unless_one","","Sets args that override this arg\'s required setting. (i.e.…",6,[[]]],[11,"conflicts_with","","Sets a conflicting argument by name. I.e. when using this…",6,[[]]],[11,"conflicts_with_all","","The same as `Arg::conflicts_with` but allows specifying…",6,[[]]],[11,"overrides_with","","Sets a overridable argument by name. I.e. this argument…",6,[[]]],[11,"overrides_with_all","","Sets multiple mutually overridable arguments by name. I.e.…",6,[[]]],[11,"requires","","Sets an argument by name that is required when this one is…",6,[[]]],[11,"requires_if","","Allows a conditional requirement. The requirement will…",6,[[]]],[11,"requires_ifs","","Allows multiple conditional requirements. The requirement…",6,[[]]],[11,"required_if","","Allows specifying that an argument is required…",6,[[]]],[11,"required_ifs","","Allows specifying that an argument is required based on…",6,[[]]],[11,"requires_all","","Sets multiple arguments by names that are required when…",6,[[]]],[11,"takes_value","","Specifies that the argument takes a value at run time.",6,[[]]],[11,"hide_possible_values","","Specifies if the possible values of an argument should be…",6,[[]]],[11,"hide_default_value","","Specifies if the default value of an argument should be…",6,[[]]],[11,"index","","Specifies the index of a positional argument starting at 1.",6,[[]]],[11,"multiple","","Specifies that the argument may appear more than once. For…",6,[[]]],[11,"value_terminator","","Specifies a value that stops parsing multiple values of a…",6,[[]]],[11,"global","","Specifies that an argument can be matched to all child…",6,[[]]],[11,"empty_values","","Allows an argument to accept explicitly empty values. An…",6,[[]]],[11,"hidden","","Hides an argument from help message output.",6,[[]]],[11,"possible_values","","Specifies a list of possible values for this argument. At…",6,[[]]],[11,"possible_value","","Specifies a possible value for this argument, one at a…",6,[[]]],[11,"case_insensitive","","When used with [`Arg::possible_values`] it allows the…",6,[[]]],[11,"group","","Specifies the name of the `ArgGroup` the argument belongs…",6,[[]]],[11,"groups","","Specifies the names of multiple `ArgGroup`\'s the argument…",6,[[]]],[11,"number_of_values","","Specifies how many values are required to satisfy this…",6,[[]]],[11,"validator","","Allows one to perform a custom validation on the argument…",6,[[]]],[11,"validator_os","","Works identically to Validator but is intended to be used…",6,[[]]],[11,"max_values","","Specifies the maximum number of values are for this…",6,[[]]],[11,"min_values","","Specifies the minimum number of values for this argument.…",6,[[]]],[11,"use_delimiter","","Specifies whether or not an argument should allow grouping…",6,[[]]],[11,"require_delimiter","","Specifies that multiple values may only be set using the…",6,[[]]],[11,"value_delimiter","","Specifies the separator to use when values are clumped…",6,[[]]],[11,"value_names","","Specify multiple names for values of option arguments.…",6,[[]]],[11,"value_name","","Specifies the name for value of option or positional…",6,[[]]],[11,"default_value","","Specifies the value of the argument when not specified at…",6,[[]]],[11,"default_value_os","","Provides a default value in the exact same manner as…",6,[[["osstr",3]]]],[11,"default_value_if","","Specifies the value of the argument if `arg` has been used…",6,[[["option",4]]]],[11,"default_value_if_os","","Provides a conditional default value in the exact same…",6,[[["osstr",3],["option",4]]]],[11,"default_value_ifs","","Specifies multiple values and conditions in the same…",6,[[]]],[11,"default_value_ifs_os","","Provides multiple conditional default values in the exact…",6,[[]]],[11,"env","","Specifies that if the value is not passed in as an…",6,[[]]],[11,"env_os","","Specifies that if the value is not passed in as an…",6,[[["osstr",3]]]],[11,"hide_env_values","","@TODO @p2 @docs @release: write docs",6,[[]]],[11,"next_line_help","","When set to `true` the help string will be displayed on…",6,[[]]],[11,"display_order","","Allows custom ordering of args within the help message.…",6,[[]]],[11,"raw","","Indicates that all parameters passed after this should not…",6,[[]]],[11,"hidden_short_help","","Hides an argument from short help message output.",6,[[]]],[11,"hidden_long_help","","Hides an argument from long help message output.",6,[[]]],[11,"is_set","","Checks if one of the `ArgSettings` settings is set for the…",6,[[["argsettings",4]]]],[11,"set","","Sets one of the `ArgSettings` settings for the argument.",6,[[["argsettings",4]]]],[11,"unset","","Unsets one of the `ArgSettings` settings for the argument.",6,[[["argsettings",4]]]],[11,"value_of","","Gets the value of a specific option or positional argument…",7,[[["asref",8]],["option",4]]],[11,"value_of_lossy","","Gets the lossy value of a specific argument. If the…",7,[[["asref",8]],[["option",4],["cow",4]]]],[11,"value_of_os","","Gets the OS version of a string value of a specific…",7,[[["asref",8]],[["osstr",3],["option",4]]]],[11,"values_of","","Gets a `Values` struct which implements `Iterator` for…",7,[[["asref",8]],[["option",4],["values",3]]]],[11,"values_of_lossy","","Gets the lossy values of a specific argument. If the…",7,[[["asref",8]],[["vec",3],["option",4]]]],[11,"values_of_os","","Gets a [`OsValues`] struct which is implements…",7,[[["asref",8]],[["osvalues",3],["option",4]]]],[11,"is_present","","Returns `true` if an argument was present at runtime,…",7,[[["asref",8]]]],[11,"occurrences_of","","Returns the number of times an argument was used at…",7,[[["asref",8]]]],[11,"index_of","","Gets the starting index of the argument in respect to all…",7,[[["asref",8]],["option",4]]],[11,"indices_of","","Gets all indices of the argument in respect to all other…",7,[[["asref",8]],[["option",4],["indices",3]]]],[11,"subcommand_matches","","Because `Subcommand`s are essentially \\\"sub-`App`s\\\" they…",7,[[["asref",8]],[["argmatches",3],["option",4]]]],[11,"subcommand_name","","Because `Subcommand`s are essentially \\\"sub-`App`s\\\" they…",7,[[],["option",4]]],[11,"subcommand","","This brings together `ArgMatches::subcommand_matches` and…",7,[[]]],[11,"usage","","Returns a string slice of the usage statement for the…",7,[[]]],[11,"with_name","","Creates a new instance of `ArgGroup` using a unique string…",8,[[]]],[11,"arg","","Adds an argument to this group by name",8,[[]]],[11,"args","","Adds multiple arguments to this group by name",8,[[]]],[11,"multiple","","Allows more than one of the \'Arg\'s in this group to be…",8,[[]]],[11,"required","","Sets the group as required or not. A required group will…",8,[[]]],[11,"requires","","Sets the requirement rules of this group. This is not to…",8,[[]]],[11,"requires_all","","Sets the requirement rules of this group. This is not to…",8,[[]]],[11,"conflicts_with","","Sets the exclusion rules of this group. Exclusion (aka…",8,[[]]],[11,"conflicts_with_all","","Sets the exclusion rules of this group. Exclusion rules…",8,[[]]],[11,"with_name","","Creates a new instance of a subcommand requiring a name.…",9,[[],["app",3]]],[11,"variants","","A list of possible variants in `&\'static str` form",3,[[]]],[11,"use_stderr","","Should the message be written to `stdout` or not",0,[[]]],[11,"exit","","Prints the error to `stderr` and exits with a status of `1`",0,[[]]],[11,"with_description","","Create an error with a custom description.",0,[[["errorkind",4]]]],[6,"Result","","Short hand for `Result` type",null,null],[14,"value_t","","Convenience macro getting a typed value `T` where `T`…",null,null],[14,"value_t_or_exit","","Convenience macro getting a typed value `T` where `T`…",null,null],[14,"values_t","","Convenience macro getting a typed value `Vec<T>` where `T`…",null,null],[14,"values_t_or_exit","","Convenience macro getting a typed value `Vec<T>` where `T`…",null,null],[14,"_clap_count_exprs","","Counts the number of comma-delimited expressions passed to…",null,null],[14,"arg_enum","","Convenience macro to generate more complete enums with…",null,null],[14,"crate_version","","Allows you to pull the version from your Cargo.toml at…",null,null],[14,"crate_authors","","Allows you to pull the authors for the app from your…",null,null],[14,"crate_description","","Allows you to pull the description from your Cargo.toml at…",null,null],[14,"crate_name","","Allows you to pull the name from your Cargo.toml at…",null,null],[14,"app_from_crate","","Allows you to build the `App` instance from your…",null,null],[14,"clap_app","","Build `App`, `Arg`s, `SubCommand`s and `Group`s with…",null,null],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into_iter","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"into_iter","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",6,[[["arg",3]]]],[11,"from","","",8,[[["arggroup",3]]]],[11,"from","","",0,[[["error",3]]]],[11,"from","","",0,[[["error",3]]]],[11,"next_back","","",11,[[],["option",4]]],[11,"next_back","","",10,[[],[["option",4],["osstr",3]]]],[11,"next","","",11,[[],["option",4]]],[11,"size_hint","","",11,[[]]],[11,"next","","",10,[[],[["option",4],["osstr",3]]]],[11,"size_hint","","",10,[[]]],[11,"clone","","",1,[[],["appsettings",4]]],[11,"clone","","",5,[[]]],[11,"clone","","",6,[[],["arg",3]]],[11,"clone","","",7,[[],["argmatches",3]]],[11,"clone","","",11,[[],["values",3]]],[11,"clone","","",10,[[],["osvalues",3]]],[11,"clone","","",8,[[]]],[11,"clone","","",2,[[],["argsettings",4]]],[11,"clone","","",9,[[],["subcommand",3]]],[11,"clone","","",3,[[],["shell",4]]],[11,"clone","","",4,[[],["errorkind",4]]],[11,"default","","",6,[[],["arg",3]]],[11,"default","","",7,[[]]],[11,"default","","",11,[[]]],[11,"default","","",10,[[]]],[11,"default","","",8,[[],["arggroup",3]]],[11,"eq","","",1,[[["appsettings",4]]]],[11,"eq","","",6,[[["arg",3]]]],[11,"eq","","",2,[[["argsettings",4]]]],[11,"eq","","",4,[[["errorkind",4]]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"from_str","","",1,[[],["result",4]]],[11,"from_str","","",2,[[],["result",4]]],[11,"from_str","","",3,[[],["result",4]]],[11,"description","","",0,[[]]]],"p":[[3,"Error"],[4,"AppSettings"],[4,"ArgSettings"],[4,"Shell"],[4,"ErrorKind"],[3,"App"],[3,"Arg"],[3,"ArgMatches"],[3,"ArgGroup"],[3,"SubCommand"],[3,"OsValues"],[3,"Values"]]},\
"crc32fast":{"doc":"Example","i":[[3,"Hasher","crc32fast","Represents an in-progress CRC32 computation.",null,null],[11,"new","","Create a new `Hasher`.",0,[[]]],[11,"new_with_initial","","Create a new `Hasher` with an initial CRC32 state.",0,[[]]],[11,"update","","Process the given byte slice and update the hash state.",0,[[]]],[11,"finalize","","Finalize the hash state and return the computed CRC32 value.",0,[[]]],[11,"reset","","Reset the hash state.",0,[[]]],[11,"combine","","Combine the hash state with the hash state for the…",0,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"clone","","",0,[[],["hasher",3]]],[11,"default","","",0,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"write","","",0,[[]]],[11,"finish","","",0,[[]]]],"p":[[3,"Hasher"]]},\
"ctor":{"doc":"Procedural macro for defining global…","i":[[23,"ctor","ctor","Marks a function or static variable as a…",null,null],[23,"dtor","","Marks a function as a library/executable destructor. This…",null,null]],"p":[]},\
"egg":{"doc":"`egg` (e-graphs good) is a e-graph library optimized for…","i":[[3,"Id","egg","A key to identify `EClass`es within an `EGraph`.",null,null],[3,"Dot","","A wrapper for an `EGraph` that can output GraphViz for…",null,null],[3,"EClass","","An equivalence class of enodes.",null,null],[12,"id","","This eclass\'s id.",0,null],[12,"nodes","","The equivalent enodes in this equivalence class.",0,null],[12,"data","","The analysis data associated with this eclass.",0,null],[3,"EGraph","","A data structure to keep track of equalities between…",null,null],[12,"analysis","","The `Analysis` given when creating this `EGraph`.",1,null],[3,"Extractor","","Extracting a single `RecExpr` from an `EGraph`.",null,null],[3,"AstSize","","A simple `CostFunction` that counts total ast size.",null,null],[3,"AstDepth","","A simple `CostFunction` that counts maximum ast depth.",null,null],[3,"RecExpr","","A recursive expression from a user-defined `Language`.",null,null],[3,"SymbolLang","","A simple language used for testing.",null,null],[12,"op","","The operator for an enode",2,null],[12,"children","","The enode\'s children `Id`s",2,null],[3,"Pattern","","A pattern that can function as either a `Searcher` or…",null,null],[12,"ast","","The actual pattern as a `RecExpr`",3,null],[3,"SearchMatches","","The result of searching a `Searcher` over one eclass.",null,null],[12,"eclass","","The eclass id that these matches were found in.",4,null],[12,"substs","","The matches themselves.",4,null],[3,"ConditionEqual","","A `Condition` that checks if two terms are equivalent.",null,null],[12,"0","","",5,null],[12,"1","","",5,null],[3,"ConditionalApplier","","An `Applier` that checks a `Condition` before applying.",null,null],[12,"condition","","The `Condition` to `check` before calling `apply_one` on…",6,null],[12,"applier","","The inner `Applier` to call once `condition` passes.",6,null],[3,"Rewrite","","A rewrite that searches for the lefthand side and applies…",null,null],[12,"name","","The name of the rewrite.",7,null],[12,"searcher","","The searcher (left-hand side) of the rewrite.",7,null],[12,"applier","","The applier (right-hand side) of the rewrite.",7,null],[3,"Runner","","Faciliates running rewrites over an `EGraph`.",null,null],[12,"egraph","","The `EGraph` used.",8,null],[12,"iterations","","Data accumulated over each `Iteration`.",8,null],[12,"roots","","The roots of expressions added by the `with_expr` method,…",8,null],[12,"stop_reason","","Why the `Runner` stopped. This will be `None` if it hasn\'t…",8,null],[12,"hooks","","The hooks added by the `with_hook` method, in insertion…",8,null],[3,"Iteration","","Data generated by running a `Runner` one iteration.",null,null],[12,"egraph_nodes","","The number of enodes in the egraph at the start of this…",9,null],[12,"egraph_classes","","The number of eclasses in the egraph at the start of this…",9,null],[12,"applied","","A map from rule name to number of times it was newly…",9,null],[12,"hook_time","","Seconds spent running hooks.",9,null],[12,"search_time","","Seconds spent searching in this iteration.",9,null],[12,"apply_time","","Seconds spent applying rules in this iteration.",9,null],[12,"rebuild_time","","Seconds spent `rebuild`ing the egraph in this iteration.",9,null],[12,"total_time","","Total time spent in this iteration, including data…",9,null],[12,"data","","The user provided annotation for this iteration",9,null],[12,"n_rebuilds","","The number of rebuild iterations done after this iteration…",9,null],[12,"stop_reason","","If the runner stopped on this iterations, this is the reason",9,null],[3,"SimpleScheduler","","A very simple `RewriteScheduler` that runs every rewrite…",null,null],[3,"BackoffScheduler","","A `RewriteScheduler` that implements exponentional rule…",null,null],[3,"Subst","","A substitition mapping `Var`s to eclass `Id`s.",null,null],[3,"Var","","A variable for use in `Pattern`s or `Subst`s.",null,null],[3,"Symbol","","An interned string.",null,null],[4,"ENodeOrVar","","The language of `Pattern`s.",null,null],[13,"ENode","","An enode from the underlying `Language`",10,null],[13,"Var","","A pattern variable",10,null],[4,"StopReason","","Error returned by `Runner` when it stops.",null,null],[13,"Saturated","","The egraph saturated, i.e., there was an iteration where…",11,null],[13,"IterationLimit","","The iteration limit was hit. The data is the iteration…",11,null],[13,"NodeLimit","","The enode limit was hit. The data is the enode limit.",11,null],[13,"TimeLimit","","The time limit was hit. The data is the time limit in…",11,null],[13,"Other","","Some other reason to stop.",11,null],[5,"merge_if_different","","Replace the first with second value if they are different…",null,[[["partialeq",8]]]],[0,"tutorials","","A Guide-level Explanation of `egg``egg` is a e-graph…",null,null],[0,"_01_background","egg::tutorials","Concepts: e-graphs and equality saturationAn e-graph is a…",null,null],[0,"_02_getting_started","","My first `egg` 🐣This tutorial is aimed at getting you up…",null,null],[11,"to_dot","egg","Writes the `Dot` to a .dot file with the given filename.…",12,[[],["result",6]]],[11,"to_png","","Renders the `Dot` to a .png file with the given filename.…",12,[[],["result",6]]],[11,"to_svg","","Renders the `Dot` to a .svg file with the given filename.…",12,[[],["result",6]]],[11,"to_pdf","","Renders the `Dot` to a .pdf file with the given filename.…",12,[[],["result",6]]],[11,"run_dot","","Invokes `dot` with the given arguments, piping this…",12,[[],["result",6]]],[11,"run","","Invokes some program with the given arguments, piping this…",12,[[],["result",6]]],[11,"is_empty","","Returns `true` if the `eclass` is empty.",0,[[]]],[11,"len","","Returns the number of enodes in this eclass.",0,[[]]],[11,"iter","","Iterates over the enodes in this eclass.",0,[[]]],[11,"leaves","","Iterates over the childless enodes in this eclass.",0,[[]]],[11,"assert_unique_leaves","","Asserts that the childless enodes in this eclass are unique.",0,[[]]],[11,"new","","Creates a new, empty `EGraph` with the given `Analysis`",1,[[]]],[11,"classes","","Returns an iterator over the eclasses in the egraph.",1,[[]]],[11,"classes_mut","","Returns an mutating iterator over the eclasses in the…",1,[[]]],[11,"is_empty","","Returns `true` if the egraph is empty",1,[[]]],[11,"total_size","","Returns the number of enodes in the `EGraph`.",1,[[]]],[11,"total_number_of_nodes","","Iterates over the classes, returning the total number of…",1,[[]]],[11,"number_of_classes","","Returns the number of eclasses in the egraph.",1,[[]]],[11,"find","","Canonicalizes an eclass id.",1,[[["id",3]],["id",3]]],[11,"dot","","Creates a `Dot` to visualize this egraph. See `Dot`.",1,[[],["dot",3]]],[11,"add_expr","","Adds a `RecExpr` to the `EGraph`.",1,[[["recexpr",3]],["id",3]]],[11,"lookup","","Lookup the eclass of the given enode.",1,[[],[["id",3],["option",4]]]],[11,"add","","Adds an enode to the `EGraph`.",1,[[],["id",3]]],[11,"equivs","","Checks whether two `RecExpr`s are equivalent. Returns a…",1,[[["recexpr",3]],[["id",3],["vec",3]]]],[11,"check_goals","","Panic if the given eclass doesn\'t contain the given patterns",1,[[["id",3]]]],[11,"union","","Unions two eclasses given their ids.",1,[[["id",3]]]],[11,"dump","","Returns a more debug-able representation of the egraph.",1,[[]]],[11,"rebuild","","Restores the egraph invariants of congruence and enode…",1,[[]]],[11,"new","","Create a new `Extractor` given an `EGraph` and a…",13,[[["egraph",3]]]],[11,"find_best","","Find the cheapest (lowest cost) represented `RecExpr` in…",13,[[["id",3]]]],[11,"find_best_cost","","Find the cost of the term that would be extracted from…",13,[[["id",3]]]],[11,"add","","Adds a given enode to this `RecExpr`. The enode\'s children…",14,[[],["id",3]]],[11,"pretty","","Pretty print with a maximum line length.",14,[[],["string",3]]],[11,"new","","Create an enode with the given string and children",2,[[["id",3],["vec",3]]]],[11,"leaf","","Create childless enode with the given string",2,[[]]],[11,"vars","","Returns a list of the `Var`s in this pattern.",3,[[],[["var",3],["vec",3]]]],[11,"pretty","","Pretty print this pattern as a sexp with the given width",3,[[],["string",3]]],[11,"name","","Returns the name of the rewrite.",7,[[]]],[11,"new","","Create a new `Rewrite`. You typically want to use the…",7,[[],[["result",4],["string",3]]]],[11,"search","","Call `search` on the `Searcher`.",7,[[["egraph",3]],[["vec",3],["searchmatches",3]]]],[11,"apply","","Call `apply_matches` on the `Applier`.",7,[[["egraph",3]],[["id",3],["vec",3]]]],[11,"parse","","Create a ConditionEqual by parsing two pattern strings.",5,[[]]],[11,"new","","Create a new `Runner` with the given analysis and default…",8,[[]]],[11,"with_iter_limit","","Sets the iteration limit. Default: 30",8,[[]]],[11,"with_node_limit","","Sets the egraph size limit (in enodes). Default: 10,000",8,[[]]],[11,"with_time_limit","","Sets the runner time limit. Default: 5 seconds",8,[[["duration",3]]]],[11,"with_hook","","Add a hook to instrument or modify the behavior of a…",8,[[]]],[11,"with_scheduler","","Change out the `RewriteScheduler` used by this `Runner`.…",8,[[]]],[11,"with_expr","","Add an expression to the egraph to be run.",8,[[["recexpr",3]]]],[11,"with_egraph","","Replace the `EGraph` of this `Runner`.",8,[[["egraph",3]]]],[11,"run","","Run this `Runner` until it stops. After this, the field…",8,[[]]],[11,"print_report","","Prints some information about a runners run.",8,[[]]],[11,"with_initial_match_limit","","Set the initial match limit after which a rule will be…",15,[[]]],[11,"with_ban_length","","Set the initial ban length. Default: 5 iterations",15,[[]]],[11,"do_not_ban","","Never ban a particular rule.",15,[[]]],[11,"rule_match_limit","","Set the initial match limit for a rule.",15,[[]]],[11,"rule_ban_length","","Set the initial ban length for a rule.",15,[[]]],[11,"with_capacity","","Create a `Subst` with the given initial capacity",16,[[]]],[11,"insert","","Insert something, returning the old `Id` if present.",16,[[["var",3],["id",3]],[["id",3],["option",4]]]],[11,"get","","Retrieve a `Var`, returning `None` if not present.",16,[[["var",3]],[["id",3],["option",4]]]],[11,"as_str","","Get the string that this symbol represents",17,[[]]],[6,"PatternAst","","A `RecExpr` that represents a `Pattern`.",null,null],[8,"CostFunction","","A cost function that can be used by an `Extractor`.",null,null],[16,"Cost","","The `Cost` type. It only requires `PartialOrd` so you can…",18,null],[10,"cost","","Calculates the cost of an enode whose children are `Cost`s.",18,[[]]],[11,"cost_rec","","Calculates the total cost of a `RecExpr`.",18,[[["recexpr",3]]]],[8,"Language","","Trait that defines a Language whose terms will be in the…",null,null],[10,"matches","","Returns true if this enode matches another enode. This…",19,[[]]],[10,"children","","Return a slice of the children `Id`s.",19,[[]]],[10,"children_mut","","Return a mutable slice of the children `Id`s.",19,[[]]],[11,"for_each","","Runs a given function on each child `Id`.",19,[[["fnmut",8]]]],[11,"for_each_mut","","Runs a given function on each child `Id`, allowing…",19,[[["fnmut",8]]]],[11,"display_op","","Returns something that will print the operator.",19,[[],["display",8]]],[11,"from_op_str","","Given a string for the operator and the children, tries to…",19,[[["id",3],["vec",3]],[["result",4],["string",3]]]],[11,"len","","Returns the number of the children this enode has.",19,[[]]],[11,"is_leaf","","Returns true if this enode has no children.",19,[[]]],[11,"update_children","","Runs a given function to replace the children.",19,[[["fnmut",8]]]],[11,"map_children","","Creates a new enode with children determined by the given…",19,[[["fnmut",8]]]],[11,"fold","","Folds over the children, given an initial accumulator.",19,[[]]],[11,"to_recexpr","","Make a `RecExpr` converting this enodes children to…",19,[[],["recexpr",3]]],[8,"LanguageChildren","","A marker that defines acceptable children types for…",null,null],[11,"is_empty","","Checks if there are no children.",20,[[]]],[10,"len","","Returns the number of children.",20,[[]]],[10,"can_be_length","","Checks if n is an acceptable number of children for this…",20,[[]]],[10,"from_vec","","Create an instance of this type from a `Vec<Id>`, with the…",20,[[["id",3],["vec",3]]]],[10,"as_slice","","Returns a slice of the children `Id`s.",20,[[]]],[10,"as_mut_slice","","Returns a mutable slice of the children `Id`s.",20,[[]]],[8,"Analysis","","Arbitrary data associated with an `EClass`.",null,null],[16,"Data","","The per-`EClass` data for this analysis.",21,null],[10,"make","","Makes a new `Analysis` for a given enode `Analysis`.",21,[[["egraph",3]]]],[11,"pre_union","","An optional hook that allows inspection before a `union`…",21,[[["egraph",3],["id",3]]]],[10,"merge","","Defines how to merge two `Data`s when their containing…",21,[[]]],[11,"modify","","A hook that allows the modification of the `EGraph`",21,[[["egraph",3],["id",3]]]],[8,"Applier","","The righthand side of a `Rewrite`.",null,null],[11,"apply_matches","","Apply many substititions.",22,[[["egraph",3]],[["id",3],["vec",3]]]],[10,"apply_one","","Apply a single substitition.",22,[[["egraph",3],["id",3],["subst",3]],[["id",3],["vec",3]]]],[11,"vars","","Returns a list of variables that this Applier assumes are…",22,[[],[["var",3],["vec",3]]]],[8,"Condition","","A condition to check in a `ConditionalApplier`.",null,null],[10,"check","","Check a condition.",23,[[["egraph",3],["id",3],["subst",3]]]],[11,"vars","","Returns a list of variables that this Condition assumes…",23,[[],[["var",3],["vec",3]]]],[8,"Searcher","","The lefthand side of a `Rewrite`.",null,null],[10,"search_eclass","","Search one eclass, returning None if no matches can be…",24,[[["egraph",3],["id",3]],[["searchmatches",3],["option",4]]]],[11,"search","","Search the whole `EGraph`, returning a list of all the…",24,[[["egraph",3]],[["vec",3],["searchmatches",3]]]],[10,"vars","","Returns a list of the variables bound by this Searcher",24,[[],[["var",3],["vec",3]]]],[8,"RewriteScheduler","","A way to customize how a `Runner` runs `Rewrite`s.",null,null],[11,"can_stop","","Whether or not the `Runner` is allowed to say it has…",25,[[]]],[11,"search_rewrite","","A hook allowing you to customize rewrite searching…",25,[[["egraph",3],["rewrite",3]],[["vec",3],["searchmatches",3]]]],[11,"apply_rewrite","","A hook allowing you to customize rewrite application…",25,[[["vec",3],["rewrite",3],["egraph",3],["searchmatches",3]]]],[8,"IterationData","","Custom data to inject into the `Iteration`s recorded by a…",null,null],[10,"make","","Given the current `Runner`, make the data to be put in…",26,[[["runner",3]]]],[14,"define_language","","A macro to easily create a `Language`.",null,null],[14,"rewrite","","A macro to easily make `Rewrite`s.",null,null],[14,"test_fn","","Make a test function",null,null],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"to_string","","",27,[[],["string",3]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"equivalent","","",27,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"to_string","","",14,[[],["string",3]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"equivalent","","",14,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"equivalent","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"equivalent","","",16,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"to_string","","",31,[[],["string",3]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"equivalent","","",31,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"to_string","","",17,[[],["string",3]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"equivalent","","",17,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"equivalent","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"cost","","",28,[[]]],[11,"cost","","",29,[[]]],[11,"matches","","",2,[[]]],[11,"children","","",2,[[]]],[11,"children_mut","","",2,[[]]],[11,"display_op","","",2,[[],["display",8]]],[11,"from_op_str","","",2,[[["id",3],["vec",3]],[["result",4],["string",3]]]],[11,"matches","","",10,[[]]],[11,"children","","",10,[[]]],[11,"children_mut","","",10,[[]]],[11,"from_op_str","","",10,[[["id",3],["vec",3]],[["result",4],["string",3]]]],[11,"display_op","","",10,[[],["display",8]]],[11,"len","","",27,[[]]],[11,"can_be_length","","",27,[[]]],[11,"from_vec","","",27,[[["id",3],["vec",3]]]],[11,"as_slice","","",27,[[]]],[11,"as_mut_slice","","",27,[[]]],[11,"search","","",3,[[["egraph",3]],[["vec",3],["searchmatches",3]]]],[11,"search_eclass","","",3,[[["egraph",3],["id",3]],[["searchmatches",3],["option",4]]]],[11,"vars","","",3,[[],[["var",3],["vec",3]]]],[11,"apply_one","","",3,[[["subst",3],["id",3],["egraph",3]],[["id",3],["vec",3]]]],[11,"vars","","",3,[[],[["var",3],["vec",3]]]],[11,"apply_one","","",6,[[["egraph",3],["id",3],["subst",3]],[["id",3],["vec",3]]]],[11,"vars","","",6,[[],[["var",3],["vec",3]]]],[11,"check","","",5,[[["egraph",3],["id",3],["subst",3]]]],[11,"vars","","",5,[[],[["var",3],["vec",3]]]],[11,"can_stop","","",15,[[]]],[11,"search_rewrite","","",15,[[["egraph",3],["rewrite",3]],[["vec",3],["searchmatches",3]]]],[11,"as_ref","","",14,[[]]],[11,"from","","",14,[[["vec",3]]]],[11,"from","","",3,[[]]],[11,"from","","",3,[[["patternast",6]]]],[11,"from","","",17,[[]]],[11,"from","","",27,[[],["id",3]]],[11,"clone","","",0,[[],["eclass",3]]],[11,"clone","","",1,[[],["egraph",3]]],[11,"clone","","",14,[[],["recexpr",3]]],[11,"clone","","",2,[[],["symbollang",3]]],[11,"clone","","",3,[[],["pattern",3]]],[11,"clone","","",10,[[],["enodeorvar",4]]],[11,"clone","","",7,[[],["rewrite",3]]],[11,"clone","","",6,[[],["conditionalapplier",3]]],[11,"clone","","",11,[[],["stopreason",4]]],[11,"clone","","",9,[[],["iteration",3]]],[11,"clone","","",31,[[],["var",3]]],[11,"clone","","",16,[[],["subst",3]]],[11,"clone","","",17,[[],["symbol",3]]],[11,"clone","","",27,[[],["id",3]]],[11,"default","","",1,[[]]],[11,"default","","",14,[[]]],[11,"default","","",8,[[]]],[11,"default","","",15,[[]]],[11,"default","","",16,[[],["subst",3]]],[11,"default","","",27,[[],["id",3]]],[11,"cmp","","",14,[[["recexpr",3]],["ordering",4]]],[11,"cmp","","",2,[[["symbollang",3]],["ordering",4]]],[11,"cmp","","",10,[[["enodeorvar",4]],["ordering",4]]],[11,"cmp","","",31,[[["var",3]],["ordering",4]]],[11,"cmp","","",16,[[["subst",3]],["ordering",4]]],[11,"cmp","","",17,[[["symbol",3]],["ordering",4]]],[11,"cmp","","",27,[[["id",3]],["ordering",4]]],[11,"eq","","",14,[[["recexpr",3]]]],[11,"ne","","",14,[[["recexpr",3]]]],[11,"eq","","",2,[[["symbollang",3]]]],[11,"ne","","",2,[[["symbollang",3]]]],[11,"eq","","",3,[[["pattern",3]]]],[11,"ne","","",3,[[["pattern",3]]]],[11,"eq","","",10,[[["enodeorvar",4]]]],[11,"ne","","",10,[[["enodeorvar",4]]]],[11,"eq","","",31,[[["var",3]]]],[11,"ne","","",31,[[["var",3]]]],[11,"eq","","",16,[[["subst",3]]]],[11,"ne","","",16,[[["subst",3]]]],[11,"eq","","",17,[[["symbol",3]]]],[11,"ne","","",17,[[["symbol",3]]]],[11,"eq","","",27,[[["id",3]]]],[11,"ne","","",27,[[["id",3]]]],[11,"partial_cmp","","",14,[[["recexpr",3]],[["ordering",4],["option",4]]]],[11,"lt","","",14,[[["recexpr",3]]]],[11,"le","","",14,[[["recexpr",3]]]],[11,"gt","","",14,[[["recexpr",3]]]],[11,"ge","","",14,[[["recexpr",3]]]],[11,"partial_cmp","","",2,[[["symbollang",3]],[["ordering",4],["option",4]]]],[11,"lt","","",2,[[["symbollang",3]]]],[11,"le","","",2,[[["symbollang",3]]]],[11,"gt","","",2,[[["symbollang",3]]]],[11,"ge","","",2,[[["symbollang",3]]]],[11,"partial_cmp","","",10,[[["enodeorvar",4]],[["ordering",4],["option",4]]]],[11,"lt","","",10,[[["enodeorvar",4]]]],[11,"le","","",10,[[["enodeorvar",4]]]],[11,"gt","","",10,[[["enodeorvar",4]]]],[11,"ge","","",10,[[["enodeorvar",4]]]],[11,"partial_cmp","","",31,[[["var",3]],[["ordering",4],["option",4]]]],[11,"lt","","",31,[[["var",3]]]],[11,"le","","",31,[[["var",3]]]],[11,"gt","","",31,[[["var",3]]]],[11,"ge","","",31,[[["var",3]]]],[11,"partial_cmp","","",16,[[["subst",3]],[["ordering",4],["option",4]]]],[11,"lt","","",16,[[["subst",3]]]],[11,"le","","",16,[[["subst",3]]]],[11,"gt","","",16,[[["subst",3]]]],[11,"ge","","",16,[[["subst",3]]]],[11,"partial_cmp","","",17,[[["symbol",3]],[["ordering",4],["option",4]]]],[11,"lt","","",17,[[["symbol",3]]]],[11,"le","","",17,[[["symbol",3]]]],[11,"gt","","",17,[[["symbol",3]]]],[11,"ge","","",17,[[["symbol",3]]]],[11,"partial_cmp","","",27,[[["id",3]],[["ordering",4],["option",4]]]],[11,"lt","","",27,[[["id",3]]]],[11,"le","","",27,[[["id",3]]]],[11,"gt","","",27,[[["id",3]]]],[11,"ge","","",27,[[["id",3]]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"index","","",1,[[["id",3]]]],[11,"index","","",16,[[["var",3]]]],[11,"index_mut","","",1,[[["id",3]]]],[11,"hash","","",14,[[]]],[11,"hash","","",2,[[]]],[11,"hash","","",10,[[]]],[11,"hash","","",31,[[]]],[11,"hash","","",16,[[]]],[11,"hash","","",17,[[]]],[11,"hash","","",27,[[]]],[11,"try_from","","",14,[[["pattern",3]],["result",4]]],[11,"from_str","","",14,[[],["result",4]]],[11,"from_str","","",3,[[],["result",4]]],[11,"from_str","","",31,[[],["result",4]]],[11,"from_str","","",17,[[],["result",4]]],[11,"cost_rec","","Calculates the total cost of a `RecExpr`.",18,[[["recexpr",3]]]],[11,"for_each","","Runs a given function on each child `Id`.",19,[[["fnmut",8]]]],[11,"for_each_mut","","Runs a given function on each child `Id`, allowing…",19,[[["fnmut",8]]]],[11,"display_op","","Returns something that will print the operator.",19,[[],["display",8]]],[11,"from_op_str","","Given a string for the operator and the children, tries to…",19,[[["id",3],["vec",3]],[["result",4],["string",3]]]],[11,"len","","Returns the number of the children this enode has.",19,[[]]],[11,"is_leaf","","Returns true if this enode has no children.",19,[[]]],[11,"update_children","","Runs a given function to replace the children.",19,[[["fnmut",8]]]],[11,"map_children","","Creates a new enode with children determined by the given…",19,[[["fnmut",8]]]],[11,"fold","","Folds over the children, given an initial accumulator.",19,[[]]],[11,"to_recexpr","","Make a `RecExpr` converting this enodes children to…",19,[[],["recexpr",3]]],[11,"is_empty","","Checks if there are no children.",20,[[]]],[11,"pre_union","","An optional hook that allows inspection before a `union`…",21,[[["egraph",3],["id",3]]]],[11,"modify","","A hook that allows the modification of the `EGraph`",21,[[["egraph",3],["id",3]]]],[11,"search","","Search the whole `EGraph`, returning a list of all the…",24,[[["egraph",3]],[["vec",3],["searchmatches",3]]]],[11,"apply_matches","","Apply many substititions.",22,[[["egraph",3]],[["id",3],["vec",3]]]],[11,"vars","","Returns a list of variables that this Applier assumes are…",22,[[],[["var",3],["vec",3]]]],[11,"vars","","Returns a list of variables that this Condition assumes…",23,[[],[["var",3],["vec",3]]]],[11,"can_stop","","Whether or not the `Runner` is allowed to say it has…",25,[[]]],[11,"search_rewrite","","A hook allowing you to customize rewrite searching…",25,[[["egraph",3],["rewrite",3]],[["vec",3],["searchmatches",3]]]],[11,"apply_rewrite","","A hook allowing you to customize rewrite application…",25,[[["vec",3],["rewrite",3],["egraph",3],["searchmatches",3]]]]],"p":[[3,"EClass"],[3,"EGraph"],[3,"SymbolLang"],[3,"Pattern"],[3,"SearchMatches"],[3,"ConditionEqual"],[3,"ConditionalApplier"],[3,"Rewrite"],[3,"Runner"],[3,"Iteration"],[4,"ENodeOrVar"],[4,"StopReason"],[3,"Dot"],[3,"Extractor"],[3,"RecExpr"],[3,"BackoffScheduler"],[3,"Subst"],[3,"Symbol"],[8,"CostFunction"],[8,"Language"],[8,"LanguageChildren"],[8,"Analysis"],[8,"Applier"],[8,"Condition"],[8,"Searcher"],[8,"RewriteScheduler"],[8,"IterationData"],[3,"Id"],[3,"AstSize"],[3,"AstDepth"],[3,"SimpleScheduler"],[3,"Var"]]},\
"either":{"doc":"The enum `Either` with variants `Left` and `Right` is a…","i":[[4,"Either","either","The enum `Either` with variants `Left` and `Right` is a…",null,null],[13,"Left","","A value of type `L`.",0,null],[13,"Right","","A value of type `R`.",0,null],[11,"is_left","","Return true if the value is the `Left` variant.",0,[[]]],[11,"is_right","","Return true if the value is the `Right` variant.",0,[[]]],[11,"left","","Convert the left side of `Either<L, R>` to an `Option<L>`.",0,[[],["option",4]]],[11,"right","","Convert the right side of `Either<L, R>` to an `Option<R>`.",0,[[],["option",4]]],[11,"as_ref","","Convert `&Either<L, R>` to `Either<&L, &R>`.",0,[[],["either",4]]],[11,"as_mut","","Convert `&mut Either<L, R>` to `Either<&mut L, &mut R>`.",0,[[],["either",4]]],[11,"flip","","Convert `Either<L, R>` to `Either<R, L>`.",0,[[],["either",4]]],[11,"map_left","","Apply the function `f` on the value in the `Left` variant…",0,[[],["either",4]]],[11,"map_right","","Apply the function `f` on the value in the `Right` variant…",0,[[],["either",4]]],[11,"either","","Apply one of two functions depending on contents, unifying…",0,[[]]],[11,"either_with","","Like `either`, but provide some context to whichever of…",0,[[]]],[11,"left_and_then","","Apply the function `f` on the value in the `Left` variant…",0,[[],["either",4]]],[11,"right_and_then","","Apply the function `f` on the value in the `Right` variant…",0,[[],["either",4]]],[11,"into_iter","","Convert the inner value to an iterator.",0,[[],["either",4]]],[11,"left_or","","Return left value or given value",0,[[]]],[11,"left_or_default","","Return left or a default",0,[[]]],[11,"left_or_else","","Returns left value or computes it from a closure",0,[[]]],[11,"right_or","","Return right value or given value",0,[[]]],[11,"right_or_default","","Return right or a default",0,[[]]],[11,"right_or_else","","Returns right value or computes it from a closure",0,[[]]],[11,"unwrap_left","","Returns the left value",0,[[]]],[11,"unwrap_right","","Returns the right value",0,[[]]],[11,"expect_left","","Returns the left value",0,[[]]],[11,"expect_right","","Returns the right value",0,[[]]],[11,"factor_first","","Factor out a homogeneous type from an either of pairs.",0,[[]]],[11,"factor_second","","Factor out a homogeneous type from an either of pairs.",0,[[]]],[11,"into_inner","","Extract the value of an either over two equivalent types.",0,[[]]],[11,"map","","Map `f` over the contained value and return the result in…",0,[[],["either",4]]],[14,"try_left","","Macro for unwrapping the left side of an `Either`, which…",null,null],[14,"try_right","","Dual to `try_left!`, see its documentation for more…",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"into_iter","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"as_mut","","",0,[[]]],[11,"as_mut","","",0,[[],["path",3]]],[11,"as_mut","","",0,[[],["osstr",3]]],[11,"as_mut","","",0,[[],["cstr",3]]],[11,"as_mut","","",0,[[]]],[11,"as_mut","","",0,[[]]],[11,"as_ref","","",0,[[]]],[11,"as_ref","","",0,[[]]],[11,"as_ref","","",0,[[],["path",3]]],[11,"as_ref","","",0,[[],["osstr",3]]],[11,"as_ref","","",0,[[],["cstr",3]]],[11,"as_ref","","",0,[[]]],[11,"from","","",0,[[["result",4]]]],[11,"into","","",0,[[],["result",4]]],[11,"next_back","","",0,[[],["option",4]]],[11,"extend","","",0,[[]]],[11,"next","","",0,[[],["option",4]]],[11,"size_hint","","",0,[[]]],[11,"fold","","",0,[[]]],[11,"count","","",0,[[]]],[11,"last","","",0,[[],["option",4]]],[11,"nth","","",0,[[],["option",4]]],[11,"collect","","",0,[[]]],[11,"all","","",0,[[]]],[11,"clone","","",0,[[],["either",4]]],[11,"cmp","","",0,[[["either",4]],["ordering",4]]],[11,"eq","","",0,[[["either",4]]]],[11,"ne","","",0,[[["either",4]]]],[11,"partial_cmp","","",0,[[["either",4]],[["ordering",4],["option",4]]]],[11,"lt","","",0,[[["either",4]]]],[11,"le","","",0,[[["either",4]]]],[11,"gt","","",0,[[["either",4]]]],[11,"ge","","",0,[[["either",4]]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"hash","","",0,[[]]],[11,"description","","",0,[[]]],[11,"cause","","",0,[[],[["error",8],["option",4]]]],[11,"fill_buf","","",0,[[],["result",6]]],[11,"consume","","",0,[[]]],[11,"read","","",0,[[],["result",6]]],[11,"read_to_end","","",0,[[["vec",3]],["result",6]]],[11,"write","","",0,[[],["result",6]]],[11,"flush","","",0,[[],["result",6]]]],"p":[[4,"Either"]]},\
"enumn":{"doc":"github crates-io docs-rs","i":[[24,"N","enumn","",null,null]],"p":[]},\
"env_logger":{"doc":"A logger configured via an environment variable which…","i":[[3,"Logger","env_logger","The logger.",null,null],[3,"LogBuilder","","LogBuilder acts as builder for initializing the Logger. It…",null,null],[5,"init","","Initializes the global logger with an env logger.",null,[[],[["result",4],["setloggererror",3]]]],[11,"new","","Initializes the log builder with defaults",0,[[],["logbuilder",3]]],[11,"filter","","Adds filters to the logger",0,[[["option",4],["loglevelfilter",4]]]],[11,"format","","Sets the format function for formatting the log output.",0,[[]]],[11,"parse","","Parses the directives string in the same form as the…",0,[[]]],[11,"init","","Initializes the global logger with an env logger.",0,[[],[["result",4],["setloggererror",3]]]],[11,"build","","Build an env logger.",0,[[],["logger",3]]],[11,"new","","",1,[[],["logger",3]]],[11,"filter","","",1,[[],["loglevelfilter",4]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"enabled","","",1,[[["logmetadata",3]]]],[11,"log","","",1,[[["logrecord",3]]]]],"p":[[3,"LogBuilder"],[3,"Logger"]]},\
"flate2":{"doc":"A DEFLATE-based stream compression/decompression library","i":[[3,"Crc","flate2","The CRC calculated by a `CrcReader`.",null,null],[3,"CrcReader","","A wrapper around a `Read` that calculates the CRC.",null,null],[3,"CrcWriter","","A wrapper around a `Write` that calculates the CRC.",null,null],[3,"GzBuilder","","A builder structure to create a new gzip Encoder.",null,null],[3,"GzHeader","","A structure representing the header of a gzip stream.",null,null],[3,"Compress","","Raw in-memory compression stream for blocks of data.",null,null],[3,"CompressError","","Error returned when a compression object is used…",null,null],[3,"Decompress","","Raw in-memory decompression stream for blocks of data.",null,null],[3,"DecompressError","","Error returned when a decompression object finds that the…",null,null],[3,"Compression","","When compressing data, the compression level can be…",null,null],[4,"Status","","Possible status results of compressing some data or…",null,null],[13,"Ok","","Indicates success.",0,null],[13,"BufError","","Indicates that forward progress is not possible due to…",0,null],[13,"StreamEnd","","Indicates that all input has been consumed and all output…",0,null],[4,"FlushCompress","","Values which indicate the form of flushing to be used when…",null,null],[13,"None","","A typical parameter for passing to…",1,null],[13,"Sync","","All pending output is flushed to the output buffer and the…",1,null],[13,"Partial","","All pending output is flushed to the output buffer, but…",1,null],[13,"Full","","All output is flushed as with `Flush::Sync` and the…",1,null],[13,"Finish","","Pending input is processed and pending output is flushed.",1,null],[4,"FlushDecompress","","Values which indicate the form of flushing to be used when…",null,null],[13,"None","","A typical parameter for passing to…",2,null],[13,"Sync","","All pending output is flushed to the output buffer and the…",2,null],[13,"Finish","","Pending input is processed and pending output is flushed.",2,null],[11,"new","","Create a new CRC.",3,[[],["crc",3]]],[11,"sum","","Returns the current crc32 checksum.",3,[[]]],[11,"amount","","The number of bytes that have been used to calculate the…",3,[[]]],[11,"update","","Update the CRC with the bytes in `data`.",3,[[]]],[11,"reset","","Reset the CRC.",3,[[]]],[11,"combine","","Combine the CRC with the CRC for the subsequent block of…",3,[[["crc",3]]]],[11,"new","","Create a new CrcReader.",4,[[],["crcreader",3]]],[11,"crc","","Get the Crc for this CrcReader.",4,[[],["crc",3]]],[11,"into_inner","","Get the reader that is wrapped by this CrcReader.",4,[[]]],[11,"get_ref","","Get the reader that is wrapped by this CrcReader by…",4,[[]]],[11,"get_mut","","Get a mutable reference to the reader that is wrapped by…",4,[[]]],[11,"reset","","Reset the Crc in this CrcReader.",4,[[]]],[11,"crc","","Get the Crc for this CrcWriter.",5,[[],["crc",3]]],[11,"into_inner","","Get the writer that is wrapped by this CrcWriter.",5,[[]]],[11,"get_ref","","Get the writer that is wrapped by this CrcWriter by…",5,[[]]],[11,"get_mut","","Get a mutable reference to the writer that is wrapped by…",5,[[]]],[11,"reset","","Reset the Crc in this CrcWriter.",5,[[]]],[11,"new","","Create a new CrcWriter.",5,[[],["crcwriter",3]]],[11,"filename","","Returns the `filename` field of this gzip stream\'s header,…",6,[[],["option",4]]],[11,"extra","","Returns the `extra` field of this gzip stream\'s header, if…",6,[[],["option",4]]],[11,"comment","","Returns the `comment` field of this gzip stream\'s header,…",6,[[],["option",4]]],[11,"operating_system","","Returns the `operating_system` field of this gzip stream\'s…",6,[[]]],[11,"mtime","","This gives the most recent modification time of the…",6,[[]]],[11,"mtime_as_datetime","","Returns the most recent modification time represented by a…",6,[[],[["systemtime",3],["option",4]]]],[11,"new","","Create a new blank builder with no header by default.",7,[[],["gzbuilder",3]]],[11,"mtime","","Configure the `mtime` field in the gzip header.",7,[[],["gzbuilder",3]]],[11,"operating_system","","Configure the `operating_system` field in the gzip header.",7,[[],["gzbuilder",3]]],[11,"extra","","Configure the `extra` field in the gzip header.",7,[[["vec",3],["into",8]],["gzbuilder",3]]],[11,"filename","","Configure the `filename` field in the gzip header.",7,[[["vec",3],["into",8]],["gzbuilder",3]]],[11,"comment","","Configure the `comment` field in the gzip header.",7,[[["vec",3],["into",8]],["gzbuilder",3]]],[11,"write","","Consume this builder, creating a writer encoder in the…",7,[[["write",8],["compression",3]],[["gzencoder",3],["write",8]]]],[11,"read","","Consume this builder, creating a reader encoder in the…",7,[[["read",8],["compression",3]],[["read",8],["gzencoder",3]]]],[11,"buf_read","","Consume this builder, creating a reader encoder in the…",7,[[["compression",3]],["gzencoder",3]]],[11,"needs_dictionary","","Indicates whether decompression failed due to requiring a…",8,[[],["option",4]]],[11,"new","","Creates a new object ready for compressing data that it\'s…",9,[[["compression",3]],["compress",3]]],[11,"total_in","","Returns the total number of input bytes which have been…",9,[[]]],[11,"total_out","","Returns the total number of output bytes which have been…",9,[[]]],[11,"reset","","Quickly resets this compressor without having to…",9,[[]]],[11,"compress","","Compresses the input data into the output, consuming only…",9,[[["flushcompress",4]],[["result",4],["compresserror",3],["status",4]]]],[11,"compress_vec","","Compresses the input data into the extra space of the…",9,[[["vec",3],["flushcompress",4]],[["result",4],["compresserror",3],["status",4]]]],[11,"new","","Creates a new object ready for decompressing data that…",10,[[],["decompress",3]]],[11,"total_in","","Returns the total number of input bytes which have been…",10,[[]]],[11,"total_out","","Returns the total number of output bytes which have been…",10,[[]]],[11,"decompress","","Decompresses the input data into the output, consuming…",10,[[["flushdecompress",4]],[["decompresserror",3],["result",4],["status",4]]]],[11,"decompress_vec","","Decompresses the input data into the extra space in the…",10,[[["vec",3],["flushdecompress",4]],[["decompresserror",3],["result",4],["status",4]]]],[11,"reset","","Performs the equivalent of replacing this decompression…",10,[[]]],[0,"read","","Types which operate over `Read` streams, both encoders and…",null,null],[3,"DeflateDecoder","flate2::read","A DEFLATE decoder, or decompressor.",null,null],[3,"DeflateEncoder","","A DEFLATE encoder, or compressor.",null,null],[3,"GzDecoder","","A gzip streaming decoder",null,null],[3,"GzEncoder","","A gzip streaming encoder",null,null],[3,"MultiGzDecoder","","A gzip streaming decoder that decodes all members of a…",null,null],[3,"ZlibDecoder","","A ZLIB decoder, or decompressor.",null,null],[3,"ZlibEncoder","","A ZLIB encoder, or compressor.",null,null],[0,"write","flate2","Types which operate over `Write` streams, both encoders…",null,null],[3,"DeflateDecoder","flate2::write","A DEFLATE decoder, or decompressor.",null,null],[3,"DeflateEncoder","","A DEFLATE encoder, or compressor.",null,null],[3,"GzDecoder","","A gzip streaming decoder",null,null],[3,"GzEncoder","","A gzip streaming encoder",null,null],[3,"ZlibDecoder","","A ZLIB decoder, or decompressor.",null,null],[3,"ZlibEncoder","","A ZLIB encoder, or compressor.",null,null],[0,"bufread","flate2","Types which operate over `BufRead` streams, both encoders…",null,null],[3,"DeflateDecoder","flate2::bufread","A DEFLATE decoder, or decompressor.",null,null],[3,"DeflateEncoder","","A DEFLATE encoder, or compressor.",null,null],[3,"GzDecoder","","A gzip streaming decoder",null,null],[3,"GzEncoder","","A gzip streaming encoder",null,null],[3,"MultiGzDecoder","","A gzip streaming decoder that decodes all members of a…",null,null],[3,"ZlibDecoder","","A ZLIB decoder, or decompressor.",null,null],[3,"ZlibEncoder","","A ZLIB encoder, or compressor.",null,null],[11,"new","flate2","Creates a new description of the compression level with an…",11,[[],["compression",3]]],[11,"none","","No compression is to be performed, this may actually…",11,[[],["compression",3]]],[11,"fast","","Optimize for the best speed of encoding.",11,[[],["compression",3]]],[11,"best","","Optimize for the size of data being encoded.",11,[[],["compression",3]]],[11,"level","","Returns an integer representing the compression level,…",11,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","flate2::bufread","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","flate2::read","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","flate2::write","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","flate2::bufread","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","flate2::read","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","flate2::write","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","flate2::bufread","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","flate2::read","",29,[[]]],[11,"into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","flate2::write","",31,[[]]],[11,"into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"drop","","",25,[[]]],[11,"clone","flate2","",6,[[],["gzheader",3]]],[11,"clone","","",1,[[],["flushcompress",4]]],[11,"clone","","",2,[[],["flushdecompress",4]]],[11,"clone","","",0,[[],["status",4]]],[11,"clone","","",11,[[],["compression",3]]],[11,"default","","",6,[[],["gzheader",3]]],[11,"default","","",11,[[],["compression",3]]],[11,"eq","","",6,[[["gzheader",3]]]],[11,"ne","","",6,[[["gzheader",3]]]],[11,"eq","","",1,[[["flushcompress",4]]]],[11,"eq","","",2,[[["flushdecompress",4]]]],[11,"eq","","",0,[[["status",4]]]],[11,"eq","","",11,[[["compression",3]]]],[11,"ne","","",11,[[["compression",3]]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","flate2::bufread","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","flate2::read","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","flate2::write","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","flate2::bufread","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","flate2::read","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","flate2::write","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","flate2","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","flate2::bufread","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","flate2::read","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","flate2::write","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","flate2","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fill_buf","","",4,[[],["result",6]]],[11,"consume","","",4,[[]]],[11,"read","","",4,[[],["result",6]]],[11,"read","flate2::bufread","",13,[[],["result",6]]],[11,"read","","",14,[[],["result",6]]],[11,"read","flate2::read","",15,[[],["result",6]]],[11,"read","","",16,[[],["result",6]]],[11,"read","flate2::write","",17,[[],["result",6]]],[11,"read","","",18,[[],["result",6]]],[11,"read","flate2::bufread","",19,[[],["result",6]]],[11,"read","","",20,[[],["result",6]]],[11,"read","","",21,[[],["result",6]]],[11,"read","flate2::read","",22,[[],["result",6]]],[11,"read","","",23,[[],["result",6]]],[11,"read","","",24,[[],["result",6]]],[11,"read","flate2::write","",25,[[],["result",6]]],[11,"read","","",26,[[],["result",6]]],[11,"read","flate2::bufread","",27,[[],["result",6]]],[11,"read","","",28,[[],["result",6]]],[11,"read","flate2::read","",29,[[],["result",6]]],[11,"read","","",30,[[],["result",6]]],[11,"read","flate2::write","",31,[[],["result",6]]],[11,"read","","",32,[[],["result",6]]],[11,"write","flate2","",5,[[],["result",6]]],[11,"flush","","",5,[[],["result",6]]],[11,"write","flate2::bufread","",13,[[],["result",6]]],[11,"flush","","",13,[[],["result",6]]],[11,"write","","",14,[[],["result",6]]],[11,"flush","","",14,[[],["result",6]]],[11,"write","flate2::read","",15,[[],["result",6]]],[11,"flush","","",15,[[],["result",6]]],[11,"write","","",16,[[],["result",6]]],[11,"flush","","",16,[[],["result",6]]],[11,"write","flate2::write","",17,[[],["result",6]]],[11,"flush","","",17,[[],["result",6]]],[11,"write","","",18,[[],["result",6]]],[11,"flush","","",18,[[],["result",6]]],[11,"write","flate2::bufread","",19,[[],["result",6]]],[11,"flush","","",19,[[],["result",6]]],[11,"write","","",20,[[],["result",6]]],[11,"flush","","",20,[[],["result",6]]],[11,"write","","",21,[[],["result",6]]],[11,"flush","","",21,[[],["result",6]]],[11,"write","flate2::read","",22,[[],["result",6]]],[11,"flush","","",22,[[],["result",6]]],[11,"write","","",23,[[],["result",6]]],[11,"flush","","",23,[[],["result",6]]],[11,"write","","",24,[[],["result",6]]],[11,"flush","","",24,[[],["result",6]]],[11,"write","flate2::write","",25,[[],["result",6]]],[11,"flush","","",25,[[],["result",6]]],[11,"write","","",26,[[],["result",6]]],[11,"flush","","",26,[[],["result",6]]],[11,"write","flate2::bufread","",27,[[],["result",6]]],[11,"flush","","",27,[[],["result",6]]],[11,"write","","",28,[[],["result",6]]],[11,"flush","","",28,[[],["result",6]]],[11,"write","flate2::read","",29,[[],["result",6]]],[11,"flush","","",29,[[],["result",6]]],[11,"write","","",30,[[],["result",6]]],[11,"flush","","",30,[[],["result",6]]],[11,"write","flate2::write","",31,[[],["result",6]]],[11,"flush","","",31,[[],["result",6]]],[11,"write","","",32,[[],["result",6]]],[11,"flush","","",32,[[],["result",6]]],[11,"new","flate2::bufread","Creates a new encoder which will read uncompressed data…",13,[[["compression",3]],["deflateencoder",3]]],[11,"reset","","Resets the state of this encoder entirely, swapping out…",13,[[]]],[11,"get_ref","","Acquires a reference to the underlying reader",13,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream",13,[[]]],[11,"into_inner","","Consumes this encoder, returning the underlying reader.",13,[[]]],[11,"total_in","","Returns the number of bytes that have been read into this…",13,[[]]],[11,"total_out","","Returns the number of bytes that the compressor has…",13,[[]]],[11,"new","","Creates a new decoder which will decompress data read from…",14,[[],["deflatedecoder",3]]],[11,"reset","","Resets the state of this decoder entirely, swapping out…",14,[[]]],[11,"reset_data","","Resets the state of this decoder\'s data",14,[[]]],[11,"get_ref","","Acquires a reference to the underlying stream",14,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream",14,[[]]],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",14,[[]]],[11,"total_in","","Returns the number of bytes that the decompressor has…",14,[[]]],[11,"total_out","","Returns the number of bytes that the decompressor has…",14,[[]]],[11,"new","flate2::read","Creates a new encoder which will read uncompressed data…",15,[[["compression",3]],["deflateencoder",3]]],[11,"reset","","Resets the state of this encoder entirely, swapping out…",15,[[]]],[11,"get_ref","","Acquires a reference to the underlying reader",15,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream",15,[[]]],[11,"into_inner","","Consumes this encoder, returning the underlying reader.",15,[[]]],[11,"total_in","","Returns the number of bytes that have been read into this…",15,[[]]],[11,"total_out","","Returns the number of bytes that the compressor has…",15,[[]]],[11,"new","","Creates a new decoder which will decompress data read from…",16,[[],["deflatedecoder",3]]],[11,"new_with_buf","","Same as `new`, but the intermediate buffer for data is…",16,[[["vec",3]],["deflatedecoder",3]]],[11,"reset","","Resets the state of this decoder entirely, swapping out…",16,[[]]],[11,"get_ref","","Acquires a reference to the underlying stream",16,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream",16,[[]]],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",16,[[]]],[11,"total_in","","Returns the number of bytes that the decompressor has…",16,[[]]],[11,"total_out","","Returns the number of bytes that the decompressor has…",16,[[]]],[11,"new","flate2::write","Creates a new encoder which will write compressed data to…",17,[[["compression",3]],["deflateencoder",3]]],[11,"get_ref","","Acquires a reference to the underlying writer.",17,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying writer.",17,[[]]],[11,"reset","","Resets the state of this encoder entirely, swapping out…",17,[[],["result",6]]],[11,"try_finish","","Attempt to finish this output stream, writing out final…",17,[[],["result",6]]],[11,"finish","","Consumes this encoder, flushing the output stream.",17,[[],["result",6]]],[11,"flush_finish","","Consumes this encoder, flushing the output stream.",17,[[],["result",6]]],[11,"total_in","","Returns the number of bytes that have been written to this…",17,[[]]],[11,"total_out","","Returns the number of bytes that the compressor has…",17,[[]]],[11,"new","","Creates a new decoder which will write uncompressed data…",18,[[],["deflatedecoder",3]]],[11,"get_ref","","Acquires a reference to the underlying writer.",18,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying writer.",18,[[]]],[11,"reset","","Resets the state of this decoder entirely, swapping out…",18,[[],["result",6]]],[11,"try_finish","","Attempt to finish this output stream, writing out final…",18,[[],["result",6]]],[11,"finish","","Consumes this encoder, flushing the output stream.",18,[[],["result",6]]],[11,"total_in","","Returns the number of bytes that the decompressor has…",18,[[]]],[11,"total_out","","Returns the number of bytes that the decompressor has…",18,[[]]],[11,"new","flate2::bufread","Creates a new encoder which will use the given compression…",19,[[["compression",3]],["gzencoder",3]]],[11,"get_ref","","Acquires a reference to the underlying reader.",19,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying reader.",19,[[]]],[11,"into_inner","","Returns the underlying stream, consuming this encoder",19,[[]]],[11,"new","","Creates a new decoder from the given reader, immediately…",20,[[],["gzdecoder",3]]],[11,"header","","Returns the header associated with this stream, if it was…",20,[[],[["option",4],["gzheader",3]]]],[11,"get_ref","","Acquires a reference to the underlying reader.",20,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream.",20,[[]]],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",20,[[]]],[11,"new","","Creates a new decoder from the given reader, immediately…",21,[[],["multigzdecoder",3]]],[11,"header","","Returns the current header associated with this stream, if…",21,[[],[["option",4],["gzheader",3]]]],[11,"get_ref","","Acquires a reference to the underlying reader.",21,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream.",21,[[]]],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",21,[[]]],[11,"new","flate2::read","Creates a new encoder which will use the given compression…",22,[[["compression",3]],["gzencoder",3]]],[11,"get_ref","","Acquires a reference to the underlying reader.",22,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying reader.",22,[[]]],[11,"into_inner","","Returns the underlying stream, consuming this encoder",22,[[]]],[11,"new","","Creates a new decoder from the given reader, immediately…",23,[[],["gzdecoder",3]]],[11,"header","","Returns the header associated with this stream, if it was…",23,[[],[["option",4],["gzheader",3]]]],[11,"get_ref","","Acquires a reference to the underlying reader.",23,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream.",23,[[]]],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",23,[[]]],[11,"new","","Creates a new decoder from the given reader, immediately…",24,[[],["multigzdecoder",3]]],[11,"header","","Returns the current header associated with this stream, if…",24,[[],[["option",4],["gzheader",3]]]],[11,"get_ref","","Acquires a reference to the underlying reader.",24,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream.",24,[[]]],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",24,[[]]],[11,"new","flate2::write","Creates a new encoder which will use the given compression…",25,[[["compression",3]],["gzencoder",3]]],[11,"get_ref","","Acquires a reference to the underlying writer.",25,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying writer.",25,[[]]],[11,"try_finish","","Attempt to finish this output stream, writing out final…",25,[[],["result",6]]],[11,"finish","","Finish encoding this stream, returning the underlying…",25,[[],["result",6]]],[11,"new","","Creates a new decoder which will write uncompressed data…",26,[[],["gzdecoder",3]]],[11,"header","","Returns the header associated with this stream.",26,[[],[["option",4],["gzheader",3]]]],[11,"get_ref","","Acquires a reference to the underlying writer.",26,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying writer.",26,[[]]],[11,"try_finish","","Attempt to finish this output stream, writing out final…",26,[[],["result",6]]],[11,"finish","","Consumes this decoder, flushing the output stream.",26,[[],["result",6]]],[11,"new","flate2::bufread","Creates a new encoder which will read uncompressed data…",27,[[["compression",3]],["zlibencoder",3]]],[11,"reset","","Resets the state of this encoder entirely, swapping out…",27,[[]]],[11,"get_ref","","Acquires a reference to the underlying reader",27,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream",27,[[]]],[11,"into_inner","","Consumes this encoder, returning the underlying reader.",27,[[]]],[11,"total_in","","Returns the number of bytes that have been read into this…",27,[[]]],[11,"total_out","","Returns the number of bytes that the compressor has…",27,[[]]],[11,"new","","Creates a new decoder which will decompress data read from…",28,[[],["zlibdecoder",3]]],[11,"reset","","Resets the state of this decoder entirely, swapping out…",28,[[]]],[11,"get_ref","","Acquires a reference to the underlying stream",28,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream",28,[[]]],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",28,[[]]],[11,"total_in","","Returns the number of bytes that the decompressor has…",28,[[]]],[11,"total_out","","Returns the number of bytes that the decompressor has…",28,[[]]],[11,"new","flate2::read","Creates a new encoder which will read uncompressed data…",29,[[["compression",3]],["zlibencoder",3]]],[11,"reset","","Resets the state of this encoder entirely, swapping out…",29,[[]]],[11,"get_ref","","Acquires a reference to the underlying stream",29,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream",29,[[]]],[11,"into_inner","","Consumes this encoder, returning the underlying reader.",29,[[]]],[11,"total_in","","Returns the number of bytes that have been read into this…",29,[[]]],[11,"total_out","","Returns the number of bytes that the compressor has…",29,[[]]],[11,"new","","Creates a new decoder which will decompress data read from…",30,[[],["zlibdecoder",3]]],[11,"new_with_buf","","Same as `new`, but the intermediate buffer for data is…",30,[[["vec",3]],["zlibdecoder",3]]],[11,"reset","","Resets the state of this decoder entirely, swapping out…",30,[[]]],[11,"get_ref","","Acquires a reference to the underlying stream",30,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream",30,[[]]],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",30,[[]]],[11,"total_in","","Returns the number of bytes that the decompressor has…",30,[[]]],[11,"total_out","","Returns the number of bytes that the decompressor has…",30,[[]]],[11,"new","flate2::write","Creates a new encoder which will write compressed data to…",31,[[["compression",3]],["zlibencoder",3]]],[11,"get_ref","","Acquires a reference to the underlying writer.",31,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying writer.",31,[[]]],[11,"reset","","Resets the state of this encoder entirely, swapping out…",31,[[],["result",6]]],[11,"try_finish","","Attempt to finish this output stream, writing out final…",31,[[],["result",6]]],[11,"finish","","Consumes this encoder, flushing the output stream.",31,[[],["result",6]]],[11,"flush_finish","","Consumes this encoder, flushing the output stream.",31,[[],["result",6]]],[11,"total_in","","Returns the number of bytes that have been written to this…",31,[[]]],[11,"total_out","","Returns the number of bytes that the compressor has…",31,[[]]],[11,"new","","Creates a new decoder which will write uncompressed data…",32,[[],["zlibdecoder",3]]],[11,"get_ref","","Acquires a reference to the underlying writer.",32,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying writer.",32,[[]]],[11,"reset","","Resets the state of this decoder entirely, swapping out…",32,[[],["result",6]]],[11,"try_finish","","Attempt to finish this output stream, writing out final…",32,[[],["result",6]]],[11,"finish","","Consumes this encoder, flushing the output stream.",32,[[],["result",6]]],[11,"total_in","","Returns the number of bytes that the decompressor has…",32,[[]]],[11,"total_out","","Returns the number of bytes that the decompressor has…",32,[[]]]],"p":[[4,"Status"],[4,"FlushCompress"],[4,"FlushDecompress"],[3,"Crc"],[3,"CrcReader"],[3,"CrcWriter"],[3,"GzHeader"],[3,"GzBuilder"],[3,"DecompressError"],[3,"Compress"],[3,"Decompress"],[3,"Compression"],[3,"CompressError"],[3,"DeflateEncoder"],[3,"DeflateDecoder"],[3,"DeflateEncoder"],[3,"DeflateDecoder"],[3,"DeflateEncoder"],[3,"DeflateDecoder"],[3,"GzEncoder"],[3,"GzDecoder"],[3,"MultiGzDecoder"],[3,"GzEncoder"],[3,"GzDecoder"],[3,"MultiGzDecoder"],[3,"GzEncoder"],[3,"GzDecoder"],[3,"ZlibEncoder"],[3,"ZlibDecoder"],[3,"ZlibEncoder"],[3,"ZlibDecoder"],[3,"ZlibEncoder"],[3,"ZlibDecoder"]]},\
"getrandom":{"doc":"Interface to the random number generator of the operating…","i":[[3,"Error","getrandom","A small and `no_std` compatible error type.",null,null],[5,"getrandom","","Fill `dest` with random bytes from the system\'s preferred…",null,[[],[["error",3],["result",4]]]],[18,"UNKNOWN","","Unknown error.",0,null],[18,"UNAVAILABLE","","System entropy source is unavailable.",0,null],[18,"INTERNAL_START","","Codes below this point represent OS Errors (i.e. positive…",0,null],[18,"CUSTOM_START","","Codes at or above this point can be used by users to…",0,null],[11,"raw_os_error","","Extract the raw OS error code (if this error came from the…",0,[[],["option",4]]],[11,"code","","Extract the bare error code.",0,[[],["nonzerou32",3]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"from","","",0,[[["nonzerou32",3]]]],[11,"from","","",0,[[["error",3]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"eq","","",0,[[["error",3]]]],[11,"ne","","",0,[[["error",3]]]],[11,"clone","","",0,[[],["error",3]]]],"p":[[3,"Error"]]},\
"ghost":{"doc":"github crates-io docs-rs","i":[[23,"phantom","ghost","Define your own PhantomData and similarly behaved unit…",null,null]],"p":[]},\
"glenside":{"doc":"","i":[[0,"codegen","glenside","",null,null],[5,"c_array_string","glenside::codegen","Gives the signature of a C array given the datatype, name,…",null,[[["dtype",4]],["string",3]]],[5,"c_allocation_string","","Creates a representation (currently just a string with a C…",null,[[["dtype",4]],["string",3]]],[5,"c_assignment_string","","Creates a representation (currently just a string with a C…",null,[[["arrayviewd",6],["dtype",4]],["string",3]]],[5,"create_hardware_design_monolithic","","Create a monolithic systolic array hardware design from an…",null,[[["egraph",3]]]],[5,"create_hardware_design_no_sharing","","Create a hardware design from an expression, creating a…",null,[[["egraph",3]]]],[5,"find_vars","","Finds all symbols in a program, and return their names.",null,[[["egraph",3],["id",3]],[["vec",3],["string",3]]]],[5,"codegen","","Returns c code. args: The signature will be `void…",null,[[["hashmap",3],["egraph",3],["id",3],["vec",3]],["string",3]]],[0,"extraction","glenside","",null,null],[3,"MonolithicCostFunction","glenside::extraction","A cost function to extract a design using a single size of…",null,null],[12,"systolic_array_configuration","","",0,null],[12,"egraph","","",0,null],[12,"prefer_systolic_arrays_with_blocking","","Whether to prioritize systolic-array or…",0,null],[3,"SimpleCostFunction","","This cost function applies the bare minimum amount of…",null,null],[12,"prefer_systolic_arrays_with_blocking","","Whether to prioritize systolic-array or…",1,null],[5,"find_all_systolic_array_configurations","","",null,[[["egraph",3]],["hashset",3]]],[18,"INFINITY_VALUE","","",0,null],[0,"hw_design_language","glenside","",null,null],[3,"SystolicArrayWeightStationaryParams","glenside::hw_design_language","",null,null],[12,"dtype","","",2,null],[12,"rows","","",2,null],[12,"cols","","",2,null],[3,"Atom","","",null,null],[12,"name","","",3,null],[12,"id","","",3,null],[12,"config","","",3,null],[3,"HardwareDesign","","",null,null],[12,"atoms","","",4,null],[4,"DType","","",null,null],[13,"Int8","","",5,null],[13,"Int16","","",5,null],[13,"Int32","","",5,null],[13,"Uint8","","",5,null],[13,"Uint16","","",5,null],[13,"Uint32","","",5,null],[13,"Bf16","","",5,null],[13,"Fp16","","",5,null],[13,"Fp32","","",5,null],[13,"Fp64","","",5,null],[4,"AtomConfig","","",null,null],[13,"SystolicArrayWeightStationary","","",6,null],[5,"design_to_json","","",null,[[["hardwaredesign",3]],["value",4]]],[5,"atom_to_json","","",null,[[["atom",3]],["value",4]]],[11,"to_c_type_string","","Return the equivalent C type name for a given `dtype`, as…",5,[[],["string",3]]],[0,"language","glenside","",null,null],[3,"ShapeData","glenside::language","",null,null],[3,"AccessPatternData","","",null,null],[12,"shape","","",7,null],[12,"item_shape","","",7,null],[12,"zero_regions","","Regions proven to be zero-valued. The outermost map maps a…",7,null],[3,"MyAnalysisDataLegacyData","","",null,null],[3,"MyAnalysis","","",null,null],[12,"name_to_shape","","",8,null],[4,"Language","","",null,null],[13,"MoveAxis","","",9,null],[13,"CartesianProduct","","",9,null],[13,"MapDotProduct","","",9,null],[13,"Slice","","",9,null],[13,"Concatenate","","",9,null],[13,"ElementwiseAdd","","",9,null],[13,"BsgSystolicArray","","",9,null],[13,"SystolicArray","","",9,null],[13,"SystolicArrayWithBlocking","","",9,null],[13,"AccessWindows","","",9,null],[13,"ShapeOf","","",9,null],[13,"SliceShape","","",9,null],[13,"ShapeInsertAxis","","",9,null],[13,"ShapeRemoveAxis","","",9,null],[13,"Access","","",9,null],[13,"AccessTranspose","","",9,null],[13,"AccessCartesianProduct","","",9,null],[13,"Compute","","",9,null],[13,"AccessReshape","","",9,null],[13,"AccessFlatten","","",9,null],[13,"Shape","","",9,null],[13,"List","","",9,null],[13,"AccessShape","","",9,null],[13,"AccessSlice","","",9,null],[13,"AccessConcatenate","","",9,null],[13,"AccessPair","","",9,null],[13,"AccessShiftRight","","",9,null],[13,"AccessTensor","","",9,null],[13,"AccessPad","","",9,null],[13,"AccessSqueeze","","",9,null],[13,"AccessInsertAxis","","",9,null],[13,"AccessBroadcast","","",9,null],[13,"AccessLiteral","","",9,null],[13,"Literal","","",9,null],[13,"Usize","","",9,null],[13,"NotNanFloat64","","",9,null],[13,"PadType","","",9,null],[13,"ComputeType","","",9,null],[13,"Symbol","","",9,null],[4,"ComputeType","","",null,null],[13,"DotProduct","","",10,null],[13,"ReduceSum","","",10,null],[13,"ReLU","","",10,null],[13,"Sqrt","","",10,null],[13,"Negative","","",10,null],[13,"ElementwiseAdd","","Expects item shape of `a x b1 x .. x bn`. Performs an…",10,null],[13,"ElementwiseMul","","Expects item shape of `a x b1 x .. x bn`. Performs an…",10,null],[13,"ElementwiseDiv","","",10,null],[13,"ReduceMax","","Takes the max across all elements in each item. Reduces…",10,null],[13,"Softmax","","Computes softmax. Currently expects access axis to be 0.…",10,null],[13,"ReduceMean","","For an item shape of `a1 x a2 x ...`, returns an item…",10,null],[4,"PadType","","Specifies how to pick the values we pad with.",null,null],[13,"ZeroPadding","","Pad with zeroes.",11,null],[13,"MinPadding","","Pad with minimum representable number in the number system.",11,null],[4,"MyAnalysisData","","",null,null],[13,"Literal","","",12,null],[13,"Legacy","","",12,null],[13,"AccessPattern","","",12,null],[13,"Shape","","",12,null],[13,"ComputeType","","",12,null],[13,"PadType","","",12,null],[13,"List","","",12,null],[4,"RangeInsertStrategy","","",null,null],[13,"BreakRanges","","If elements are inserted in the middle of a range, the…",13,null],[13,"PreserveRanges","","If elements are inserted in the middle of a range, they…",13,null],[5,"access_windows_resulting_shape","","",null,[[["ixdyn",6]],["vec",3]]],[11,"as_vec","","Convenience method for getting the access pattern…",7,[[],["vec",3]]],[11,"get_usize","","",8,[[["id",3],["egraph",3]]]],[0,"interpreter_new","","",null,null],[3,"Access","glenside::language::interpreter_new","",null,null],[12,"tensor","","",14,null],[12,"access_axis","","",14,null],[4,"Value","","",null,null],[13,"Tensor","","",15,null],[13,"Access","","",15,null],[13,"Usize","","",15,null],[13,"Shape","","",15,null],[13,"ComputeType","","",15,null],[13,"PadType","","",15,null],[13,"AccessShape","","",15,null],[13,"List","","",15,null],[5,"interpret","","Interpret a Glenside expression",null,[[["environment",6],["recexpr",3]],["value",4]]],[6,"Environment","","",null,null],[8,"FromNotNanFloat64Literal","","Trait for types which can be converted to from Glenside…",null,null],[10,"from_not_nan_float_64_literal","","Convert from ordered_float::NotNan",16,[[["notnan",3]]]],[8,"Exp","","Trait for types which implement the exponential function.",null,null],[10,"exp","","Calculate exponential function",17,[[]]],[8,"Sqrt","","Trait for types which implement square root.…",null,null],[10,"sqrt","","Calculate square root.",18,[[]]],[0,"rewrites","glenside::language","",null,null],[3,"RewriteNonMatchingCartConcatenateApplier","glenside::language::rewrites","",null,null],[12,"a1","","",19,null],[12,"a2","","",19,null],[12,"a_axis","","",19,null],[12,"b1","","",19,null],[12,"b2","","",19,null],[12,"b_axis","","",19,null],[4,"SliceConcatenateStrategy","","",null,null],[13,"DivideBy","","Divides the axis by `divisor`; does not divide anything…",20,null],[12,"divisor","glenside::language::rewrites::SliceConcatenateStrategy","",21,null],[12,"limit","","",21,null],[13,"DivideInto","glenside::language::rewrites","",20,null],[12,"segment_size","glenside::language::rewrites::SliceConcatenateStrategy","",22,null],[4,"PadLocation","glenside::language::rewrites","",null,null],[13,"End","","",23,null],[4,"PadSliceStrategy","","",null,null],[13,"PadToClosestMultipleOf","","",24,null],[12,"multiple_of","glenside::language::rewrites::PadSliceStrategy","",25,null],[12,"pad_location","","",25,null],[12,"pad_type","","",25,null],[13,"PadToMultiplesOf","glenside::language::rewrites","",24,null],[12,"multiples_of","glenside::language::rewrites::PadSliceStrategy","",26,null],[12,"limit","","",26,null],[12,"pad_location","","",26,null],[12,"pad_type","","",26,null],[5,"has_shape","glenside::language::rewrites","",null,[[]]],[5,"is_symbol","","short_circuit lets us return early if we don\'t actually…",null,[[]]],[5,"split","","",null,[[],[["myanalysis",3],["language",4],["rewrite",3]]]],[5,"collapse_nested_slices","","",null,[[],[["myanalysis",3],["language",4],["rewrite",3]]]],[5,"bubble_concatenate_through_move_axis","","",null,[[],[["myanalysis",3],["language",4],["rewrite",3]]]],[5,"bubble_concatenate_through_cartesian_product_not_last_axis_left","","",null,[[],[["myanalysis",3],["language",4],["rewrite",3]]]],[5,"bubble_concatenate_through_cartesian_product_not_last_axis_right","","",null,[[],[["myanalysis",3],["language",4],["rewrite",3]]]],[5,"bubble_concatenate_through_cartesian_product_last_axis","","",null,[[],[["myanalysis",3],["language",4],["rewrite",3]]]],[5,"bubble_concatenate_through_cartesian_product_axis_0_0","","",null,[[],[["myanalysis",3],["language",4],["rewrite",3]]]],[5,"rewrite_nonmatching_cartesian_product_concatenate","","",null,[[],[["myanalysis",3],["language",4],["rewrite",3]]]],[5,"bubble_concatenate_through_map_dot_product_not_last_axis","","",null,[[],[["myanalysis",3],["language",4],["rewrite",3]]]],[5,"bubble_concatenate_through_map_dot_product_last_axis","","",null,[[],[["myanalysis",3],["language",4],["rewrite",3]]]],[5,"slice_move_axis_composition_commutative","","",null,[[],[["myanalysis",3],["language",4],["rewrite",3]]]],[5,"systolic_array_vector_matrix","","",null,[[],[["myanalysis",3],["language",4],["rewrite",3]]]],[5,"flatten_unflatten_any_access","","",null,[[],[["myanalysis",3],["language",4],["rewrite",3]]]],[5,"bubble_reshape_through_cartesian_product","","",null,[[],[["myanalysis",3],["language",4],["rewrite",3]]]],[5,"bubble_reshape_through_compute_dot_product","","",null,[[],[["myanalysis",3],["language",4],["rewrite",3]]]],[5,"systolic_array_with_blocking","","Tensorizes a computation to an externally-blocked systolic…",null,[[],[["myanalysis",3],["language",4],["rewrite",3]]]],[5,"systolic_array","","",null,[[],[["myanalysis",3],["language",4],["rewrite",3]]]],[5,"slice_concatenate_accesses","","",null,[[["sliceconcatenatestrategy",4]],[["myanalysis",3],["language",4],["rewrite",3]]]],[5,"slice_concatenate_tensor_accesses","","",null,[[],[["myanalysis",3],["language",4],["rewrite",3]]]],[5,"collapse_nested_access_slices","","",null,[[],[["myanalysis",3],["language",4],["rewrite",3]]]],[5,"access_slice_access_transpose_composition_commutative","","",null,[[],[["myanalysis",3],["language",4],["rewrite",3]]]],[5,"bubble_access_concatenate_through_access_transpose","","",null,[[],[["myanalysis",3],["language",4],["rewrite",3]]]],[5,"bubble_access_concatenate_through_access_cartesian_product_not_item_axis_left","","",null,[[],[["myanalysis",3],["language",4],["rewrite",3]]]],[5,"bubble_access_concatenate_through_access_cartesian_product_not_item_axis_right","","",null,[[],[["myanalysis",3],["language",4],["rewrite",3]]]],[5,"bubble_access_concatenate_through_access_cartesian_product_same_item_axis","","",null,[[],[["myanalysis",3],["language",4],["rewrite",3]]]],[5,"bubble_access_concatenate_through_compute_dot_product_not_item_axis","","When bubbling up through (compute dot-product ...), what…",null,[[],[["myanalysis",3],["language",4],["rewrite",3]]]],[5,"bubble_access_concatenate_through_compute_dot_product_item_axis","","",null,[[],[["myanalysis",3],["language",4],["rewrite",3]]]],[5,"bubble_access_concatenate_through_access","","",null,[[],[["myanalysis",3],["language",4],["rewrite",3]]]],[5,"bubble_access_concatenate_through_access_slice","","",null,[[],[["myanalysis",3],["language",4],["rewrite",3]]]],[5,"collapse_nested_transposes","","",null,[[],[["myanalysis",3],["language",4],["rewrite",3]]]],[5,"remove_trivial_transpose","","",null,[[],[["myanalysis",3],["language",4],["rewrite",3]]]],[5,"collapse_nested_accesses","","",null,[[],[["myanalysis",3],["language",4],["rewrite",3]]]],[5,"pad_slice_accesses","","",null,[[["padslicestrategy",4]],[["myanalysis",3],["language",4],["rewrite",3]]]],[5,"bubble_access_slice_through_access_pad_inequal_axes","","",null,[[],[["myanalysis",3],["language",4],["rewrite",3]]]],[5,"bubble_access_slice_through_access_cartesian_product_not_item_axis_left","","",null,[[],[["myanalysis",3],["language",4],["rewrite",3]]]],[5,"bubble_access_slice_through_access_cartesian_product_not_item_axis_right","","",null,[[],[["myanalysis",3],["language",4],["rewrite",3]]]],[5,"bubble_access_slice_through_access_cartesian_product_same_item_axis","","",null,[[],[["myanalysis",3],["language",4],["rewrite",3]]]],[5,"bubble_access_slice_through_compute_dot_product_not_item_axis","","If we\'re not slicing in an axis that\'s being computed…",null,[[],[["myanalysis",3],["language",4],["rewrite",3]]]],[5,"bubble_access_slice_through_compute_dot_product_item_axis_not_tuple_axis","","If we\'re slicing in an item axis that isn\'t the tuple axis…",null,[[],[["myanalysis",3],["language",4],["rewrite",3]]]],[0,"from_relay","glenside::language","",null,null],[5,"list","glenside::language::from_relay","",null,[[["recexpr",3]],["id",3]]],[5,"access_transpose","","",null,[[["recexpr",3],["id",3]],["id",3]]],[5,"conv2d","","",null,[[["recexpr",3],["id",3]],["id",3]]],[5,"access_shape","","Create access shape literal",null,[[["recexpr",3]],["id",3]]],[5,"access_concatenate","","Concatenate accesses",null,[[["recexpr",3],["id",3]],["id",3]]],[5,"access_slice","","Slice an access",null,[[["recexpr",3],["id",3]],["id",3]]],[5,"shape","","Create a shape",null,[[["vec",3],["recexpr",3]],["id",3]]],[5,"access_pad","","Pad an access",null,[[["recexpr",3],["id",3],["padtype",4]],["id",3]]],[5,"access","","Given an access and axis, add access expression accessing…",null,[[["recexpr",3],["id",3]],["id",3]]],[5,"access_insert_axis","","Given an access and axis, add access expression accessing…",null,[[["recexpr",3],["id",3]],["id",3]]],[5,"compute","","Given the input access and compute type, add compute…",null,[[["computetype",4],["recexpr",3],["id",3]],["id",3]]],[5,"access_pair","","Given input accesses and an axis, re-accesses and pairs…",null,[[["recexpr",3],["id",3]],["id",3]]],[5,"shape_from_type","","Get shape from type",null,[[["type",3]],["vec",3]]],[5,"from_relay","","Convert Relay IRModule to Glenside RecExpr.",null,[[["irmodule",3]]]],[8,"RangeSet2","glenside::language","New version of rangeset.",null,null],[16,"Index","","",27,null],[10,"insert_elements","","Inserts elements, shifting existing ranges as needed.",27,[[]]],[10,"remove_elements","","Updates ranges as if `num_elements_removed` elements were…",27,[[]]],[10,"covered","","Checks whether `range` is covered by the ranges in this set.",27,[[]]],[10,"add_range","","Adds range. Ranges are half-open.",27,[[]]],[8,"RangeSet","","",null,null],[16,"Index","","",28,null],[10,"insert_elements","","Updates ranges as if `num_elements_inserted` elements were…",28,[[["rangeinsertstrategy",4]]]],[10,"remove_elements","","Updates ranges as if `num_elements_removed` elements were…",28,[[]]],[10,"covered","","Checks whether `range` is covered by the ranges in this set.",28,[[]]],[10,"add_range","","Adds range. Ranges are half-open.",28,[[]]],[11,"from","glenside::extraction","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from_py","","",0,[[["python",3]]]],[11,"into_py","","",0,[[["python",3]]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from_py","","",1,[[["python",3]]]],[11,"into_py","","",1,[[["python",3]]]],[11,"from","glenside::hw_design_language","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from_py","","",2,[[["python",3]]]],[11,"into_py","","",2,[[["python",3]]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from_py","","",3,[[["python",3]]]],[11,"into_py","","",3,[[["python",3]]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from_py","","",4,[[["python",3]]]],[11,"into_py","","",4,[[["python",3]]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from_py","","",5,[[["python",3]]]],[11,"into_py","","",5,[[["python",3]]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from_py","","",6,[[["python",3]]]],[11,"into_py","","",6,[[["python",3]]]],[11,"from","glenside::language","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"from_py","","",29,[[["python",3]]]],[11,"into_py","","",29,[[["python",3]]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from_py","","",7,[[["python",3]]]],[11,"into_py","","",7,[[["python",3]]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"from_py","","",30,[[["python",3]]]],[11,"into_py","","",30,[[["python",3]]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from_py","","",8,[[["python",3]]]],[11,"into_py","","",8,[[["python",3]]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"equivalent","","",9,[[]]],[11,"vzip","","",9,[[]]],[11,"from_py","","",9,[[["python",3]]]],[11,"into_py","","",9,[[["python",3]]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"equivalent","","",10,[[]]],[11,"vzip","","",10,[[]]],[11,"from_py","","",10,[[["python",3]]]],[11,"into_py","","",10,[[["python",3]]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"to_string","","",11,[[],["string",3]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"equivalent","","",11,[[]]],[11,"vzip","","",11,[[]]],[11,"from_py","","",11,[[["python",3]]]],[11,"into_py","","",11,[[["python",3]]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"from_py","","",12,[[["python",3]]]],[11,"into_py","","",12,[[["python",3]]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"from_py","","",13,[[["python",3]]]],[11,"into_py","","",13,[[["python",3]]]],[11,"from","glenside::language::interpreter_new","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"from_py","","",14,[[["python",3]]]],[11,"into_py","","",14,[[["python",3]]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"from_py","","",15,[[["python",3]]]],[11,"into_py","","",15,[[["python",3]]]],[11,"from","glenside::language::rewrites","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"from_py","","",19,[[["python",3]]]],[11,"into_py","","",19,[[["python",3]]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"from_py","","",20,[[["python",3]]]],[11,"into_py","","",20,[[["python",3]]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"to_string","","",23,[[],["string",3]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"from_py","","",23,[[["python",3]]]],[11,"into_py","","",23,[[["python",3]]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"from_py","","",24,[[["python",3]]]],[11,"into_py","","",24,[[["python",3]]]],[11,"clone","glenside::language","",9,[[],["language",4]]],[11,"clone","","",10,[[],["computetype",4]]],[11,"clone","","",11,[[],["padtype",4]]],[11,"clone","","",12,[[],["myanalysisdata",4]]],[11,"clone","","",29,[[],["shapedata",3]]],[11,"clone","","",7,[[],["accesspatterndata",3]]],[11,"clone","","",30,[[],["myanalysisdatalegacydata",3]]],[11,"clone","glenside::language::rewrites","",23,[[],["padlocation",4]]],[11,"default","glenside::extraction","",1,[[]]],[11,"default","glenside::language","",8,[[],["myanalysis",3]]],[11,"cmp","","",9,[[["language",4]],["ordering",4]]],[11,"cmp","","",10,[[["computetype",4]],["ordering",4]]],[11,"cmp","","",11,[[["padtype",4]],["ordering",4]]],[11,"eq","","",9,[[["language",4]]]],[11,"ne","","",9,[[["language",4]]]],[11,"eq","","",10,[[["computetype",4]]]],[11,"eq","","",11,[[["padtype",4]]]],[11,"eq","","",12,[[["myanalysisdata",4]]]],[11,"ne","","",12,[[["myanalysisdata",4]]]],[11,"eq","","",29,[[["shapedata",3]]]],[11,"ne","","",29,[[["shapedata",3]]]],[11,"eq","","",7,[[["accesspatterndata",3]]]],[11,"ne","","",7,[[["accesspatterndata",3]]]],[11,"eq","","",30,[[["myanalysisdatalegacydata",3]]]],[11,"ne","","",30,[[["myanalysisdatalegacydata",3]]]],[11,"partial_cmp","","",9,[[["language",4]],[["ordering",4],["option",4]]]],[11,"lt","","",9,[[["language",4]]]],[11,"le","","",9,[[["language",4]]]],[11,"gt","","",9,[[["language",4]]]],[11,"ge","","",9,[[["language",4]]]],[11,"partial_cmp","","",10,[[["computetype",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",11,[[["padtype",4]],[["ordering",4],["option",4]]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","glenside::language::rewrites","",23,[[["formatter",3]],["result",6]]],[11,"index","glenside::language","",7,[[]]],[11,"hash","","",9,[[]]],[11,"hash","","",10,[[]]],[11,"hash","","",11,[[]]],[11,"from_str","","",10,[[],[["computetype",4],["result",4]]]],[11,"from_str","","",11,[[],[["result",4],["padtype",4]]]],[11,"merge","","",8,[[]]],[11,"make","","",8,[[["egraph",3],["language",4]]]],[11,"matches","","",9,[[]]],[11,"children","","",9,[[]]],[11,"children_mut","","",9,[[]]],[11,"display_op","","",9,[[],["display",8]]],[11,"from_op_str","","",9,[[["vec",3],["id",3]],[["result",4],["string",3]]]],[11,"cost","glenside::extraction","",0,[[["language",4]]]],[11,"cost","","",1,[[["language",4]]]],[11,"apply_one","glenside::language::rewrites","",19,[[["subst",3],["egraph",3],["id",3]],[["vec",3],["id",3]]]],[11,"serialize","glenside::hw_design_language","",5,[[],["result",4]]]],"p":[[3,"MonolithicCostFunction"],[3,"SimpleCostFunction"],[3,"SystolicArrayWeightStationaryParams"],[3,"Atom"],[3,"HardwareDesign"],[4,"DType"],[4,"AtomConfig"],[3,"AccessPatternData"],[3,"MyAnalysis"],[4,"Language"],[4,"ComputeType"],[4,"PadType"],[4,"MyAnalysisData"],[4,"RangeInsertStrategy"],[3,"Access"],[4,"Value"],[8,"FromNotNanFloat64Literal"],[8,"Exp"],[8,"Sqrt"],[3,"RewriteNonMatchingCartConcatenateApplier"],[4,"SliceConcatenateStrategy"],[13,"DivideBy"],[13,"DivideInto"],[4,"PadLocation"],[4,"PadSliceStrategy"],[13,"PadToClosestMultipleOf"],[13,"PadToMultiplesOf"],[8,"RangeSet2"],[8,"RangeSet"],[3,"ShapeData"],[3,"MyAnalysisDataLegacyData"]]},\
"goblin":{"doc":"libgoblinsay the right words","i":[[3,"HintData","goblin","Information obtained from a peek `Hint`",null,null],[12,"is_lsb","","",0,null],[12,"is_64","","",0,null],[4,"Hint","","A hint at the underlying binary format for 16 bytes of…",null,null],[13,"Elf","","",1,null],[13,"Mach","","",1,null],[13,"MachFat","","",1,null],[13,"PE","","",1,null],[13,"Archive","","",1,null],[13,"Unknown","","",1,null],[4,"Object","","A parseable object that goblin understands",null,null],[13,"Elf","","An ELF32/ELF64!",2,null],[13,"PE","","A PE32/PE32+!",2,null],[13,"Mach","","A 32/64-bit Mach-o binary OR it is a multi-architecture…",2,null],[13,"Archive","","A Unix archive",2,null],[13,"Unknown","","None of the above, with the given magic value",2,null],[5,"peek_bytes","","Peeks at `bytes`, and returns a `Hint`",null,[[],[["hint",4],["result",6]]]],[5,"peek","","Peeks at the underlying Read object. Requires the…",null,[[],[["hint",4],["result",6]]]],[0,"error","","A custom Goblin error",null,null],[4,"Error","goblin::error","A custom Goblin error",null,null],[13,"Malformed","","The binary is malformed somehow",3,null],[13,"BadMagic","","The binary\'s magic is unknown or bad",3,null],[13,"Scroll","","An error emanating from reading and interpreting bytes",3,null],[13,"IO","","An IO based error",3,null],[6,"Result","","An impish result",null,null],[0,"strtab","goblin","A byte-offset based string table. Commonly used in ELF…",null,null],[3,"Strtab","goblin::strtab","A common string table format which is indexed by byte…",null,null],[11,"new","","Construct a new strtab with `bytes` as the backing string…",4,[[]]],[11,"from_raw","","Construct a strtab from a `ptr`, and a `size`, using…",4,[[],["strtab",3]]],[11,"parse","","Parses a strtab from `bytes` at `offset` with `len` size…",4,[[],[["strtab",3],["result",6]]]],[11,"to_vec","","Converts the string table to a vector, with the original…",4,[[],[["vec",3],["result",6]]]],[11,"get","","Safely parses and gets a str reference from the backing…",4,[[],[["result",6],["option",4]]]],[11,"get_unsafe","","Gets a str reference from the backing bytes starting at…",4,[[],["option",4]]],[0,"container","goblin","Binary container size information and byte-order context",null,null],[4,"Endian","goblin::container","The endianness (byte order) of a stream of bytes",null,null],[13,"Little","","",5,null],[13,"Big","","",5,null],[3,"Ctx","","A binary parsing context, including the container size and…",null,null],[12,"container","","",6,null],[12,"le","","",6,null],[4,"Container","","The size of a binary container",null,null],[13,"Little","","",7,null],[13,"Big","","",7,null],[17,"CONTAINER","","The default binary container size - either `Big` or…",null,null],[11,"is_big","","Is this a 64-bit container or not?",7,[[]]],[11,"is_big","","Whether this binary container context is \\\"big\\\" or not",6,[[]]],[11,"is_little_endian","","Whether this binary container context is little endian or…",6,[[]]],[11,"new","","Create a new binary container context",6,[[["endian",4],["container",4]]]],[11,"size","","Return a dubious pointer/address byte size for the container",6,[[]]],[0,"elf","goblin","The generic ELF module, which gives access to ELF…",null,null],[3,"Elf","goblin::elf","An ELF binary. The underlying data structures are read…",null,null],[12,"header","","The ELF header, which provides a rudimentary index into…",8,null],[12,"program_headers","","The program headers; they primarily tell the kernel and…",8,null],[12,"section_headers","","The sections headers. These are strippable, never count on…",8,null],[12,"shdr_strtab","","The section header string table",8,null],[12,"dynstrtab","","The string table for the dynamically accessible symbols",8,null],[12,"dynsyms","","The dynamically accessible symbols, i.e., exports,…",8,null],[12,"syms","","The debugging symbol table",8,null],[12,"strtab","","The string table for the symbol table",8,null],[12,"dynamic","","Contains dynamic linking information, with the _DYNAMIC…",8,null],[12,"dynrelas","","The dynamic relocation entries (strings, copy-data, etc.)…",8,null],[12,"dynrels","","The dynamic relocation entries without an addend",8,null],[12,"pltrelocs","","The plt relocation entries (procedure linkage table). For…",8,null],[12,"shdr_relocs","","Section relocations by section index (only present if this…",8,null],[12,"soname","","The binary\'s soname, if it has one",8,null],[12,"interpreter","","The binary\'s program interpreter (e.g., dynamic linker),…",8,null],[12,"libraries","","A list of this binary\'s dynamic libraries it uses, if…",8,null],[12,"is_64","","Whether this is a 64-bit elf or not",8,null],[12,"is_lib","","Whether this is a shared object or not",8,null],[12,"entry","","The binaries entry point address, if it has one",8,null],[12,"little_endian","","Whether the binary is little endian or not",8,null],[0,"compression_header","","",null,null],[3,"CompressionHeader","goblin::elf::compression_header","A unified CompressionHeader - convertable to and from…",null,null],[12,"ch_type","","Compression format",9,null],[12,"ch_size","","Uncompressed data size",9,null],[12,"ch_addralign","","Uncompressed data alignment",9,null],[0,"compression_header32","","",null,null],[3,"CompressionHeader","goblin::elf::compression_header::compression_header32","The compression header is used at the start of…",null,null],[12,"ch_type","","Compression format",10,null],[12,"ch_size","","Uncompressed data size",10,null],[12,"ch_addralign","","Uncompressed data alignment",10,null],[17,"SIZEOF_CHDR","","",null,null],[11,"from_bytes","","",10,[[],["compressionheader",3]]],[11,"from_fd","","",10,[[["file",3]],[["result",6],["compressionheader",3]]]],[0,"compression_header64","goblin::elf::compression_header","",null,null],[3,"CompressionHeader","goblin::elf::compression_header::compression_header64","The compression header is used at the start of…",null,null],[12,"ch_type","","Compression format",11,null],[12,"ch_reserved","","",11,null],[12,"ch_size","","Uncompressed data size",11,null],[12,"ch_addralign","","Uncompressed data alignment",11,null],[17,"SIZEOF_CHDR","","",null,null],[11,"from_bytes","","",11,[[],["compressionheader",3]]],[11,"from_fd","","",11,[[["file",3]],[["result",6],["compressionheader",3]]]],[17,"ELFCOMPRESS_ZLIB","goblin::elf::compression_header","ZLIB/DEFLATE algorithm.",null,null],[17,"ELFCOMPRESS_LOOS","","Start of OS-specific.",null,null],[17,"ELFCOMPRESS_HIOS","","End of OS-specific.",null,null],[17,"ELFCOMPRESS_LOPROC","","Start of processor-specific.",null,null],[17,"ELFCOMPRESS_HIPROC","","End of processor-specific.",null,null],[11,"size","","Return the size of the underlying compression header,…",9,[[["ctx",3]]]],[11,"new","","",9,[[]]],[11,"parse","","Parse a compression header from `bytes` at `offset`, using…",9,[[["ctx",3]],[["result",6],["compressionheader",3]]]],[0,"header","goblin::elf","",null,null],[3,"Header","goblin::elf::header","An ELF header",null,null],[12,"e_ident","","",12,null],[12,"e_type","","",12,null],[12,"e_machine","","",12,null],[12,"e_version","","",12,null],[12,"e_entry","","",12,null],[12,"e_phoff","","",12,null],[12,"e_shoff","","",12,null],[12,"e_flags","","",12,null],[12,"e_ehsize","","",12,null],[12,"e_phentsize","","",12,null],[12,"e_phnum","","",12,null],[12,"e_shentsize","","",12,null],[12,"e_shnum","","",12,null],[12,"e_shstrndx","","",12,null],[5,"machine_to_str","","Convert machine to str representation",null,[[]]],[5,"class_to_str","","Convert a ELF class byte to the associated string.",null,[[]]],[5,"et_to_str","","Convert an ET value to their associated string.",null,[[]]],[0,"header32","","",null,null],[3,"Header","goblin::elf::header::header32","",null,null],[12,"e_ident","","Magic number and other info",13,null],[12,"e_type","","Object file type",13,null],[12,"e_machine","","Architecture",13,null],[12,"e_version","","Object file version",13,null],[12,"e_entry","","Entry point virtual address",13,null],[12,"e_phoff","","Program header table file offset",13,null],[12,"e_shoff","","Section header table file offset",13,null],[12,"e_flags","","Processor-specific flags",13,null],[12,"e_ehsize","","ELF header size in bytes",13,null],[12,"e_phentsize","","Program header table entry size",13,null],[12,"e_phnum","","Program header table entry count",13,null],[12,"e_shentsize","","Section header table entry size",13,null],[12,"e_shnum","","Section header table entry count",13,null],[12,"e_shstrndx","","Section header string table index",13,null],[17,"SIZEOF_EHDR","","",null,null],[17,"ELFCLASS","","",null,null],[11,"from_bytes","","Returns the corresponding ELF header from the given byte…",13,[[],["header",3]]],[11,"from_fd","","Load a header from a file. You must ensure the seek is at…",13,[[["file",3]],[["header",3],["result",6]]]],[11,"parse","","Parses an ELF header from the given bytes",13,[[],[["header",3],["result",6]]]],[0,"header64","goblin::elf::header","",null,null],[3,"Header","goblin::elf::header::header64","",null,null],[12,"e_ident","","Magic number and other info",14,null],[12,"e_type","","Object file type",14,null],[12,"e_machine","","Architecture",14,null],[12,"e_version","","Object file version",14,null],[12,"e_entry","","Entry point virtual address",14,null],[12,"e_phoff","","Program header table file offset",14,null],[12,"e_shoff","","Section header table file offset",14,null],[12,"e_flags","","Processor-specific flags",14,null],[12,"e_ehsize","","ELF header size in bytes",14,null],[12,"e_phentsize","","Program header table entry size",14,null],[12,"e_phnum","","Program header table entry count",14,null],[12,"e_shentsize","","Section header table entry size",14,null],[12,"e_shnum","","Section header table entry count",14,null],[12,"e_shstrndx","","Section header string table index",14,null],[17,"SIZEOF_EHDR","","",null,null],[17,"ELFCLASS","","",null,null],[11,"from_bytes","","Returns the corresponding ELF header from the given byte…",14,[[],["header",3]]],[11,"from_fd","","Load a header from a file. You must ensure the seek is at…",14,[[["file",3]],[["result",6],["header",3]]]],[11,"parse","","Parses an ELF header from the given bytes",14,[[],[["result",6],["header",3]]]],[17,"EM_NONE","goblin::elf::header","TODO: use Enum with explicit discriminant and get debug…",null,null],[17,"EM_M32","","AT&T WE 32100",null,null],[17,"EM_SPARC","","SUN SPARC",null,null],[17,"EM_386","","Intel 80386",null,null],[17,"EM_68K","","Motorola m68k family",null,null],[17,"EM_88K","","Motorola m88k family",null,null],[17,"EM_IAMCU","","Intel MCU",null,null],[17,"EM_860","","Intel 80860",null,null],[17,"EM_MIPS","","MIPS R3000 big-endian",null,null],[17,"EM_S370","","IBM System/370",null,null],[17,"EM_MIPS_RS3_LE","","MIPS R3000 little-endian",null,null],[17,"EM_PARISC","","HPPA",null,null],[17,"EM_VPP500","","Fujitsu VPP500",null,null],[17,"EM_SPARC32PLUS","","Sun\'s \\\"v8plus\\\"",null,null],[17,"EM_960","","Intel 80960",null,null],[17,"EM_PPC","","PowerPC",null,null],[17,"EM_PPC64","","PowerPC 64-bit",null,null],[17,"EM_S390","","IBM S390",null,null],[17,"EM_SPU","","IBM SPU/SPC",null,null],[17,"EM_V800","","NEC V800 series",null,null],[17,"EM_FR20","","Fujitsu FR20",null,null],[17,"EM_RH32","","TRW RH-32",null,null],[17,"EM_RCE","","Motorola RCE",null,null],[17,"EM_ARM","","ARM",null,null],[17,"EM_FAKE_ALPHA","","Digital Alpha",null,null],[17,"EM_SH","","Hitachi SH",null,null],[17,"EM_SPARCV9","","SPARC v9 64-bit",null,null],[17,"EM_TRICORE","","Siemens Tricore",null,null],[17,"EM_ARC","","Argonaut RISC Core",null,null],[17,"EM_H8_300","","Hitachi H8/300",null,null],[17,"EM_H8_300H","","Hitachi H8/300H",null,null],[17,"EM_H8S","","Hitachi H8S",null,null],[17,"EM_H8_500","","Hitachi H8/500",null,null],[17,"EM_IA_64","","Intel Merced",null,null],[17,"EM_MIPS_X","","Stanford MIPS-X",null,null],[17,"EM_COLDFIRE","","Motorola Coldfire",null,null],[17,"EM_68HC12","","Motorola M68HC12",null,null],[17,"EM_MMA","","Fujitsu MMA Multimedia Accelerator",null,null],[17,"EM_PCP","","Siemens PCP",null,null],[17,"EM_NCPU","","Sony nCPU embeeded RISC",null,null],[17,"EM_NDR1","","Denso NDR1 microprocessor",null,null],[17,"EM_STARCORE","","Motorola Start*Core processor",null,null],[17,"EM_ME16","","Toyota ME16 processor",null,null],[17,"EM_ST100","","STMicroelectronic ST100 processor",null,null],[17,"EM_TINYJ","","Advanced Logic Corp. Tinyj emb.fam",null,null],[17,"EM_X86_64","","AMD x86-64 architecture",null,null],[17,"EM_PDSP","","Sony DSP Processor",null,null],[17,"EM_PDP10","","Digital PDP-10",null,null],[17,"EM_PDP11","","Digital PDP-11",null,null],[17,"EM_FX66","","Siemens FX66 microcontroller",null,null],[17,"EM_ST9PLUS","","STMicroelectronics ST9+ 8/16 mc",null,null],[17,"EM_ST7","","STmicroelectronics ST7 8 bit mc",null,null],[17,"EM_68HC16","","Motorola MC68HC16 microcontroller",null,null],[17,"EM_68HC11","","Motorola MC68HC11 microcontroller",null,null],[17,"EM_68HC08","","Motorola MC68HC08 microcontroller",null,null],[17,"EM_68HC05","","Motorola MC68HC05 microcontroller",null,null],[17,"EM_SVX","","Silicon Graphics SVx",null,null],[17,"EM_ST19","","STMicroelectronics ST19 8 bit mc",null,null],[17,"EM_VAX","","Digital VAX",null,null],[17,"EM_CRIS","","Axis Communications 32-bit emb.proc",null,null],[17,"EM_JAVELIN","","Infineon Technologies 32-bit emb.proc",null,null],[17,"EM_FIREPATH","","Element 14 64-bit DSP Processor",null,null],[17,"EM_ZSP","","LSI Logic 16-bit DSP Processor",null,null],[17,"EM_MMIX","","Donald Knuth\'s educational 64-bit proc",null,null],[17,"EM_HUANY","","Harvard University machine-independent object files",null,null],[17,"EM_PRISM","","SiTera Prism",null,null],[17,"EM_AVR","","Atmel AVR 8-bit microcontroller",null,null],[17,"EM_FR30","","Fujitsu FR30",null,null],[17,"EM_D10V","","Mitsubishi D10V",null,null],[17,"EM_D30V","","Mitsubishi D30V",null,null],[17,"EM_V850","","NEC v850",null,null],[17,"EM_M32R","","Mitsubishi M32R",null,null],[17,"EM_MN10300","","Matsushita MN10300",null,null],[17,"EM_MN10200","","Matsushita MN10200",null,null],[17,"EM_PJ","","picoJava",null,null],[17,"EM_OPENRISC","","OpenRISC 32-bit embedded processor",null,null],[17,"EM_ARC_COMPACT","","ARC International ARCompact",null,null],[17,"EM_XTENSA","","Tensilica Xtensa Architecture",null,null],[17,"EM_VIDEOCORE","","Alphamosaic VideoCore",null,null],[17,"EM_TMM_GPP","","Thompson Multimedia General Purpose Proc",null,null],[17,"EM_NS32K","","National Semi. 32000",null,null],[17,"EM_TPC","","Tenor Network TPC",null,null],[17,"EM_SNP1K","","Trebia SNP 1000",null,null],[17,"EM_ST200","","STMicroelectronics ST200",null,null],[17,"EM_IP2K","","Ubicom IP2xxx",null,null],[17,"EM_MAX","","MAX processor",null,null],[17,"EM_CR","","National Semi. CompactRISC",null,null],[17,"EM_F2MC16","","Fujitsu F2MC16",null,null],[17,"EM_MSP430","","Texas Instruments msp430",null,null],[17,"EM_BLACKFIN","","Analog Devices Blackfin DSP",null,null],[17,"EM_SE_C33","","Seiko Epson S1C33 family",null,null],[17,"EM_SEP","","Sharp embedded microprocessor",null,null],[17,"EM_ARCA","","Arca RISC",null,null],[17,"EM_UNICORE","","PKU-Unity & MPRC Peking Uni. mc series",null,null],[17,"EM_EXCESS","","eXcess configurable cpu",null,null],[17,"EM_DXP","","Icera Semi. Deep Execution Processor",null,null],[17,"EM_ALTERA_NIOS2","","Altera Nios II",null,null],[17,"EM_CRX","","National Semi. CompactRISC CRX",null,null],[17,"EM_XGATE","","Motorola XGATE",null,null],[17,"EM_C166","","Infineon C16x/XC16x",null,null],[17,"EM_M16C","","Renesas M16C",null,null],[17,"EM_DSPIC30F","","Microchip Technology dsPIC30F",null,null],[17,"EM_CE","","Freescale Communication Engine RISC",null,null],[17,"EM_M32C","","Renesas M32C",null,null],[17,"EM_TSK3000","","Altium TSK3000",null,null],[17,"EM_RS08","","Freescale RS08",null,null],[17,"EM_SHARC","","Analog Devices SHARC family",null,null],[17,"EM_ECOG2","","Cyan Technology eCOG2",null,null],[17,"EM_SCORE7","","Sunplus S+core7 RISC",null,null],[17,"EM_DSP24","","New Japan Radio (NJR) 24-bit DSP",null,null],[17,"EM_VIDEOCORE3","","Broadcom VideoCore III",null,null],[17,"EM_LATTICEMICO32","","RISC for Lattice FPGA",null,null],[17,"EM_SE_C17","","Seiko Epson C17",null,null],[17,"EM_TI_C6000","","Texas Instruments TMS320C6000 DSP",null,null],[17,"EM_TI_C2000","","Texas Instruments TMS320C2000 DSP",null,null],[17,"EM_TI_C5500","","Texas Instruments TMS320C55x DSP",null,null],[17,"EM_TI_ARP32","","Texas Instruments App. Specific RISC",null,null],[17,"EM_TI_PRU","","Texas Instruments Prog. Realtime Unit",null,null],[17,"EM_MMDSP_PLUS","","STMicroelectronics 64bit VLIW DSP",null,null],[17,"EM_CYPRESS_M8C","","Cypress M8C",null,null],[17,"EM_R32C","","Renesas R32C",null,null],[17,"EM_TRIMEDIA","","NXP Semi. TriMedia",null,null],[17,"EM_QDSP6","","QUALCOMM DSP6",null,null],[17,"EM_8051","","Intel 8051 and variants",null,null],[17,"EM_STXP7X","","STMicroelectronics STxP7x",null,null],[17,"EM_NDS32","","Andes Tech. compact code emb. RISC",null,null],[17,"EM_ECOG1X","","Cyan Technology eCOG1X",null,null],[17,"EM_MAXQ30","","Dallas Semi. MAXQ30 mc",null,null],[17,"EM_XIMO16","","New Japan Radio (NJR) 16-bit DSP",null,null],[17,"EM_MANIK","","M2000 Reconfigurable RISC",null,null],[17,"EM_CRAYNV2","","Cray NV2 vector architecture",null,null],[17,"EM_RX","","Renesas RX",null,null],[17,"EM_METAG","","Imagination Tech. META",null,null],[17,"EM_MCST_ELBRUS","","MCST Elbrus",null,null],[17,"EM_ECOG16","","Cyan Technology eCOG16",null,null],[17,"EM_CR16","","National Semi. CompactRISC CR16",null,null],[17,"EM_ETPU","","Freescale Extended Time Processing Unit",null,null],[17,"EM_SLE9X","","Infineon Tech. SLE9X",null,null],[17,"EM_L10M","","Intel L10M",null,null],[17,"EM_K10M","","Intel K10M",null,null],[17,"EM_AARCH64","","ARM AARCH64",null,null],[17,"EM_AVR32","","Amtel 32-bit microprocessor",null,null],[17,"EM_STM8","","STMicroelectronics STM8",null,null],[17,"EM_TILE64","","Tileta TILE64",null,null],[17,"EM_TILEPRO","","Tilera TILEPro",null,null],[17,"EM_MICROBLAZE","","Xilinx MicroBlaze",null,null],[17,"EM_CUDA","","NVIDIA CUDA",null,null],[17,"EM_TILEGX","","Tilera TILE-Gx",null,null],[17,"EM_CLOUDSHIELD","","CloudShield",null,null],[17,"EM_COREA_1ST","","KIPO-KAIST Core-A 1st gen.",null,null],[17,"EM_COREA_2ND","","KIPO-KAIST Core-A 2nd gen.",null,null],[17,"EM_ARC_COMPACT2","","Synopsys ARCompact V2",null,null],[17,"EM_OPEN8","","Open8 RISC",null,null],[17,"EM_RL78","","Renesas RL78",null,null],[17,"EM_VIDEOCORE5","","Broadcom VideoCore V",null,null],[17,"EM_78KOR","","Renesas 78KOR",null,null],[17,"EM_56800EX","","Freescale 56800EX DSC",null,null],[17,"EM_BA1","","Beyond BA1",null,null],[17,"EM_BA2","","Beyond BA2",null,null],[17,"EM_XCORE","","XMOS xCORE",null,null],[17,"EM_MCHP_PIC","","Microchip 8-bit PIC(r)",null,null],[17,"EM_KM32","","KM211 KM32",null,null],[17,"EM_KMX32","","KM211 KMX32",null,null],[17,"EM_EMX16","","KM211 KMX16",null,null],[17,"EM_EMX8","","KM211 KMX8",null,null],[17,"EM_KVARC","","KM211 KVARC",null,null],[17,"EM_CDP","","Paneve CDP",null,null],[17,"EM_COGE","","Cognitive Smart Memory Processor",null,null],[17,"EM_COOL","","Bluechip CoolEngine",null,null],[17,"EM_NORC","","Nanoradio Optimized RISC",null,null],[17,"EM_CSR_KALIMBA","","CSR Kalimba",null,null],[17,"EM_Z80","","Zilog Z80",null,null],[17,"EM_VISIUM","","Controls and Data Services VISIUMcore",null,null],[17,"EM_FT32","","FTDI Chip FT32",null,null],[17,"EM_MOXIE","","Moxie processor",null,null],[17,"EM_AMDGPU","","AMD GPU",null,null],[17,"EM_RISCV","","RISC-V",null,null],[17,"EM_BPF","","Linux BPF -- in-kernel virtual machine",null,null],[17,"EM_NUM","","",null,null],[17,"ET_NONE","","No file type.",null,null],[17,"ET_REL","","Relocatable file.",null,null],[17,"ET_EXEC","","Executable file.",null,null],[17,"ET_DYN","","Shared object file.",null,null],[17,"ET_CORE","","Core file.",null,null],[17,"ET_NUM","","Number of defined types.",null,null],[17,"ELFMAG","","The ELF magic number.",null,null],[17,"SELFMAG","","Sizeof ELF magic number.",null,null],[17,"EI_CLASS","","File class byte index.",null,null],[17,"ELFCLASSNONE","","Invalid class.",null,null],[17,"ELFCLASS32","","32-bit objects.",null,null],[17,"ELFCLASS64","","64-bit objects.",null,null],[17,"ELFCLASSNUM","","ELF class number.",null,null],[17,"EI_DATA","","Data encoding byte index.",null,null],[17,"ELFDATANONE","","Invalid data encoding.",null,null],[17,"ELFDATA2LSB","","2\'s complement, little endian.",null,null],[17,"ELFDATA2MSB","","2\'s complement, big endian.",null,null],[17,"EI_VERSION","","File version byte index.",null,null],[17,"EV_CURRENT","","Current ELF version.",null,null],[17,"EI_OSABI","","OS ABI byte index.",null,null],[17,"ELFOSABI_NONE","","UNIX System V ABI.",null,null],[17,"EI_ABIVERSION","","ABI version byte index.",null,null],[17,"SIZEOF_IDENT","","Number of bytes in an identifier.",null,null],[11,"size","","Return the size of the underlying program header, given a…",12,[[["ctx",3]]]],[11,"container","","Returns the container type this header specifies",12,[[],[["result",6],["container",4]]]],[11,"endianness","","Returns the byte order this header specifies",12,[[],[["endian",4],["result",6]]]],[11,"new","","",12,[[["ctx",3]]]],[0,"program_header","goblin::elf","",null,null],[3,"ProgramHeader","goblin::elf::program_header","A unified ProgramHeader - convertable to and from 32-bit…",null,null],[12,"p_type","","",15,null],[12,"p_flags","","",15,null],[12,"p_offset","","",15,null],[12,"p_vaddr","","",15,null],[12,"p_paddr","","",15,null],[12,"p_filesz","","",15,null],[12,"p_memsz","","",15,null],[12,"p_align","","",15,null],[5,"pt_to_str","","",null,[[]]],[0,"program_header32","","",null,null],[3,"ProgramHeader","goblin::elf::program_header::program_header32","A 32-bit ProgramHeader typically specifies how to map…",null,null],[12,"p_type","","Segment type",16,null],[12,"p_offset","","Segment file offset",16,null],[12,"p_vaddr","","Segment virtual address",16,null],[12,"p_paddr","","Segment physical address",16,null],[12,"p_filesz","","Segment size in file",16,null],[12,"p_memsz","","Segment size in memory",16,null],[12,"p_flags","","Segment flags",16,null],[12,"p_align","","Segment alignment",16,null],[17,"SIZEOF_PHDR","","",null,null],[11,"parse","","",16,[[["endian",4]],[["result",6],["vec",3]]]],[11,"from_bytes","","",16,[[],[["programheader",3],["vec",3]]]],[11,"from_raw_parts","","SafetyThis function creates a `ProgramHeader` directly…",16,[[]]],[11,"from_fd","","",16,[[["file",3]],[["result",6],["vec",3]]]],[0,"program_header64","goblin::elf::program_header","",null,null],[3,"ProgramHeader","goblin::elf::program_header::program_header64","A 64-bit ProgramHeader typically specifies how to map…",null,null],[12,"p_type","","Segment type",17,null],[12,"p_flags","","Segment flags",17,null],[12,"p_offset","","Segment file offset",17,null],[12,"p_vaddr","","Segment virtual address",17,null],[12,"p_paddr","","Segment physical address",17,null],[12,"p_filesz","","Segment size in file",17,null],[12,"p_memsz","","Segment size in memory",17,null],[12,"p_align","","Segment alignment",17,null],[17,"SIZEOF_PHDR","","",null,null],[11,"parse","","",17,[[["endian",4]],[["result",6],["vec",3]]]],[11,"from_bytes","","",17,[[],[["programheader",3],["vec",3]]]],[11,"from_raw_parts","","SafetyThis function creates a `ProgramHeader` directly…",17,[[]]],[11,"from_fd","","",17,[[["file",3]],[["result",6],["vec",3]]]],[17,"PT_NULL","goblin::elf::program_header","Program header table entry unused",null,null],[17,"PT_LOAD","","Loadable program segment",null,null],[17,"PT_DYNAMIC","","Dynamic linking information",null,null],[17,"PT_INTERP","","Program interpreter",null,null],[17,"PT_NOTE","","Auxiliary information",null,null],[17,"PT_SHLIB","","Reserved",null,null],[17,"PT_PHDR","","Entry for header table itself",null,null],[17,"PT_TLS","","Thread-local storage segment",null,null],[17,"PT_NUM","","Number of defined types",null,null],[17,"PT_LOOS","","Start of OS-specific",null,null],[17,"PT_GNU_EH_FRAME","","GCC .eh_frame_hdr segment",null,null],[17,"PT_GNU_STACK","","Indicates stack executability",null,null],[17,"PT_GNU_RELRO","","Read-only after relocation",null,null],[17,"PT_LOSUNW","","Sun Specific segment",null,null],[17,"PT_SUNWBSS","","Sun Specific segment",null,null],[17,"PT_SUNWSTACK","","Stack segment",null,null],[17,"PT_HISUNW","","End of OS-specific",null,null],[17,"PT_HIOS","","End of OS-specific",null,null],[17,"PT_LOPROC","","Start of processor-specific",null,null],[17,"PT_ARM_EXIDX","","ARM unwind segment",null,null],[17,"PT_HIPROC","","End of processor-specific",null,null],[17,"PF_X","","Segment is executable",null,null],[17,"PF_W","","Segment is writable",null,null],[17,"PF_R","","Segment is readable",null,null],[11,"size","","Return the size of the underlying program header, given a…",15,[[["ctx",3]]]],[11,"new","","Create a new `PT_LOAD` ELF program header",15,[[]]],[11,"file_range","","Returns this program header\'s file offset range",15,[[],["range",3]]],[11,"vm_range","","Returns this program header\'s virtual memory range",15,[[],["range",3]]],[11,"executable","","Sets the executable flag",15,[[]]],[11,"write","","Sets the write flag",15,[[]]],[11,"read","","Sets the read flag",15,[[]]],[11,"is_executable","","Whether this program header is executable",15,[[]]],[11,"is_read","","Whether this program header is readable",15,[[]]],[11,"is_write","","Whether this program header is writable",15,[[]]],[11,"parse","","",15,[[["ctx",3]],[["result",6],["vec",3]]]],[0,"section_header","goblin::elf","",null,null],[3,"SectionHeader","goblin::elf::section_header","A unified SectionHeader - convertable to and from 32-bit…",null,null],[12,"sh_name","","Section name (string tbl index)",18,null],[12,"sh_type","","Section type",18,null],[12,"sh_flags","","Section flags",18,null],[12,"sh_addr","","Section virtual addr at execution",18,null],[12,"sh_offset","","Section file offset",18,null],[12,"sh_size","","Section size in bytes",18,null],[12,"sh_link","","Link to another section",18,null],[12,"sh_info","","Additional section information",18,null],[12,"sh_addralign","","Section alignment",18,null],[12,"sh_entsize","","Entry size if section holds table",18,null],[5,"sht_to_str","","",null,[[]]],[5,"shf_to_str","","",null,[[]]],[0,"section_header32","","",null,null],[3,"SectionHeader","goblin::elf::section_header::section_header32","Section Headers are typically used by humans and static…",null,null],[12,"sh_name","","Section name (string tbl index)",19,null],[12,"sh_type","","Section type",19,null],[12,"sh_flags","","Section flags",19,null],[12,"sh_addr","","Section virtual addr at execution",19,null],[12,"sh_offset","","Section file offset",19,null],[12,"sh_size","","Section size in bytes",19,null],[12,"sh_link","","Link to another section",19,null],[12,"sh_info","","Additional section information",19,null],[12,"sh_addralign","","Section alignment",19,null],[12,"sh_entsize","","Entry size if section holds table",19,null],[17,"SIZEOF_SHDR","","",null,null],[11,"from_bytes","","",19,[[],[["sectionheader",3],["vec",3]]]],[11,"from_fd","","",19,[[["file",3]],[["vec",3],["result",6]]]],[0,"section_header64","goblin::elf::section_header","",null,null],[3,"SectionHeader","goblin::elf::section_header::section_header64","Section Headers are typically used by humans and static…",null,null],[12,"sh_name","","Section name (string tbl index)",20,null],[12,"sh_type","","Section type",20,null],[12,"sh_flags","","Section flags",20,null],[12,"sh_addr","","Section virtual addr at execution",20,null],[12,"sh_offset","","Section file offset",20,null],[12,"sh_size","","Section size in bytes",20,null],[12,"sh_link","","Link to another section",20,null],[12,"sh_info","","Additional section information",20,null],[12,"sh_addralign","","Section alignment",20,null],[12,"sh_entsize","","Entry size if section holds table",20,null],[17,"SIZEOF_SHDR","","",null,null],[11,"from_bytes","","",20,[[],[["vec",3],["sectionheader",3]]]],[11,"from_fd","","",20,[[["file",3]],[["vec",3],["result",6]]]],[17,"SHN_UNDEF","goblin::elf::section_header","Undefined section.",null,null],[17,"SHN_LORESERVE","","Start of reserved indices.",null,null],[17,"SHN_LOPROC","","Start of processor-specific.",null,null],[17,"SHN_BEFORE","","Order section before all others (Solaris).",null,null],[17,"SHN_AFTER","","Order section after all others (Solaris).",null,null],[17,"SHN_HIPROC","","End of processor-specific.",null,null],[17,"SHN_LOOS","","Start of OS-specific.",null,null],[17,"SHN_HIOS","","End of OS-specific.",null,null],[17,"SHN_ABS","","Associated symbol is absolute.",null,null],[17,"SHN_COMMON","","Associated symbol is common.",null,null],[17,"SHN_XINDEX","","Index is in extra table.",null,null],[17,"SHN_HIRESERVE","","End of reserved indices.",null,null],[17,"SHT_NULL","","Section header table entry unused.",null,null],[17,"SHT_PROGBITS","","Program data.",null,null],[17,"SHT_SYMTAB","","Symbol table.",null,null],[17,"SHT_STRTAB","","String table.",null,null],[17,"SHT_RELA","","Relocation entries with addends.",null,null],[17,"SHT_HASH","","Symbol hash table.",null,null],[17,"SHT_DYNAMIC","","Dynamic linking information.",null,null],[17,"SHT_NOTE","","Notes.",null,null],[17,"SHT_NOBITS","","Program space with no data (bss).",null,null],[17,"SHT_REL","","Relocation entries, no addends.",null,null],[17,"SHT_SHLIB","","Reserved.",null,null],[17,"SHT_DYNSYM","","Dynamic linker symbol table.",null,null],[17,"SHT_INIT_ARRAY","","Array of constructors.",null,null],[17,"SHT_FINI_ARRAY","","Array of destructors.",null,null],[17,"SHT_PREINIT_ARRAY","","Array of pre-constructors.",null,null],[17,"SHT_GROUP","","Section group.",null,null],[17,"SHT_SYMTAB_SHNDX","","Extended section indeces.",null,null],[17,"SHT_NUM","","Number of defined types.",null,null],[17,"SHT_LOOS","","Start OS-specific.",null,null],[17,"SHT_GNU_ATTRIBUTES","","Object attributes.",null,null],[17,"SHT_GNU_HASH","","GNU-style hash table.",null,null],[17,"SHT_GNU_LIBLIST","","Prelink library list.",null,null],[17,"SHT_CHECKSUM","","Checksum for DSO content.",null,null],[17,"SHT_LOSUNW","","Sun-specific low bound.",null,null],[17,"SHT_SUNW_MOVE","","",null,null],[17,"SHT_SUNW_COMDAT","","",null,null],[17,"SHT_SUNW_SYMINFO","","",null,null],[17,"SHT_GNU_VERDEF","","Version definition section.",null,null],[17,"SHT_GNU_VERNEED","","Version needs section.",null,null],[17,"SHT_GNU_VERSYM","","Version symbol table.",null,null],[17,"SHT_HISUNW","","Sun-specific high bound.",null,null],[17,"SHT_HIOS","","End OS-specific type.",null,null],[17,"SHT_LOPROC","","Start of processor-specific.",null,null],[17,"SHT_HIPROC","","End of processor-specific.",null,null],[17,"SHT_LOUSER","","Start of application-specific.",null,null],[17,"SHT_HIUSER","","End of application-specific.",null,null],[17,"SHF_WRITE","","Writable.",null,null],[17,"SHF_ALLOC","","Occupies memory during execution.",null,null],[17,"SHF_EXECINSTR","","Executable.",null,null],[17,"SHF_MERGE","","Might be merged.",null,null],[17,"SHF_STRINGS","","Contains nul-terminated strings.",null,null],[17,"SHF_INFO_LINK","","`sh_info\' contains SHT index.",null,null],[17,"SHF_LINK_ORDER","","Preserve order after combining.",null,null],[17,"SHF_OS_NONCONFORMING","","Non-standard OS specific handling required.",null,null],[17,"SHF_GROUP","","Section is member of a group.",null,null],[17,"SHF_TLS","","Section hold thread-local data.",null,null],[17,"SHF_COMPRESSED","","Section with compressed data.",null,null],[17,"SHF_MASKOS","","OS-specific..",null,null],[17,"SHF_MASKPROC","","Processor-specific.",null,null],[17,"SHF_ORDERED","","Special ordering requirement (Solaris).",null,null],[17,"SHF_NUM_REGULAR_FLAGS","","Number of \\\"regular\\\" section header flags",null,null],[17,"SHF_FLAGS","","",null,null],[11,"size","","Return the size of the underlying program header, given a…",18,[[["ctx",3]]]],[11,"new","","",18,[[]]],[11,"file_range","","Returns this section header\'s file offset range",18,[[],["range",3]]],[11,"vm_range","","Returns this section header\'s virtual memory range",18,[[],["range",3]]],[11,"parse","","Parse `count` section headers from `bytes` at `offset`,…",18,[[["ctx",3]],[["vec",3],["result",6]]]],[11,"check_size","","",18,[[],["result",6]]],[11,"is_relocation","","",18,[[]]],[11,"is_executable","","",18,[[]]],[11,"is_writable","","",18,[[]]],[11,"is_alloc","","",18,[[]]],[0,"sym","goblin::elf","",null,null],[3,"Sym","goblin::elf::sym","A unified Sym definition - convertible to and from 32-bit…",null,null],[12,"st_name","","",21,null],[12,"st_info","","",21,null],[12,"st_other","","",21,null],[12,"st_shndx","","",21,null],[12,"st_value","","",21,null],[12,"st_size","","",21,null],[3,"Symtab","","An ELF symbol table, allowing lazy iteration over symbols",null,null],[3,"SymIterator","","An iterator over symbols in an ELF symbol table",null,null],[5,"st_bind","","Get the ST bind.",null,[[]]],[5,"st_type","","Get the ST type.",null,[[]]],[5,"st_visibility","","Get the ST visibility.",null,[[]]],[5,"is_import","","Is this information defining an import?",null,[[]]],[5,"get_type","","Convenience function to get the &\'static str type from the…",null,[[]]],[5,"bind_to_str","","Get the string for some bind.",null,[[]]],[5,"type_to_str","","Get the string for some type.",null,[[]]],[5,"visibility_to_str","","Get the string for some visibility",null,[[]]],[0,"sym32","","",null,null],[3,"Sym","goblin::elf::sym::sym32","32-bit Sym - used for both static and dynamic symbol…",null,null],[12,"st_name","","Symbol name (string tbl index)",22,null],[12,"st_value","","Symbol value",22,null],[12,"st_size","","Symbol size",22,null],[12,"st_info","","Symbol type and binding",22,null],[12,"st_other","","Symbol visibility",22,null],[12,"st_shndx","","Section index",22,null],[5,"from_raw","","SafetyThis function creates a `Sym` slice directly from a…",null,[[]]],[5,"from_fd","","",null,[[["file",3]],[["result",6],["vec",3]]]],[17,"SIZEOF_SYM","","",null,null],[11,"is_import","","Checks whether this `Sym` has `STB_GLOBAL`/`STB_WEAK` bind…",22,[[]]],[11,"is_function","","Checks whether this `Sym` has type `STT_FUNC`",22,[[]]],[0,"sym64","goblin::elf::sym","",null,null],[3,"Sym","goblin::elf::sym::sym64","64-bit Sym - used for both static and dynamic symbol…",null,null],[12,"st_name","","Symbol name (string tbl index)",23,null],[12,"st_info","","Symbol type and binding",23,null],[12,"st_other","","Symbol visibility",23,null],[12,"st_shndx","","Section index",23,null],[12,"st_value","","Symbol value",23,null],[12,"st_size","","Symbol size",23,null],[5,"from_raw","","SafetyThis function creates a `Sym` slice directly from a…",null,[[]]],[5,"from_fd","","",null,[[["file",3]],[["vec",3],["result",6]]]],[17,"SIZEOF_SYM","","",null,null],[11,"is_import","","Checks whether this `Sym` has `STB_GLOBAL`/`STB_WEAK` bind…",23,[[]]],[11,"is_function","","Checks whether this `Sym` has type `STT_FUNC`",23,[[]]],[17,"STB_LOCAL","goblin::elf::sym","=== Sym bindings === Local symbol.",null,null],[17,"STB_GLOBAL","","Global symbol.",null,null],[17,"STB_WEAK","","Weak symbol.",null,null],[17,"STB_NUM","","Number of defined types..",null,null],[17,"STB_LOOS","","Start of OS-specific.",null,null],[17,"STB_GNU_UNIQUE","","Unique symbol..",null,null],[17,"STB_HIOS","","End of OS-specific.",null,null],[17,"STB_LOPROC","","Start of processor-specific.",null,null],[17,"STB_HIPROC","","End of processor-specific.",null,null],[17,"STT_NOTYPE","","=== Sym types === Symbol type is unspecified.",null,null],[17,"STT_OBJECT","","Symbol is a data object.",null,null],[17,"STT_FUNC","","Symbol is a code object.",null,null],[17,"STT_SECTION","","Symbol associated with a section.",null,null],[17,"STT_FILE","","Symbol\'s name is file name.",null,null],[17,"STT_COMMON","","Symbol is a common data object.",null,null],[17,"STT_TLS","","Symbol is thread-local data object.",null,null],[17,"STT_NUM","","Number of defined types.",null,null],[17,"STT_LOOS","","Start of OS-specific.",null,null],[17,"STT_GNU_IFUNC","","Symbol is indirect code object.",null,null],[17,"STT_HIOS","","End of OS-specific.",null,null],[17,"STT_LOPROC","","Start of processor-specific.",null,null],[17,"STT_HIPROC","","End of processor-specific.",null,null],[17,"STV_DEFAULT","","=== Sym visibility === Default: Visibility is specified by…",null,null],[17,"STV_INTERNAL","","Internal: use of this attribute is currently reserved.",null,null],[17,"STV_HIDDEN","","Hidden: Not visible to other components, necessarily…",null,null],[17,"STV_PROTECTED","","Protected: Symbol defined in current component is visible…",null,null],[17,"STV_EXPORTED","","Exported: ensures a symbol remains global, cannot be…",null,null],[17,"STV_SINGLETON","","Singleton: ensures a symbol remains global, and that a…",null,null],[17,"STV_ELIMINATE","","Eliminate: extends the hidden attribute. Not written in…",null,null],[11,"size","","",21,[[["container",4]]]],[11,"is_import","","Checks whether this `Sym` has `STB_GLOBAL`/`STB_WEAK` bind…",21,[[]]],[11,"is_function","","Checks whether this `Sym` has type `STT_FUNC`",21,[[]]],[11,"st_bind","","Get the ST bind.",21,[[]]],[11,"st_type","","Get the ST type.",21,[[]]],[11,"st_visibility","","Get the ST visibility.",21,[[]]],[11,"parse","","Parse `count` vector of ELF symbols from `offset`",21,[[["ctx",3]],[["result",6],["vec",3]]]],[11,"parse","","Parse a table of `count` ELF symbols from `offset`.",24,[[["ctx",3]],[["result",6],["symtab",3]]]],[11,"get","","Try to parse a single symbol from the binary, at `index`.",24,[[],[["option",4],["sym",3]]]],[11,"len","","The number of symbols in the table.",24,[[]]],[11,"is_empty","","Returns true if table has no symbols.",24,[[]]],[11,"iter","","Iterate over all symbols.",24,[[],["symiterator",3]]],[11,"to_vec","","Parse all symbols into a vector.",24,[[],[["vec",3],["sym",3]]]],[0,"dynamic","goblin::elf","",null,null],[3,"Dyn","goblin::elf::dynamic","",null,null],[12,"d_tag","","",25,null],[12,"d_val","","",25,null],[3,"Dynamic","","",null,null],[12,"dyns","","",26,null],[12,"info","","",26,null],[3,"DynamicInfo","","Important dynamic linking info generated via a single pass…",null,null],[12,"rela","","",27,null],[12,"relasz","","",27,null],[12,"relaent","","",27,null],[12,"relacount","","",27,null],[12,"rel","","",27,null],[12,"relsz","","",27,null],[12,"relent","","",27,null],[12,"relcount","","",27,null],[12,"gnu_hash","","",27,null],[12,"hash","","",27,null],[12,"strtab","","",27,null],[12,"strsz","","",27,null],[12,"symtab","","",27,null],[12,"syment","","",27,null],[12,"pltgot","","",27,null],[12,"pltrelsz","","",27,null],[12,"pltrel","","",27,null],[12,"jmprel","","",27,null],[12,"verneed","","",27,null],[12,"verneednum","","",27,null],[12,"versym","","",27,null],[12,"init","","",27,null],[12,"fini","","",27,null],[12,"init_array","","",27,null],[12,"init_arraysz","","",27,null],[12,"fini_array","","",27,null],[12,"fini_arraysz","","",27,null],[12,"needed_count","","",27,null],[12,"flags","","",27,null],[12,"flags_1","","",27,null],[12,"soname","","",27,null],[12,"textrel","","",27,null],[5,"tag_to_str","","Converts a tag to its string representation.",null,[[]]],[5,"df_tag_to_str","","",null,[[]]],[5,"df_1_tag_to_str","","",null,[[]]],[0,"dyn32","","",null,null],[3,"Dyn","goblin::elf::dynamic::dyn32","An entry in the dynamic array",null,null],[12,"d_tag","","Dynamic entry type",28,null],[12,"d_val","","Integer value",28,null],[3,"DynamicInfo","","Important dynamic linking info generated via a single pass…",null,null],[12,"rela","","",29,null],[12,"relasz","","",29,null],[12,"relaent","","",29,null],[12,"relacount","","",29,null],[12,"rel","","",29,null],[12,"relsz","","",29,null],[12,"relent","","",29,null],[12,"relcount","","",29,null],[12,"gnu_hash","","",29,null],[12,"hash","","",29,null],[12,"strtab","","",29,null],[12,"strsz","","",29,null],[12,"symtab","","",29,null],[12,"syment","","",29,null],[12,"pltgot","","",29,null],[12,"pltrelsz","","",29,null],[12,"pltrel","","",29,null],[12,"jmprel","","",29,null],[12,"verneed","","",29,null],[12,"verneednum","","",29,null],[12,"versym","","",29,null],[12,"init","","",29,null],[12,"fini","","",29,null],[12,"init_array","","",29,null],[12,"init_arraysz","","",29,null],[12,"fini_array","","",29,null],[12,"fini_arraysz","","",29,null],[12,"needed_count","","",29,null],[12,"flags","","",29,null],[12,"flags_1","","",29,null],[12,"soname","","",29,null],[12,"textrel","","",29,null],[5,"from_fd","","Returns a vector of dynamic entries from the given fd and…",null,[[["file",3]],[["result",6],["option",4]]]],[5,"from_raw","","Given a bias and a memory address (typically for a…",null,[[]]],[5,"from_phdrs","","Maybe gets and returns the dynamic array with the same…",null,[[],["option",4]]],[5,"get_needed","","Gets the needed libraries from the `_DYNAMIC` array, with…",null,[[],["vec",3]]],[17,"SIZEOF_DYN","","",null,null],[11,"update","","",29,[[["dyn",3]]]],[11,"new","","",29,[[],["dynamicinfo",3]]],[0,"dyn64","goblin::elf::dynamic","",null,null],[3,"Dyn","goblin::elf::dynamic::dyn64","An entry in the dynamic array",null,null],[12,"d_tag","","Dynamic entry type",30,null],[12,"d_val","","Integer value",30,null],[3,"DynamicInfo","","Important dynamic linking info generated via a single pass…",null,null],[12,"rela","","",31,null],[12,"relasz","","",31,null],[12,"relaent","","",31,null],[12,"relacount","","",31,null],[12,"rel","","",31,null],[12,"relsz","","",31,null],[12,"relent","","",31,null],[12,"relcount","","",31,null],[12,"gnu_hash","","",31,null],[12,"hash","","",31,null],[12,"strtab","","",31,null],[12,"strsz","","",31,null],[12,"symtab","","",31,null],[12,"syment","","",31,null],[12,"pltgot","","",31,null],[12,"pltrelsz","","",31,null],[12,"pltrel","","",31,null],[12,"jmprel","","",31,null],[12,"verneed","","",31,null],[12,"verneednum","","",31,null],[12,"versym","","",31,null],[12,"init","","",31,null],[12,"fini","","",31,null],[12,"init_array","","",31,null],[12,"init_arraysz","","",31,null],[12,"fini_array","","",31,null],[12,"fini_arraysz","","",31,null],[12,"needed_count","","",31,null],[12,"flags","","",31,null],[12,"flags_1","","",31,null],[12,"soname","","",31,null],[12,"textrel","","",31,null],[5,"from_fd","","Returns a vector of dynamic entries from the given fd and…",null,[[["file",3]],[["option",4],["result",6]]]],[5,"from_raw","","Given a bias and a memory address (typically for a…",null,[[]]],[5,"from_phdrs","","Maybe gets and returns the dynamic array with the same…",null,[[],["option",4]]],[5,"get_needed","","Gets the needed libraries from the `_DYNAMIC` array, with…",null,[[],["vec",3]]],[17,"SIZEOF_DYN","","",null,null],[11,"update","","",31,[[["dyn",3]]]],[11,"new","","",31,[[],["dynamicinfo",3]]],[17,"DT_NULL","goblin::elf::dynamic","Marks end of dynamic section",null,null],[17,"DT_NEEDED","","Name of needed library",null,null],[17,"DT_PLTRELSZ","","Size in bytes of PLT relocs",null,null],[17,"DT_PLTGOT","","Processor defined value",null,null],[17,"DT_HASH","","Address of symbol hash table",null,null],[17,"DT_STRTAB","","Address of string table",null,null],[17,"DT_SYMTAB","","Address of symbol table",null,null],[17,"DT_RELA","","Address of Rela relocs",null,null],[17,"DT_RELASZ","","Total size of Rela relocs",null,null],[17,"DT_RELAENT","","Size of one Rela reloc",null,null],[17,"DT_STRSZ","","Size of string table",null,null],[17,"DT_SYMENT","","Size of one symbol table entry",null,null],[17,"DT_INIT","","Address of init function",null,null],[17,"DT_FINI","","Address of termination function",null,null],[17,"DT_SONAME","","Name of shared object",null,null],[17,"DT_RPATH","","Library search path (deprecated)",null,null],[17,"DT_SYMBOLIC","","Start symbol search here",null,null],[17,"DT_REL","","Address of Rel relocs",null,null],[17,"DT_RELSZ","","Total size of Rel relocs",null,null],[17,"DT_RELENT","","Size of one Rel reloc",null,null],[17,"DT_PLTREL","","Type of reloc in PLT",null,null],[17,"DT_DEBUG","","For debugging; unspecified",null,null],[17,"DT_TEXTREL","","Reloc might modify .text",null,null],[17,"DT_JMPREL","","Address of PLT relocs",null,null],[17,"DT_BIND_NOW","","Process relocations of object",null,null],[17,"DT_INIT_ARRAY","","Array with addresses of init fct",null,null],[17,"DT_FINI_ARRAY","","Array with addresses of fini fct",null,null],[17,"DT_INIT_ARRAYSZ","","Size in bytes of DT_INIT_ARRAY",null,null],[17,"DT_FINI_ARRAYSZ","","Size in bytes of DT_FINI_ARRAY",null,null],[17,"DT_RUNPATH","","Library search path",null,null],[17,"DT_FLAGS","","Flags for the object being loaded",null,null],[17,"DT_ENCODING","","Start of encoded range",null,null],[17,"DT_PREINIT_ARRAY","","Array with addresses of preinit fct",null,null],[17,"DT_PREINIT_ARRAYSZ","","size in bytes of DT_PREINIT_ARRAY",null,null],[17,"DT_NUM","","Number used",null,null],[17,"DT_LOOS","","Start of OS-specific",null,null],[17,"DT_HIOS","","End of OS-specific",null,null],[17,"DT_LOPROC","","Start of processor-specific",null,null],[17,"DT_HIPROC","","End of processor-specific",null,null],[17,"DT_ADDRRNGLO","","DT_* entries which fall between DT_ADDRRNGHI &…",null,null],[17,"DT_GNU_HASH","","GNU-style hash table",null,null],[17,"DT_TLSDESC_PLT","","",null,null],[17,"DT_TLSDESC_GOT","","",null,null],[17,"DT_GNU_CONFLICT","","Start of conflict section",null,null],[17,"DT_GNU_LIBLIST","","Library list",null,null],[17,"DT_CONFIG","","Configuration information",null,null],[17,"DT_DEPAUDIT","","Dependency auditing",null,null],[17,"DT_AUDIT","","Object auditing",null,null],[17,"DT_PLTPAD","","PLT padding",null,null],[17,"DT_MOVETAB","","Move table",null,null],[17,"DT_SYMINFO","","Syminfo table",null,null],[17,"DT_ADDRRNGHI","","",null,null],[17,"DT_ADDRNUM","","",null,null],[17,"DT_VERSYM","","The versioning entry types. The next are defined as part…",null,null],[17,"DT_RELACOUNT","","",null,null],[17,"DT_RELCOUNT","","",null,null],[17,"DT_FLAGS_1","","State flags, see DF_1_* below",null,null],[17,"DT_VERDEF","","Address of version definition table",null,null],[17,"DT_VERDEFNUM","","Number of version definitions",null,null],[17,"DT_VERNEED","","Address of table with needed versions",null,null],[17,"DT_VERNEEDNUM","","Number of needed versions",null,null],[17,"DF_ORIGIN","","Object may use DF_ORIGIN.",null,null],[17,"DF_SYMBOLIC","","Symbol resolutions starts here.",null,null],[17,"DF_TEXTREL","","Object contains text relocations.",null,null],[17,"DF_BIND_NOW","","No lazy binding for this object.",null,null],[17,"DF_STATIC_TLS","","Module uses the static TLS model.",null,null],[17,"DF_1_NOW","","=== State flags === selectable in the `d_un.d_val` element…",null,null],[17,"DF_1_GLOBAL","","Set RTLD_GLOBAL for this object.",null,null],[17,"DF_1_GROUP","","Set RTLD_GROUP for this object.",null,null],[17,"DF_1_NODELETE","","Set RTLD_NODELETE for this object.",null,null],[17,"DF_1_LOADFLTR","","Trigger filtee loading at runtime.",null,null],[17,"DF_1_INITFIRST","","Set RTLD_INITFIRST for this object.",null,null],[17,"DF_1_NOOPEN","","Set RTLD_NOOPEN for this object.",null,null],[17,"DF_1_ORIGIN","","$ORIGIN must be handled.",null,null],[17,"DF_1_DIRECT","","Direct binding enabled.",null,null],[17,"DF_1_TRANS","","",null,null],[17,"DF_1_INTERPOSE","","Object is used to interpose.",null,null],[17,"DF_1_NODEFLIB","","Ignore default lib search path.",null,null],[17,"DF_1_NODUMP","","Object can\'t be dldump\'ed.",null,null],[17,"DF_1_CONFALT","","Configuration alternative created.",null,null],[17,"DF_1_ENDFILTEE","","Filtee terminates filters search.",null,null],[17,"DF_1_DISPRELDNE","","Disp reloc applied at build time.",null,null],[17,"DF_1_DISPRELPND","","Disp reloc applied at run-time.",null,null],[17,"DF_1_NODIRECT","","Object has no-direct binding.",null,null],[17,"DF_1_IGNMULDEF","","",null,null],[17,"DF_1_NOKSYMS","","",null,null],[17,"DF_1_NOHDR","","",null,null],[17,"DF_1_EDITED","","Object is modified after built.",null,null],[17,"DF_1_NORELOC","","",null,null],[17,"DF_1_SYMINTPOSE","","Object has individual interposers.",null,null],[17,"DF_1_GLOBAUDIT","","Global auditing required.",null,null],[17,"DF_1_SINGLETON","","Singleton dyn are used.",null,null],[17,"DF_1_PIE","","Object is a Position Independent Executable (PIE).",null,null],[11,"size","","",25,[[["container",4]]]],[11,"parse","","Returns a vector of dynamic entries from the underlying…",26,[[["ctx",3]],[["option",4],["result",6]]]],[11,"get_libraries","","",26,[[["strtab",3]],["vec",3]]],[11,"update","","",27,[[["dyn",3]]]],[11,"new","","",27,[[],["dynamicinfo",3]]],[0,"reloc","goblin::elf","Relocation computationsThe following notation is used to…",null,null],[3,"Reloc","goblin::elf::reloc","A unified ELF relocation structure",null,null],[12,"r_offset","","Address",32,null],[12,"r_addend","","Addend",32,null],[12,"r_sym","","The index into the corresponding symbol table - either…",32,null],[12,"r_type","","The relocation type",32,null],[3,"RelocSection","","An ELF section containing relocations, allowing lazy…",null,null],[3,"RelocIterator","","",null,null],[5,"r_to_str","","",null,[[]]],[0,"reloc32","","",null,null],[3,"Rela","goblin::elf::reloc::reloc32","Relocation with an explicit addend",null,null],[12,"r_offset","","Address",33,null],[12,"r_info","","Relocation type and symbol index",33,null],[12,"r_addend","","Addend",33,null],[3,"Rel","","Relocation without an addend",null,null],[12,"r_offset","","address",34,null],[12,"r_info","","relocation type and symbol address",34,null],[5,"r_sym","","",null,[[]]],[5,"r_type","","",null,[[]]],[5,"r_info","","",null,[[]]],[5,"from_raw_rela","","Gets the rela entries given a rela pointer and the size of…",null,[[]]],[5,"from_raw_rel","","Gets the rel entries given a rel pointer and the size of…",null,[[]]],[5,"from_fd","","",null,[[["file",3]],[["result",6],["vec",3]]]],[17,"SIZEOF_RELA","","",null,null],[17,"SIZEOF_REL","","",null,null],[0,"reloc64","goblin::elf::reloc","",null,null],[3,"Rela","goblin::elf::reloc::reloc64","Relocation with an explicit addend",null,null],[12,"r_offset","","Address",35,null],[12,"r_info","","Relocation type and symbol index",35,null],[12,"r_addend","","Addend",35,null],[3,"Rel","","Relocation without an addend",null,null],[12,"r_offset","","address",36,null],[12,"r_info","","relocation type and symbol address",36,null],[5,"r_sym","","",null,[[]]],[5,"r_type","","",null,[[]]],[5,"r_info","","",null,[[]]],[5,"from_raw_rela","","Gets the rela entries given a rela pointer and the size of…",null,[[]]],[5,"from_raw_rel","","Gets the rel entries given a rel pointer and the size of…",null,[[]]],[5,"from_fd","","",null,[[["file",3]],[["vec",3],["result",6]]]],[17,"SIZEOF_RELA","","",null,null],[17,"SIZEOF_REL","","",null,null],[17,"R_X86_64_NONE","goblin::elf::reloc","No reloc.",null,null],[17,"R_X86_64_64","","Direct 64 bit.",null,null],[17,"R_X86_64_PC32","","PC relative 32 bit signed.",null,null],[17,"R_X86_64_GOT32","","32 bit GOT entry.",null,null],[17,"R_X86_64_PLT32","","32 bit PLT address.",null,null],[17,"R_X86_64_COPY","","Copy symbol at runtime.",null,null],[17,"R_X86_64_GLOB_DAT","","Create GOT entry.",null,null],[17,"R_X86_64_JUMP_SLOT","","Create PLT entry.",null,null],[17,"R_X86_64_RELATIVE","","Adjust by program base.",null,null],[17,"R_X86_64_GOTPCREL","","32 bit signed PC relative offset to GOT.",null,null],[17,"R_X86_64_32","","Direct 32 bit zero extended.",null,null],[17,"R_X86_64_32S","","Direct 32 bit sign extended.",null,null],[17,"R_X86_64_16","","Direct 16 bit zero extended.",null,null],[17,"R_X86_64_PC16","","16 bit sign extended pc relative.",null,null],[17,"R_X86_64_8","","Direct 8 bit sign extended.",null,null],[17,"R_X86_64_PC8","","8 bit sign extended pc relative.",null,null],[17,"R_X86_64_DTPMOD64","","ID of module containing symbol.",null,null],[17,"R_X86_64_DTPOFF64","","Offset in module\'s TLS block.",null,null],[17,"R_X86_64_TPOFF64","","Offset in initial TLS block.",null,null],[17,"R_X86_64_TLSGD","","32 bit signed PC relative offset to two GOT entries for GD…",null,null],[17,"R_X86_64_TLSLD","","32 bit signed PC relative offset to two GOT entries for LD…",null,null],[17,"R_X86_64_DTPOFF32","","Offset in TLS block.",null,null],[17,"R_X86_64_GOTTPOFF","","32 bit signed PC relative offset to GOT entry for IE symbol.",null,null],[17,"R_X86_64_TPOFF32","","Offset in initial TLS block.",null,null],[17,"R_X86_64_PC64","","PC relative 64 bit.",null,null],[17,"R_X86_64_GOTOFF64","","64 bit offset to GOT.",null,null],[17,"R_X86_64_GOTPC32","","32 bit signed pc relative offset to GOT.",null,null],[17,"R_X86_64_GOT64","","64-bit GOT entry offset.",null,null],[17,"R_X86_64_GOTPCREL64","","64-bit PC relative offset to GOT entry.",null,null],[17,"R_X86_64_GOTPC64","","64-bit PC relative offset to GOT.",null,null],[17,"R_X86_64_GOTPLT64","","like GOT64, says PLT entry needed.",null,null],[17,"R_X86_64_PLTOFF64","","64-bit GOT relative offset to PLT entry.",null,null],[17,"R_X86_64_SIZE32","","Size of symbol plus 32-bit addend.",null,null],[17,"R_X86_64_SIZE64","","Size of symbol plus 64-bit addend.",null,null],[17,"R_X86_64_GOTPC32_TLSDESC","","GOT offset for TLS descriptor..",null,null],[17,"R_X86_64_TLSDESC_CALL","","Marker for call through TLS descriptor..",null,null],[17,"R_X86_64_TLSDESC","","TLS descriptor..",null,null],[17,"R_X86_64_IRELATIVE","","Adjust indirectly by program base.",null,null],[17,"R_X86_64_RELATIVE64","","64-bit adjust by program base.",null,null],[17,"R_X86_64_GOTPCRELX","","Load from 32 bit signed pc relative offset to GOT entry…",null,null],[17,"R_X86_64_REX_GOTPCRELX","","Load from 32 bit signed pc relative offset to GOT entry…",null,null],[17,"R_X86_64_NUM","","",null,null],[17,"R_386_NONE","","No reloc",null,null],[17,"R_386_32","","Direct 32 bit",null,null],[17,"R_386_PC32","","PC relative 32 bit",null,null],[17,"R_386_GOT32","","32 bit GOT entry",null,null],[17,"R_386_PLT32","","32 bit PLT address",null,null],[17,"R_386_COPY","","Copy symbol at runtime",null,null],[17,"R_386_GLOB_DAT","","Create GOT entry",null,null],[17,"R_386_JMP_SLOT","","Create PLT entry",null,null],[17,"R_386_RELATIVE","","Adjust by program base",null,null],[17,"R_386_GOTOFF","","32 bit offset to GOT",null,null],[17,"R_386_GOTPC","","32 bit PC relative offset to GOT",null,null],[17,"R_386_32PLT","","",null,null],[17,"R_386_TLS_TPOFF","","Offset in static TLS block",null,null],[17,"R_386_TLS_IE","","Address of GOT entry for static TLS block offset",null,null],[17,"R_386_TLS_GOTIE","","GOT entry for static TLS block offset",null,null],[17,"R_386_TLS_LE","","Offset relative to static TLS block",null,null],[17,"R_386_TLS_GD","","Direct 32 bit for GNU version of general dynamic thread…",null,null],[17,"R_386_TLS_LDM","","Direct 32 bit for GNU version of local dynamic thread…",null,null],[17,"R_386_16","","",null,null],[17,"R_386_PC16","","",null,null],[17,"R_386_8","","",null,null],[17,"R_386_PC8","","",null,null],[17,"R_386_TLS_GD_32","","Direct 32 bit for general dynamic thread local data",null,null],[17,"R_386_TLS_GD_PUSH","","Tag for pushl in GD TLS code",null,null],[17,"R_386_TLS_GD_CALL","","Relocation for call to __tls_get_addr()",null,null],[17,"R_386_TLS_GD_POP","","Tag for popl in GD TLS code",null,null],[17,"R_386_TLS_LDM_32","","Direct 32 bit for local dynamic thread local data in LE code",null,null],[17,"R_386_TLS_LDM_PUSH","","Tag for pushl in LDM TLS code",null,null],[17,"R_386_TLS_LDM_CALL","","Relocation for call to __tls_get_addr() in LDM code",null,null],[17,"R_386_TLS_LDM_POP","","Tag for popl in LDM TLS code",null,null],[17,"R_386_TLS_LDO_32","","Offset relative to TLS block",null,null],[17,"R_386_TLS_IE_32","","GOT entry for negated static TLS block offset",null,null],[17,"R_386_TLS_LE_32","","Negated offset relative to static TLS block",null,null],[17,"R_386_TLS_DTPMOD32","","ID of module containing symbol",null,null],[17,"R_386_TLS_DTPOFF32","","Offset in TLS block",null,null],[17,"R_386_TLS_TPOFF32","","Negated offset in static TLS block",null,null],[17,"R_386_SIZE32","","32-bit symbol size",null,null],[17,"R_386_TLS_GOTDESC","","GOT offset for TLS descriptor.",null,null],[17,"R_386_TLS_DESC_CALL","","Marker of call through TLS descriptor for relaxation",null,null],[17,"R_386_TLS_DESC","","TLS descriptor containing pointer to code and to argument,…",null,null],[17,"R_386_IRELATIVE","","Adjust indirectly by program base",null,null],[17,"R_386_GOT32X","","Load from 32 bit GOT entry, relaxable",null,null],[17,"R_386_NUM","","Keep this the last entry",null,null],[17,"R_AARCH64_NONE","","No relocation",null,null],[17,"R_AARCH64_P32_ABS32","","Direct 32 bit",null,null],[17,"R_AARCH64_P32_COPY","","Copy symbol at runtime",null,null],[17,"R_AARCH64_P32_GLOB_DAT","","Create GOT entry",null,null],[17,"R_AARCH64_P32_JUMP_SLOT","","Create PLT entry",null,null],[17,"R_AARCH64_P32_RELATIVE","","Adjust by program base",null,null],[17,"R_AARCH64_P32_TLS_DTPMOD","","Module number, 32 bit",null,null],[17,"R_AARCH64_P32_TLS_DTPREL","","Module-relative offset, 32 bit",null,null],[17,"R_AARCH64_P32_TLS_TPREL","","TP-relative offset, 32 bit",null,null],[17,"R_AARCH64_P32_TLSDESC","","TLS Descriptor",null,null],[17,"R_AARCH64_P32_IRELATIVE","","STT_GNU_IFUNC relocation",null,null],[17,"R_AARCH64_ABS64","","Direct 64 bit",null,null],[17,"R_AARCH64_ABS32","","Direct 32 bit",null,null],[17,"R_AARCH64_ABS16","","Direct 16-bit",null,null],[17,"R_AARCH64_PREL64","","PC-relative 64-bit",null,null],[17,"R_AARCH64_PREL32","","PC-relative 32-bit",null,null],[17,"R_AARCH64_PREL16","","PC-relative 16-bit",null,null],[17,"R_AARCH64_MOVW_UABS_G0","","Dir. MOVZ imm. from bits 15:0",null,null],[17,"R_AARCH64_MOVW_UABS_G0_NC","","Likewise for MOVK; no check",null,null],[17,"R_AARCH64_MOVW_UABS_G1","","Dir. MOVZ imm. from bits 31:16",null,null],[17,"R_AARCH64_MOVW_UABS_G1_NC","","Likewise for MOVK; no check",null,null],[17,"R_AARCH64_MOVW_UABS_G2","","Dir. MOVZ imm. from bits 47:32",null,null],[17,"R_AARCH64_MOVW_UABS_G2_NC","","Likewise for MOVK; no check",null,null],[17,"R_AARCH64_MOVW_UABS_G3","","Dir. MOV{K,Z} imm. from 63:48",null,null],[17,"R_AARCH64_MOVW_SABS_G0","","Dir. MOV{N,Z} imm. from 15:0",null,null],[17,"R_AARCH64_MOVW_SABS_G1","","Dir. MOV{N,Z} imm. from 31:16",null,null],[17,"R_AARCH64_MOVW_SABS_G2","","Dir. MOV{N,Z} imm. from 47:32",null,null],[17,"R_AARCH64_LD_PREL_LO19","","PC-rel. LD imm. from bits 20:2",null,null],[17,"R_AARCH64_ADR_PREL_LO21","","PC-rel. ADR imm. from bits 20:0",null,null],[17,"R_AARCH64_ADR_PREL_PG_HI21","","Page-rel. ADRP imm. from 32:12",null,null],[17,"R_AARCH64_ADR_PREL_PG_HI21_NC","","Likewise; no overflow check",null,null],[17,"R_AARCH64_ADD_ABS_LO12_NC","","Dir. ADD imm. from bits 11:0",null,null],[17,"R_AARCH64_LDST8_ABS_LO12_NC","","Likewise for LD/ST; no check.",null,null],[17,"R_AARCH64_TSTBR14","","PC-rel. TBZ/TBNZ imm. from 15:2",null,null],[17,"R_AARCH64_CONDBR19","","PC-rel. cond. br. imm. from 20:2.",null,null],[17,"R_AARCH64_JUMP26","","PC-rel. B imm. from bits 27:2",null,null],[17,"R_AARCH64_CALL26","","Likewise for CALL",null,null],[17,"R_AARCH64_LDST16_ABS_LO12_NC","","Dir. ADD imm. from bits 11:1",null,null],[17,"R_AARCH64_LDST32_ABS_LO12_NC","","Likewise for bits 11:2",null,null],[17,"R_AARCH64_LDST64_ABS_LO12_NC","","Likewise for bits 11:3",null,null],[17,"R_AARCH64_MOVW_PREL_G0","","PC-rel. MOV{N,Z} imm. from 15:0",null,null],[17,"R_AARCH64_MOVW_PREL_G0_NC","","Likewise for MOVK; no check",null,null],[17,"R_AARCH64_MOVW_PREL_G1","","PC-rel. MOV{N,Z} imm. from 31:16.",null,null],[17,"R_AARCH64_MOVW_PREL_G1_NC","","Likewise for MOVK; no check",null,null],[17,"R_AARCH64_MOVW_PREL_G2","","PC-rel. MOV{N,Z} imm. from 47:32.",null,null],[17,"R_AARCH64_MOVW_PREL_G2_NC","","Likewise for MOVK; no check",null,null],[17,"R_AARCH64_MOVW_PREL_G3","","PC-rel. MOV{N,Z} imm. from 63:48.",null,null],[17,"R_AARCH64_LDST128_ABS_LO12_NC","","Dir. ADD imm. from bits 11:4",null,null],[17,"R_AARCH64_MOVW_GOTOFF_G0","","GOT-rel. off. MOV{N,Z} imm. 15:0.",null,null],[17,"R_AARCH64_MOVW_GOTOFF_G0_NC","","Likewise for MOVK; no check",null,null],[17,"R_AARCH64_MOVW_GOTOFF_G1","","GOT-rel. o. MOV{N,Z} imm. 31:16",null,null],[17,"R_AARCH64_MOVW_GOTOFF_G1_NC","","Likewise for MOVK; no check",null,null],[17,"R_AARCH64_MOVW_GOTOFF_G2","","GOT-rel. o. MOV{N,Z} imm. 47:32",null,null],[17,"R_AARCH64_MOVW_GOTOFF_G2_NC","","Likewise for MOVK; no check",null,null],[17,"R_AARCH64_MOVW_GOTOFF_G3","","GOT-rel. o. MOV{N,Z} imm. 63:48",null,null],[17,"R_AARCH64_GOTREL64","","GOT-relative 64-bit",null,null],[17,"R_AARCH64_GOTREL32","","GOT-relative 32-bit",null,null],[17,"R_AARCH64_GOT_LD_PREL19","","PC-rel. GOT off. load imm. 20:2",null,null],[17,"R_AARCH64_LD64_GOTOFF_LO15","","GOT-rel. off. LD/ST imm. 14:3",null,null],[17,"R_AARCH64_ADR_GOT_PAGE","","P-page-rel. GOT off. ADRP 32:12",null,null],[17,"R_AARCH64_LD64_GOT_LO12_NC","","Dir. GOT off. LD/ST imm. 11:3",null,null],[17,"R_AARCH64_LD64_GOTPAGE_LO15","","GOT-page-rel. GOT off. LD/ST 14:3",null,null],[17,"R_AARCH64_TLSGD_ADR_PREL21","","PC-relative ADR imm. 20:0",null,null],[17,"R_AARCH64_TLSGD_ADR_PAGE21","","page-rel. ADRP imm. 32:12",null,null],[17,"R_AARCH64_TLSGD_ADD_LO12_NC","","direct ADD imm. from 11:0",null,null],[17,"R_AARCH64_TLSGD_MOVW_G1","","GOT-rel. MOV{N,Z} 31:16",null,null],[17,"R_AARCH64_TLSGD_MOVW_G0_NC","","GOT-rel. MOVK imm. 15:0",null,null],[17,"R_AARCH64_TLSLD_ADR_PREL21","","Like 512; local dynamic model",null,null],[17,"R_AARCH64_TLSLD_ADR_PAGE21","","Like 513; local dynamic model",null,null],[17,"R_AARCH64_TLSLD_ADD_LO12_NC","","Like 514; local dynamic model",null,null],[17,"R_AARCH64_TLSLD_MOVW_G1","","Like 515; local dynamic model",null,null],[17,"R_AARCH64_TLSLD_MOVW_G0_NC","","Like 516; local dynamic model",null,null],[17,"R_AARCH64_TLSLD_LD_PREL19","","TLS PC-rel. load imm. 20:2",null,null],[17,"R_AARCH64_TLSLD_MOVW_DTPREL_G2","","TLS DTP-rel. MOV{N,Z} 47:32",null,null],[17,"R_AARCH64_TLSLD_MOVW_DTPREL_G1","","TLS DTP-rel. MOV{N,Z} 31:16",null,null],[17,"R_AARCH64_TLSLD_MOVW_DTPREL_G1_NC","","Likewise; MOVK; no check",null,null],[17,"R_AARCH64_TLSLD_MOVW_DTPREL_G0","","TLS DTP-rel. MOV{N,Z} 15:0",null,null],[17,"R_AARCH64_TLSLD_MOVW_DTPREL_G0_NC","","Likewise; MOVK; no check",null,null],[17,"R_AARCH64_TLSLD_ADD_DTPREL_HI12","","DTP-rel. ADD imm. from 23:12.",null,null],[17,"R_AARCH64_TLSLD_ADD_DTPREL_LO12","","DTP-rel. ADD imm. from 11:0",null,null],[17,"R_AARCH64_TLSLD_ADD_DTPREL_LO12_NC","","Likewise; no ovfl. check",null,null],[17,"R_AARCH64_TLSLD_LDST8_DTPREL_LO12","","DTP-rel. LD/ST imm. 11:0",null,null],[17,"R_AARCH64_TLSLD_LDST8_DTPREL_LO12_NC","","Likewise; no check",null,null],[17,"R_AARCH64_TLSLD_LDST16_DTPREL_LO12","","DTP-rel. LD/ST imm. 11:1",null,null],[17,"R_AARCH64_TLSLD_LDST16_DTPREL_LO12_NC","","Likewise; no check",null,null],[17,"R_AARCH64_TLSLD_LDST32_DTPREL_LO12","","DTP-rel. LD/ST imm. 11:2",null,null],[17,"R_AARCH64_TLSLD_LDST32_DTPREL_LO12_NC","","Likewise; no check",null,null],[17,"R_AARCH64_TLSLD_LDST64_DTPREL_LO12","","DTP-rel. LD/ST imm. 11:3",null,null],[17,"R_AARCH64_TLSLD_LDST64_DTPREL_LO12_NC","","Likewise; no check",null,null],[17,"R_AARCH64_TLSIE_MOVW_GOTTPREL_G1","","GOT-rel. MOV{N,Z} 31:16",null,null],[17,"R_AARCH64_TLSIE_MOVW_GOTTPREL_G0_NC","","GOT-rel. MOVK 15:0",null,null],[17,"R_AARCH64_TLSIE_ADR_GOTTPREL_PAGE21","","Page-rel. ADRP 32:12",null,null],[17,"R_AARCH64_TLSIE_LD64_GOTTPREL_LO12_NC","","Direct LD off. 11:3",null,null],[17,"R_AARCH64_TLSIE_LD_GOTTPREL_PREL19","","PC-rel. load imm. 20:2",null,null],[17,"R_AARCH64_TLSLE_MOVW_TPREL_G2","","TLS TP-rel. MOV{N,Z} 47:32",null,null],[17,"R_AARCH64_TLSLE_MOVW_TPREL_G1","","TLS TP-rel. MOV{N,Z} 31:16",null,null],[17,"R_AARCH64_TLSLE_MOVW_TPREL_G1_NC","","Likewise; MOVK; no check",null,null],[17,"R_AARCH64_TLSLE_MOVW_TPREL_G0","","TLS TP-rel. MOV{N,Z} 15:0",null,null],[17,"R_AARCH64_TLSLE_MOVW_TPREL_G0_NC","","Likewise; MOVK; no check",null,null],[17,"R_AARCH64_TLSLE_ADD_TPREL_HI12","","TP-rel. ADD imm. 23:12",null,null],[17,"R_AARCH64_TLSLE_ADD_TPREL_LO12","","TP-rel. ADD imm. 11:0",null,null],[17,"R_AARCH64_TLSLE_ADD_TPREL_LO12_NC","","Likewise; no ovfl. check",null,null],[17,"R_AARCH64_TLSLE_LDST8_TPREL_LO12","","TP-rel. LD/ST off. 11:0",null,null],[17,"R_AARCH64_TLSLE_LDST8_TPREL_LO12_NC","","Likewise; no ovfl. check.",null,null],[17,"R_AARCH64_TLSLE_LDST16_TPREL_LO12","","TP-rel. LD/ST off. 11:1",null,null],[17,"R_AARCH64_TLSLE_LDST16_TPREL_LO12_NC","","Likewise; no check",null,null],[17,"R_AARCH64_TLSLE_LDST32_TPREL_LO12","","TP-rel. LD/ST off. 11:2",null,null],[17,"R_AARCH64_TLSLE_LDST32_TPREL_LO12_NC","","Likewise; no check",null,null],[17,"R_AARCH64_TLSLE_LDST64_TPREL_LO12","","TP-rel. LD/ST off. 11:3",null,null],[17,"R_AARCH64_TLSLE_LDST64_TPREL_LO12_NC","","Likewise; no check",null,null],[17,"R_AARCH64_TLSDESC_LD_PREL19","","PC-rel. load immediate 20:2",null,null],[17,"R_AARCH64_TLSDESC_ADR_PREL21","","PC-rel. ADR immediate 20:0",null,null],[17,"R_AARCH64_TLSDESC_ADR_PAGE21","","Page-rel. ADRP imm. 32:12",null,null],[17,"R_AARCH64_TLSDESC_LD64_LO12","","Direct LD off. from 11:3",null,null],[17,"R_AARCH64_TLSDESC_ADD_LO12","","Direct ADD imm. from 11:0",null,null],[17,"R_AARCH64_TLSDESC_OFF_G1","","GOT-rel. MOV{N,Z} imm. 31:16",null,null],[17,"R_AARCH64_TLSDESC_OFF_G0_NC","","GOT-rel. MOVK imm. 15:0; no ck",null,null],[17,"R_AARCH64_TLSDESC_LDR","","Relax LDR",null,null],[17,"R_AARCH64_TLSDESC_ADD","","Relax ADD",null,null],[17,"R_AARCH64_TLSDESC_CALL","","Relax BLR",null,null],[17,"R_AARCH64_TLSLE_LDST128_TPREL_LO12","","TP-rel. LD/ST off. 11:4",null,null],[17,"R_AARCH64_TLSLE_LDST128_TPREL_LO12_NC","","Likewise; no check",null,null],[17,"R_AARCH64_TLSLD_LDST128_DTPREL_LO12","","DTP-rel. LD/ST imm. 11:4.",null,null],[17,"R_AARCH64_TLSLD_LDST128_DTPREL_LO12_NC","","Likewise; no check",null,null],[17,"R_AARCH64_COPY","","Copy symbol at runtime",null,null],[17,"R_AARCH64_GLOB_DAT","","Create GOT entry",null,null],[17,"R_AARCH64_JUMP_SLOT","","Create PLT entry",null,null],[17,"R_AARCH64_RELATIVE","","Adjust by program base",null,null],[17,"R_AARCH64_TLS_DTPMOD","","Module number, 64 bit",null,null],[17,"R_AARCH64_TLS_DTPREL","","Module-relative offset, 64 bit",null,null],[17,"R_AARCH64_TLS_TPREL","","TP-relative offset, 64 bit",null,null],[17,"R_AARCH64_TLSDESC","","TLS Descriptor",null,null],[17,"R_AARCH64_IRELATIVE","","STT_GNU_IFUNC relocation",null,null],[17,"R_ARM_NONE","","No reloc",null,null],[17,"R_ARM_PC24","","Deprecated PC relative 26 bit branch",null,null],[17,"R_ARM_ABS32","","Direct 32 bit",null,null],[17,"R_ARM_REL32","","PC relative 32 bit",null,null],[17,"R_ARM_PC13","","",null,null],[17,"R_ARM_ABS16","","Direct 16 bit",null,null],[17,"R_ARM_ABS12","","Direct 12 bit",null,null],[17,"R_ARM_THM_ABS5","","Direct & 0x7C (LDR, STR)",null,null],[17,"R_ARM_ABS8","","Direct 8 bit",null,null],[17,"R_ARM_SBREL32","","",null,null],[17,"R_ARM_THM_PC22","","PC relative 24 bit (Thumb32 BL)",null,null],[17,"R_ARM_THM_PC8","","PC relative & 0x3FC(Thumb16 LDR, ADD, ADR).",null,null],[17,"R_ARM_AMP_VCALL9","","",null,null],[17,"R_ARM_SWI24","","Obsolete static relocation",null,null],[17,"R_ARM_TLS_DESC","","Dynamic relocation",null,null],[17,"R_ARM_THM_SWI8","","Reserved",null,null],[17,"R_ARM_XPC25","","Reserved",null,null],[17,"R_ARM_THM_XPC22","","Reserved",null,null],[17,"R_ARM_TLS_DTPMOD32","","ID of module containing symbol",null,null],[17,"R_ARM_TLS_DTPOFF32","","Offset in TLS block",null,null],[17,"R_ARM_TLS_TPOFF32","","Offset in static TLS block",null,null],[17,"R_ARM_COPY","","Copy symbol at runtime",null,null],[17,"R_ARM_GLOB_DAT","","Create GOT entry",null,null],[17,"R_ARM_JUMP_SLOT","","Create PLT entry",null,null],[17,"R_ARM_RELATIVE","","Adjust by program base",null,null],[17,"R_ARM_GOTOFF","","32 bit offset to GOT",null,null],[17,"R_ARM_GOTPC","","32 bit PC relative offset to GOT",null,null],[17,"R_ARM_GOT32","","32 bit GOT entry",null,null],[17,"R_ARM_PLT32","","Deprecated, 32 bit PLT address",null,null],[17,"R_ARM_CALL","","PC relative 24 bit (BL, BLX)",null,null],[17,"R_ARM_JUMP24","","PC relative 24 bit (B, BL)",null,null],[17,"R_ARM_THM_JUMP24","","PC relative 24 bit (Thumb32 B.W)",null,null],[17,"R_ARM_BASE_ABS","","Adjust by program base",null,null],[17,"R_ARM_ALU_PCREL_7_0","","Obsolete",null,null],[17,"R_ARM_ALU_PCREL_15_8","","Obsolete",null,null],[17,"R_ARM_ALU_PCREL_23_15","","Obsolete",null,null],[17,"R_ARM_LDR_SBREL_11_0","","Deprecated, prog. base relative",null,null],[17,"R_ARM_ALU_SBREL_19_12","","Deprecated, prog. base relative",null,null],[17,"R_ARM_ALU_SBREL_27_20","","Deprecated, prog. base relative",null,null],[17,"R_ARM_TARGET1","","",null,null],[17,"R_ARM_SBREL31","","Program base relative",null,null],[17,"R_ARM_V4BX","","",null,null],[17,"R_ARM_TARGET2","","",null,null],[17,"R_ARM_PREL31","","32 bit PC relative",null,null],[17,"R_ARM_MOVW_ABS_NC","","Direct 16-bit (MOVW)",null,null],[17,"R_ARM_MOVT_ABS","","Direct high 16-bit (MOVT)",null,null],[17,"R_ARM_MOVW_PREL_NC","","PC relative 16-bit (MOVW)",null,null],[17,"R_ARM_MOVT_PREL","","PC relative (MOVT)",null,null],[17,"R_ARM_THM_MOVW_ABS_NC","","Direct 16 bit (Thumb32 MOVW)",null,null],[17,"R_ARM_THM_MOVT_ABS","","Direct high 16 bit (Thumb32 MOVT)",null,null],[17,"R_ARM_THM_MOVW_PREL_NC","","PC relative 16 bit (Thumb32 MOVW)",null,null],[17,"R_ARM_THM_MOVT_PREL","","PC relative high 16 bit (Thumb32 MOVT)",null,null],[17,"R_ARM_THM_JUMP19","","PC relative 20 bit (Thumb32 B.W)",null,null],[17,"R_ARM_THM_JUMP6","","PC relative X & 0x7E (Thumb16 CBZ, CBNZ)",null,null],[17,"R_ARM_THM_ALU_PREL_11_0","","PC relative 12 bit (Thumb32 ADR.W)",null,null],[17,"R_ARM_THM_PC12","","PC relative 12 bit (Thumb32 LDR{D,SB,H,SH})",null,null],[17,"R_ARM_ABS32_NOI","","Direct 32-bit",null,null],[17,"R_ARM_REL32_NOI","","PC relative 32-bit",null,null],[17,"R_ARM_ALU_PC_G0_NC","","PC relative (ADD, SUB)",null,null],[17,"R_ARM_ALU_PC_G0","","PC relative (ADD, SUB)",null,null],[17,"R_ARM_ALU_PC_G1_NC","","PC relative (ADD, SUB)",null,null],[17,"R_ARM_ALU_PC_G1","","PC relative (ADD, SUB)",null,null],[17,"R_ARM_ALU_PC_G2","","PC relative (ADD, SUB)",null,null],[17,"R_ARM_LDR_PC_G1","","PC relative (LDR,STR,LDRB,STRB)",null,null],[17,"R_ARM_LDR_PC_G2","","PC relative (LDR,STR,LDRB,STRB)",null,null],[17,"R_ARM_LDRS_PC_G0","","PC relative (STR{D,H},LDR{D,SB,H,SH})",null,null],[17,"R_ARM_LDRS_PC_G1","","PC relative (STR{D,H},LDR{D,SB,H,SH})",null,null],[17,"R_ARM_LDRS_PC_G2","","PC relative (STR{D,H},LDR{D,SB,H,SH})",null,null],[17,"R_ARM_LDC_PC_G0","","PC relative (LDC, STC)",null,null],[17,"R_ARM_LDC_PC_G1","","PC relative (LDC, STC)",null,null],[17,"R_ARM_LDC_PC_G2","","PC relative (LDC, STC)",null,null],[17,"R_ARM_ALU_SB_G0_NC","","Program base relative (ADD,SUB)",null,null],[17,"R_ARM_ALU_SB_G0","","Program base relative (ADD,SUB)",null,null],[17,"R_ARM_ALU_SB_G1_NC","","Program base relative (ADD,SUB)",null,null],[17,"R_ARM_ALU_SB_G1","","Program base relative (ADD,SUB)",null,null],[17,"R_ARM_ALU_SB_G2","","Program base relative (ADD,SUB)",null,null],[17,"R_ARM_LDR_SB_G0","","Program base relative (LDR,STR, LDRB, STRB)",null,null],[17,"R_ARM_LDR_SB_G1","","Program base relative (LDR, STR, LDRB, STRB)",null,null],[17,"R_ARM_LDR_SB_G2","","Program base relative (LDR, STR, LDRB, STRB)",null,null],[17,"R_ARM_LDRS_SB_G0","","Program base relative (LDR, STR, LDRB, STRB)",null,null],[17,"R_ARM_LDRS_SB_G1","","Program base relative (LDR, STR, LDRB, STRB)",null,null],[17,"R_ARM_LDRS_SB_G2","","Program base relative (LDR, STR, LDRB, STRB)",null,null],[17,"R_ARM_LDC_SB_G0","","Program base relative (LDC,STC)",null,null],[17,"R_ARM_LDC_SB_G1","","Program base relative (LDC,STC)",null,null],[17,"R_ARM_LDC_SB_G2","","Program base relative (LDC,STC)",null,null],[17,"R_ARM_MOVW_BREL_NC","","Program base relative 16 bit (MOVW)",null,null],[17,"R_ARM_MOVT_BREL","","Program base relative high 16 bit (MOVT)",null,null],[17,"R_ARM_MOVW_BREL","","Program base relative 16 bit (MOVW)",null,null],[17,"R_ARM_THM_MOVW_BREL_NC","","Program base relative 16 bit (Thumb32 MOVW)",null,null],[17,"R_ARM_THM_MOVT_BREL","","Program base relative high 16 bit (Thumb32 MOVT)",null,null],[17,"R_ARM_THM_MOVW_BREL","","Program base relative 16 bit (Thumb32 MOVW)",null,null],[17,"R_ARM_TLS_GOTDESC","","",null,null],[17,"R_ARM_TLS_CALL","","",null,null],[17,"R_ARM_TLS_DESCSEQ","","TLS relaxation",null,null],[17,"R_ARM_THM_TLS_CALL","","",null,null],[17,"R_ARM_PLT32_ABS","","",null,null],[17,"R_ARM_GOT_ABS","","GOT entry",null,null],[17,"R_ARM_GOT_PREL","","PC relative GOT entry",null,null],[17,"R_ARM_GOT_BREL12","","GOT entry relative to GOT origin (LDR)",null,null],[17,"R_ARM_GOTOFF12","","12 bit, GOT entry relative to GOT origin (LDR, STR)",null,null],[17,"R_ARM_GOTRELAX","","",null,null],[17,"R_ARM_GNU_VTENTRY","","",null,null],[17,"R_ARM_GNU_VTINHERIT","","",null,null],[17,"R_ARM_THM_PC11","","PC relative & 0xFFE (Thumb16 B)",null,null],[17,"R_ARM_THM_PC9","","PC relative & 0x1FE (Thumb16 B/B)",null,null],[17,"R_ARM_TLS_GD32","","PC-rel 32 bit for global dynamic thread local data",null,null],[17,"R_ARM_TLS_LDM32","","PC-rel 32 bit for local dynamic thread local data",null,null],[17,"R_ARM_TLS_LDO32","","32 bit offset relative to TLS block",null,null],[17,"R_ARM_TLS_IE32","","PC-rel 32 bit for GOT entry of static TLS block offset",null,null],[17,"R_ARM_TLS_LE32","","32 bit offset relative to static TLS block",null,null],[17,"R_ARM_TLS_LDO12","","12 bit relative to TLS block (LDR, STR)",null,null],[17,"R_ARM_TLS_LE12","","12 bit relative to static TLS block (LDR, STR)",null,null],[17,"R_ARM_TLS_IE12GP","","12 bit GOT entry relative to GOT origin (LDR)",null,null],[17,"R_ARM_ME_TOO","","Obsolete",null,null],[17,"R_ARM_THM_TLS_DESCSEQ","","",null,null],[17,"R_ARM_THM_TLS_DESCSEQ16","","",null,null],[17,"R_ARM_THM_TLS_DESCSEQ32","","",null,null],[17,"R_ARM_THM_GOT_BREL12","","GOT entry relative to GOT origin, 12 bit (Thumb32 LDR)",null,null],[17,"R_ARM_IRELATIVE","","",null,null],[17,"R_ARM_RXPC25","","",null,null],[17,"R_ARM_RSBREL32","","",null,null],[17,"R_ARM_THM_RPC22","","",null,null],[17,"R_ARM_RREL32","","",null,null],[17,"R_ARM_RABS22","","",null,null],[17,"R_ARM_RPC24","","",null,null],[17,"R_ARM_RBASE","","",null,null],[17,"R_ARM_NUM","","Keep this the last entry",null,null],[17,"R_OR1K_NONE","","",null,null],[17,"R_OR1K_32","","",null,null],[17,"R_OR1K_16","","",null,null],[17,"R_OR1K_8","","",null,null],[17,"R_OR1K_LO_16_IN_INSN","","",null,null],[17,"R_OR1K_HI_16_IN_INSN","","",null,null],[17,"R_OR1K_INSN_REL_26","","",null,null],[17,"R_OR1K_GNU_VTENTRY","","",null,null],[17,"R_OR1K_GNU_VTINHERIT","","",null,null],[17,"R_OR1K_32_PCREL","","",null,null],[17,"R_OR1K_16_PCREL","","",null,null],[17,"R_OR1K_8_PCREL","","",null,null],[17,"R_OR1K_GOTPC_HI16","","",null,null],[17,"R_OR1K_GOTPC_LO16","","",null,null],[17,"R_OR1K_GOT16","","",null,null],[17,"R_OR1K_PLT26","","",null,null],[17,"R_OR1K_GOTOFF_HI16","","",null,null],[17,"R_OR1K_GOTOFF_LO16","","",null,null],[17,"R_OR1K_COPY","","",null,null],[17,"R_OR1K_GLOB_DAT","","",null,null],[17,"R_OR1K_JMP_SLOT","","",null,null],[17,"R_OR1K_RELATIVE","","",null,null],[17,"R_OR1K_TLS_GD_HI16","","",null,null],[17,"R_OR1K_TLS_GD_LO16","","",null,null],[17,"R_OR1K_TLS_LDM_HI16","","",null,null],[17,"R_OR1K_TLS_LDM_LO16","","",null,null],[17,"R_OR1K_TLS_LDO_HI16","","",null,null],[17,"R_OR1K_TLS_LDO_LO16","","",null,null],[17,"R_OR1K_TLS_IE_HI16","","",null,null],[17,"R_OR1K_TLS_IE_LO16","","",null,null],[17,"R_OR1K_TLS_LE_HI16","","",null,null],[17,"R_OR1K_TLS_LE_LO16","","",null,null],[17,"R_OR1K_TLS_TPOFF","","",null,null],[17,"R_OR1K_TLS_DTPOFF","","",null,null],[17,"R_OR1K_TLS_DTPMOD","","",null,null],[17,"R_OR1K_NUM","","",null,null],[17,"R_MIPS_NONE","","No reloc",null,null],[17,"R_MIPS_16","","Direct 16 bit",null,null],[17,"R_MIPS_32","","Direct 32 bit",null,null],[17,"R_MIPS_REL32","","PC relative 32 bit",null,null],[17,"R_MIPS_26","","Direct 26 bit shifted",null,null],[17,"R_MIPS_HI16","","High 16 bit",null,null],[17,"R_MIPS_LO16","","Low 16 bit",null,null],[17,"R_MIPS_GPREL16","","GP relative 16 bit",null,null],[17,"R_MIPS_LITERAL","","16 bit literal entry",null,null],[17,"R_MIPS_GOT16","","16 bit GOT entry",null,null],[17,"R_MIPS_PC16","","PC relative 16 bit",null,null],[17,"R_MIPS_CALL16","","16 bit GOT entry for function",null,null],[17,"R_MIPS_GPREL32","","GP relative 32 bit",null,null],[17,"R_MIPS_SHIFT5","","",null,null],[17,"R_MIPS_SHIFT6","","",null,null],[17,"R_MIPS_64","","",null,null],[17,"R_MIPS_GOT_DISP","","",null,null],[17,"R_MIPS_GOT_PAGE","","",null,null],[17,"R_MIPS_GOT_OFST","","",null,null],[17,"R_MIPS_GOT_HI16","","",null,null],[17,"R_MIPS_GOT_LO16","","",null,null],[17,"R_MIPS_SUB","","",null,null],[17,"R_MIPS_INSERT_A","","",null,null],[17,"R_MIPS_INSERT_B","","",null,null],[17,"R_MIPS_DELETE","","",null,null],[17,"R_MIPS_HIGHER","","",null,null],[17,"R_MIPS_HIGHEST","","",null,null],[17,"R_MIPS_CALL_HI16","","",null,null],[17,"R_MIPS_CALL_LO16","","",null,null],[17,"R_MIPS_SCN_DISP","","",null,null],[17,"R_MIPS_REL16","","",null,null],[17,"R_MIPS_ADD_IMMEDIATE","","",null,null],[17,"R_MIPS_PJUMP","","",null,null],[17,"R_MIPS_RELGOT","","",null,null],[17,"R_MIPS_JALR","","",null,null],[17,"R_MIPS_TLS_DTPMOD32","","Module number 32 bit",null,null],[17,"R_MIPS_TLS_DTPREL32","","Module-relative offset 32 bit",null,null],[17,"R_MIPS_TLS_DTPMOD64","","Module number 64 bit",null,null],[17,"R_MIPS_TLS_DTPREL64","","Module-relative offset 64 bit",null,null],[17,"R_MIPS_TLS_GD","","16 bit GOT offset for GD",null,null],[17,"R_MIPS_TLS_LDM","","16 bit GOT offset for LDM",null,null],[17,"R_MIPS_TLS_DTPREL_HI16","","Module-relative offset, high 16 bits",null,null],[17,"R_MIPS_TLS_DTPREL_LO16","","Module-relative offset, low 16 bits",null,null],[17,"R_MIPS_TLS_GOTTPREL","","16 bit GOT offset for IE",null,null],[17,"R_MIPS_TLS_TPREL32","","TP-relative offset, 32 bit6",null,null],[17,"R_MIPS_TLS_TPREL64","","TP-relative offset, 64 bit",null,null],[17,"R_MIPS_TLS_TPREL_HI16","","TP-relative offset, high 16 bits",null,null],[17,"R_MIPS_TLS_TPREL_LO16","","TP-relative offset, low 16 bits",null,null],[17,"R_MIPS_GLOB_DAT","","",null,null],[17,"R_MIPS_COPY","","",null,null],[17,"R_MIPS_JUMP_SLOT","","",null,null],[17,"R_MIPS_NUM","","",null,null],[17,"R_RISCV_NONE","","None",null,null],[17,"R_RISCV_32","","Runtime relocation: word32 = S + A",null,null],[17,"R_RISCV_64","","Runtime relocation: word64 = S + A",null,null],[17,"R_RISCV_RELATIVE","","Runtime relocation: word32,64 = B + A",null,null],[17,"R_RISCV_COPY","","Runtime relocation: must be in executable, not allowed in…",null,null],[17,"R_RISCV_JUMP_SLOT","","Runtime relocation: word32,64 = S; handled by PLT unless…",null,null],[17,"R_RISCV_TLS_DTPMOD32","","TLS relocation: word32 = S->TLSINDEX",null,null],[17,"R_RISCV_TLS_DTPMOD64","","TLS relocation: word64 = S->TLSINDEX",null,null],[17,"R_RISCV_TLS_DTPREL32","","TLS relocation: word32 = TLS + S + A - TLS_TP_OFFSET",null,null],[17,"R_RISCV_TLS_DTPREL64","","TLS relocation: word64 = TLS + S + A - TLS_TP_OFFSET",null,null],[17,"R_RISCV_TLS_TPREL32","","TLS relocation: word32 = TLS + S + A + S_TLS_OFFSET -…",null,null],[17,"R_RISCV_TLS_TPREL64","","TLS relocation: word64 = TLS + S + A + S_TLS_OFFSET -…",null,null],[17,"R_RISCV_BRANCH","","PC-relative branch (SB-Type)",null,null],[17,"R_RISCV_JAL","","PC-relative jump (UJ-Type)",null,null],[17,"R_RISCV_CALL","","PC-relative call: MACRO call,tail (auipc+jalr pair)",null,null],[17,"R_RISCV_CALL_PLT","","PC-relative call (PLT): MACRO call,tail (auipc+jalr pair)…",null,null],[17,"R_RISCV_GOT_HI20","","PC-relative GOT reference: MACRO la",null,null],[17,"R_RISCV_TLS_GOT_HI20","","PC-relative TLS IE GOT offset: MACRO la.tls.ie",null,null],[17,"R_RISCV_TLS_GD_HI20","","PC-relative TLS GD reference: MACRO la.tls.gd",null,null],[17,"R_RISCV_PCREL_HI20","","PC-relative reference: %pcrel_hi(symbol) (U-Type)",null,null],[17,"R_RISCV_PCREL_LO12_I","","PC-relative reference: %pcrel_lo(symbol) (I-Type)",null,null],[17,"R_RISCV_PCREL_LO12_S","","PC-relative reference: %pcrel_lo(symbol) (S-Type)",null,null],[17,"R_RISCV_HI20","","Absolute address: %hi(symbol) (U-Type)",null,null],[17,"R_RISCV_LO12_I","","Absolute address: %lo(symbol) (I-Type)",null,null],[17,"R_RISCV_LO12_S","","Absolute address: %lo(symbol) (S-Type)",null,null],[17,"R_RISCV_TPREL_HI20","","TLS LE thread offset: %tprel_hi(symbol) (U-Type)",null,null],[17,"R_RISCV_TPREL_LO12_I","","TLS LE thread offset: %tprel_lo(symbol) (I-Type)",null,null],[17,"R_RISCV_TPREL_LO12_S","","TLS LE thread offset: %tprel_lo(symbol) (S-Type)",null,null],[17,"R_RISCV_TPREL_ADD","","TLS LE thread usage: %tprel_add(symbol)",null,null],[17,"R_RISCV_ADD8","","8-bit label addition: word8 = S + A",null,null],[17,"R_RISCV_ADD16","","16-bit label addition: word16 = S + A",null,null],[17,"R_RISCV_ADD32","","32-bit label addition: word32 = S + A",null,null],[17,"R_RISCV_ADD64","","64-bit label addition: word64 = S + A",null,null],[17,"R_RISCV_SUB8","","8-bit label subtraction: word8 = S - A",null,null],[17,"R_RISCV_SUB16","","16-bit label subtraction: word16 = S - A",null,null],[17,"R_RISCV_SUB32","","32-bit label subtraction: word32 = S - A",null,null],[17,"R_RISCV_SUB64","","64-bit label subtraction: word64 = S - A",null,null],[17,"R_RISCV_GNU_VTINHERIT","","GNU C++ vtable hierarchy",null,null],[17,"R_RISCV_GNU_VTENTRY","","GNU C++ vtable member usage",null,null],[17,"R_RISCV_ALIGN","","Alignment statement",null,null],[17,"R_RISCV_RVC_BRANCH","","PC-relative branch offset (CB-Type)",null,null],[17,"R_RISCV_RVC_JUMP","","PC-relative jump offset (CJ-Type)",null,null],[17,"R_RISCV_RVC_LUI","","Absolute address (CI-Type)",null,null],[17,"R_RISCV_GPREL_I","","GP-relative reference (I-Type)",null,null],[17,"R_RISCV_GPREL_S","","GP-relative reference (S-Type)",null,null],[17,"R_RISCV_TPREL_I","","TP-relative TLS LE load (I-Type)",null,null],[17,"R_RISCV_TPREL_S","","TP-relative TLS LE store (S-Type)",null,null],[17,"R_RISCV_RELAX","","Instruction pair can be relaxed",null,null],[17,"R_RISCV_SUB6","","Local label subtraction",null,null],[17,"R_RISCV_SET6","","Local label subtraction",null,null],[17,"R_RISCV_SET8","","Local label subtraction",null,null],[17,"R_RISCV_SET16","","Local label subtraction",null,null],[17,"R_RISCV_SET32","","Local label subtraction",null,null],[11,"size","","",32,[[["ctx",3]]]],[11,"parse","","Parse a REL or RELA section of size `filesz` from `offset`.",37,[[["ctx",3]],[["relocsection",3],["result",6]]]],[11,"get","","Try to parse a single relocation from the binary, at…",37,[[],[["option",4],["reloc",3]]]],[11,"len","","The number of relocations in the section.",37,[[]]],[11,"is_empty","","Returns true if section has no relocations.",37,[[]]],[11,"iter","","Iterate over all relocations.",37,[[],["relociterator",3]]],[11,"to_vec","","Parse all relocations into a vector.",37,[[],[["reloc",3],["vec",3]]]],[0,"note","goblin::elf","",null,null],[3,"Nhdr32","goblin::elf::note","Note section contents. Each entry in the note section…",null,null],[12,"n_namesz","","Length of the note\'s name (includes the terminator)",38,null],[12,"n_descsz","","Length of the note\'s descriptor",38,null],[12,"n_type","","Type of the note",38,null],[3,"Nhdr64","","Note section contents. Each entry in the note section…",null,null],[12,"n_namesz","","Length of the note\'s name (includes the terminator)",39,null],[12,"n_descsz","","Length of the note\'s descriptor.",39,null],[12,"n_type","","Type of the note.",39,null],[3,"NoteDataIterator","","An iterator over ELF binary notes in a note section or…",null,null],[12,"data","","",40,null],[12,"size","","",40,null],[12,"offset","","",40,null],[12,"ctx","","",40,null],[3,"NoteIterator","","An iterator over ELF binary notes",null,null],[12,"iters","","",41,null],[12,"index","","",41,null],[3,"Note","","A 32/64 bit Note struct, with the name and desc pre-parsed",null,null],[12,"n_type","","The type of this note",42,null],[12,"name","","NUL terminated string, where `namesz` includes the…",42,null],[12,"desc","","arbitrary data of length `descsz`",42,null],[17,"NT_GNU_ABI_TAG","","ABI information.",null,null],[17,"ELF_NOTE_ABI","","Old name",null,null],[17,"ELF_NOTE_OS_LINUX","","",null,null],[17,"ELF_NOTE_OS_GNU","","",null,null],[17,"ELF_NOTE_OS_SOLARIS2","","",null,null],[17,"ELF_NOTE_OS_FREEBSD","","",null,null],[17,"NT_GNU_HWCAP","","Synthetic `hwcap` information.",null,null],[17,"NT_GNU_BUILD_ID","","Build ID bits as generated by ld --build-id.",null,null],[17,"NT_GNU_GOLD_VERSION","","Version note generated by GNU gold containing a version…",null,null],[17,"NT_PRSTATUS","","Contains copy of prstatus struct.",null,null],[17,"NT_PRPSINFO","","Contains copy of prpsinfo struct.",null,null],[17,"NT_SIGINFO","","Fields of siginfo_t.",null,null],[17,"NT_FILE","","Description of mapped files.",null,null],[11,"type_to_str","","",42,[[]]],[6,"Header","goblin::elf","",null,null],[6,"ProgramHeader","","",null,null],[6,"SectionHeader","","",null,null],[6,"Symtab","","",null,null],[6,"Sym","","",null,null],[6,"Dyn","","",null,null],[6,"Dynamic","","",null,null],[6,"Reloc","","",null,null],[6,"RelocSection","","",null,null],[6,"ProgramHeaders","","",null,null],[6,"SectionHeaders","","",null,null],[6,"ShdrIdx","","",null,null],[11,"iter_note_headers","","Try to iterate notes in PT_NOTE program headers; returns…",8,[[],[["noteiterator",3],["option",4]]]],[11,"iter_note_sections","","Try to iterate notes in SHT_NOTE sections; returns `None`…",8,[[["option",4]],[["noteiterator",3],["option",4]]]],[11,"is_object_file","","",8,[[]]],[11,"parse","","Parses the contents of the byte stream in `bytes`, and…",8,[[],["result",6]]],[0,"elf32","goblin","The ELF 32-bit struct definitions and associated values,…",null,null],[0,"gnu_hash","goblin::elf32","",null,null],[3,"GnuHash","goblin::elf32::gnu_hash","A better hash table for the ELF used by GNU systems in…",null,null],[5,"hash","","GNU hash function: accepts a symbol name and returns a…",null,[[]]],[11,"from_raw_table","","Initialize a GnuHash from a pointer to `.hash` (or…",43,[[],["result",4]]],[11,"find","","Given a symbol, a hash of that symbol, a dynamic string…",43,[[["strtab",3]],[["option",4],["sym",3]]]],[11,"find_with_hash","","This function will not check if the passed `hash` is…",43,[[["strtab",3]],[["option",4],["sym",3]]]],[0,"elf64","goblin","The ELF 64-bit struct definitions and associated values,…",null,null],[0,"gnu_hash","goblin::elf64","",null,null],[3,"GnuHash","goblin::elf64::gnu_hash","A better hash table for the ELF used by GNU systems in…",null,null],[5,"hash","","GNU hash function: accepts a symbol name and returns a…",null,[[]]],[11,"from_raw_table","","Initialize a GnuHash from a pointer to `.hash` (or…",44,[[],["result",4]]],[11,"find","","Given a symbol, a hash of that symbol, a dynamic string…",44,[[["strtab",3]],[["option",4],["sym",3]]]],[11,"find_with_hash","","This function will not check if the passed `hash` is…",44,[[["strtab",3]],[["option",4],["sym",3]]]],[0,"mach","goblin","The Mach-o, mostly zero-copy, binary format parser and raw…",null,null],[3,"MachO","goblin::mach","A cross-platform, zero-copy, endian-aware, 32/64 bit…",null,null],[12,"header","","The mach-o header",45,null],[12,"load_commands","","The load commands tell the kernel and dynamic linker how…",45,null],[12,"segments","","The load command \\\"segments\\\" - typically the pieces of the…",45,null],[12,"symbols","","The \\\"Nlist\\\" style symbols in this binary - strippable",45,null],[12,"libs","","The dylibs this library depends on",45,null],[12,"entry","","The entry point (as a virtual memory address), 0 if none",45,null],[12,"old_style_entry","","Whether `entry` refers to an older `LC_UNIXTHREAD` instead…",45,null],[12,"name","","The name of the dylib, if any",45,null],[12,"little_endian","","Are we a little-endian binary?",45,null],[12,"is_64","","Are we a 64-bit binary",45,null],[3,"MultiArch","","A Mach-o multi architecture (Fat) binary container",null,null],[12,"narches","","",46,null],[3,"FatArchIterator","","Iterator over the fat architecture headers in a…",null,null],[3,"MachOIterator","","Iterator over every `MachO` binary contained in this…",null,null],[4,"Mach","","Either a collection of multiple architectures, or a single…",null,null],[13,"Fat","","A \\\"fat\\\" multi-architecture binary container",47,null],[13,"Binary","","A regular Mach-o binary",47,null],[5,"peek","","Returns a big endian magical number",null,[[],["result",6]]],[5,"parse_magic_and_ctx","","Parses a magic number, and an accompanying mach-o binary…",null,[[],["result",6]]],[0,"bind_opcodes","","Bind opcodes are interpreted by the dynamic linker to…",null,null],[5,"opcode_to_str","goblin::mach::bind_opcodes","",null,[[["opcode",6]]]],[6,"Opcode","","",null,null],[17,"BIND_TYPE_POINTER","","",null,null],[17,"BIND_TYPE_TEXT_ABSOLUTE32","","",null,null],[17,"BIND_TYPE_TEXT_PCREL32","","",null,null],[17,"BIND_SPECIAL_DYLIB_SELF","","",null,null],[17,"BIND_SPECIAL_DYLIB_MAIN_EXECUTABLE","","",null,null],[17,"BIND_SPECIAL_DYLIB_FLAT_LOOKUP","","",null,null],[17,"BIND_SYMBOL_FLAGS_WEAK_IMPORT","","",null,null],[17,"BIND_SYMBOL_FLAGS_NON_WEAK_DEFINITION","","",null,null],[17,"BIND_OPCODE_MASK","","",null,null],[17,"BIND_IMMEDIATE_MASK","","",null,null],[17,"BIND_OPCODE_DONE","","",null,null],[17,"BIND_OPCODE_SET_DYLIB_ORDINAL_IMM","","",null,null],[17,"BIND_OPCODE_SET_DYLIB_ORDINAL_ULEB","","",null,null],[17,"BIND_OPCODE_SET_DYLIB_SPECIAL_IMM","","",null,null],[17,"BIND_OPCODE_SET_SYMBOL_TRAILING_FLAGS_IMM","","",null,null],[17,"BIND_OPCODE_SET_TYPE_IMM","","",null,null],[17,"BIND_OPCODE_SET_ADDEND_SLEB","","",null,null],[17,"BIND_OPCODE_SET_SEGMENT_AND_OFFSET_ULEB","","",null,null],[17,"BIND_OPCODE_ADD_ADDR_ULEB","","",null,null],[17,"BIND_OPCODE_DO_BIND","","",null,null],[17,"BIND_OPCODE_DO_BIND_ADD_ADDR_ULEB","","",null,null],[17,"BIND_OPCODE_DO_BIND_ADD_ADDR_IMM_SCALED","","",null,null],[17,"BIND_OPCODE_DO_BIND_ULEB_TIMES_SKIPPING_ULEB","","",null,null],[0,"constants","goblin::mach","Miscellaneous constants used inside of and when…",null,null],[0,"cputype","goblin::mach::constants","",null,null],[5,"get_arch_from_flag","goblin::mach::constants::cputype","Get the cputype and cpusubtype from a name",null,[[],["option",4]]],[5,"get_arch_name_from_types","","Get the architecture name from cputype and cpusubtype",null,[[["cputype",6],["cpusubtype",6]],["option",4]]],[6,"CpuType","","An alias for u32",null,null],[6,"CpuSubType","","An alias for u32",null,null],[17,"CPU_SUBTYPE_MASK","","the mask for CPU feature flags",null,null],[17,"CPU_ARCH_MASK","","mask for architecture bits",null,null],[17,"CPU_ARCH_ABI64","","the mask for 64 bit ABI",null,null],[17,"CPU_ARCH_ABI64_32","","the mask for ILP32 ABI on 64 bit hardware",null,null],[17,"CPU_TYPE_ANY","","",null,null],[17,"CPU_TYPE_VAX","","",null,null],[17,"CPU_TYPE_MC680X0","","",null,null],[17,"CPU_TYPE_X86","","",null,null],[17,"CPU_TYPE_I386","","",null,null],[17,"CPU_TYPE_X86_64","","",null,null],[17,"CPU_TYPE_MIPS","","",null,null],[17,"CPU_TYPE_MC98000","","",null,null],[17,"CPU_TYPE_HPPA","","",null,null],[17,"CPU_TYPE_ARM","","",null,null],[17,"CPU_TYPE_ARM64","","",null,null],[17,"CPU_TYPE_ARM64_32","","",null,null],[17,"CPU_TYPE_MC88000","","",null,null],[17,"CPU_TYPE_SPARC","","",null,null],[17,"CPU_TYPE_I860","","",null,null],[17,"CPU_TYPE_ALPHA","","",null,null],[17,"CPU_TYPE_POWERPC","","",null,null],[17,"CPU_TYPE_POWERPC64","","",null,null],[17,"CPU_SUBTYPE_MULTIPLE","","",null,null],[17,"CPU_SUBTYPE_LITTLE_ENDIAN","","",null,null],[17,"CPU_SUBTYPE_BIG_ENDIAN","","",null,null],[17,"CPU_SUBTYPE_VAX_ALL","","",null,null],[17,"CPU_SUBTYPE_VAX780","","",null,null],[17,"CPU_SUBTYPE_VAX785","","",null,null],[17,"CPU_SUBTYPE_VAX750","","",null,null],[17,"CPU_SUBTYPE_VAX730","","",null,null],[17,"CPU_SUBTYPE_UVAXI","","",null,null],[17,"CPU_SUBTYPE_UVAXII","","",null,null],[17,"CPU_SUBTYPE_VAX8200","","",null,null],[17,"CPU_SUBTYPE_VAX8500","","",null,null],[17,"CPU_SUBTYPE_VAX8600","","",null,null],[17,"CPU_SUBTYPE_VAX8650","","",null,null],[17,"CPU_SUBTYPE_VAX8800","","",null,null],[17,"CPU_SUBTYPE_UVAXIII","","",null,null],[17,"CPU_SUBTYPE_MC680X0_ALL","","",null,null],[17,"CPU_SUBTYPE_MC68030","","",null,null],[17,"CPU_SUBTYPE_MC68040","","",null,null],[17,"CPU_SUBTYPE_MC68030_ONLY","","",null,null],[17,"CPU_SUBTYPE_I386_ALL","","",null,null],[17,"CPU_SUBTYPE_386","","",null,null],[17,"CPU_SUBTYPE_486","","",null,null],[17,"CPU_SUBTYPE_486SX","","",null,null],[17,"CPU_SUBTYPE_586","","",null,null],[17,"CPU_SUBTYPE_PENT","","",null,null],[17,"CPU_SUBTYPE_PENTPRO","","",null,null],[17,"CPU_SUBTYPE_PENTII_M3","","",null,null],[17,"CPU_SUBTYPE_PENTII_M5","","",null,null],[17,"CPU_SUBTYPE_CELERON","","",null,null],[17,"CPU_SUBTYPE_CELERON_MOBILE","","",null,null],[17,"CPU_SUBTYPE_PENTIUM_3","","",null,null],[17,"CPU_SUBTYPE_PENTIUM_3_M","","",null,null],[17,"CPU_SUBTYPE_PENTIUM_3_XEON","","",null,null],[17,"CPU_SUBTYPE_PENTIUM_M","","",null,null],[17,"CPU_SUBTYPE_PENTIUM_4","","",null,null],[17,"CPU_SUBTYPE_PENTIUM_4_M","","",null,null],[17,"CPU_SUBTYPE_ITANIUM","","",null,null],[17,"CPU_SUBTYPE_ITANIUM_2","","",null,null],[17,"CPU_SUBTYPE_XEON","","",null,null],[17,"CPU_SUBTYPE_XEON_MP","","",null,null],[17,"CPU_SUBTYPE_INTEL_FAMILY_MAX","","",null,null],[17,"CPU_SUBTYPE_INTEL_MODEL_ALL","","",null,null],[17,"CPU_SUBTYPE_X86_ALL","","",null,null],[17,"CPU_SUBTYPE_X86_64_ALL","","",null,null],[17,"CPU_SUBTYPE_X86_ARCH1","","",null,null],[17,"CPU_SUBTYPE_X86_64_H","","",null,null],[17,"CPU_SUBTYPE_MIPS_ALL","","",null,null],[17,"CPU_SUBTYPE_MIPS_R2300","","",null,null],[17,"CPU_SUBTYPE_MIPS_R2600","","",null,null],[17,"CPU_SUBTYPE_MIPS_R2800","","",null,null],[17,"CPU_SUBTYPE_MIPS_R2000A","","",null,null],[17,"CPU_SUBTYPE_MIPS_R2000","","",null,null],[17,"CPU_SUBTYPE_MIPS_R3000A","","",null,null],[17,"CPU_SUBTYPE_MIPS_R3000","","",null,null],[17,"CPU_SUBTYPE_MC98000_ALL","","",null,null],[17,"CPU_SUBTYPE_MC98601","","",null,null],[17,"CPU_SUBTYPE_HPPA_ALL","","",null,null],[17,"CPU_SUBTYPE_HPPA_7100","","",null,null],[17,"CPU_SUBTYPE_HPPA_7100LC","","",null,null],[17,"CPU_SUBTYPE_MC88000_ALL","","",null,null],[17,"CPU_SUBTYPE_MC88100","","",null,null],[17,"CPU_SUBTYPE_MC88110","","",null,null],[17,"CPU_SUBTYPE_SPARC_ALL","","",null,null],[17,"CPU_SUBTYPE_I860_ALL","","",null,null],[17,"CPU_SUBTYPE_I860_860","","",null,null],[17,"CPU_SUBTYPE_POWERPC_ALL","","",null,null],[17,"CPU_SUBTYPE_POWERPC_601","","",null,null],[17,"CPU_SUBTYPE_POWERPC_602","","",null,null],[17,"CPU_SUBTYPE_POWERPC_603","","",null,null],[17,"CPU_SUBTYPE_POWERPC_603E","","",null,null],[17,"CPU_SUBTYPE_POWERPC_603EV","","",null,null],[17,"CPU_SUBTYPE_POWERPC_604","","",null,null],[17,"CPU_SUBTYPE_POWERPC_604E","","",null,null],[17,"CPU_SUBTYPE_POWERPC_620","","",null,null],[17,"CPU_SUBTYPE_POWERPC_750","","",null,null],[17,"CPU_SUBTYPE_POWERPC_7400","","",null,null],[17,"CPU_SUBTYPE_POWERPC_7450","","",null,null],[17,"CPU_SUBTYPE_POWERPC_970","","",null,null],[17,"CPU_SUBTYPE_ARM_ALL","","",null,null],[17,"CPU_SUBTYPE_ARM_V4T","","",null,null],[17,"CPU_SUBTYPE_ARM_V6","","",null,null],[17,"CPU_SUBTYPE_ARM_V5TEJ","","",null,null],[17,"CPU_SUBTYPE_ARM_XSCALE","","",null,null],[17,"CPU_SUBTYPE_ARM_V7","","",null,null],[17,"CPU_SUBTYPE_ARM_V7F","","",null,null],[17,"CPU_SUBTYPE_ARM_V7S","","",null,null],[17,"CPU_SUBTYPE_ARM_V7K","","",null,null],[17,"CPU_SUBTYPE_ARM_V6M","","",null,null],[17,"CPU_SUBTYPE_ARM_V7M","","",null,null],[17,"CPU_SUBTYPE_ARM_V7EM","","",null,null],[17,"CPU_SUBTYPE_ARM_V8","","",null,null],[17,"CPU_SUBTYPE_ARM64_ALL","","",null,null],[17,"CPU_SUBTYPE_ARM64_V8","","",null,null],[17,"CPU_SUBTYPE_ARM64_E","","",null,null],[17,"CPU_SUBTYPE_ARM64_32_ALL","","",null,null],[17,"CPU_SUBTYPE_ARM64_32_V8","","",null,null],[17,"DYLD_MACOSX_VERSION_10_4","goblin::mach::constants","",null,null],[17,"DYLD_MACOSX_VERSION_10_5","","",null,null],[17,"DYLD_MACOSX_VERSION_10_6","","",null,null],[17,"DYLD_MACOSX_VERSION_10_7","","",null,null],[17,"DYLD_MACOSX_VERSION_10_8","","",null,null],[17,"DYLD_MACOSX_VERSION_10_9","","",null,null],[17,"DYLD_MACOSX_VERSION_10_10","","",null,null],[17,"DYLD_MACOSX_VERSION_10_11","","",null,null],[17,"DYLD_MACOSX_VERSION_10_12","","",null,null],[17,"DYLD_MACOSX_VERSION_10_13","","",null,null],[17,"DYLD_IOS_VERSION_2_0","","",null,null],[17,"DYLD_IOS_VERSION_2_1","","",null,null],[17,"DYLD_IOS_VERSION_2_2","","",null,null],[17,"DYLD_IOS_VERSION_3_0","","",null,null],[17,"DYLD_IOS_VERSION_3_1","","",null,null],[17,"DYLD_IOS_VERSION_3_2","","",null,null],[17,"DYLD_IOS_VERSION_4_0","","",null,null],[17,"DYLD_IOS_VERSION_4_1","","",null,null],[17,"DYLD_IOS_VERSION_4_2","","",null,null],[17,"DYLD_IOS_VERSION_4_3","","",null,null],[17,"DYLD_IOS_VERSION_5_0","","",null,null],[17,"DYLD_IOS_VERSION_5_1","","",null,null],[17,"DYLD_IOS_VERSION_6_0","","",null,null],[17,"DYLD_IOS_VERSION_6_1","","",null,null],[17,"DYLD_IOS_VERSION_7_0","","",null,null],[17,"DYLD_IOS_VERSION_7_1","","",null,null],[17,"DYLD_IOS_VERSION_8_0","","",null,null],[17,"DYLD_IOS_VERSION_9_0","","",null,null],[17,"DYLD_IOS_VERSION_10_0","","",null,null],[17,"DYLD_IOS_VERSION_11_0","","",null,null],[17,"SECTION_TYPE","","256 section types",null,null],[17,"SECTION_ATTRIBUTES","","24 section attributes",null,null],[17,"S_REGULAR","","regular section",null,null],[17,"S_ZEROFILL","","zero fill on demand section",null,null],[17,"S_CSTRING_LITERALS","","section with only literal C strings",null,null],[17,"S_4BYTE_LITERALS","","section with only 4 byte literals",null,null],[17,"S_8BYTE_LITERALS","","section with only 8 byte literals",null,null],[17,"S_LITERAL_POINTERS","","section with only pointers to",null,null],[17,"S_NON_LAZY_SYMBOL_POINTERS","","section with only non-lazy symbol pointers",null,null],[17,"S_LAZY_SYMBOL_POINTERS","","section with only lazy symbol pointers",null,null],[17,"S_SYMBOL_STUBS","","section with only symbol stubs, byte size of stub in the…",null,null],[17,"S_MOD_INIT_FUNC_POINTERS","","section with only function pointers for initialization",null,null],[17,"S_MOD_TERM_FUNC_POINTERS","","section with only function pointers for termination",null,null],[17,"S_COALESCED","","section contains symbols that are to be coalesced",null,null],[17,"S_GB_ZEROFILL","","zero fill on demand section that can be larger than 4…",null,null],[17,"S_INTERPOSING","","section with only pairs of function pointers for interposing",null,null],[17,"S_16BYTE_LITERALS","","section with only 16 byte literals",null,null],[17,"S_DTRACE_DOF","","section contains DTrace Object Format",null,null],[17,"S_LAZY_DYLIB_SYMBOL_POINTERS","","section with only lazy symbol pointers to lazy loaded dylibs",null,null],[17,"S_THREAD_LOCAL_REGULAR","","template of initial  values for TLVs",null,null],[17,"S_THREAD_LOCAL_ZEROFILL","","template of initial  values for TLVs",null,null],[17,"S_THREAD_LOCAL_VARIABLES","","TLV descriptors",null,null],[17,"S_THREAD_LOCAL_VARIABLE_POINTERS","","pointers to TLV  descriptors",null,null],[17,"S_THREAD_LOCAL_INIT_FUNCTION_POINTERS","","functions to call to initialize TLV values",null,null],[17,"SECTION_ATTRIBUTES_USR","","User setable attributes",null,null],[17,"S_ATTR_PURE_INSTRUCTIONS","","section contains only true machine instructions",null,null],[17,"S_ATTR_NO_TOC","","section contains coalesced symbols that are not to be in a…",null,null],[17,"S_ATTR_STRIP_STATIC_SYMS","","ok to strip static symbols in this section in files with…",null,null],[17,"S_ATTR_NO_DEAD_STRIP","","no dead stripping",null,null],[17,"S_ATTR_LIVE_SUPPORT","","blocks are live if they reference live blocks",null,null],[17,"S_ATTR_SELF_MODIFYING_CODE","","Used with i386 code stubs written on by dyld",null,null],[17,"S_ATTR_DEBUG","","debug section",null,null],[17,"SECTION_ATTRIBUTES_SYS","","system setable attributes",null,null],[17,"S_ATTR_SOME_INSTRUCTIONS","","section contains some machine instructions",null,null],[17,"S_ATTR_EXT_RELOC","","section has external relocation entries",null,null],[17,"S_ATTR_LOC_RELOC","","section has local relocation entries",null,null],[17,"SEG_PAGEZERO","","the pagezero segment which has no protections and catches…",null,null],[17,"SEG_TEXT","","the tradition UNIX text segment",null,null],[17,"SECT_TEXT","","the real text part of the text section no headers, and no…",null,null],[17,"SECT_FVMLIB_INIT0","","the fvmlib initialization section",null,null],[17,"SECT_FVMLIB_INIT1","","the section following the fvmlib initialization section",null,null],[17,"SEG_DATA","","the tradition UNIX data segment",null,null],[17,"SECT_DATA","","the real initialized data section no padding, no bss overlap",null,null],[17,"SECT_BSS","","the real uninitialized data sectionno padding",null,null],[17,"SECT_COMMON","","the section common symbols are allocated in by the link…",null,null],[17,"SEG_OBJC","","objective-C runtime segment",null,null],[17,"SECT_OBJC_SYMBOLS","","symbol table",null,null],[17,"SECT_OBJC_MODULES","","module information",null,null],[17,"SECT_OBJC_STRINGS","","string table",null,null],[17,"SECT_OBJC_REFS","","string table",null,null],[17,"SEG_ICON","","the icon segment",null,null],[17,"SECT_ICON_HEADER","","the icon headers",null,null],[17,"SECT_ICON_TIFF","","the icons in tiff format",null,null],[17,"SEG_LINKEDIT","","the segment containing all structs created and maintained…",null,null],[17,"SEG_UNIXSTACK","","the unix stack segment",null,null],[17,"SEG_IMPORT","","the segment for the self (dyld) modifing code stubs that…",null,null],[17,"VM_PROT_READ","","Segment is readable.",null,null],[17,"VM_PROT_WRITE","","Segment is writable.",null,null],[17,"VM_PROT_EXECUTE","","Segment is executable.",null,null],[0,"exports","goblin::mach","Symbols exported by this binary and available for dynamic…",null,null],[3,"Export","goblin::mach::exports","A finalized symbolic export reconstructed from the export…",null,null],[12,"name","","The reconsituted export name which dyld matches against",48,null],[12,"info","","The export info in the node data",48,null],[12,"size","","How large this export is",48,null],[12,"offset","","The offset this symbol export is found in the binary",48,null],[3,"ExportTrie","","An export trie efficiently encodes all of the symbols…",null,null],[4,"SymbolKind","","",null,null],[13,"Regular","","",49,null],[13,"Absolute","","",49,null],[13,"ThreadLocal","","",49,null],[13,"UnknownSymbolKind","","",49,null],[4,"ExportInfo","","An export can be a regular export, a re-export, or a stub",null,null],[13,"Regular","","A regular exported symbol, which is an address where it is…",50,null],[12,"address","goblin::mach::exports::ExportInfo","",51,null],[12,"flags","","",51,null],[13,"Reexport","goblin::mach::exports","if lib_symbol_name None then same symbol name, otherwise…",50,null],[12,"lib","goblin::mach::exports::ExportInfo","",52,null],[12,"lib_symbol_name","","",52,null],[12,"flags","","",52,null],[13,"Stub","goblin::mach::exports","If the flags is `EXPORT_SYMBOL_FLAGS_STUB_AND_RESOLVER`,…",50,null],[12,"stub_offset","goblin::mach::exports::ExportInfo","",53,null],[12,"resolver_offset","","",53,null],[12,"flags","","",53,null],[17,"EXPORT_SYMBOL_FLAGS_KIND_MASK","goblin::mach::exports","",null,null],[17,"EXPORT_SYMBOL_FLAGS_KIND_REGULAR","","",null,null],[17,"EXPORT_SYMBOL_FLAGS_KIND_ABSOLUTE","","",null,null],[17,"EXPORT_SYMBOL_FLAGS_KIND_THREAD_LOCAL","","",null,null],[17,"EXPORT_SYMBOL_FLAGS_WEAK_DEFINITION","","",null,null],[17,"EXPORT_SYMBOL_FLAGS_REEXPORT","","",null,null],[17,"EXPORT_SYMBOL_FLAGS_STUB_AND_RESOLVER","","",null,null],[11,"new","","",49,[[],["symbolkind",4]]],[11,"to_str","","",49,[[]]],[11,"parse","","Parse out the export info from `bytes`, at `offset`",50,[[],[["exportinfo",4],["result",6]]]],[11,"new","","Create a new export from `name` and `info`",48,[[["exportinfo",4],["string",3]],["export",3]]],[11,"exports","","Walk the export trie for symbols exported by this binary,…",54,[[],[["result",6],["vec",3]]]],[11,"new","","Create a new, lazy, zero-copy export trie from the…",54,[[["dyldinfocommand",3]]]],[0,"fat","goblin::mach","A Mach-o fat binary is a multi-architecture binary container",null,null],[3,"FatHeader","goblin::mach::fat","The Mach-o `FatHeader` always has its data bigendian",null,null],[12,"magic","","The magic number, `cafebabe`",55,null],[12,"nfat_arch","","How many fat architecture headers there are",55,null],[3,"FatArch","","The Mach-o `FatArch` always has its data bigendian",null,null],[12,"cputype","","What kind of CPU this binary is",56,null],[12,"cpusubtype","","",56,null],[12,"offset","","Where in the fat binary it starts",56,null],[12,"size","","How big the binary is",56,null],[12,"align","","",56,null],[17,"FAT_MAGIC","","",null,null],[17,"FAT_CIGAM","","",null,null],[17,"SIZEOF_FAT_HEADER","","",null,null],[17,"SIZEOF_FAT_ARCH","","",null,null],[11,"from_bytes","","Reinterpret a `FatHeader` from `bytes`",55,[[],["fatheader",3]]],[11,"from_fd","","Reads a `FatHeader` from a `File` on disk",55,[[["file",3]],[["result",6],["fatheader",3]]]],[11,"parse","","Parse a mach-o fat header from the `bytes`",55,[[],[["result",6],["fatheader",3]]]],[11,"slice","","Get the slice of bytes this header describes from `bytes`",56,[[]]],[11,"cputype","","Returns the cpu type",56,[[],["cputype",6]]],[11,"cpusubtype","","Returns the cpu subtype with the capabilities removed",56,[[],["cpusubtype",6]]],[11,"cpu_caps","","Returns the capabilities of the CPU",56,[[]]],[11,"is_64","","Whether this fat architecture header describes a 64-bit…",56,[[]]],[11,"parse","","Parse a `FatArch` header from `bytes` at `offset`",56,[[],["result",6]]],[0,"header","goblin::mach","A header contains minimal architecture information, the…",null,null],[3,"Header32","goblin::mach::header","A 32-bit Mach-o header",null,null],[12,"magic","","mach magic number identifier",57,null],[12,"cputype","","cpu specifier",57,null],[12,"cpusubtype","","machine specifier",57,null],[12,"filetype","","type of file",57,null],[12,"ncmds","","number of load commands",57,null],[12,"sizeofcmds","","the size of all the load commands",57,null],[12,"flags","","flags",57,null],[3,"Header64","","A 64-bit Mach-o header",null,null],[12,"magic","","mach magic number identifier",58,null],[12,"cputype","","cpu specifier",58,null],[12,"cpusubtype","","machine specifier",58,null],[12,"filetype","","type of file",58,null],[12,"ncmds","","number of load commands",58,null],[12,"sizeofcmds","","the size of all the load commands",58,null],[12,"flags","","flags",58,null],[12,"reserved","","",58,null],[3,"Header","","Generic sized header",null,null],[12,"magic","","",59,null],[12,"cputype","","",59,null],[12,"cpusubtype","","",59,null],[12,"filetype","","type of file",59,null],[12,"ncmds","","number of load commands",59,null],[12,"sizeofcmds","","the size of all the load commands",59,null],[12,"flags","","flags",59,null],[12,"reserved","","",59,null],[5,"flag_to_str","","",null,[[]]],[5,"filetype_to_str","","",null,[[]]],[17,"MH_NOUNDEFS","","the object file has no undefined references",null,null],[17,"MH_INCRLINK","","the object file is the output of an incremental link…",null,null],[17,"MH_DYLDLINK","","the object file is input for the dynamic linker and can\'t…",null,null],[17,"MH_BINDATLOAD","","the object file\'s undefined references are bound by the…",null,null],[17,"MH_PREBOUND","","the file has its dynamic undefined references prebound.",null,null],[17,"MH_SPLIT_SEGS","","the file has its read-only and read-write segments split",null,null],[17,"MH_LAZY_INIT","","the shared library init routine is to be run lazily via…",null,null],[17,"MH_TWOLEVEL","","the image is using two-level name space bindings",null,null],[17,"MH_FORCE_FLAT","","the executable is forcing all images to use flat name…",null,null],[17,"MH_NOMULTIDEFS","","this umbrella guarantees no multiple defintions of symbols…",null,null],[17,"MH_NOFIXPREBINDING","","do not have dyld notify the prebinding agent about this…",null,null],[17,"MH_PREBINDABLE","","the binary is not prebound but can have its prebinding…",null,null],[17,"MH_ALLMODSBOUND","","indicates that this binary binds to all two-level…",null,null],[17,"MH_SUBSECTIONS_VIA_SYMBOLS","","safe to divide up the sections into sub-sections via…",null,null],[17,"MH_CANONICAL","","the binary has been canonicalized via the unprebind…",null,null],[17,"MH_WEAK_DEFINES","","the final linked image contains external weak symbols",null,null],[17,"MH_BINDS_TO_WEAK","","the final linked image uses weak symbols",null,null],[17,"MH_ALLOW_STACK_EXECUTION","","When this bit is set, all stacks in the task will be given…",null,null],[17,"MH_ROOT_SAFE","","When this bit is set, the binary declares it is safe for…",null,null],[17,"MH_SETUID_SAFE","","When this bit is set, the binary declares it is safe for…",null,null],[17,"MH_NO_REEXPORTED_DYLIBS","","When this bit is set on a dylib, the static linker does…",null,null],[17,"MH_PIE","","When this bit is set, the OS will load the main executable…",null,null],[17,"MH_DEAD_STRIPPABLE_DYLIB","","Only for use on dylibs. When linking against a dylib that…",null,null],[17,"MH_HAS_TLV_DESCRIPTORS","","Contains a section of type S_THREAD_LOCAL_VARIABLES",null,null],[17,"MH_NO_HEAP_EXECUTION","","When this bit is set, the OS will run the main executable…",null,null],[17,"MH_APP_EXTENSION_SAFE","","The code was linked for use in an application extension.",null,null],[17,"MH_MAGIC","","Mach Header magic constant",null,null],[17,"MH_CIGAM","","",null,null],[17,"MH_MAGIC_64","","Mach Header magic constant for 64-bit",null,null],[17,"MH_CIGAM_64","","",null,null],[17,"MH_OBJECT","","relocatable object file",null,null],[17,"MH_EXECUTE","","demand paged executable file",null,null],[17,"MH_FVMLIB","","fixed VM shared library file",null,null],[17,"MH_CORE","","core file",null,null],[17,"MH_PRELOAD","","preloaded executable file",null,null],[17,"MH_DYLIB","","dynamically bound shared library",null,null],[17,"MH_DYLINKER","","dynamic link editor",null,null],[17,"MH_BUNDLE","","dynamically bound bundle file",null,null],[17,"MH_DYLIB_STUB","","shared library stub for static linking only, no section…",null,null],[17,"MH_DSYM","","companion file with only debug sections",null,null],[17,"MH_KEXT_BUNDLE","","x86_64 kexts",null,null],[17,"SIZEOF_HEADER_32","","",null,null],[17,"SIZEOF_HEADER_64","","",null,null],[11,"from_bytes","","Transmutes the given byte array into the corresponding…",57,[[]]],[11,"size","","",57,[[]]],[11,"from_bytes","","Transmutes the given byte array into the corresponding…",58,[[]]],[11,"size","","",58,[[]]],[11,"new","","",59,[[["ctx",3]]]],[11,"cputype","","Returns the cpu type",59,[[],["cputype",6]]],[11,"cpusubtype","","Returns the cpu subtype with the capabilities removed",59,[[],["cpusubtype",6]]],[11,"cpu_caps","","Returns the capabilities of the CPU",59,[[]]],[0,"imports","goblin::mach","Dynamically linked symbolic imports",null,null],[3,"Import","goblin::mach::imports","An dynamically linked symbolic import",null,null],[12,"name","","The symbol name dyld uses to resolve this import",60,null],[12,"dylib","","The library this symbol belongs to (thanks to two-level…",60,null],[12,"is_lazy","","Whether the symbol is lazily resolved or not",60,null],[12,"offset","","The offset in the binary this import is found",60,null],[12,"size","","The size of this import",60,null],[12,"address","","The virtual memory address at which this import is found",60,null],[12,"addend","","The addend of this import",60,null],[12,"is_weak","","Whether this import is weak",60,null],[12,"start_of_sequence_offset","","The offset in the stream of bind opcodes that caused this…",60,null],[3,"BindInterpreter","","An interpreter for mach BIND opcodes. Runs on prebound…",null,null],[11,"new","","Construct a new import binding interpreter from `bytes`…",61,[[["dyldinfocommand",3]]]],[11,"imports","","Return the imports in this binary",61,[[["ctx",3]],[["result",6],["vec",3]]]],[0,"load_command","goblin::mach","Load commands tell the kernel and dynamic linker anything…",null,null],[3,"LoadCommandHeader","goblin::mach::load_command","Occurs at the beginning of every load command to serve as…",null,null],[12,"cmd","","",62,null],[12,"cmdsize","","",62,null],[3,"Section32","","",null,null],[12,"sectname","","name of this section",63,null],[12,"segname","","segment this section goes in",63,null],[12,"addr","","memory address of this section",63,null],[12,"size","","size in bytes of this section",63,null],[12,"offset","","file offset of this section",63,null],[12,"align","","section alignment (power of 2)",63,null],[12,"reloff","","file offset of relocation entries",63,null],[12,"nreloc","","number of relocation entries",63,null],[12,"flags","","flags (section type and attributes)",63,null],[12,"reserved1","","reserved (for offset or index)",63,null],[12,"reserved2","","reserved (for count or sizeof)",63,null],[3,"Section64","","for 64-bit architectures",null,null],[12,"sectname","","name of this section",64,null],[12,"segname","","segment this section goes in",64,null],[12,"addr","","memory address of this section",64,null],[12,"size","","size in bytes of this section",64,null],[12,"offset","","file offset of this section",64,null],[12,"align","","section alignment (power of 2)",64,null],[12,"reloff","","file offset of relocation entries",64,null],[12,"nreloc","","number of relocation entries",64,null],[12,"flags","","flags (section type and attributes",64,null],[12,"reserved1","","reserved (for offset or index)",64,null],[12,"reserved2","","reserved (for count or sizeof)",64,null],[12,"reserved3","","reserved",64,null],[3,"SegmentCommand32","","",null,null],[12,"cmd","","",65,null],[12,"cmdsize","","",65,null],[12,"segname","","",65,null],[12,"vmaddr","","",65,null],[12,"vmsize","","",65,null],[12,"fileoff","","",65,null],[12,"filesize","","",65,null],[12,"maxprot","","",65,null],[12,"initprot","","",65,null],[12,"nsects","","",65,null],[12,"flags","","",65,null],[3,"SegmentCommand64","","",null,null],[12,"cmd","","",66,null],[12,"cmdsize","","",66,null],[12,"segname","","",66,null],[12,"vmaddr","","",66,null],[12,"vmsize","","",66,null],[12,"fileoff","","",66,null],[12,"filesize","","",66,null],[12,"maxprot","","",66,null],[12,"initprot","","",66,null],[12,"nsects","","",66,null],[12,"flags","","",66,null],[3,"Fvmlib","","Fixed virtual memory shared libraries are identified by…",null,null],[12,"name","","library\'s target pathname",67,null],[12,"minor_version","","library\'s minor version number",67,null],[12,"header_addr","","library\'s header address",67,null],[3,"FvmlibCommand","","A fixed virtual shared library (fipub constype ==…",null,null],[12,"cmd","","LC_IDFVMLIB or LC_LOADFVMLIB",68,null],[12,"cmdsize","","includes pathname string",68,null],[12,"fvmlib","","the library identification",68,null],[3,"Dylib","","A dynamically linked shared library (fipub constype ==…",null,null],[12,"name","","library\'s path name",69,null],[12,"timestamp","","library\'s build time stamp",69,null],[12,"current_version","","library\'s current version number",69,null],[12,"compatibility_version","","library\'s compatibility vers number",69,null],[3,"DylibCommand","","",null,null],[12,"cmd","","LC_ID_DYLIB, LC_LOAD_DYLIB, LC_LOAD_WEAK_DYLIB,…",70,null],[12,"cmdsize","","includes pathname string",70,null],[12,"dylib","","the library identification",70,null],[3,"SubFrameworkCommand","","A dynamically linked shared library may be a subframework…",null,null],[12,"cmd","","LC_SUB_FRAMEWORK",71,null],[12,"cmdsize","","includes umbrella string",71,null],[12,"umbrella","","the umbrella framework name",71,null],[3,"SubClientCommand","","For dynamically linked shared libraries that are…",null,null],[12,"cmd","","LC_SUB_CLIENT",72,null],[12,"cmdsize","","includes client string",72,null],[12,"client","","the client name",72,null],[3,"SubUmbrellaCommand","","A dynamically linked shared library may be a sub_umbrella…",null,null],[12,"cmd","","LC_SUB_UMBRELLA",73,null],[12,"cmdsize","","includes sub_umbrella string",73,null],[12,"sub_umbrella","","the sub_umbrella framework name",73,null],[3,"SubLibraryCommand","","A dynamically linked shared library may be a sub_library…",null,null],[12,"cmd","","LC_SUB_LIBRARY",74,null],[12,"cmdsize","","includes sub_library string",74,null],[12,"sub_library","","the sub_library name",74,null],[3,"PreboundDylibCommand","","A program (type == MH_EXECUTE) that is prebound to its…",null,null],[12,"cmd","","LC_PREBOUND_DYLIB",75,null],[12,"cmdsize","","includes strings",75,null],[12,"name","","library\'s path name",75,null],[12,"nmodules","","number of modules in library",75,null],[12,"linked_modules","","bit vector of linked modules",75,null],[3,"DylinkerCommand","","The name of the dynamic linker",null,null],[12,"cmd","","",76,null],[12,"cmdsize","","",76,null],[12,"name","","",76,null],[3,"ThreadCommand","","Thread commands contain machine-specific data structures…",null,null],[12,"cmd","","LC_THREAD or  LC_UNIXTHREAD",77,null],[12,"cmdsize","","total size of this command",77,null],[12,"flavor","","flavor of thread state (but you also need to know the…",77,null],[12,"count","","number of elements in `thread_state` that are valid",77,null],[12,"thread_state","","The raw thread state, details of which varies by CPU",77,null],[3,"RoutinesCommand32","","The routines command contains the address of the dynamic…",null,null],[12,"cmd","","LC_ROUTINES",78,null],[12,"cmdsize","","total size of this command",78,null],[12,"init_address","","address of initialization routine",78,null],[12,"init_module","","index into the module table that the init routine is…",78,null],[12,"reserved1","","",78,null],[12,"reserved2","","",78,null],[12,"reserved3","","",78,null],[12,"reserved4","","",78,null],[12,"reserved5","","",78,null],[12,"reserved6","","",78,null],[3,"RoutinesCommand64","","The 64-bit routines command.  Same use as above.",null,null],[12,"cmd","","LC_ROUTINES_64",79,null],[12,"cmdsize","","total size of this command",79,null],[12,"init_address","","address of initialization routine",79,null],[12,"init_module","","index into the module table that the init routine is…",79,null],[12,"reserved1","","",79,null],[12,"reserved2","","",79,null],[12,"reserved3","","",79,null],[12,"reserved4","","",79,null],[12,"reserved5","","",79,null],[12,"reserved6","","",79,null],[3,"SymtabCommand","","",null,null],[12,"cmd","","",80,null],[12,"cmdsize","","",80,null],[12,"symoff","","",80,null],[12,"nsyms","","",80,null],[12,"stroff","","",80,null],[12,"strsize","","",80,null],[3,"DysymtabCommand","","This is the second set of the symbolic information which…",null,null],[12,"cmd","","",81,null],[12,"cmdsize","","",81,null],[12,"ilocalsym","","index to local symbols",81,null],[12,"nlocalsym","","number of local symbols",81,null],[12,"iextdefsym","","index to externally defined symbols",81,null],[12,"nextdefsym","","number of externally defined symbols",81,null],[12,"iundefsym","","index to undefined symbols",81,null],[12,"nundefsym","","number of undefined symbols",81,null],[12,"tocoff","","file offset to table of contents",81,null],[12,"ntoc","","number of entries in table of contents",81,null],[12,"modtaboff","","file offset to module table",81,null],[12,"nmodtab","","number of module table entries",81,null],[12,"extrefsymoff","","offset to referenced symbol table",81,null],[12,"nextrefsyms","","number of referenced symbol table entries",81,null],[12,"indirectsymoff","","file offset to the indirect symbol table",81,null],[12,"nindirectsyms","","number of indirect symbol table entries",81,null],[12,"extreloff","","offset to external relocation entries",81,null],[12,"nextrel","","number of external relocation entries",81,null],[12,"locreloff","","offset to local relocation entries",81,null],[12,"nlocrel","","number of local relocation entries",81,null],[3,"DylibTableOfContents","","a table of contents entry",null,null],[12,"symbol_index","","the defined external symbol (index into the symbol table)",82,null],[12,"module_index","","index into the module table this symbol is defined in",82,null],[3,"DylibModule","","a module table entry",null,null],[12,"module_name","","the module name (index into string table)",83,null],[12,"iextdefsym","","index into externally defined symbols",83,null],[12,"nextdefsym","","number of externally defined symbols",83,null],[12,"irefsym","","index into reference symbol table",83,null],[12,"nrefsym","","number of reference symbol table entries",83,null],[12,"ilocalsym","","index into symbols for local symbols",83,null],[12,"nlocalsym","","number of local symbols",83,null],[12,"iextrel","","index into external relocation entries",83,null],[12,"nextrel","","number of external relocation entries",83,null],[12,"iinit_iterm","","low 16 bits are the index into the init section, high 16…",83,null],[12,"ninit_nterm","","low 16 bits are the number of init section entries, high…",83,null],[12,"objc_module_info_addr","","the (__OBJC,_module_info) section",83,null],[12,"objc_module_info_size","","the (__OBJC,__module_info) section",83,null],[3,"DylibModule64","","a 64-bit module table entry",null,null],[12,"module_name","","the module name (index into string table)",84,null],[12,"iextdefsym","","index into externally defined symbols",84,null],[12,"nextdefsym","","number of externally defined symbols",84,null],[12,"irefsym","","index into reference symbol table",84,null],[12,"nrefsym","","number of reference symbol table entries",84,null],[12,"ilocalsym","","index into symbols for local symbols",84,null],[12,"nlocalsym","","number of local symbols",84,null],[12,"iextrel","","index into external relocation entries",84,null],[12,"nextrel","","number of external relocation entries",84,null],[12,"iinit_iterm","","low 16 bits are the index into the init section, high 16…",84,null],[12,"ninit_nterm","","low 16 bits are the number of init section entries, high…",84,null],[12,"objc_module_info_size","","the (__OBJC,__module_info) section",84,null],[12,"objc_module_info_addr","","the (__OBJC,__module_info) section",84,null],[3,"DylibReference","","The entries in the reference symbol table are used when…",null,null],[12,"isym","","24 bits bit-field index into the symbol table",85,null],[12,"flags","","flags to indicate the type of reference",85,null],[3,"TwolevelHintsCommand","","The twolevel_hints_command contains the offset and number…",null,null],[12,"cmd","","LC_TWOLEVEL_HINTS",86,null],[12,"cmdsize","","sizeof(struct twolevel_hints_command)",86,null],[12,"offset","","offset to the hint table",86,null],[12,"nhints","","number of hints in the hint table",86,null],[3,"TwolevelHint","","The entries in the two-level namespace lookup hints table…",null,null],[12,"isub_image","","index into the sub images",87,null],[12,"itoc","","24 bit field index into the table of contents",87,null],[3,"PrebindCksumCommand","","The prebind_cksum_command contains the value of the…",null,null],[12,"cmd","","LC_PREBIND_CKSUM",88,null],[12,"cmdsize","","sizeof(struct prebind_cksum_command)",88,null],[12,"cksum","","the check sum or zero",88,null],[3,"UuidCommand","","The uuid load command contains a single 128-bit unique…",null,null],[12,"cmd","","LC_UUID",89,null],[12,"cmdsize","","sizeof(struct uuid_command)",89,null],[12,"uuid","","16 bytes the 128-bit uuid",89,null],[3,"RpathCommand","","The rpath_command contains a path which at runtime should…",null,null],[12,"cmd","","LC_RPATH",90,null],[12,"cmdsize","","includes string",90,null],[12,"path","","path to add to run path",90,null],[3,"LinkeditDataCommand","","The linkedit_data_command contains the offsets and sizes…",null,null],[12,"cmd","","LC_CODE_SIGNATURE, LC_SEGMENT_SPLIT_INFO,…",91,null],[12,"cmdsize","","sizeof(struct linkedit_data_command)",91,null],[12,"dataoff","","file offset of data in __LINKEDIT segment",91,null],[12,"datasize","","file size of data in __LINKEDIT segment",91,null],[3,"EncryptionInfoCommand32","","The encryption_info_command contains the file offset and…",null,null],[12,"cmd","","LC_ENCRYPTION_INFO",92,null],[12,"cmdsize","","sizeof(struct encryption_info_command)",92,null],[12,"cryptoff","","file offset of encrypted range",92,null],[12,"cryptsize","","file size of encrypted range",92,null],[12,"cryptid","","which enryption system, 0 means not-encrypted yet",92,null],[3,"EncryptionInfoCommand64","","The encryption_info_command_64 contains the file offset…",null,null],[12,"cmd","","LC_ENCRYPTION_INFO_64",93,null],[12,"cmdsize","","sizeof(struct encryption_info_command_64)",93,null],[12,"cryptoff","","file offset of encrypted range",93,null],[12,"cryptsize","","file size of encrypted range",93,null],[12,"cryptid","","which enryption system, 0 means not-encrypted yet",93,null],[12,"pad","","padding to make this struct\'s size a multiple of 8 bytes",93,null],[3,"VersionMinCommand","","The version_min_command contains the min OS version on…",null,null],[12,"cmd","","",94,null],[12,"cmdsize","","",94,null],[12,"version","","X.Y.Z is encoded in nibbles xxxx.yy.zz",94,null],[12,"sdk","","X.Y.Z is encoded in nibbles xxxx.yy.zz",94,null],[3,"DyldInfoCommand","","",null,null],[12,"cmd","","LC_DYLD_INFO or LC_DYLD_INFO_ONLY",95,null],[12,"cmdsize","","sizeof(struct dyld_info_command)",95,null],[12,"rebase_off","","file offset to rebase info",95,null],[12,"rebase_size","","size of rebase info",95,null],[12,"bind_off","","file offset to binding info",95,null],[12,"bind_size","","size of binding info",95,null],[12,"weak_bind_off","","file offset to weak binding info",95,null],[12,"weak_bind_size","","size of weak binding info",95,null],[12,"lazy_bind_off","","file offset to lazy binding info",95,null],[12,"lazy_bind_size","","size of lazy binding infs",95,null],[12,"export_off","","file offset to lazy binding info",95,null],[12,"export_size","","size of lazy binding infs",95,null],[3,"LinkerOptionCommand","","The linker_option_command contains linker options embedded…",null,null],[12,"cmd","","LC_LINKER_OPTION only used in MH_OBJECT fipub constypes",96,null],[12,"cmdsize","","",96,null],[12,"count","","number of strings concatenation of zero terminated UTF8…",96,null],[3,"SymsegCommand","","The symseg_command contains the offset and size of the GNU…",null,null],[12,"cmd","","LC_SYMSEG",97,null],[12,"cmdsize","","sizeof(struct symseg_command)",97,null],[12,"offset","","symbol segment offset",97,null],[12,"size","","symbol segment size in bytes",97,null],[3,"IdentCommand","","The ident_command contains a free format string table…",null,null],[12,"cmd","","LC_IDENT",98,null],[12,"cmdsize","","strings that follow this command",98,null],[3,"FvmfileCommand","","The fvmfile_command contains a reference to a file to be…",null,null],[12,"cmd","","LC_FVMFILE",99,null],[12,"cmdsize","","includes pathname string",99,null],[12,"name","","files pathname",99,null],[12,"header_addr","","files virtual address",99,null],[3,"EntryPointCommand","","The entry_point_command is a replacement for…",null,null],[12,"cmd","","",100,null],[12,"cmdsize","","",100,null],[12,"entryoff","","uint64_t file __TEXT offset of main",100,null],[12,"stacksize","","uint64_t if not zero, initial stack size",100,null],[3,"SourceVersionCommand","","The source_version_command is an optional load command…",null,null],[12,"cmd","","LC_SOURCE_VERSION",101,null],[12,"cmdsize","","",101,null],[12,"version","","A.B.C.D.E packed as a24.b10.c10.d10.e10",101,null],[3,"DataInCodeEntry","","The LC_DATA_IN_CODE load commands uses a…",null,null],[12,"offset","","from mach_header to start of data range",102,null],[12,"length","","number of bytes in data range",102,null],[12,"kind","","a DICE_KIND_* value",102,null],[3,"LoadCommand","","A tagged LoadCommand union",null,null],[12,"offset","","The offset this load command occurs at",103,null],[12,"command","","Which load command this is inside a variant",103,null],[4,"CommandVariant","","The various load commands as a cast-free variant/enum",null,null],[13,"Segment32","","",104,null],[13,"Segment64","","",104,null],[13,"Uuid","","",104,null],[13,"Symtab","","",104,null],[13,"Symseg","","",104,null],[13,"Thread","","",104,null],[13,"Unixthread","","",104,null],[13,"LoadFvmlib","","",104,null],[13,"IdFvmlib","","",104,null],[13,"Ident","","",104,null],[13,"Fvmfile","","",104,null],[13,"Prepage","","",104,null],[13,"Dysymtab","","",104,null],[13,"LoadDylib","","",104,null],[13,"IdDylib","","",104,null],[13,"LoadDylinker","","",104,null],[13,"IdDylinker","","",104,null],[13,"PreboundDylib","","",104,null],[13,"Routines32","","",104,null],[13,"Routines64","","",104,null],[13,"SubFramework","","",104,null],[13,"SubUmbrella","","",104,null],[13,"SubClient","","",104,null],[13,"SubLibrary","","",104,null],[13,"TwolevelHints","","",104,null],[13,"PrebindCksum","","",104,null],[13,"LoadWeakDylib","","",104,null],[13,"Rpath","","",104,null],[13,"CodeSignature","","",104,null],[13,"SegmentSplitInfo","","",104,null],[13,"ReexportDylib","","",104,null],[13,"LazyLoadDylib","","",104,null],[13,"EncryptionInfo32","","",104,null],[13,"EncryptionInfo64","","",104,null],[13,"DyldInfo","","",104,null],[13,"DyldInfoOnly","","",104,null],[13,"LoadUpwardDylib","","",104,null],[13,"VersionMinMacosx","","",104,null],[13,"VersionMinIphoneos","","",104,null],[13,"FunctionStarts","","",104,null],[13,"DyldEnvironment","","",104,null],[13,"Main","","",104,null],[13,"DataInCode","","",104,null],[13,"SourceVersion","","",104,null],[13,"DylibCodeSignDrs","","",104,null],[13,"LinkerOption","","",104,null],[13,"LinkerOptimizationHint","","",104,null],[13,"Unimplemented","","",104,null],[5,"cmd_to_str","","",null,[[]]],[6,"LcStr","","",null,null],[17,"SIZEOF_LOAD_COMMAND","","",null,null],[17,"SIZEOF_LC_STR","","",null,null],[17,"SIZEOF_SECTION_32","","",null,null],[17,"SIZEOF_SECTION_64","","",null,null],[17,"SIZEOF_SEGMENT_COMMAND_32","","",null,null],[17,"SIZEOF_SEGMENT_COMMAND_64","","",null,null],[17,"SIZEOF_FVMLIB","","",null,null],[17,"SIZEOF_FVMLIB_COMMAND","","",null,null],[17,"SIZEOF_DYLIB","","",null,null],[17,"SIZEOF_DYLIB_COMMAND","","",null,null],[17,"SIZEOF_SUB_FRAMEWORK_COMMAND","","",null,null],[17,"SIZEOF_SUB_CLIENT_COMMAND","","",null,null],[17,"SIZEOF_SUB_UMBRELLA_COMMAND","","",null,null],[17,"SIZEOF_SUB_LIBRARY_COMMAND","","",null,null],[17,"SIZEOF_PREBOUND_DYLIB_COMMAND","","",null,null],[17,"SIZEOF_DYLINKER_COMMAND","","",null,null],[17,"SIZEOF_SYMTAB_COMMAND","","",null,null],[17,"SIZEOF_DYSYMTAB_COMMAND","","",null,null],[17,"SIZEOF_UUID_COMMAND","","",null,null],[17,"SIZEOF_RPATH_COMMAND","","",null,null],[17,"SIZEOF_LINKEDIT_DATA_COMMAND","","",null,null],[17,"SIZEOF_ENCRYPTION_INFO_COMMAND_32","","",null,null],[17,"SIZEOF_ENCRYPTION_INFO_COMMAND_64","","",null,null],[17,"SIZEOF_VERSION_MIN_COMMAND","","",null,null],[17,"SIZEOF_DYLIB_INFO_COMMAND","","",null,null],[17,"SIZEOF_LINKER_OPTION_COMMAND","","",null,null],[17,"SIZEOF_SYMSEG_COMMAND","","",null,null],[17,"SIZEOF_IDENT_COMMAND","","",null,null],[17,"SIZEOF_FVMFILE_COMMAND","","",null,null],[17,"SIZEOF_ENTRY_POINT_COMMAND","","",null,null],[17,"LC_REQ_DYLD","","",null,null],[17,"LC_LOAD_WEAK_DYLIB","","",null,null],[17,"LC_RPATH","","",null,null],[17,"LC_REEXPORT_DYLIB","","",null,null],[17,"LC_DYLD_INFO_ONLY","","",null,null],[17,"LC_LOAD_UPWARD_DYLIB","","",null,null],[17,"LC_MAIN","","",null,null],[17,"LC_SEGMENT","","",null,null],[17,"LC_SYMTAB","","",null,null],[17,"LC_SYMSEG","","",null,null],[17,"LC_THREAD","","",null,null],[17,"LC_UNIXTHREAD","","",null,null],[17,"LC_LOADFVMLIB","","",null,null],[17,"LC_IDFVMLIB","","",null,null],[17,"LC_IDENT","","",null,null],[17,"LC_FVMFILE","","",null,null],[17,"LC_PREPAGE","","",null,null],[17,"LC_DYSYMTAB","","",null,null],[17,"LC_LOAD_DYLIB","","",null,null],[17,"LC_ID_DYLIB","","",null,null],[17,"LC_LOAD_DYLINKER","","",null,null],[17,"LC_ID_DYLINKER","","",null,null],[17,"LC_PREBOUND_DYLIB","","",null,null],[17,"LC_ROUTINES","","",null,null],[17,"LC_SUB_FRAMEWORK","","",null,null],[17,"LC_SUB_UMBRELLA","","",null,null],[17,"LC_SUB_CLIENT","","",null,null],[17,"LC_SUB_LIBRARY","","",null,null],[17,"LC_TWOLEVEL_HINTS","","",null,null],[17,"LC_PREBIND_CKSUM","","",null,null],[17,"LC_SEGMENT_64","","",null,null],[17,"LC_ROUTINES_64","","",null,null],[17,"LC_UUID","","",null,null],[17,"LC_CODE_SIGNATURE","","",null,null],[17,"LC_SEGMENT_SPLIT_INFO","","",null,null],[17,"LC_LAZY_LOAD_DYLIB","","",null,null],[17,"LC_ENCRYPTION_INFO","","",null,null],[17,"LC_DYLD_INFO","","",null,null],[17,"LC_VERSION_MIN_MACOSX","","",null,null],[17,"LC_VERSION_MIN_IPHONEOS","","",null,null],[17,"LC_FUNCTION_STARTS","","",null,null],[17,"LC_DYLD_ENVIRONMENT","","",null,null],[17,"LC_DATA_IN_CODE","","",null,null],[17,"LC_SOURCE_VERSION","","",null,null],[17,"LC_DYLIB_CODE_SIGN_DRS","","",null,null],[17,"LC_ENCRYPTION_INFO_64","","",null,null],[17,"LC_LINKER_OPTION","","",null,null],[17,"LC_LINKER_OPTIMIZATION_HINT","","",null,null],[11,"name","","",65,[[],["result",6]]],[11,"name","","",66,[[],["result",6]]],[11,"instruction_pointer","","",77,[[["cputype",6]],["result",6]]],[11,"new","","",80,[[]]],[11,"new","","",81,[[]]],[11,"new","","",94,[[]]],[11,"cmdsize","","",104,[[]]],[11,"cmd","","",104,[[]]],[11,"parse","","Parse a load command from `bytes` at `offset` with the…",103,[[["endian",4]],["result",6]]],[0,"relocation","goblin::mach","",null,null],[3,"RelocationInfo","goblin::mach::relocation","",null,null],[12,"r_address","","Offset in the section to what is being relocated",105,null],[12,"r_info","","Contains all of the relocation info as a bitfield.…",105,null],[5,"reloc_to_str","","",null,[[["cputype",6],["reloctype",6]]]],[6,"RelocType","","",null,null],[17,"SIZEOF_RELOCATION_INFO","","",null,null],[17,"R_ABS","","Absolute relocation type for Mach-O files",null,null],[17,"X86_64_RELOC_UNSIGNED","","Absolute address",null,null],[17,"X86_64_RELOC_SIGNED","","Signed 32-bit displacement",null,null],[17,"X86_64_RELOC_BRANCH","","A CALL/JMP instruction with 32-bit displacement",null,null],[17,"X86_64_RELOC_GOT_LOAD","","A MOVQ load of a GOT entry",null,null],[17,"X86_64_RELOC_GOT","","Other GOT references",null,null],[17,"X86_64_RELOC_SUBTRACTOR","","Must be followed by a X86_64_RELOC_UNSIGNED relocation",null,null],[17,"X86_64_RELOC_SIGNED_1","","for signed 32-bit displacement with a -1 addend",null,null],[17,"X86_64_RELOC_SIGNED_2","","for signed 32-bit displacement with a -2 addend",null,null],[17,"X86_64_RELOC_SIGNED_4","","for signed 32-bit displacement with a -4 addend",null,null],[17,"X86_64_RELOC_TLV","","for thread local variables",null,null],[17,"GENERIC_RELOC_VANILLA","","",null,null],[17,"GENERIC_RELOC_PAIR","","",null,null],[17,"GENERIC_RELOC_SECTDIFF","","",null,null],[17,"GENERIC_RELOC_PB_LA_PTR","","",null,null],[17,"GENERIC_RELOC_LOCAL_SECTDIFF","","",null,null],[17,"GENERIC_RELOC_TLV","","",null,null],[17,"ARM_RELOC_VANILLA","","",null,null],[17,"ARM_RELOC_PAIR","","",null,null],[17,"ARM_RELOC_SECTDIFF","","",null,null],[17,"ARM_RELOC_LOCAL_SECTDIFF","","",null,null],[17,"ARM_RELOC_PB_LA_PTR","","",null,null],[17,"ARM_RELOC_BR24","","",null,null],[17,"ARM_THUMB_RELOC_BR22","","",null,null],[17,"ARM_THUMB_32BIT_BRANCH","","Obsolete",null,null],[17,"ARM_RELOC_HALF","","",null,null],[17,"ARM_RELOC_HALF_SECTDIFF","","",null,null],[17,"ARM64_RELOC_UNSIGNED","","For pointers.",null,null],[17,"ARM64_RELOC_SUBTRACTOR","","Must be followed by an ARM64_RELOC_UNSIGNED",null,null],[17,"ARM64_RELOC_BRANCH26","","A B/BL instruction with 26-bit displacement.",null,null],[17,"ARM64_RELOC_PAGE21","","PC-rel distance to page of target.",null,null],[17,"ARM64_RELOC_PAGEOFF12","","Offset within page, scaled by r_length.",null,null],[17,"ARM64_RELOC_GOT_LOAD_PAGE21","","PC-rel distance to page of GOT slot.",null,null],[17,"ARM64_RELOC_GOT_LOAD_PAGEOFF12","","Offset within page of GOT slot, scaled by r_length.",null,null],[17,"ARM64_RELOC_POINTER_TO_GOT","","For pointers to GOT slots.",null,null],[17,"ARM64_RELOC_TLVP_LOAD_PAGE21","","PC-rel distance to page of TLVP slot.",null,null],[17,"ARM64_RELOC_TLVP_LOAD_PAGEOFF12","","Offset within page of TLVP slot, scaled by r_length.",null,null],[17,"ARM64_RELOC_ADDEND","","Must be followed by ARM64_RELOC_PAGE21 or…",null,null],[11,"r_symbolnum","","Symbol index if `r_extern` == 1 or section ordinal if…",105,[[]]],[11,"r_pcrel","","Was relocated pc relative already, 1 bit",105,[[]]],[11,"r_length","","The length of the relocation, 0=byte, 1=word, 2=long,…",105,[[]]],[11,"r_extern","","Does not include value of sym referenced, 1 bit",105,[[]]],[11,"r_type","","Ff not 0, machine specific relocation type, in bits :4",105,[[]]],[11,"is_extern","","If true, this relocation is for a symbol; if false, or a…",105,[[]]],[11,"is_pic","","If true, this is a PIC relocation",105,[[]]],[11,"to_str","","Returns a string representation of this relocation, given…",105,[[["cputype",6]]]],[0,"segment","goblin::mach","",null,null],[3,"RelocationIterator","goblin::mach::segment","",null,null],[3,"Section","","Generalized 32/64 bit Section",null,null],[12,"sectname","","name of this section",106,null],[12,"segname","","segment this section goes in",106,null],[12,"addr","","memory address of this section",106,null],[12,"size","","size in bytes of this section",106,null],[12,"offset","","file offset of this section",106,null],[12,"align","","section alignment (power of 2)",106,null],[12,"reloff","","file offset of relocation entries",106,null],[12,"nreloc","","number of relocation entries",106,null],[12,"flags","","flags (section type and attributes",106,null],[3,"SectionIterator","","",null,null],[3,"Segment","","Generalized 32/64 bit Segment Command",null,null],[12,"cmd","","",107,null],[12,"cmdsize","","",107,null],[12,"segname","","",107,null],[12,"vmaddr","","",107,null],[12,"vmsize","","",107,null],[12,"fileoff","","",107,null],[12,"filesize","","",107,null],[12,"maxprot","","",107,null],[12,"initprot","","",107,null],[12,"nsects","","",107,null],[12,"flags","","",107,null],[12,"data","","",107,null],[3,"Segments","","An opaque 32/64-bit container for Mach-o segments",null,null],[6,"SectionData","","",null,null],[11,"name","","The name of this section",106,[[],["result",6]]],[11,"segname","","The containing segment\'s name",106,[[],["result",6]]],[11,"iter_relocations","","Iterate this sections relocations given `data`; `data`…",106,[[["ctx",3]],["relocationiterator",3]]],[11,"new","","Create a new, blank segment, with cmd either…",107,[[["ctx",3]]]],[11,"name","","Get the name of this segment",107,[[],["result",6]]],[11,"sections","","Get the sections from this segment, erroring if any…",107,[[],[["result",6],["vec",3]]]],[11,"from_32","","Convert the raw C 32-bit segment command to a generalized…",107,[[["segmentcommand32",3],["ctx",3]],[["result",4],["error",4]]]],[11,"from_64","","Convert the raw C 64-bit segment command to a generalized…",107,[[["segmentcommand64",3],["ctx",3]],[["result",4],["error",4]]]],[11,"new","","Construct a new generalized segment container from this…",108,[[["ctx",3]]]],[11,"sections","","Get every section from every segment",108,[[],[["box",3],["iterator",8]]]],[0,"symbols","goblin::mach","\\\"Nlist\\\" style symbols in this binary - beware, like most…",null,null],[3,"Nlist32","goblin::mach::symbols","",null,null],[12,"n_strx","","index into the string table",109,null],[12,"n_type","","type flag, see below",109,null],[12,"n_sect","","section number or NO_SECT",109,null],[12,"n_desc","","see <mach-o/stab.h>",109,null],[12,"n_value","","value of this symbol (or stab offset)",109,null],[3,"Nlist64","","",null,null],[12,"n_strx","","index into the string table",110,null],[12,"n_type","","type flag, see below",110,null],[12,"n_sect","","section number or NO_SECT",110,null],[12,"n_desc","","see <mach-o/stab.h>",110,null],[12,"n_value","","value of this symbol (or stab offset)",110,null],[3,"Nlist","","",null,null],[12,"n_strx","","index into the string table",111,null],[12,"n_type","","type flag, see below",111,null],[12,"n_sect","","section number or NO_SECT",111,null],[12,"n_desc","","see <mach-o/stab.h>",111,null],[12,"n_value","","value of this symbol (or stab offset)",111,null],[3,"SymbolsCtx","","",null,null],[12,"nsyms","","",112,null],[12,"strtab","","",112,null],[12,"ctx","","",112,null],[3,"SymbolIterator","","",null,null],[3,"Symbols","","A zero-copy \\\"nlist\\\" style symbol table (\\\"stab\\\"), including…",null,null],[5,"n_type_to_str","","",null,[[]]],[17,"N_STAB","","if any of these bits set, a symbolic debugging entry",null,null],[17,"N_PEXT","","private external symbol bit",null,null],[17,"N_TYPE","","mask for the type bits",null,null],[17,"N_EXT","","external symbol bit, set for external symbols",null,null],[17,"NO_SECT","","symbol is not in any section",null,null],[17,"MAX_SECT","","1 thru 255 inclusive",null,null],[17,"N_UNDF","","undefined, n_sect == NO_SECT",null,null],[17,"N_ABS","","absolute, n_sect == NO_SECT",null,null],[17,"N_SECT","","defined in section number n_sect",null,null],[17,"N_PBUD","","prebound undefined (defined in a dylib)",null,null],[17,"N_INDR","","indirect",null,null],[17,"N_GSYM","","",null,null],[17,"N_FNAME","","",null,null],[17,"N_FUN","","",null,null],[17,"N_STSYM","","",null,null],[17,"N_LCSYM","","",null,null],[17,"N_BNSYM","","",null,null],[17,"N_PC","","",null,null],[17,"N_AST","","",null,null],[17,"N_OPT","","",null,null],[17,"N_RSYM","","",null,null],[17,"N_SLINE","","",null,null],[17,"N_ENSYM","","",null,null],[17,"N_SSYM","","",null,null],[17,"N_SO","","",null,null],[17,"N_OSO","","",null,null],[17,"N_LSYM","","",null,null],[17,"N_BINCL","","",null,null],[17,"N_SOL","","",null,null],[17,"N_PARAMS","","",null,null],[17,"N_VERSION","","",null,null],[17,"N_OLEVEL","","",null,null],[17,"N_PSYM","","",null,null],[17,"N_EINCL","","",null,null],[17,"N_ENTRY","","",null,null],[17,"N_LBRAC","","",null,null],[17,"N_EXCL","","",null,null],[17,"N_RBRAC","","",null,null],[17,"N_BCOMM","","",null,null],[17,"N_ECOMM","","",null,null],[17,"N_ECOML","","",null,null],[17,"N_LENG","","",null,null],[17,"NLIST_TYPE_MASK","","",null,null],[17,"NLIST_TYPE_GLOBAL","","",null,null],[17,"NLIST_TYPE_LOCAL","","",null,null],[17,"REFERENCE_TYPE","","Mask for reference flags of `n_desc` field.",null,null],[17,"REFERENCE_FLAG_UNDEFINED_NON_LAZY","","This symbol is a reference to an external non-lazy (data)…",null,null],[17,"REFERENCE_FLAG_UNDEFINED_LAZY","","This symbol is a reference to an external lazy symbol—that…",null,null],[17,"REFERENCE_FLAG_DEFINED","","This symbol is defined in this module.",null,null],[17,"REFERENCE_FLAG_PRIVATE_DEFINED","","This symbol is defined in this module and is visible only…",null,null],[17,"REFERENCE_FLAG_PRIVATE_UNDEFINED_NON_LAZY","","This symbol is defined in another module in this file, is…",null,null],[17,"REFERENCE_FLAG_PRIVATE_UNDEFINED_LAZY","","This symbol is defined in another module in this file, is…",null,null],[17,"REFERENCED_DYNAMICALLY","","Must be set for any defined symbol that is referenced by…",null,null],[17,"N_DESC_DISCARDED","","Sometimes used by the dynamic linker at runtime in a fully…",null,null],[17,"N_NO_DEAD_STRIP","","When set in a relocatable object file (file type…",null,null],[17,"N_WEAK_REF","","Indicates that this undefined symbol is a weak reference.…",null,null],[17,"N_WEAK_DEF","","Indicates that this symbol is a weak definition. If the…",null,null],[17,"SIZEOF_NLIST_32","","",null,null],[17,"SIZEOF_NLIST_64","","",null,null],[11,"get_type","","Gets this symbol\'s type in bits 0xe",111,[[]]],[11,"type_str","","Gets the str representation of the type of this symbol",111,[[]]],[11,"is_global","","Whether this symbol is global or not",111,[[]]],[11,"is_weak","","Whether this symbol is weak or not",111,[[]]],[11,"is_undefined","","Whether this symbol is undefined or not",111,[[]]],[11,"is_stab","","Whether this symbol is a symbolic debugging entry",111,[[]]],[11,"new","","Creates a new symbol table with `count` elements, from the…",113,[[],[["result",6],["symbols",3]]]],[11,"parse","","",113,[[["ctx",3],["symtabcommand",3]],[["result",6],["symbols",3]]]],[11,"iter","","",113,[[],["symboliterator",3]]],[11,"get","","Parses a single Nlist symbol from the binary, with its…",113,[[],["result",6]]],[11,"is_object_file","goblin::mach","Is this a relocatable object file?",45,[[]]],[11,"symbols","","Return an iterator over all the symbols in this binary",45,[[],["symboliterator",3]]],[11,"relocations","","Return a vector of the relocations in this binary",45,[[],[["result",6],["vec",3]]]],[11,"exports","","Return the exported symbols in this binary (if any)",45,[[],[["vec",3],["result",6]]]],[11,"imports","","Return the imported symbols in this binary that dyld knows…",45,[[],[["vec",3],["result",6]]]],[11,"parse","","Parses the Mach-o binary from `bytes` at `offset`",45,[[],[["result",6],["macho",3]]]],[11,"new","","Lazily construct `Self`",46,[[],["result",6]]],[11,"iter_arches","","Iterate every fat arch header",46,[[],["fatarchiterator",3]]],[11,"arches","","Return all the architectures in this binary",46,[[],[["result",6],["vec",3]]]],[11,"get","","Try to get the Mach-o binary at `index`",46,[[],[["result",6],["macho",3]]]],[11,"find","","",46,[[["fn",8]],[["result",6],["option",4]]]],[11,"find_cputype","","Try and find the `cputype` in `Self`, if there is one",46,[[],[["result",6],["option",4]]]],[11,"parse","","Parse from `bytes` either a multi-arch binary or a regular…",47,[[],["result",6]]],[0,"pe","goblin","A PE32 and PE32+ parser",null,null],[3,"PE","goblin::pe","An analyzed PE32/PE32+ binary",null,null],[12,"header","","The PE header",114,null],[12,"sections","","A list of the sections in this PE binary",114,null],[12,"size","","The size of the binary",114,null],[12,"name","","The name of this `dll`, if it has one",114,null],[12,"is_lib","","Whether this is a `dll` or not",114,null],[12,"is_64","","Whether the binary is 64-bit (PE32+)",114,null],[12,"entry","","the entry point of the binary",114,null],[12,"image_base","","The binary\'s RVA, or image base - useful for computing…",114,null],[12,"export_data","","Data about any exported symbols in this binary (e.g., if…",114,null],[12,"import_data","","Data for any imported symbols, and from which `dll`, etc.,…",114,null],[12,"exports","","The list of exported symbols in this binary, contains…",114,null],[12,"imports","","The list symbols imported by this binary from other `dll`s",114,null],[12,"libraries","","The list of libraries which this binary imports symbols from",114,null],[12,"debug_data","","Debug information, if any, contained in the PE header",114,null],[12,"exception_data","","Exception handling and stack unwind information, if any,…",114,null],[3,"Coff","","An analyzed COFF object",null,null],[12,"header","","The COFF header",115,null],[12,"sections","","A list of the sections in this COFF binary",115,null],[12,"symbols","","The COFF symbol table.",115,null],[12,"strings","","The string table.",115,null],[0,"characteristic","","",null,null],[5,"is_dll","goblin::pe::characteristic","",null,[[]]],[5,"is_exe","","",null,[[]]],[17,"IMAGE_FILE_RELOCS_STRIPPED","","",null,null],[17,"IMAGE_FILE_EXECUTABLE_IMAGE","","",null,null],[17,"IMAGE_FILE_LINE_NUMS_STRIPPED","","",null,null],[17,"IMAGE_FILE_LOCAL_SYMS_STRIPPED","","",null,null],[17,"IMAGE_FILE_AGGRESSIVE_WS_TRIM","","",null,null],[17,"IMAGE_FILE_LARGE_ADDRESS_AWARE","","",null,null],[17,"RESERVED","","",null,null],[17,"IMAGE_FILE_BYTES_REVERSED_LO","","",null,null],[17,"IMAGE_FILE_32BIT_MACHINE","","",null,null],[17,"IMAGE_FILE_DEBUG_STRIPPED","","",null,null],[17,"IMAGE_FILE_REMOVABLE_RUN_FROM_SWAP","","",null,null],[17,"IMAGE_FILE_NET_RUN_FROM_SWAP","","",null,null],[17,"IMAGE_FILE_SYSTEM","","",null,null],[17,"IMAGE_FILE_DLL","","",null,null],[17,"IMAGE_FILE_UP_SYSTEM_ONLY","","",null,null],[17,"IMAGE_FILE_BYTES_REVERSED_HI","","",null,null],[0,"data_directories","goblin::pe","",null,null],[3,"DataDirectory","goblin::pe::data_directories","",null,null],[12,"virtual_address","","",116,null],[12,"size","","",116,null],[3,"DataDirectories","","",null,null],[12,"data_directories","","",117,null],[17,"SIZEOF_DATA_DIRECTORY","","",null,null],[11,"parse","","",116,[[],["result",6]]],[11,"parse","","",117,[[],["result",6]]],[11,"get_export_table","","",117,[[],["option",4]]],[11,"get_import_table","","",117,[[],["option",4]]],[11,"get_resource_table","","",117,[[],["option",4]]],[11,"get_exception_table","","",117,[[],["option",4]]],[11,"get_certificate_table","","",117,[[],["option",4]]],[11,"get_base_relocation_table","","",117,[[],["option",4]]],[11,"get_debug_table","","",117,[[],["option",4]]],[11,"get_architecture","","",117,[[],["option",4]]],[11,"get_global_ptr","","",117,[[],["option",4]]],[11,"get_tls_table","","",117,[[],["option",4]]],[11,"get_load_config_table","","",117,[[],["option",4]]],[11,"get_bound_import_table","","",117,[[],["option",4]]],[11,"get_import_address_table","","",117,[[],["option",4]]],[11,"get_delay_import_descriptor","","",117,[[],["option",4]]],[11,"get_clr_runtime_header","","",117,[[],["option",4]]],[0,"debug","goblin::pe","",null,null],[3,"DebugData","goblin::pe::debug","",null,null],[12,"image_debug_directory","","",118,null],[12,"codeview_pdb70_debug_info","","",118,null],[3,"ImageDebugDirectory","","",null,null],[12,"characteristics","","",119,null],[12,"time_date_stamp","","",119,null],[12,"major_version","","",119,null],[12,"minor_version","","",119,null],[12,"data_type","","",119,null],[12,"size_of_data","","",119,null],[12,"address_of_raw_data","","",119,null],[12,"pointer_to_raw_data","","",119,null],[3,"CodeviewPDB70DebugInfo","","",null,null],[12,"codeview_signature","","",120,null],[12,"signature","","",120,null],[12,"age","","",120,null],[12,"filename","","",120,null],[17,"IMAGE_DEBUG_TYPE_UNKNOWN","","",null,null],[17,"IMAGE_DEBUG_TYPE_COFF","","",null,null],[17,"IMAGE_DEBUG_TYPE_CODEVIEW","","",null,null],[17,"IMAGE_DEBUG_TYPE_FPO","","",null,null],[17,"IMAGE_DEBUG_TYPE_MISC","","",null,null],[17,"IMAGE_DEBUG_TYPE_EXCEPTION","","",null,null],[17,"IMAGE_DEBUG_TYPE_FIXUP","","",null,null],[17,"IMAGE_DEBUG_TYPE_BORLAND","","",null,null],[17,"CODEVIEW_PDB70_MAGIC","","",null,null],[17,"CODEVIEW_PDB20_MAGIC","","",null,null],[17,"CODEVIEW_CV50_MAGIC","","",null,null],[17,"CODEVIEW_CV41_MAGIC","","",null,null],[11,"parse","","",118,[[["datadirectory",3]],["result",6]]],[11,"guid","","Return this executable\'s debugging GUID, suitable for…",118,[[],["option",4]]],[11,"parse","","",120,[[["imagedebugdirectory",3]],[["option",4],["result",6]]]],[0,"exception","goblin::pe","Exception handling and stack unwinding for x64.",null,null],[3,"RuntimeFunction","goblin::pe::exception","An unwind entry for a range of a function.",null,null],[12,"begin_address","","Function start address.",121,null],[12,"end_address","","Function end address.",121,null],[12,"unwind_info_address","","Unwind info address.",121,null],[3,"RuntimeFunctionIterator","","Iterator over runtime function entries in `ExceptionData`.",null,null],[3,"Register","","An x64 register used during unwinding.",null,null],[12,"0","","",122,null],[3,"UnwindCode","","An unwind operation that is executed at a particular place…",null,null],[12,"code_offset","","Offset of the corresponding instruction in the function…",123,null],[12,"operation","","The operation that was performed by the code in the prolog.",123,null],[3,"UnwindCodeIterator","","An iterator over unwind codes for a function or part of a…",null,null],[3,"UnwindInfo","","Unwind information for a function or portion of a function.",null,null],[12,"version","","Version of this unwind info.",124,null],[12,"size_of_prolog","","Length of the function prolog in bytes.",124,null],[12,"frame_register","","The nonvolatile register used as the frame pointer of this…",124,null],[12,"frame_register_offset","","Offset from RSP that is applied to the FP register when it…",124,null],[12,"chained_info","","A record pointing to chained unwind information.",124,null],[12,"handler","","An exception or termination handler called as part of the…",124,null],[3,"ExceptionData","","Exception handling and stack unwind information for…",null,null],[4,"StackFrameOffset","","An unsigned offset to a value in the local stack frame.",null,null],[13,"RSP","","Offset from the current RSP, that is, the lowest address…",125,null],[13,"FP","","Offset from the value of the frame pointer register.",125,null],[4,"UnwindOperation","","An unwind operation corresponding to code in the function…",null,null],[13,"PushNonVolatile","","Push a nonvolatile integer register, decrementing `RSP` by…",126,null],[13,"Alloc","","Allocate a fixed-size area on the stack.",126,null],[13,"SetFPRegister","","Establish the frame pointer register by setting the…",126,null],[13,"SaveNonVolatile","","Save a nonvolatile integer register on the stack using a…",126,null],[13,"SaveXMM","","Save the lower 64 bits of a nonvolatile XMM register on…",126,null],[13,"Epilog","","Describes the function epilog.",126,null],[13,"SaveXMM128","","Save all 128 bits of a nonvolatile XMM register on the…",126,null],[13,"PushMachineFrame","","Push a machine frame. This is used to record the effect of…",126,null],[13,"Noop","","A reserved operation without effect.",126,null],[4,"UnwindHandler","","A language-specific handler that is called as part of the…",null,null],[13,"ExceptionHandler","","The image-relative address of an exception handler and its…",127,null],[13,"TerminationHandler","","The image-relative address of a termination handler and…",127,null],[11,"name","","Returns the x64 register name.",122,[[]]],[11,"parse","","Parses unwind information from the image at the given…",124,[[],["result",6]]],[11,"unwind_codes","","Returns an iterator over unwind codes in this unwind info.",124,[[],["unwindcodeiterator",3]]],[11,"parse","","Parses exception data from the image at the given offset.",128,[[["datadirectory",3]],["result",6]]],[11,"len","","The number of function entries described by this exception…",128,[[]]],[11,"is_empty","","Indicating whether there are functions in this entry.",128,[[]]],[11,"functions","","Iterates all function entries in order of their code offset.",128,[[],["runtimefunctioniterator",3]]],[11,"get_function","","Returns the function at the given index.",128,[[],[["result",6],["runtimefunction",3]]]],[11,"find_function","","Performs a binary search to find a function entry covering…",128,[[],[["result",6],["option",4]]]],[11,"get_unwind_info","","Resolves unwind information for the given function entry.",128,[[["runtimefunction",3]],[["unwindinfo",3],["result",6]]]],[0,"export","goblin::pe","",null,null],[3,"ExportDirectoryTable","goblin::pe::export","",null,null],[12,"export_flags","","",129,null],[12,"time_date_stamp","","",129,null],[12,"major_version","","",129,null],[12,"minor_version","","",129,null],[12,"name_rva","","",129,null],[12,"ordinal_base","","",129,null],[12,"address_table_entries","","",129,null],[12,"number_of_name_pointers","","",129,null],[12,"export_address_table_rva","","",129,null],[12,"name_pointer_rva","","",129,null],[12,"ordinal_table_rva","","",129,null],[3,"ExportData","","Export data contains the `dll` name which other libraries…",null,null],[12,"name","","",130,null],[12,"export_directory_table","","",130,null],[12,"export_name_pointer_table","","",130,null],[12,"export_ordinal_table","","",130,null],[12,"export_address_table","","",130,null],[3,"Export","","An exported symbol in this binary, contains synthetic data…",null,null],[12,"name","","",131,null],[12,"offset","","",131,null],[12,"rva","","",131,null],[12,"size","","",131,null],[12,"reexport","","",131,null],[4,"ExportAddressTableEntry","","",null,null],[13,"ExportRVA","","",132,null],[13,"ForwarderRVA","","",132,null],[4,"Reexport","","PE binaries have two kinds of reexports, either specifying…",null,null],[13,"DLLName","","",133,null],[12,"export","goblin::pe::export::Reexport","",134,null],[12,"lib","","",134,null],[13,"DLLOrdinal","goblin::pe::export","",133,null],[12,"ordinal","goblin::pe::export::Reexport","",135,null],[12,"lib","","",135,null],[6,"ExportAddressTable","goblin::pe::export","",null,null],[6,"ExportNamePointerTable","","Array of rvas into the export name table",null,null],[6,"ExportOrdinalTable","","Array of indexes into the export address table.",null,null],[17,"SIZEOF_EXPORT_DIRECTORY_TABLE","","",null,null],[17,"SIZEOF_EXPORT_ADDRESS_TABLE_ENTRY","","",null,null],[11,"parse","","",129,[[],["result",6]]],[11,"parse","","",130,[[["datadirectory",3]],[["result",6],["exportdata",3]]]],[11,"parse","","",133,[[],[["reexport",4],["result",6]]]],[11,"parse","","",131,[[["exportdata",3]],[["result",6],["vec",3]]]],[0,"header","goblin::pe","",null,null],[3,"DosHeader","goblin::pe::header","DOS header present in all PE binaries",null,null],[12,"signature","","Magic number: 5a4d",136,null],[12,"pe_pointer","","Pointer to PE header, always at offset 0x3c",136,null],[3,"CoffHeader","","COFF Header",null,null],[12,"machine","","The machine type",137,null],[12,"number_of_sections","","",137,null],[12,"time_date_stamp","","",137,null],[12,"pointer_to_symbol_table","","",137,null],[12,"number_of_symbol_table","","",137,null],[12,"size_of_optional_header","","",137,null],[12,"characteristics","","",137,null],[3,"Header","","",null,null],[12,"dos_header","","",138,null],[12,"signature","","PE Magic: PE\\\\0\\\\0, little endian",138,null],[12,"coff_header","","",138,null],[12,"optional_header","","",138,null],[17,"DOS_MAGIC","","",null,null],[17,"PE_POINTER_OFFSET","","",null,null],[17,"SIZEOF_COFF_HEADER","","",null,null],[17,"PE_MAGIC","","PE\\\\0\\\\0, little endian",null,null],[17,"SIZEOF_PE_MAGIC","","",null,null],[17,"COFF_MACHINE_UNKNOWN","","The contents of this field are assumed to be applicable to…",null,null],[17,"COFF_MACHINE_AM33","","Matsushita AM33",null,null],[17,"COFF_MACHINE_X86_64","","x64",null,null],[17,"COFF_MACHINE_ARM","","ARM little endian",null,null],[17,"COFF_MACHINE_ARM64","","ARM64 little endian",null,null],[17,"COFF_MACHINE_ARMNT","","ARM Thumb-2 little endian",null,null],[17,"COFF_MACHINE_EBC","","EFI byte code",null,null],[17,"COFF_MACHINE_X86","","Intel 386 or later processors and compatible processors",null,null],[17,"COFF_MACHINE_IA64","","Intel Itanium processor family",null,null],[17,"COFF_MACHINE_M32R","","Mitsubishi M32R little endian",null,null],[17,"COFF_MACHINE_MIPS16","","MIPS16",null,null],[17,"COFF_MACHINE_MIPSFPU","","MIPS with FPU",null,null],[17,"COFF_MACHINE_MIPSFPU16","","MIPS16 with FPU",null,null],[17,"COFF_MACHINE_POWERPC","","Power PC little endian",null,null],[17,"COFF_MACHINE_POWERPCFP","","Power PC with floating point support",null,null],[17,"COFF_MACHINE_R4000","","MIPS little endian",null,null],[17,"COFF_MACHINE_RISCV32","","RISC-V 32-bit address space",null,null],[17,"COFF_MACHINE_RISCV64","","RISC-V 64-bit address space",null,null],[17,"COFF_MACHINE_RISCV128","","RISC-V 128-bit address space",null,null],[17,"COFF_MACHINE_SH3","","Hitachi SH3",null,null],[17,"COFF_MACHINE_SH3DSP","","Hitachi SH3 DSP",null,null],[17,"COFF_MACHINE_SH4","","Hitachi SH4",null,null],[17,"COFF_MACHINE_SH5","","Hitachi SH5",null,null],[17,"COFF_MACHINE_THUMB","","Thumb",null,null],[17,"COFF_MACHINE_WCEMIPSV2","","MIPS little-endian WCE v2",null,null],[11,"parse","","",136,[[],["result",6]]],[11,"parse","","",137,[[],["result",6]]],[11,"sections","","Parse the COFF section headers.",137,[[],[["result",6],["vec",3]]]],[11,"symbols","","Return the COFF symbol table.",137,[[],[["symboltable",3],["result",6]]]],[11,"strings","","Return the COFF string table.",137,[[],[["result",6],["strtab",3]]]],[11,"parse","","",138,[[],["result",6]]],[0,"import","goblin::pe","",null,null],[3,"HintNameTableEntry","goblin::pe::import","",null,null],[12,"hint","","",139,null],[12,"name","","",139,null],[3,"ImportDirectoryEntry","","",null,null],[12,"import_lookup_table_rva","","",140,null],[12,"time_date_stamp","","",140,null],[12,"forwarder_chain","","",140,null],[12,"name_rva","","",140,null],[12,"import_address_table_rva","","",140,null],[3,"SyntheticImportDirectoryEntry","","",null,null],[12,"import_directory_entry","","",141,null],[12,"name","","Computed",141,null],[12,"import_lookup_table","","The import lookup table is a vector of either ordinals, or…",141,null],[12,"import_address_table","","Computed",141,null],[3,"ImportData","","Contains a list of synthesized import data for this…",null,null],[12,"import_data","","",142,null],[3,"Import","","A synthesized symbol import, the name is pre-indexed, and…",null,null],[12,"name","","",143,null],[12,"dll","","",143,null],[12,"ordinal","","",143,null],[12,"offset","","",143,null],[12,"rva","","",143,null],[12,"size","","",143,null],[4,"SyntheticImportLookupTableEntry","","",null,null],[13,"OrdinalNumber","","",144,null],[13,"HintNameTableRVA","","",144,null],[6,"ImportLookupTable","","",null,null],[6,"ImportAddressTable","","",null,null],[17,"IMPORT_BY_ORDINAL_32","","",null,null],[17,"IMPORT_BY_ORDINAL_64","","",null,null],[17,"IMPORT_RVA_MASK_32","","",null,null],[17,"IMPORT_RVA_MASK_64","","",null,null],[17,"SIZEOF_IMPORT_DIRECTORY_ENTRY","","",null,null],[8,"Bitfield","","",null,null],[10,"is_ordinal","","",145,[[]]],[10,"to_ordinal","","",145,[[]]],[10,"to_rva","","",145,[[]]],[10,"size_of","","",145,[[]]],[10,"is_zero","","",145,[[]]],[11,"parse","","",144,[[],[["result",6],["importlookuptable",6]]]],[11,"is_null","","",140,[[]]],[11,"parse","","",141,[[["importdirectoryentry",3]],[["syntheticimportdirectoryentry",3],["result",6]]]],[11,"parse","","",142,[[["datadirectory",3]],[["importdata",3],["result",6]]]],[11,"parse","","",143,[[["importdata",3]],[["result",6],["vec",3]]]],[0,"optional_header","goblin::pe","",null,null],[3,"StandardFields32","goblin::pe::optional_header","standard COFF fields",null,null],[12,"magic","","",146,null],[12,"major_linker_version","","",146,null],[12,"minor_linker_version","","",146,null],[12,"size_of_code","","",146,null],[12,"size_of_initialized_data","","",146,null],[12,"size_of_uninitialized_data","","",146,null],[12,"address_of_entry_point","","",146,null],[12,"base_of_code","","",146,null],[12,"base_of_data","","absent in 64-bit PE32+",146,null],[3,"StandardFields64","","standard 64-bit COFF fields",null,null],[12,"magic","","",147,null],[12,"major_linker_version","","",147,null],[12,"minor_linker_version","","",147,null],[12,"size_of_code","","",147,null],[12,"size_of_initialized_data","","",147,null],[12,"size_of_uninitialized_data","","",147,null],[12,"address_of_entry_point","","",147,null],[12,"base_of_code","","",147,null],[3,"StandardFields","","Unified 32/64-bit COFF fields",null,null],[12,"magic","","",148,null],[12,"major_linker_version","","",148,null],[12,"minor_linker_version","","",148,null],[12,"size_of_code","","",148,null],[12,"size_of_initialized_data","","",148,null],[12,"size_of_uninitialized_data","","",148,null],[12,"address_of_entry_point","","",148,null],[12,"base_of_code","","",148,null],[12,"base_of_data","","absent in 64-bit PE32+",148,null],[3,"WindowsFields32","","Windows specific fields",null,null],[12,"image_base","","",149,null],[12,"section_alignment","","",149,null],[12,"file_alignment","","",149,null],[12,"major_operating_system_version","","",149,null],[12,"minor_operating_system_version","","",149,null],[12,"major_image_version","","",149,null],[12,"minor_image_version","","",149,null],[12,"major_subsystem_version","","",149,null],[12,"minor_subsystem_version","","",149,null],[12,"win32_version_value","","",149,null],[12,"size_of_image","","",149,null],[12,"size_of_headers","","",149,null],[12,"check_sum","","",149,null],[12,"subsystem","","",149,null],[12,"dll_characteristics","","",149,null],[12,"size_of_stack_reserve","","",149,null],[12,"size_of_stack_commit","","",149,null],[12,"size_of_heap_reserve","","",149,null],[12,"size_of_heap_commit","","",149,null],[12,"loader_flags","","",149,null],[12,"number_of_rva_and_sizes","","",149,null],[3,"WindowsFields64","","64-bit Windows specific fields",null,null],[12,"image_base","","",150,null],[12,"section_alignment","","",150,null],[12,"file_alignment","","",150,null],[12,"major_operating_system_version","","",150,null],[12,"minor_operating_system_version","","",150,null],[12,"major_image_version","","",150,null],[12,"minor_image_version","","",150,null],[12,"major_subsystem_version","","",150,null],[12,"minor_subsystem_version","","",150,null],[12,"win32_version_value","","",150,null],[12,"size_of_image","","",150,null],[12,"size_of_headers","","",150,null],[12,"check_sum","","",150,null],[12,"subsystem","","",150,null],[12,"dll_characteristics","","",150,null],[12,"size_of_stack_reserve","","",150,null],[12,"size_of_stack_commit","","",150,null],[12,"size_of_heap_reserve","","",150,null],[12,"size_of_heap_commit","","",150,null],[12,"loader_flags","","",150,null],[12,"number_of_rva_and_sizes","","",150,null],[3,"OptionalHeader","","",null,null],[12,"standard_fields","","",151,null],[12,"windows_fields","","",151,null],[12,"data_directories","","",151,null],[6,"WindowsFields","","",null,null],[17,"SIZEOF_STANDARD_FIELDS_32","","",null,null],[17,"SIZEOF_STANDARD_FIELDS_64","","",null,null],[17,"MAGIC_32","","Standard fields magic number for 32-bit binary",null,null],[17,"MAGIC_64","","Standard fields magic number for 64-bit binary",null,null],[17,"SIZEOF_WINDOWS_FIELDS_32","","",null,null],[17,"SIZEOF_WINDOWS_FIELDS_64","","",null,null],[11,"container","","",151,[[],[["result",6],["container",4]]]],[0,"relocation","goblin::pe","",null,null],[3,"Relocation","goblin::pe::relocation","A COFF relocation.",null,null],[12,"virtual_address","","The address of the item to which relocation is applied.",152,null],[12,"symbol_table_index","","A zero-based index into the symbol table.",152,null],[12,"typ","","A value that indicates the kind of relocation that should…",152,null],[3,"Relocations","","An iterator for COFF relocations.",null,null],[17,"COFF_RELOCATION_SIZE","","Size of a single COFF relocation.",null,null],[17,"IMAGE_REL_I386_ABSOLUTE","","The relocation is ignored.",null,null],[17,"IMAGE_REL_I386_DIR16","","Not supported.",null,null],[17,"IMAGE_REL_I386_REL16","","Not supported.",null,null],[17,"IMAGE_REL_I386_DIR32","","The target\'s 32-bit VA.",null,null],[17,"IMAGE_REL_I386_DIR32NB","","The target\'s 32-bit RVA.",null,null],[17,"IMAGE_REL_I386_SEG12","","Not supported.",null,null],[17,"IMAGE_REL_I386_SECTION","","The 16-bit section index of the section that contains the…",null,null],[17,"IMAGE_REL_I386_SECREL","","The 32-bit offset of the target from the beginning of its…",null,null],[17,"IMAGE_REL_I386_TOKEN","","The CLR token.",null,null],[17,"IMAGE_REL_I386_SECREL7","","A 7-bit offset from the base of the section that contains…",null,null],[17,"IMAGE_REL_I386_REL32","","The 32-bit relative displacement to the target.",null,null],[17,"IMAGE_REL_AMD64_ABSOLUTE","","The relocation is ignored.",null,null],[17,"IMAGE_REL_AMD64_ADDR64","","The 64-bit VA of the relocation target.",null,null],[17,"IMAGE_REL_AMD64_ADDR32","","The 32-bit VA of the relocation target.",null,null],[17,"IMAGE_REL_AMD64_ADDR32NB","","The 32-bit address without an image base (RVA).",null,null],[17,"IMAGE_REL_AMD64_REL32","","The 32-bit relative address from the byte following the…",null,null],[17,"IMAGE_REL_AMD64_REL32_1","","The 32-bit address relative to byte distance 1 from the…",null,null],[17,"IMAGE_REL_AMD64_REL32_2","","The 32-bit address relative to byte distance 2 from the…",null,null],[17,"IMAGE_REL_AMD64_REL32_3","","The 32-bit address relative to byte distance 3 from the…",null,null],[17,"IMAGE_REL_AMD64_REL32_4","","The 32-bit address relative to byte distance 4 from the…",null,null],[17,"IMAGE_REL_AMD64_REL32_5","","The 32-bit address relative to byte distance 5 from the…",null,null],[17,"IMAGE_REL_AMD64_SECTION","","The 16-bit section index of the section that contains the…",null,null],[17,"IMAGE_REL_AMD64_SECREL","","The 32-bit offset of the target from the beginning of its…",null,null],[17,"IMAGE_REL_AMD64_SECREL7","","A 7-bit unsigned offset from the base of the section that…",null,null],[17,"IMAGE_REL_AMD64_TOKEN","","CLR tokens.",null,null],[17,"IMAGE_REL_AMD64_SREL32","","A 32-bit signed span-dependent value emitted into the…",null,null],[17,"IMAGE_REL_AMD64_PAIR","","A pair that must immediately follow every span-dependent…",null,null],[17,"IMAGE_REL_AMD64_SSPAN32","","A 32-bit signed span-dependent value that is applied at…",null,null],[11,"parse","","Parse a COFF relocation table at the given offset.",153,[[],[["relocations",3],["result",6]]]],[0,"section_table","goblin::pe","",null,null],[3,"SectionTable","goblin::pe::section_table","",null,null],[12,"name","","",154,null],[12,"real_name","","",154,null],[12,"virtual_size","","",154,null],[12,"virtual_address","","",154,null],[12,"size_of_raw_data","","",154,null],[12,"pointer_to_raw_data","","",154,null],[12,"pointer_to_relocations","","",154,null],[12,"pointer_to_linenumbers","","",154,null],[12,"number_of_relocations","","",154,null],[12,"number_of_linenumbers","","",154,null],[12,"characteristics","","",154,null],[17,"SIZEOF_SECTION_TABLE","","",null,null],[17,"IMAGE_SCN_TYPE_NO_PAD","","The section should not be padded to the next boundary.…",null,null],[17,"IMAGE_SCN_CNT_CODE","","The section contains executable code.",null,null],[17,"IMAGE_SCN_CNT_INITIALIZED_DATA","","The section contains initialized data.",null,null],[17,"IMAGE_SCN_CNT_UNINITIALIZED_DATA","","The section contains uninitialized data.",null,null],[17,"IMAGE_SCN_LNK_OTHER","","",null,null],[17,"IMAGE_SCN_LNK_INFO","","The section contains comments or other information. The…",null,null],[17,"IMAGE_SCN_LNK_REMOVE","","The section will not become part of the image. This is…",null,null],[17,"IMAGE_SCN_LNK_COMDAT","","The section contains COMDAT data. This is valid only for…",null,null],[17,"IMAGE_SCN_GPREL","","The section contains data referenced through the global…",null,null],[17,"IMAGE_SCN_MEM_PURGEABLE","","",null,null],[17,"IMAGE_SCN_MEM_16BIT","","",null,null],[17,"IMAGE_SCN_MEM_LOCKED","","",null,null],[17,"IMAGE_SCN_MEM_PRELOAD","","",null,null],[17,"IMAGE_SCN_ALIGN_1BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_2BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_4BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_8BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_16BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_32BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_64BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_128BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_256BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_512BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_1024BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_2048BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_4096BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_8192BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_MASK","","",null,null],[17,"IMAGE_SCN_LNK_NRELOC_OVFL","","The section contains extended relocations.",null,null],[17,"IMAGE_SCN_MEM_DISCARDABLE","","The section can be discarded as needed.",null,null],[17,"IMAGE_SCN_MEM_NOT_CACHED","","The section cannot be cached.",null,null],[17,"IMAGE_SCN_MEM_NOT_PAGED","","The section is not pageable.",null,null],[17,"IMAGE_SCN_MEM_SHARED","","The section can be shared in memory.",null,null],[17,"IMAGE_SCN_MEM_EXECUTE","","The section can be executed as code.",null,null],[17,"IMAGE_SCN_MEM_READ","","The section can be read.",null,null],[17,"IMAGE_SCN_MEM_WRITE","","The section can be written to.",null,null],[11,"parse","","",154,[[],["result",6]]],[11,"name_offset","","",154,[[],[["result",6],["option",4]]]],[11,"set_name_offset","","",154,[[],["result",6]]],[11,"name","","",154,[[],["result",6]]],[11,"relocations","","",154,[[],[["relocations",3],["result",6]]]],[0,"symbol","goblin::pe","",null,null],[3,"Symbol","goblin::pe::symbol","A COFF symbol.",null,null],[12,"name","","The name of the symbol.",155,null],[12,"value","","The value that is associated with the symbol.",155,null],[12,"section_number","","A one-based index into the section table. Zero and…",155,null],[12,"typ","","A number that represents type.",155,null],[12,"storage_class","","An enumerated value that represents storage class.",155,null],[12,"number_of_aux_symbols","","The number of auxiliary symbol table entries that follow…",155,null],[3,"AuxFunctionDefinition","","Auxiliary symbol record for function definitions.",null,null],[12,"tag_index","","The symbol-table index of the corresponding `.bf` (begin…",156,null],[12,"total_size","","The size of the executable code for the function itself.",156,null],[12,"pointer_to_line_number","","The file offset of the first COFF line-number entry for…",156,null],[12,"pointer_to_next_function","","The symbol-table index of the record for the next function.",156,null],[12,"unused","","Unused padding.",156,null],[3,"AuxBeginAndEndFunction","","Auxiliary symbol record for symbols with storage class…",null,null],[12,"unused1","","Unused padding.",157,null],[12,"line_number","","The actual ordinal line number within the source file,…",157,null],[12,"unused2","","Unused padding.",157,null],[12,"pointer_to_next_function","","The symbol-table index of the next `.bf` symbol record.",157,null],[12,"unused3","","Unused padding.",157,null],[3,"AuxWeakExternal","","Auxiliary symbol record for weak external symbols.",null,null],[12,"tag_index","","The symbol-table index of the symbol to be linked if an…",158,null],[12,"characteristics","","Flags that control how the symbol should be linked.",158,null],[12,"unused","","Unused padding.",158,null],[3,"AuxSectionDefinition","","Auxiliary symbol record for section definitions.",null,null],[12,"length","","The size of section data; the same as `size_of_raw_data`…",159,null],[12,"number_of_relocations","","The number of relocation entries for the section.",159,null],[12,"number_of_line_numbers","","The number of line-number entries for the section.",159,null],[12,"checksum","","The checksum for communal data.",159,null],[12,"number","","One-based index into the section table for the associated…",159,null],[12,"selection","","The COMDAT selection number.",159,null],[12,"unused","","Unused padding.",159,null],[3,"SymbolTable","","A COFF symbol table.",null,null],[3,"SymbolIterator","","An iterator for COFF symbols.",null,null],[17,"COFF_SYMBOL_SIZE","","Size of a single symbol in the COFF Symbol Table.",null,null],[17,"IMAGE_SYM_UNDEFINED","","The symbol record is not yet assigned a section. A `value`…",null,null],[17,"IMAGE_SYM_ABSOLUTE","","The symbol has an absolute (non-relocatable) `value` and…",null,null],[17,"IMAGE_SYM_DEBUG","","The symbol provides general type or debugging information…",null,null],[17,"IMAGE_SYM_TYPE_NULL","","No type information or unknown base type. Microsoft tools…",null,null],[17,"IMAGE_SYM_TYPE_VOID","","No valid type; used with void pointers and functions",null,null],[17,"IMAGE_SYM_TYPE_CHAR","","A character (signed byte)",null,null],[17,"IMAGE_SYM_TYPE_SHORT","","A 2-byte signed integer",null,null],[17,"IMAGE_SYM_TYPE_INT","","A natural integer type (normally 4 bytes in Windows)",null,null],[17,"IMAGE_SYM_TYPE_LONG","","A 4-byte signed integer",null,null],[17,"IMAGE_SYM_TYPE_FLOAT","","A 4-byte floating-point number",null,null],[17,"IMAGE_SYM_TYPE_DOUBLE","","An 8-byte floating-point number",null,null],[17,"IMAGE_SYM_TYPE_STRUCT","","A structure",null,null],[17,"IMAGE_SYM_TYPE_UNION","","A union",null,null],[17,"IMAGE_SYM_TYPE_ENUM","","An enumerated type",null,null],[17,"IMAGE_SYM_TYPE_MOE","","A member of enumeration (a specific value)",null,null],[17,"IMAGE_SYM_TYPE_BYTE","","A byte; unsigned 1-byte integer",null,null],[17,"IMAGE_SYM_TYPE_WORD","","A word; unsigned 2-byte integer",null,null],[17,"IMAGE_SYM_TYPE_UINT","","An unsigned integer of natural size (normally, 4 bytes)",null,null],[17,"IMAGE_SYM_TYPE_DWORD","","An unsigned 4-byte integer",null,null],[17,"IMAGE_SYM_DTYPE_NULL","","No derived type; the symbol is a simple scalar variable.",null,null],[17,"IMAGE_SYM_DTYPE_POINTER","","The symbol is a pointer to base type.",null,null],[17,"IMAGE_SYM_DTYPE_FUNCTION","","The symbol is a function that returns a base type.",null,null],[17,"IMAGE_SYM_DTYPE_ARRAY","","The symbol is an array of base type.",null,null],[17,"IMAGE_SYM_TYPE_MASK","","",null,null],[17,"IMAGE_SYM_DTYPE_SHIFT","","",null,null],[17,"IMAGE_SYM_CLASS_END_OF_FUNCTION","","A special symbol that represents the end of function, for…",null,null],[17,"IMAGE_SYM_CLASS_NULL","","No assigned storage class.",null,null],[17,"IMAGE_SYM_CLASS_AUTOMATIC","","The automatic (stack) variable.",null,null],[17,"IMAGE_SYM_CLASS_EXTERNAL","","A value that Microsoft tools use for external symbols.",null,null],[17,"IMAGE_SYM_CLASS_STATIC","","A static symbol.",null,null],[17,"IMAGE_SYM_CLASS_REGISTER","","A register variable.",null,null],[17,"IMAGE_SYM_CLASS_EXTERNAL_DEF","","A symbol that is defined externally.",null,null],[17,"IMAGE_SYM_CLASS_LABEL","","A code label that is defined within the module.",null,null],[17,"IMAGE_SYM_CLASS_UNDEFINED_LABEL","","A reference to a code label that is not defined.",null,null],[17,"IMAGE_SYM_CLASS_MEMBER_OF_STRUCT","","The structure member.",null,null],[17,"IMAGE_SYM_CLASS_ARGUMENT","","A formal argument (parameter) of a function.",null,null],[17,"IMAGE_SYM_CLASS_STRUCT_TAG","","The structure tag-name entry.",null,null],[17,"IMAGE_SYM_CLASS_MEMBER_OF_UNION","","A union member.",null,null],[17,"IMAGE_SYM_CLASS_UNION_TAG","","The Union tag-name entry.",null,null],[17,"IMAGE_SYM_CLASS_TYPE_DEFINITION","","A Typedef entry.",null,null],[17,"IMAGE_SYM_CLASS_UNDEFINED_STATIC","","A static data declaration.",null,null],[17,"IMAGE_SYM_CLASS_ENUM_TAG","","An enumerated type tagname entry.",null,null],[17,"IMAGE_SYM_CLASS_MEMBER_OF_ENUM","","A member of an enumeration.",null,null],[17,"IMAGE_SYM_CLASS_REGISTER_PARAM","","A register parameter.",null,null],[17,"IMAGE_SYM_CLASS_BIT_FIELD","","A bit-field reference.",null,null],[17,"IMAGE_SYM_CLASS_BLOCK","","A .bb (beginning of block) or .eb (end of block) record.",null,null],[17,"IMAGE_SYM_CLASS_FUNCTION","","A value that Microsoft tools use for symbol records that…",null,null],[17,"IMAGE_SYM_CLASS_END_OF_STRUCT","","An end-of-structure entry.",null,null],[17,"IMAGE_SYM_CLASS_FILE","","The source-file symbol record.",null,null],[17,"IMAGE_SYM_CLASS_SECTION","","A definition of a section (Microsoft tools use STATIC…",null,null],[17,"IMAGE_SYM_CLASS_WEAK_EXTERNAL","","A weak external.",null,null],[17,"IMAGE_SYM_CLASS_CLR_TOKEN","","A CLR token symbol.",null,null],[17,"IMAGE_WEAK_EXTERN_SEARCH_NOLIBRARY","","Indicates that no library search for the symbol should be…",null,null],[17,"IMAGE_WEAK_EXTERN_SEARCH_LIBRARY","","Indicates that a library search for the symbol should be…",null,null],[17,"IMAGE_WEAK_EXTERN_SEARCH_ALIAS","","Indicates that the symbol is an alias for the symbol given…",null,null],[17,"IMAGE_COMDAT_SELECT_NODUPLICATES","","If this symbol is already defined, the linker issues a…",null,null],[17,"IMAGE_COMDAT_SELECT_ANY","","Any section that defines the same COMDAT symbol can be…",null,null],[17,"IMAGE_COMDAT_SELECT_SAME_SIZE","","The linker chooses an arbitrary section among the…",null,null],[17,"IMAGE_COMDAT_SELECT_EXACT_MATCH","","The linker chooses an arbitrary section among the…",null,null],[17,"IMAGE_COMDAT_SELECT_ASSOCIATIVE","","The section is linked if a certain other COMDAT section is…",null,null],[17,"IMAGE_COMDAT_SELECT_LARGEST","","The linker chooses the largest definition from among all…",null,null],[11,"parse","","Parse the symbol at the given offset.",155,[[],["result",6]]],[11,"name","","Returns the symbol name.",155,[[["strtab",3]],["result",6]]],[11,"name_offset","","Return the strtab offset of the symbol name.",155,[[],["option",4]]],[11,"set_name_offset","","Set the strtab offset of the symbol name.",155,[[]]],[11,"base_type","","Return the base type of the symbol.",155,[[]]],[11,"derived_type","","Return the derived type of the symbol.",155,[[]]],[11,"is_function_definition","","Return true for function definitions.",155,[[]]],[11,"is_weak_external","","Return true for weak external symbols.",155,[[]]],[11,"is_file","","Return true for file symbol records.",155,[[]]],[11,"is_section_definition","","Return true for section definitions.",155,[[]]],[11,"parse","","Parse a COFF symbol table at the given offset.",160,[[],[["result",6],["symboltable",3]]]],[11,"size","","Get the size in bytes of the symbol table.",160,[[]]],[11,"get","","Get the symbol at the given index.",160,[[],["option",4]]],[11,"aux_function_definition","","Get the auxiliary symbol record for a function definition.",160,[[],[["auxfunctiondefinition",3],["option",4]]]],[11,"aux_begin_and_end_function","","Get the auxiliary symbol record for a `.bf` or `.ef`…",160,[[],[["option",4],["auxbeginandendfunction",3]]]],[11,"aux_weak_external","","Get the auxiliary symbol record for a weak external.",160,[[],[["option",4],["auxweakexternal",3]]]],[11,"aux_file","","Get the file name from the auxiliary symbol record for a…",160,[[],["option",4]]],[11,"aux_section_definition","","Get the auxiliary symbol record for a section definition.",160,[[],[["option",4],["auxsectiondefinition",3]]]],[11,"iter","","Return an iterator for the COFF symbols.",160,[[],["symboliterator",3]]],[0,"utils","goblin::pe","",null,null],[5,"is_in_range","goblin::pe::utils","",null,[[]]],[5,"find_offset","","",null,[[],["option",4]]],[5,"find_offset_or","","",null,[[],["result",6]]],[5,"try_name","","",null,[[],["result",6]]],[5,"get_data","","",null,[[["datadirectory",3]],["result",6]]],[11,"parse","goblin::pe","Reads a PE binary from the underlying `bytes`",114,[[],["result",6]]],[11,"parse","","Reads a COFF object from the underlying `bytes`",115,[[],["result",6]]],[0,"archive","goblin","Implements a simple parser and extractor for a Unix Archive.",null,null],[3,"MemberHeader","goblin::archive","A Unix Archive Header - meta data for the file/byte…",null,null],[12,"identifier","","The identifier, or name for this file/whatever.",161,null],[12,"timestamp","","The timestamp for when this file was last modified. Base…",161,null],[12,"owner_id","","The file\'s owner\'s id. Base 10 string number",161,null],[12,"group_id","","The file\'s group id. Base 10 string number",161,null],[12,"mode","","The file\'s permissions mode. Base 8 number number",161,null],[12,"file_size","","The size of this file. Base 10 string number",161,null],[12,"terminator","","The file header\'s terminator, always `0x60 0x0A`",161,null],[3,"Header","","",null,null],[12,"name","","",162,null],[12,"size","","",162,null],[3,"Member","","Represents a single entry in the archive",null,null],[12,"header","","The entry header",163,null],[12,"header_offset","","File offset from the start of the archive to where the…",163,null],[12,"offset","","File offset from the start of the archive to where the…",163,null],[3,"Index","","The special index member signified by the name `\'/\'`. The…",null,null],[12,"size","","Big Endian number of symbol_indexes and strings",164,null],[12,"symbol_indexes","","Big Endian u32 index into the archive for this symbol…",164,null],[12,"strtab","","Set of zero-terminated strings indexed by above. Number of…",164,null],[3,"Archive","","An in-memory representation of a parsed Unix Archive",null,null],[4,"IndexType","","The type of symbol index can be present in an archive. Can…",null,null],[13,"None","","No symbol index present.",165,null],[13,"SysV","","SystemV/GNU style symbol index, used on Windows as well.",165,null],[13,"Windows","","Windows specific extension of SysV symbol index, so called…",165,null],[13,"BSD","","BSD style symbol index.",165,null],[17,"SIZEOF_MAGIC","","",null,null],[17,"MAGIC","","The magic number of a Unix Archive",null,null],[17,"SIZEOF_HEADER","","",null,null],[11,"name","","",161,[[],["result",6]]],[11,"size","","",161,[[],["result",6]]],[11,"parse","","Tries to parse the header in `R`, as well as the offset in…",163,[[],[["member",3],["result",6]]]],[11,"size","","The size of the Member\'s content, in bytes. Does not…",163,[[]]],[11,"extended_name","","The member name, accounting for SysV and BSD `ar` filename…",163,[[]]],[11,"raw_name","","The untrimmed raw member name, i.e., includes…",163,[[]]],[11,"parse_sysv_index","","Parses the given byte buffer into an Index. NB: the buffer…",164,[[],["result",6]]],[11,"parse_bsd_symdef","","Parses the given byte buffer into an Index, in BSD style…",164,[[],["result",6]]],[11,"parse_windows_linker_member","","",164,[[],["result",6]]],[11,"parse","","",166,[[],[["archive",3],["result",6]]]],[11,"get","","Get the member named `member` in this archive, if any",166,[[],[["option",4],["member",3]]]],[11,"extract","","Returns a slice of the raw bytes for the given `member` in…",166,[[],["result",6]]],[11,"summarize","","Gets a summary of this archive, returning a list of…",166,[[],["vec",3]]],[11,"members","","Get the list of member names in this archive",166,[[],["vec",3]]],[11,"member_of_symbol","","Returns the member\'s name which contains the given…",166,[[],["option",4]]],[11,"parse","goblin","Tries to parse an `Object` from `bytes`",2,[[],[["result",6],["object",4]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","goblin::error","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","goblin::strtab","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","goblin::container","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","goblin::elf","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","goblin::elf::compression_header","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","goblin::elf::compression_header::compression_header32","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","goblin::elf::compression_header::compression_header64","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","goblin::elf::header","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","goblin::elf::header::header32","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","goblin::elf::header::header64","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","goblin::elf::program_header","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","goblin::elf::program_header::program_header32","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","goblin::elf::program_header::program_header64","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","goblin::elf::section_header","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","goblin::elf::section_header::section_header32","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","goblin::elf::section_header::section_header64","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","goblin::elf::sym","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",167,[[]]],[11,"into","","",167,[[]]],[11,"into_iter","","",167,[[]]],[11,"borrow","","",167,[[]]],[11,"borrow_mut","","",167,[[]]],[11,"try_from","","",167,[[],["result",4]]],[11,"try_into","","",167,[[],["result",4]]],[11,"type_id","","",167,[[],["typeid",3]]],[11,"from","goblin::elf::sym::sym32","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","goblin::elf::sym::sym64","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","goblin::elf::dynamic","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","goblin::elf::dynamic::dyn32","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","goblin::elf::dynamic::dyn64","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","goblin::elf::reloc","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",168,[[]]],[11,"into","","",168,[[]]],[11,"into_iter","","",168,[[]]],[11,"borrow","","",168,[[]]],[11,"borrow_mut","","",168,[[]]],[11,"try_from","","",168,[[],["result",4]]],[11,"try_into","","",168,[[],["result",4]]],[11,"type_id","","",168,[[],["typeid",3]]],[11,"from","goblin::elf::reloc::reloc32","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","goblin::elf::reloc::reloc64","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","goblin::elf::note","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"into_iter","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"into_iter","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","goblin::elf32::gnu_hash","",43,[[]]],[11,"into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","goblin::elf64::gnu_hash","",44,[[]]],[11,"into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","goblin::mach","",45,[[]]],[11,"into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",169,[[]]],[11,"into","","",169,[[]]],[11,"into_iter","","",169,[[]]],[11,"borrow","","",169,[[]]],[11,"borrow_mut","","",169,[[]]],[11,"try_from","","",169,[[],["result",4]]],[11,"try_into","","",169,[[],["result",4]]],[11,"type_id","","",169,[[],["typeid",3]]],[11,"from","","",170,[[]]],[11,"into","","",170,[[]]],[11,"into_iter","","",170,[[]]],[11,"borrow","","",170,[[]]],[11,"borrow_mut","","",170,[[]]],[11,"try_from","","",170,[[],["result",4]]],[11,"try_into","","",170,[[],["result",4]]],[11,"type_id","","",170,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","goblin::mach::exports","",48,[[]]],[11,"into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","goblin::mach::fat","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","goblin::mach::header","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","goblin::mach::imports","",60,[[]]],[11,"into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from","goblin::mach::load_command","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"to_string","","",62,[[],["string",3]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"to_owned","","",85,[[]]],[11,"clone_into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"to_owned","","",88,[[]]],[11,"clone_into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"to_owned","","",92,[[]]],[11,"clone_into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"to_owned","","",93,[[]]],[11,"clone_into","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"to_owned","","",94,[[]]],[11,"clone_into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"to_owned","","",95,[[]]],[11,"clone_into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"to_owned","","",96,[[]]],[11,"clone_into","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"to_owned","","",97,[[]]],[11,"clone_into","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"to_owned","","",98,[[]]],[11,"clone_into","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"to_owned","","",99,[[]]],[11,"clone_into","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"to_owned","","",100,[[]]],[11,"clone_into","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"to_owned","","",101,[[]]],[11,"clone_into","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"to_owned","","",102,[[]]],[11,"clone_into","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"from","goblin::mach::relocation","",105,[[]]],[11,"into","","",105,[[]]],[11,"to_owned","","",105,[[]]],[11,"clone_into","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"from","goblin::mach::segment","",171,[[]]],[11,"into","","",171,[[]]],[11,"into_iter","","",171,[[]]],[11,"borrow","","",171,[[]]],[11,"borrow_mut","","",171,[[]]],[11,"try_from","","",171,[[],["result",4]]],[11,"try_into","","",171,[[],["result",4]]],[11,"type_id","","",171,[[],["typeid",3]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"from","","",172,[[]]],[11,"into","","",172,[[]]],[11,"into_iter","","",172,[[]]],[11,"borrow","","",172,[[]]],[11,"borrow_mut","","",172,[[]]],[11,"try_from","","",172,[[],["result",4]]],[11,"try_into","","",172,[[],["result",4]]],[11,"type_id","","",172,[[],["typeid",3]]],[11,"from","","",107,[[]]],[11,"into","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"from","","",108,[[]]],[11,"into","","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"from","goblin::mach::symbols","",109,[[]]],[11,"into","","",109,[[]]],[11,"to_owned","","",109,[[]]],[11,"clone_into","","",109,[[]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"from","","",110,[[]]],[11,"into","","",110,[[]]],[11,"to_owned","","",110,[[]]],[11,"clone_into","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"from","","",111,[[]]],[11,"into","","",111,[[]]],[11,"to_owned","","",111,[[]]],[11,"clone_into","","",111,[[]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"to_owned","","",112,[[]]],[11,"clone_into","","",112,[[]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"from","","",173,[[]]],[11,"into","","",173,[[]]],[11,"into_iter","","",173,[[]]],[11,"borrow","","",173,[[]]],[11,"borrow_mut","","",173,[[]]],[11,"try_from","","",173,[[],["result",4]]],[11,"try_into","","",173,[[],["result",4]]],[11,"type_id","","",173,[[],["typeid",3]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"from","goblin::pe","",114,[[]]],[11,"into","","",114,[[]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"from","","",115,[[]]],[11,"into","","",115,[[]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"from","goblin::pe::data_directories","",116,[[]]],[11,"into","","",116,[[]]],[11,"to_owned","","",116,[[]]],[11,"clone_into","","",116,[[]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"from","","",117,[[]]],[11,"into","","",117,[[]]],[11,"to_owned","","",117,[[]]],[11,"clone_into","","",117,[[]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"from","goblin::pe::debug","",118,[[]]],[11,"into","","",118,[[]]],[11,"to_owned","","",118,[[]]],[11,"clone_into","","",118,[[]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"from","","",119,[[]]],[11,"into","","",119,[[]]],[11,"to_owned","","",119,[[]]],[11,"clone_into","","",119,[[]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"from","","",120,[[]]],[11,"into","","",120,[[]]],[11,"to_owned","","",120,[[]]],[11,"clone_into","","",120,[[]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"from","goblin::pe::exception","",121,[[]]],[11,"into","","",121,[[]]],[11,"to_owned","","",121,[[]]],[11,"clone_into","","",121,[[]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"try_into","","",121,[[],["result",4]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"from","","",174,[[]]],[11,"into","","",174,[[]]],[11,"into_iter","","",174,[[]]],[11,"borrow","","",174,[[]]],[11,"borrow_mut","","",174,[[]]],[11,"try_from","","",174,[[],["result",4]]],[11,"try_into","","",174,[[],["result",4]]],[11,"type_id","","",174,[[],["typeid",3]]],[11,"from","","",122,[[]]],[11,"into","","",122,[[]]],[11,"to_owned","","",122,[[]]],[11,"clone_into","","",122,[[]]],[11,"to_string","","",122,[[],["string",3]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"try_into","","",122,[[],["result",4]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"from","","",123,[[]]],[11,"into","","",123,[[]]],[11,"to_owned","","",123,[[]]],[11,"clone_into","","",123,[[]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"from","","",175,[[]]],[11,"into","","",175,[[]]],[11,"into_iter","","",175,[[]]],[11,"to_owned","","",175,[[]]],[11,"clone_into","","",175,[[]]],[11,"borrow","","",175,[[]]],[11,"borrow_mut","","",175,[[]]],[11,"try_from","","",175,[[],["result",4]]],[11,"try_into","","",175,[[],["result",4]]],[11,"type_id","","",175,[[],["typeid",3]]],[11,"from","","",124,[[]]],[11,"into","","",124,[[]]],[11,"to_owned","","",124,[[]]],[11,"clone_into","","",124,[[]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"from","","",128,[[]]],[11,"into","","",128,[[]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"try_into","","",128,[[],["result",4]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"from","","",125,[[]]],[11,"into","","",125,[[]]],[11,"to_owned","","",125,[[]]],[11,"clone_into","","",125,[[]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"try_into","","",125,[[],["result",4]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"from","","",126,[[]]],[11,"into","","",126,[[]]],[11,"to_owned","","",126,[[]]],[11,"clone_into","","",126,[[]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"from","","",127,[[]]],[11,"into","","",127,[[]]],[11,"to_owned","","",127,[[]]],[11,"clone_into","","",127,[[]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"try_into","","",127,[[],["result",4]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"from","goblin::pe::export","",129,[[]]],[11,"into","","",129,[[]]],[11,"to_owned","","",129,[[]]],[11,"clone_into","","",129,[[]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"try_into","","",129,[[],["result",4]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"from","","",130,[[]]],[11,"into","","",130,[[]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"try_into","","",130,[[],["result",4]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"from","","",131,[[]]],[11,"into","","",131,[[]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"try_into","","",131,[[],["result",4]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"from","","",132,[[]]],[11,"into","","",132,[[]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"try_into","","",132,[[],["result",4]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"from","","",133,[[]]],[11,"into","","",133,[[]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"try_into","","",133,[[],["result",4]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"from","goblin::pe::header","",136,[[]]],[11,"into","","",136,[[]]],[11,"to_owned","","",136,[[]]],[11,"clone_into","","",136,[[]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"try_into","","",136,[[],["result",4]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"from","","",137,[[]]],[11,"into","","",137,[[]]],[11,"to_owned","","",137,[[]]],[11,"clone_into","","",137,[[]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"try_into","","",137,[[],["result",4]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"from","","",138,[[]]],[11,"into","","",138,[[]]],[11,"to_owned","","",138,[[]]],[11,"clone_into","","",138,[[]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"try_into","","",138,[[],["result",4]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"from","goblin::pe::import","",139,[[]]],[11,"into","","",139,[[]]],[11,"to_owned","","",139,[[]]],[11,"clone_into","","",139,[[]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"try_into","","",139,[[],["result",4]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"from","","",140,[[]]],[11,"into","","",140,[[]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"try_into","","",140,[[],["result",4]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"from","","",141,[[]]],[11,"into","","",141,[[]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"try_into","","",141,[[],["result",4]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"from","","",142,[[]]],[11,"into","","",142,[[]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"try_into","","",142,[[],["result",4]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"from","","",143,[[]]],[11,"into","","",143,[[]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"try_into","","",143,[[],["result",4]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"from","","",144,[[]]],[11,"into","","",144,[[]]],[11,"to_owned","","",144,[[]]],[11,"clone_into","","",144,[[]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"try_into","","",144,[[],["result",4]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"from","goblin::pe::optional_header","",146,[[]]],[11,"into","","",146,[[]]],[11,"to_owned","","",146,[[]]],[11,"clone_into","","",146,[[]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"try_into","","",146,[[],["result",4]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"from","","",147,[[]]],[11,"into","","",147,[[]]],[11,"to_owned","","",147,[[]]],[11,"clone_into","","",147,[[]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"try_into","","",147,[[],["result",4]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"from","","",148,[[]]],[11,"into","","",148,[[]]],[11,"to_owned","","",148,[[]]],[11,"clone_into","","",148,[[]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"try_into","","",148,[[],["result",4]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"from","","",149,[[]]],[11,"into","","",149,[[]]],[11,"to_owned","","",149,[[]]],[11,"clone_into","","",149,[[]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"try_into","","",149,[[],["result",4]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"from","","",150,[[]]],[11,"into","","",150,[[]]],[11,"to_owned","","",150,[[]]],[11,"clone_into","","",150,[[]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"try_into","","",150,[[],["result",4]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"from","","",151,[[]]],[11,"into","","",151,[[]]],[11,"to_owned","","",151,[[]]],[11,"clone_into","","",151,[[]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"try_into","","",151,[[],["result",4]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"from","goblin::pe::relocation","",152,[[]]],[11,"into","","",152,[[]]],[11,"to_owned","","",152,[[]]],[11,"clone_into","","",152,[[]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"try_into","","",152,[[],["result",4]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"from","","",153,[[]]],[11,"into","","",153,[[]]],[11,"into_iter","","",153,[[]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"try_into","","",153,[[],["result",4]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"from","goblin::pe::section_table","",154,[[]]],[11,"into","","",154,[[]]],[11,"to_owned","","",154,[[]]],[11,"clone_into","","",154,[[]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"try_into","","",154,[[],["result",4]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"from","goblin::pe::symbol","",155,[[]]],[11,"into","","",155,[[]]],[11,"to_owned","","",155,[[]]],[11,"clone_into","","",155,[[]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"try_into","","",155,[[],["result",4]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"from","","",156,[[]]],[11,"into","","",156,[[]]],[11,"to_owned","","",156,[[]]],[11,"clone_into","","",156,[[]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"try_into","","",156,[[],["result",4]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"from","","",157,[[]]],[11,"into","","",157,[[]]],[11,"to_owned","","",157,[[]]],[11,"clone_into","","",157,[[]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"try_into","","",157,[[],["result",4]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"from","","",158,[[]]],[11,"into","","",158,[[]]],[11,"to_owned","","",158,[[]]],[11,"clone_into","","",158,[[]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"try_into","","",158,[[],["result",4]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"from","","",159,[[]]],[11,"into","","",159,[[]]],[11,"to_owned","","",159,[[]]],[11,"clone_into","","",159,[[]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"try_into","","",159,[[],["result",4]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"from","","",160,[[]]],[11,"into","","",160,[[]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"try_into","","",160,[[],["result",4]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"from","","",176,[[]]],[11,"into","","",176,[[]]],[11,"into_iter","","",176,[[]]],[11,"borrow","","",176,[[]]],[11,"borrow_mut","","",176,[[]]],[11,"try_from","","",176,[[],["result",4]]],[11,"try_into","","",176,[[],["result",4]]],[11,"type_id","","",176,[[],["typeid",3]]],[11,"from","goblin::archive","",161,[[]]],[11,"into","","",161,[[]]],[11,"to_owned","","",161,[[]]],[11,"clone_into","","",161,[[]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"try_into","","",161,[[],["result",4]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"from","","",162,[[]]],[11,"into","","",162,[[]]],[11,"to_owned","","",162,[[]]],[11,"clone_into","","",162,[[]]],[11,"borrow","","",162,[[]]],[11,"borrow_mut","","",162,[[]]],[11,"try_from","","",162,[[],["result",4]]],[11,"try_into","","",162,[[],["result",4]]],[11,"type_id","","",162,[[],["typeid",3]]],[11,"from","","",163,[[]]],[11,"into","","",163,[[]]],[11,"to_owned","","",163,[[]]],[11,"clone_into","","",163,[[]]],[11,"borrow","","",163,[[]]],[11,"borrow_mut","","",163,[[]]],[11,"try_from","","",163,[[],["result",4]]],[11,"try_into","","",163,[[],["result",4]]],[11,"type_id","","",163,[[],["typeid",3]]],[11,"from","","",164,[[]]],[11,"into","","",164,[[]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"try_from","","",164,[[],["result",4]]],[11,"try_into","","",164,[[],["result",4]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"from","","",166,[[]]],[11,"into","","",166,[[]]],[11,"borrow","","",166,[[]]],[11,"borrow_mut","","",166,[[]]],[11,"try_from","","",166,[[],["result",4]]],[11,"try_into","","",166,[[],["result",4]]],[11,"type_id","","",166,[[],["typeid",3]]],[11,"from","","",165,[[]]],[11,"into","","",165,[[]]],[11,"borrow","","",165,[[]]],[11,"borrow_mut","","",165,[[]]],[11,"try_from","","",165,[[],["result",4]]],[11,"try_into","","",165,[[],["result",4]]],[11,"type_id","","",165,[[],["typeid",3]]],[11,"fmt","goblin::container","",5,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",5,[[],["endian",4]]],[11,"from","","",5,[[],["endian",4]]],[11,"eq","","",5,[[["endian",4]]]],[11,"default","","",5,[[],["endian",4]]],[11,"from","goblin::error","",3,[[["error",3]],["error",4]]],[11,"from","","",3,[[["error",4]],["error",4]]],[11,"from","goblin::container","",6,[[["container",4]]]],[11,"from","","",6,[[["endian",4]]]],[11,"from","goblin::elf::compression_header","",9,[[["compressionheader",3]]]],[11,"from","goblin::elf::compression_header::compression_header32","",10,[[["elfcompressionheader",3]]]],[11,"from","goblin::elf::compression_header","",9,[[["compressionheader",3]]]],[11,"from","goblin::elf::compression_header::compression_header64","",11,[[["elfcompressionheader",3]]]],[11,"from","goblin::elf::header::header32","",13,[[["elfheader",3]]]],[11,"from","goblin::elf::header","",12,[[["header",3]]]],[11,"from","goblin::elf::header::header64","",14,[[["elfheader",3]]]],[11,"from","goblin::elf::header","",12,[[["header",3]]]],[11,"from","goblin::elf::program_header","",15,[[["programheader",3]]]],[11,"from","goblin::elf::program_header::program_header32","",16,[[["elfprogramheader",3]]]],[11,"from","goblin::elf::program_header","",15,[[["programheader",3]]]],[11,"from","goblin::elf::program_header::program_header64","",17,[[["elfprogramheader",3]]]],[11,"from","goblin::elf::section_header","",18,[[["sectionheader",3]]]],[11,"from","goblin::elf::section_header::section_header32","",19,[[["elfsectionheader",3]]]],[11,"from","goblin::elf::section_header","",18,[[["sectionheader",3]]]],[11,"from","goblin::elf::section_header::section_header64","",20,[[["elfsectionheader",3]]]],[11,"from","goblin::elf::sym","",21,[[["sym",3]]]],[11,"from","goblin::elf::sym::sym32","",22,[[["elfsym",3]]]],[11,"from","goblin::elf::sym","",21,[[["sym",3]]]],[11,"from","goblin::elf::sym::sym64","",23,[[["elfsym",3]]]],[11,"from","goblin::elf::dynamic::dyn32","",28,[[["elfdyn",3]]]],[11,"from","goblin::elf::dynamic","",25,[[["dyn",3]]]],[11,"from","goblin::elf::dynamic::dyn64","",30,[[["elfdyn",3]]]],[11,"from","goblin::elf::dynamic","",25,[[["dyn",3]]]],[11,"from","goblin::elf::reloc","",32,[[["rela",3]]]],[11,"from","","",32,[[["rel",3]]]],[11,"from","goblin::elf::reloc::reloc32","",33,[[["reloc",3]]]],[11,"from","","",34,[[["reloc",3]]]],[11,"from","goblin::elf::reloc","",32,[[["rela",3]]]],[11,"from","","",32,[[["rel",3]]]],[11,"from","goblin::elf::reloc::reloc64","",35,[[["reloc",3]]]],[11,"from","","",36,[[["reloc",3]]]],[11,"from","goblin::mach::header","",59,[[["header32",3]]]],[11,"from","","",57,[[["header",3]]]],[11,"from","","",59,[[["header64",3]]]],[11,"from","","",58,[[["header",3]]]],[11,"from","goblin::mach::load_command","",64,[[["section",3]]]],[11,"from","","",63,[[["section",3]]]],[11,"from","goblin::mach::segment","",106,[[["section32",3]]]],[11,"from","","",106,[[["section64",3]]]],[11,"from","goblin::mach::load_command","",66,[[["segment",3]]]],[11,"from","","",65,[[["segment",3]]]],[11,"from","goblin::mach::symbols","",111,[[["nlist32",3]]]],[11,"from","","",111,[[["nlist64",3]]]],[11,"from","","",109,[[["nlist",3]]]],[11,"from","","",110,[[["nlist",3]]]],[11,"from","goblin::pe::optional_header","",148,[[["standardfields32",3]]]],[11,"from","","",148,[[["standardfields64",3]]]],[11,"from","goblin","",177,[[["windowsfields32",3]]]],[11,"len","goblin::elf::sym","",167,[[]]],[11,"len","goblin::elf::reloc","",168,[[]]],[11,"len","goblin::mach::segment","",172,[[]]],[11,"next","goblin::elf::sym","",167,[[],["option",4]]],[11,"next","goblin::elf::reloc","",168,[[],["option",4]]],[11,"next","goblin::elf::note","",40,[[],["option",4]]],[11,"next","","",41,[[],["option",4]]],[11,"next","goblin::mach::segment","",171,[[],["option",4]]],[11,"next","","",172,[[],["option",4]]],[11,"next","goblin::mach::symbols","",173,[[],["option",4]]],[11,"next","goblin::mach","",169,[[],["option",4]]],[11,"next","","",170,[[],["option",4]]],[11,"next","goblin::pe::exception","",174,[[],["option",4]]],[11,"size_hint","","",174,[[]]],[11,"next","","",175,[[],["option",4]]],[11,"size_hint","","",175,[[]]],[11,"next","goblin::pe::relocation","",153,[[],["option",4]]],[11,"next","goblin::pe::symbol","",176,[[],["option",4]]],[11,"clone","goblin::container","",7,[[],["container",4]]],[11,"clone","","",6,[[],["ctx",3]]],[11,"clone","goblin::elf::compression_header::compression_header32","",10,[[],["compressionheader",3]]],[11,"clone","goblin::elf::compression_header::compression_header64","",11,[[],["compressionheader",3]]],[11,"clone","goblin::elf::compression_header","",9,[[],["compressionheader",3]]],[11,"clone","goblin::elf::header","",12,[[],["header",3]]],[11,"clone","goblin::elf::header::header32","",13,[[],["header",3]]],[11,"clone","goblin::elf::header::header64","",14,[[],["header",3]]],[11,"clone","goblin::elf::program_header","",15,[[],["programheader",3]]],[11,"clone","goblin::elf::program_header::program_header32","",16,[[],["programheader",3]]],[11,"clone","goblin::elf::program_header::program_header64","",17,[[],["programheader",3]]],[11,"clone","goblin::elf::section_header::section_header32","",19,[[],["sectionheader",3]]],[11,"clone","goblin::elf::section_header::section_header64","",20,[[],["sectionheader",3]]],[11,"clone","goblin::elf::section_header","",18,[[],["sectionheader",3]]],[11,"clone","goblin::elf::sym::sym32","",22,[[],["sym",3]]],[11,"clone","goblin::elf::sym::sym64","",23,[[],["sym",3]]],[11,"clone","goblin::elf::sym","",21,[[],["sym",3]]],[11,"clone","goblin::elf::dynamic","",25,[[],["dyn",3]]],[11,"clone","goblin::elf::dynamic::dyn32","",28,[[],["dyn",3]]],[11,"clone","goblin::elf::dynamic::dyn64","",30,[[],["dyn",3]]],[11,"clone","goblin::elf::reloc::reloc32","",33,[[],["rela",3]]],[11,"clone","","",34,[[],["rel",3]]],[11,"clone","goblin::elf::reloc::reloc64","",35,[[],["rela",3]]],[11,"clone","","",36,[[],["rel",3]]],[11,"clone","goblin::elf::reloc","",32,[[],["reloc",3]]],[11,"clone","goblin::elf::note","",38,[[],["nhdr32",3]]],[11,"clone","","",39,[[],["nhdr64",3]]],[11,"clone","goblin::mach::fat","",55,[[],["fatheader",3]]],[11,"clone","","",56,[[],["fatarch",3]]],[11,"clone","goblin::mach::header","",57,[[],["header32",3]]],[11,"clone","","",58,[[],["header64",3]]],[11,"clone","","",59,[[],["header",3]]],[11,"clone","goblin::mach::load_command","",62,[[],["loadcommandheader",3]]],[11,"clone","","",63,[[],["section32",3]]],[11,"clone","","",64,[[],["section64",3]]],[11,"clone","","",65,[[],["segmentcommand32",3]]],[11,"clone","","",66,[[],["segmentcommand64",3]]],[11,"clone","","",67,[[],["fvmlib",3]]],[11,"clone","","",68,[[],["fvmlibcommand",3]]],[11,"clone","","",69,[[],["dylib",3]]],[11,"clone","","",70,[[],["dylibcommand",3]]],[11,"clone","","",71,[[],["subframeworkcommand",3]]],[11,"clone","","",72,[[],["subclientcommand",3]]],[11,"clone","","",73,[[],["subumbrellacommand",3]]],[11,"clone","","",74,[[],["sublibrarycommand",3]]],[11,"clone","","",75,[[],["prebounddylibcommand",3]]],[11,"clone","","",76,[[],["dylinkercommand",3]]],[11,"clone","","",77,[[]]],[11,"clone","","",78,[[],["routinescommand32",3]]],[11,"clone","","",79,[[],["routinescommand64",3]]],[11,"clone","","",80,[[],["symtabcommand",3]]],[11,"clone","","",81,[[],["dysymtabcommand",3]]],[11,"clone","","",82,[[],["dylibtableofcontents",3]]],[11,"clone","","",83,[[],["dylibmodule",3]]],[11,"clone","","",84,[[],["dylibmodule64",3]]],[11,"clone","","",85,[[],["dylibreference",3]]],[11,"clone","","",86,[[],["twolevelhintscommand",3]]],[11,"clone","","",87,[[],["twolevelhint",3]]],[11,"clone","","",88,[[],["prebindcksumcommand",3]]],[11,"clone","","",89,[[],["uuidcommand",3]]],[11,"clone","","",90,[[],["rpathcommand",3]]],[11,"clone","","",91,[[],["linkeditdatacommand",3]]],[11,"clone","","",92,[[],["encryptioninfocommand32",3]]],[11,"clone","","",93,[[],["encryptioninfocommand64",3]]],[11,"clone","","",94,[[],["versionmincommand",3]]],[11,"clone","","",95,[[],["dyldinfocommand",3]]],[11,"clone","","",96,[[],["linkeroptioncommand",3]]],[11,"clone","","",97,[[],["symsegcommand",3]]],[11,"clone","","",98,[[],["identcommand",3]]],[11,"clone","","",99,[[],["fvmfilecommand",3]]],[11,"clone","","",100,[[],["entrypointcommand",3]]],[11,"clone","","",101,[[],["sourceversioncommand",3]]],[11,"clone","","",102,[[],["dataincodeentry",3]]],[11,"clone","goblin::mach::relocation","",105,[[],["relocationinfo",3]]],[11,"clone","goblin::mach::symbols","",109,[[],["nlist32",3]]],[11,"clone","","",110,[[],["nlist64",3]]],[11,"clone","","",111,[[],["nlist",3]]],[11,"clone","","",112,[[],["symbolsctx",3]]],[11,"clone","goblin::pe::data_directories","",116,[[],["datadirectory",3]]],[11,"clone","","",117,[[],["datadirectories",3]]],[11,"clone","goblin::pe::debug","",118,[[],["debugdata",3]]],[11,"clone","","",119,[[],["imagedebugdirectory",3]]],[11,"clone","","",120,[[],["codeviewpdb70debuginfo",3]]],[11,"clone","goblin::pe::exception","",121,[[],["runtimefunction",3]]],[11,"clone","","",122,[[],["register",3]]],[11,"clone","","",125,[[],["stackframeoffset",4]]],[11,"clone","","",126,[[],["unwindoperation",4]]],[11,"clone","","",123,[[],["unwindcode",3]]],[11,"clone","","",175,[[],["unwindcodeiterator",3]]],[11,"clone","","",127,[[],["unwindhandler",4]]],[11,"clone","","",124,[[],["unwindinfo",3]]],[11,"clone","goblin::pe::export","",129,[[],["exportdirectorytable",3]]],[11,"clone","goblin::pe::header","",136,[[],["dosheader",3]]],[11,"clone","","",137,[[],["coffheader",3]]],[11,"clone","","",138,[[],["header",3]]],[11,"clone","goblin::pe::import","",139,[[],["hintnametableentry",3]]],[11,"clone","","",144,[[],["syntheticimportlookuptableentry",4]]],[11,"clone","goblin::pe::optional_header","",146,[[],["standardfields32",3]]],[11,"clone","","",147,[[],["standardfields64",3]]],[11,"clone","","",148,[[],["standardfields",3]]],[11,"clone","","",149,[[],["windowsfields32",3]]],[11,"clone","","",150,[[],["windowsfields64",3]]],[11,"clone","","",151,[[],["optionalheader",3]]],[11,"clone","goblin::pe::relocation","",152,[[],["relocation",3]]],[11,"clone","goblin::pe::section_table","",154,[[],["sectiontable",3]]],[11,"clone","goblin::pe::symbol","",155,[[],["symbol",3]]],[11,"clone","","",156,[[],["auxfunctiondefinition",3]]],[11,"clone","","",157,[[],["auxbeginandendfunction",3]]],[11,"clone","","",158,[[],["auxweakexternal",3]]],[11,"clone","","",159,[[],["auxsectiondefinition",3]]],[11,"clone","goblin::archive","",161,[[],["memberheader",3]]],[11,"clone","","",162,[[],["header",3]]],[11,"clone","","",163,[[],["member",3]]],[11,"default","goblin::strtab","",4,[[],["strtab",3]]],[11,"default","goblin::container","",7,[[]]],[11,"default","","",6,[[]]],[11,"default","goblin","",0,[[],["hintdata",3]]],[11,"default","goblin::elf::compression_header::compression_header32","",10,[[],["compressionheader",3]]],[11,"default","goblin::elf::compression_header::compression_header64","",11,[[],["compressionheader",3]]],[11,"default","goblin::elf::compression_header","",9,[[],["compressionheader",3]]],[11,"default","goblin::elf::header::header32","",13,[[],["header",3]]],[11,"default","goblin::elf::header::header64","",14,[[],["header",3]]],[11,"default","goblin::elf::program_header","",15,[[],["programheader",3]]],[11,"default","goblin::elf::program_header::program_header32","",16,[[],["programheader",3]]],[11,"default","goblin::elf::program_header::program_header64","",17,[[],["programheader",3]]],[11,"default","goblin::elf::section_header::section_header32","",19,[[],["sectionheader",3]]],[11,"default","goblin::elf::section_header::section_header64","",20,[[],["sectionheader",3]]],[11,"default","goblin::elf::section_header","",18,[[],["sectionheader",3]]],[11,"default","goblin::elf::sym::sym32","",22,[[],["sym",3]]],[11,"default","goblin::elf::sym::sym64","",23,[[],["sym",3]]],[11,"default","goblin::elf::sym","",21,[[],["sym",3]]],[11,"default","","",24,[[],["symtab",3]]],[11,"default","goblin::elf::dynamic","",25,[[],["dyn",3]]],[11,"default","","",27,[[],["dynamicinfo",3]]],[11,"default","goblin::elf::dynamic::dyn32","",28,[[],["dyn",3]]],[11,"default","","",29,[[],["dynamicinfo",3]]],[11,"default","goblin::elf::dynamic::dyn64","",30,[[],["dyn",3]]],[11,"default","","",31,[[],["dynamicinfo",3]]],[11,"default","goblin::elf::reloc::reloc32","",33,[[],["rela",3]]],[11,"default","","",34,[[],["rel",3]]],[11,"default","goblin::elf::reloc::reloc64","",35,[[],["rela",3]]],[11,"default","","",36,[[],["rel",3]]],[11,"default","goblin::elf::reloc","",32,[[],["reloc",3]]],[11,"default","","",37,[[],["relocsection",3]]],[11,"default","goblin::mach::fat","",55,[[],["fatheader",3]]],[11,"default","","",56,[[],["fatarch",3]]],[11,"default","goblin::mach::header","",57,[[],["header32",3]]],[11,"default","","",58,[[],["header64",3]]],[11,"default","","",59,[[],["header",3]]],[11,"default","goblin::mach::load_command","",80,[[]]],[11,"default","","",81,[[]]],[11,"default","","",95,[[],["dyldinfocommand",3]]],[11,"default","goblin::mach::segment","",106,[[],["section",3]]],[11,"default","","",108,[[],["segments",3]]],[11,"default","goblin::mach::symbols","",112,[[],["symbolsctx",3]]],[11,"default","","",173,[[],["symboliterator",3]]],[11,"default","goblin::pe::data_directories","",116,[[],["datadirectory",3]]],[11,"default","","",117,[[],["datadirectories",3]]],[11,"default","goblin::pe::debug","",118,[[],["debugdata",3]]],[11,"default","","",119,[[],["imagedebugdirectory",3]]],[11,"default","","",120,[[],["codeviewpdb70debuginfo",3]]],[11,"default","goblin::pe::exception","",121,[[],["runtimefunction",3]]],[11,"default","goblin::pe::export","",129,[[],["exportdirectorytable",3]]],[11,"default","","",130,[[],["exportdata",3]]],[11,"default","","",131,[[],["export",3]]],[11,"default","goblin::pe::header","",136,[[],["dosheader",3]]],[11,"default","","",137,[[],["coffheader",3]]],[11,"default","","",138,[[],["header",3]]],[11,"default","goblin::pe::optional_header","",146,[[],["standardfields32",3]]],[11,"default","","",147,[[],["standardfields64",3]]],[11,"default","","",148,[[],["standardfields",3]]],[11,"default","","",149,[[],["windowsfields32",3]]],[11,"default","","",150,[[],["windowsfields64",3]]],[11,"default","goblin::pe::relocation","",152,[[],["relocation",3]]],[11,"default","","",153,[[],["relocations",3]]],[11,"default","goblin::pe::section_table","",154,[[],["sectiontable",3]]],[11,"default","goblin::pe::symbol","",155,[[],["symbol",3]]],[11,"default","","",156,[[],["auxfunctiondefinition",3]]],[11,"default","","",157,[[],["auxbeginandendfunction",3]]],[11,"default","","",158,[[],["auxweakexternal",3]]],[11,"default","","",159,[[],["auxsectiondefinition",3]]],[11,"default","","",176,[[],["symboliterator",3]]],[11,"default","goblin::archive","",164,[[],["index",3]]],[11,"cmp","goblin::pe::exception","",122,[[["register",3]],["ordering",4]]],[11,"eq","goblin::container","",7,[[["container",4]]]],[11,"eq","","",6,[[["ctx",3]]]],[11,"ne","","",6,[[["ctx",3]]]],[11,"eq","goblin::elf::compression_header::compression_header32","",10,[[["compressionheader",3]]]],[11,"ne","","",10,[[["compressionheader",3]]]],[11,"eq","goblin::elf::compression_header::compression_header64","",11,[[["compressionheader",3]]]],[11,"ne","","",11,[[["compressionheader",3]]]],[11,"eq","goblin::elf::compression_header","",9,[[["compressionheader",3]]]],[11,"ne","","",9,[[["compressionheader",3]]]],[11,"eq","goblin::elf::header","",12,[[["header",3]]]],[11,"ne","","",12,[[["header",3]]]],[11,"eq","goblin::elf::header::header32","",13,[[["header",3]]]],[11,"ne","","",13,[[["header",3]]]],[11,"eq","goblin::elf::header::header64","",14,[[["header",3]]]],[11,"ne","","",14,[[["header",3]]]],[11,"eq","goblin::elf::program_header","",15,[[["programheader",3]]]],[11,"ne","","",15,[[["programheader",3]]]],[11,"eq","goblin::elf::program_header::program_header32","",16,[[["programheader",3]]]],[11,"ne","","",16,[[["programheader",3]]]],[11,"eq","goblin::elf::program_header::program_header64","",17,[[["programheader",3]]]],[11,"ne","","",17,[[["programheader",3]]]],[11,"eq","goblin::elf::section_header::section_header32","",19,[[["sectionheader",3]]]],[11,"ne","","",19,[[["sectionheader",3]]]],[11,"eq","goblin::elf::section_header::section_header64","",20,[[["sectionheader",3]]]],[11,"ne","","",20,[[["sectionheader",3]]]],[11,"eq","goblin::elf::section_header","",18,[[["sectionheader",3]]]],[11,"ne","","",18,[[["sectionheader",3]]]],[11,"eq","goblin::elf::sym::sym32","",22,[[["sym",3]]]],[11,"ne","","",22,[[["sym",3]]]],[11,"eq","goblin::elf::sym::sym64","",23,[[["sym",3]]]],[11,"ne","","",23,[[["sym",3]]]],[11,"eq","goblin::elf::sym","",21,[[["sym",3]]]],[11,"ne","","",21,[[["sym",3]]]],[11,"eq","goblin::elf::dynamic","",25,[[["dyn",3]]]],[11,"ne","","",25,[[["dyn",3]]]],[11,"eq","","",27,[[["dynamicinfo",3]]]],[11,"ne","","",27,[[["dynamicinfo",3]]]],[11,"eq","goblin::elf::dynamic::dyn32","",28,[[["dyn",3]]]],[11,"ne","","",28,[[["dyn",3]]]],[11,"eq","","",29,[[["dynamicinfo",3]]]],[11,"ne","","",29,[[["dynamicinfo",3]]]],[11,"eq","goblin::elf::dynamic::dyn64","",30,[[["dyn",3]]]],[11,"ne","","",30,[[["dyn",3]]]],[11,"eq","","",31,[[["dynamicinfo",3]]]],[11,"ne","","",31,[[["dynamicinfo",3]]]],[11,"eq","goblin::elf::reloc::reloc32","",33,[[["rela",3]]]],[11,"ne","","",33,[[["rela",3]]]],[11,"eq","","",34,[[["rel",3]]]],[11,"ne","","",34,[[["rel",3]]]],[11,"eq","goblin::elf::reloc::reloc64","",35,[[["rela",3]]]],[11,"ne","","",35,[[["rela",3]]]],[11,"eq","","",36,[[["rel",3]]]],[11,"ne","","",36,[[["rel",3]]]],[11,"eq","goblin::elf::reloc","",32,[[["reloc",3]]]],[11,"ne","","",32,[[["reloc",3]]]],[11,"eq","goblin::pe::data_directories","",116,[[["datadirectory",3]]]],[11,"ne","","",116,[[["datadirectory",3]]]],[11,"eq","","",117,[[["datadirectories",3]]]],[11,"ne","","",117,[[["datadirectories",3]]]],[11,"eq","goblin::pe::debug","",118,[[["debugdata",3]]]],[11,"ne","","",118,[[["debugdata",3]]]],[11,"eq","","",119,[[["imagedebugdirectory",3]]]],[11,"ne","","",119,[[["imagedebugdirectory",3]]]],[11,"eq","","",120,[[["codeviewpdb70debuginfo",3]]]],[11,"ne","","",120,[[["codeviewpdb70debuginfo",3]]]],[11,"eq","goblin::pe::exception","",121,[[["runtimefunction",3]]]],[11,"ne","","",121,[[["runtimefunction",3]]]],[11,"eq","","",122,[[["register",3]]]],[11,"ne","","",122,[[["register",3]]]],[11,"eq","","",125,[[["stackframeoffset",4]]]],[11,"ne","","",125,[[["stackframeoffset",4]]]],[11,"eq","","",126,[[["unwindoperation",4]]]],[11,"ne","","",126,[[["unwindoperation",4]]]],[11,"eq","","",123,[[["unwindcode",3]]]],[11,"ne","","",123,[[["unwindcode",3]]]],[11,"eq","","",127,[[["unwindhandler",4]]]],[11,"ne","","",127,[[["unwindhandler",4]]]],[11,"eq","goblin::pe::export","",129,[[["exportdirectorytable",3]]]],[11,"ne","","",129,[[["exportdirectorytable",3]]]],[11,"eq","goblin::pe::header","",136,[[["dosheader",3]]]],[11,"ne","","",136,[[["dosheader",3]]]],[11,"eq","","",137,[[["coffheader",3]]]],[11,"ne","","",137,[[["coffheader",3]]]],[11,"eq","","",138,[[["header",3]]]],[11,"ne","","",138,[[["header",3]]]],[11,"eq","goblin::pe::optional_header","",146,[[["standardfields32",3]]]],[11,"ne","","",146,[[["standardfields32",3]]]],[11,"eq","","",147,[[["standardfields64",3]]]],[11,"ne","","",147,[[["standardfields64",3]]]],[11,"eq","","",148,[[["standardfields",3]]]],[11,"ne","","",148,[[["standardfields",3]]]],[11,"eq","","",149,[[["windowsfields32",3]]]],[11,"ne","","",149,[[["windowsfields32",3]]]],[11,"eq","","",150,[[["windowsfields64",3]]]],[11,"ne","","",150,[[["windowsfields64",3]]]],[11,"eq","","",151,[[["optionalheader",3]]]],[11,"ne","","",151,[[["optionalheader",3]]]],[11,"eq","goblin::pe::relocation","",152,[[["relocation",3]]]],[11,"ne","","",152,[[["relocation",3]]]],[11,"eq","goblin::pe::section_table","",154,[[["sectiontable",3]]]],[11,"ne","","",154,[[["sectiontable",3]]]],[11,"eq","goblin::pe::symbol","",155,[[["symbol",3]]]],[11,"ne","","",155,[[["symbol",3]]]],[11,"eq","","",156,[[["auxfunctiondefinition",3]]]],[11,"ne","","",156,[[["auxfunctiondefinition",3]]]],[11,"eq","","",157,[[["auxbeginandendfunction",3]]]],[11,"ne","","",157,[[["auxbeginandendfunction",3]]]],[11,"eq","","",158,[[["auxweakexternal",3]]]],[11,"ne","","",158,[[["auxweakexternal",3]]]],[11,"eq","","",159,[[["auxsectiondefinition",3]]]],[11,"ne","","",159,[[["auxsectiondefinition",3]]]],[11,"eq","goblin::archive","",161,[[["memberheader",3]]]],[11,"ne","","",161,[[["memberheader",3]]]],[11,"eq","","",162,[[["header",3]]]],[11,"ne","","",162,[[["header",3]]]],[11,"eq","","",163,[[["member",3]]]],[11,"ne","","",163,[[["member",3]]]],[11,"eq","","",165,[[["indextype",4]]]],[11,"partial_cmp","goblin::pe::exception","",122,[[["register",3]],[["ordering",4],["option",4]]]],[11,"lt","","",122,[[["register",3]]]],[11,"le","","",122,[[["register",3]]]],[11,"gt","","",122,[[["register",3]]]],[11,"ge","","",122,[[["register",3]]]],[11,"deref","goblin::mach::segment","",108,[[]]],[11,"deref_mut","","",108,[[]]],[11,"fmt","goblin::error","",3,[[["formatter",3]],["result",6]]],[11,"fmt","goblin::strtab","",4,[[["formatter",3]],["result",6]]],[11,"fmt","goblin::container","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","goblin","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","goblin::elf::compression_header::compression_header32","",10,[[["formatter",3]],["result",6]]],[11,"fmt","goblin::elf::compression_header::compression_header64","",11,[[["formatter",3]],["result",6]]],[11,"fmt","goblin::elf::compression_header","",9,[[["formatter",3]],["result",6]]],[11,"fmt","goblin::elf::header","",12,[[["formatter",3]],["result",6]]],[11,"fmt","goblin::elf::header::header32","",13,[[["formatter",3]],["result",6]]],[11,"fmt","goblin::elf::header::header64","",14,[[["formatter",3]],["result",6]]],[11,"fmt","goblin::elf::program_header","",15,[[["formatter",3]],["result",6]]],[11,"fmt","goblin::elf::program_header::program_header32","",16,[[["formatter",3]],["result",6]]],[11,"fmt","goblin::elf::program_header::program_header64","",17,[[["formatter",3]],["result",6]]],[11,"fmt","goblin::elf::section_header::section_header32","",19,[[["formatter",3]],["result",6]]],[11,"fmt","goblin::elf::section_header::section_header64","",20,[[["formatter",3]],["result",6]]],[11,"fmt","goblin::elf::section_header","",18,[[["formatter",3]],["result",6]]],[11,"fmt","goblin::elf::sym::sym32","",22,[[["formatter",3]],["result",6]]],[11,"fmt","goblin::elf::sym::sym64","",23,[[["formatter",3]],["result",6]]],[11,"fmt","goblin::elf::sym","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","goblin::elf::dynamic","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","goblin::elf::dynamic::dyn32","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","goblin::elf::dynamic::dyn64","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","goblin::elf::reloc::reloc32","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","goblin::elf::reloc::reloc64","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","goblin::elf::reloc","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",168,[[["formatter",3]],["result",6]]],[11,"fmt","goblin::elf::note","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","goblin::elf","",8,[[["formatter",3]],["result",6]]],[11,"fmt","goblin::elf32::gnu_hash","",43,[[["formatter",3]],["result",6]]],[11,"fmt","goblin::elf64::gnu_hash","",44,[[["formatter",3]],["result",6]]],[11,"fmt","goblin::mach::exports","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","goblin::mach::fat","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","goblin::mach::header","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","goblin::mach::imports","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","goblin::mach::load_command","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],["result",6]]],[11,"fmt","","",78,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"fmt","","",81,[[["formatter",3]],["result",6]]],[11,"fmt","","",82,[[["formatter",3]],["result",6]]],[11,"fmt","","",83,[[["formatter",3]],["result",6]]],[11,"fmt","","",84,[[["formatter",3]],["result",6]]],[11,"fmt","","",85,[[["formatter",3]],["result",6]]],[11,"fmt","","",86,[[["formatter",3]],["result",6]]],[11,"fmt","","",87,[[["formatter",3]],["result",6]]],[11,"fmt","","",88,[[["formatter",3]],["result",6]]],[11,"fmt","","",89,[[["formatter",3]],["result",6]]],[11,"fmt","","",90,[[["formatter",3]],["result",6]]],[11,"fmt","","",91,[[["formatter",3]],["result",6]]],[11,"fmt","","",92,[[["formatter",3]],["result",6]]],[11,"fmt","","",93,[[["formatter",3]],["result",6]]],[11,"fmt","","",94,[[["formatter",3]],["result",6]]],[11,"fmt","","",95,[[["formatter",3]],["result",6]]],[11,"fmt","","",96,[[["formatter",3]],["result",6]]],[11,"fmt","","",97,[[["formatter",3]],["result",6]]],[11,"fmt","","",98,[[["formatter",3]],["result",6]]],[11,"fmt","","",99,[[["formatter",3]],["result",6]]],[11,"fmt","","",100,[[["formatter",3]],["result",6]]],[11,"fmt","","",101,[[["formatter",3]],["result",6]]],[11,"fmt","","",102,[[["formatter",3]],["result",6]]],[11,"fmt","","",104,[[["formatter",3]],["result",6]]],[11,"fmt","","",103,[[["formatter",3]],["result",6]]],[11,"fmt","goblin::mach::relocation","",105,[[["formatter",3]],["result",6]]],[11,"fmt","goblin::mach::segment","",106,[[["formatter",3]],["result",6]]],[11,"fmt","","",107,[[["formatter",3]],["result",6]]],[11,"fmt","","",108,[[["formatter",3]],["result",6]]],[11,"fmt","goblin::mach::symbols","",109,[[["formatter",3]],["result",6]]],[11,"fmt","","",110,[[["formatter",3]],["result",6]]],[11,"fmt","","",111,[[["formatter",3]],["result",6]]],[11,"fmt","","",112,[[["formatter",3]],["result",6]]],[11,"fmt","","",113,[[["formatter",3]],["result",6]]],[11,"fmt","goblin::mach","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","goblin::pe::data_directories","",116,[[["formatter",3]],["result",6]]],[11,"fmt","","",117,[[["formatter",3]],["result",6]]],[11,"fmt","goblin::pe::debug","",118,[[["formatter",3]],["result",6]]],[11,"fmt","","",119,[[["formatter",3]],["result",6]]],[11,"fmt","","",120,[[["formatter",3]],["result",6]]],[11,"fmt","goblin::pe::exception","",121,[[["formatter",3]],["result",6]]],[11,"fmt","","",174,[[["formatter",3]],["result",6]]],[11,"fmt","","",122,[[["formatter",3]],["result",6]]],[11,"fmt","","",125,[[["formatter",3]],["result",6]]],[11,"fmt","","",126,[[["formatter",3]],["result",6]]],[11,"fmt","","",123,[[["formatter",3]],["result",6]]],[11,"fmt","","",175,[[["formatter",3]],["result",6]]],[11,"fmt","","",127,[[["formatter",3]],["result",6]]],[11,"fmt","","",124,[[["formatter",3]],["result",6]]],[11,"fmt","","",128,[[["formatter",3]],["result",6]]],[11,"fmt","goblin::pe::export","",129,[[["formatter",3]],["result",6]]],[11,"fmt","","",132,[[["formatter",3]],["result",6]]],[11,"fmt","","",130,[[["formatter",3]],["result",6]]],[11,"fmt","","",133,[[["formatter",3]],["result",6]]],[11,"fmt","","",131,[[["formatter",3]],["result",6]]],[11,"fmt","goblin::pe::header","",136,[[["formatter",3]],["result",6]]],[11,"fmt","","",137,[[["formatter",3]],["result",6]]],[11,"fmt","","",138,[[["formatter",3]],["result",6]]],[11,"fmt","goblin::pe::import","",139,[[["formatter",3]],["result",6]]],[11,"fmt","","",144,[[["formatter",3]],["result",6]]],[11,"fmt","","",140,[[["formatter",3]],["result",6]]],[11,"fmt","","",141,[[["formatter",3]],["result",6]]],[11,"fmt","","",142,[[["formatter",3]],["result",6]]],[11,"fmt","","",143,[[["formatter",3]],["result",6]]],[11,"fmt","goblin::pe::optional_header","",146,[[["formatter",3]],["result",6]]],[11,"fmt","","",147,[[["formatter",3]],["result",6]]],[11,"fmt","","",148,[[["formatter",3]],["result",6]]],[11,"fmt","","",149,[[["formatter",3]],["result",6]]],[11,"fmt","","",150,[[["formatter",3]],["result",6]]],[11,"fmt","","",151,[[["formatter",3]],["result",6]]],[11,"fmt","goblin::pe::relocation","",152,[[["formatter",3]],["result",6]]],[11,"fmt","goblin::pe::section_table","",154,[[["formatter",3]],["result",6]]],[11,"fmt","goblin::pe::symbol","",155,[[["formatter",3]],["result",6]]],[11,"fmt","","",156,[[["formatter",3]],["result",6]]],[11,"fmt","","",157,[[["formatter",3]],["result",6]]],[11,"fmt","","",158,[[["formatter",3]],["result",6]]],[11,"fmt","","",159,[[["formatter",3]],["result",6]]],[11,"fmt","","",160,[[["formatter",3]],["result",6]]],[11,"fmt","goblin::pe","",114,[[["formatter",3]],["result",6]]],[11,"fmt","","",115,[[["formatter",3]],["result",6]]],[11,"fmt","goblin::archive","",161,[[["formatter",3]],["result",6]]],[11,"fmt","","",162,[[["formatter",3]],["result",6]]],[11,"fmt","","",163,[[["formatter",3]],["result",6]]],[11,"fmt","","",164,[[["formatter",3]],["result",6]]],[11,"fmt","","",165,[[["formatter",3]],["result",6]]],[11,"fmt","","",166,[[["formatter",3]],["result",6]]],[11,"fmt","goblin::error","",3,[[["formatter",3]],["result",6]]],[11,"fmt","goblin::mach::load_command","",62,[[["formatter",3]],["result",6]]],[11,"fmt","goblin::pe::exception","",122,[[["formatter",3]],["result",6]]],[11,"index","goblin::strtab","Gets str reference at starting at byte `offset`. NB: this…",4,[[]]],[11,"source","goblin::error","",3,[[],[["option",4],["error",8]]]],[11,"from_ctx","goblin::elf::note","",38,[[["endian",4]]]],[11,"from_ctx","","",39,[[["endian",4]]]],[11,"from_ctx","goblin::mach::load_command","",63,[[["endian",4]]]],[11,"from_ctx","","",64,[[["endian",4]]]],[11,"from_ctx","","",65,[[["endian",4]]]],[11,"from_ctx","","",66,[[["endian",4]]]],[11,"from_ctx","","",67,[[["endian",4]]]],[11,"from_ctx","","",68,[[["endian",4]]]],[11,"from_ctx","","",69,[[["endian",4]]]],[11,"from_ctx","","",70,[[["endian",4]]]],[11,"from_ctx","","",71,[[["endian",4]]]],[11,"from_ctx","","",72,[[["endian",4]]]],[11,"from_ctx","","",73,[[["endian",4]]]],[11,"from_ctx","","",74,[[["endian",4]]]],[11,"from_ctx","","",75,[[["endian",4]]]],[11,"from_ctx","","",76,[[["endian",4]]]],[11,"from_ctx","","",78,[[["endian",4]]]],[11,"from_ctx","","",79,[[["endian",4]]]],[11,"from_ctx","","",80,[[["endian",4]]]],[11,"from_ctx","","",81,[[["endian",4]]]],[11,"from_ctx","","",82,[[["endian",4]]]],[11,"from_ctx","","",83,[[["endian",4]]]],[11,"from_ctx","","",84,[[["endian",4]]]],[11,"from_ctx","","",85,[[["endian",4]]]],[11,"from_ctx","","",86,[[["endian",4]]]],[11,"from_ctx","","",87,[[["endian",4]]]],[11,"from_ctx","","",88,[[["endian",4]]]],[11,"from_ctx","","",89,[[["endian",4]]]],[11,"from_ctx","","",90,[[["endian",4]]]],[11,"from_ctx","","",91,[[["endian",4]]]],[11,"from_ctx","","",92,[[["endian",4]]]],[11,"from_ctx","","",93,[[["endian",4]]]],[11,"from_ctx","","",94,[[["endian",4]]]],[11,"from_ctx","","",96,[[["endian",4]]]],[11,"from_ctx","","",97,[[["endian",4]]]],[11,"from_ctx","","",98,[[["endian",4]]]],[11,"from_ctx","","",99,[[["endian",4]]]],[11,"from_ctx","","",100,[[["endian",4]]]],[11,"from_ctx","","",101,[[["endian",4]]]],[11,"from_ctx","","",102,[[["endian",4]]]],[11,"from_ctx","goblin::mach::relocation","",105,[[["endian",4]]]],[11,"from_ctx","goblin::mach::symbols","",109,[[["endian",4]]]],[11,"from_ctx","","",110,[[["endian",4]]]],[11,"from_ctx","goblin::pe::header","",137,[[["endian",4]]]],[11,"from_ctx","goblin::pe::relocation","",152,[[["endian",4]]]],[11,"from_ctx","goblin::pe::symbol","",155,[[["endian",4]]]],[11,"from_ctx","","",156,[[["endian",4]]]],[11,"from_ctx","","",157,[[["endian",4]]]],[11,"from_ctx","","",158,[[["endian",4]]]],[11,"from_ctx","","",159,[[["endian",4]]]],[11,"try_from_ctx","goblin::elf::compression_header::compression_header32","",10,[[["endian",4]],["result",4]]],[11,"try_from_ctx","goblin::elf::compression_header::compression_header64","",11,[[["endian",4]],["result",4]]],[11,"try_from_ctx","goblin::elf::compression_header","",9,[[["ctx",3]],["result",4]]],[11,"try_from_ctx","goblin::elf::header","",12,[[["endian",4]],["result",6]]],[11,"try_from_ctx","goblin::elf::header::header32","",13,[[["endian",4]],["result",4]]],[11,"try_from_ctx","goblin::elf::header::header64","",14,[[["endian",4]],["result",4]]],[11,"try_from_ctx","goblin::elf::program_header","",15,[[["ctx",3]],["result",4]]],[11,"try_from_ctx","goblin::elf::program_header::program_header32","",16,[[["endian",4]],["result",4]]],[11,"try_from_ctx","goblin::elf::program_header::program_header64","",17,[[["endian",4]],["result",4]]],[11,"try_from_ctx","goblin::elf::section_header::section_header32","",19,[[["endian",4]],["result",4]]],[11,"try_from_ctx","goblin::elf::section_header::section_header64","",20,[[["endian",4]],["result",4]]],[11,"try_from_ctx","goblin::elf::section_header","",18,[[["ctx",3]],["result",4]]],[11,"try_from_ctx","goblin::elf::sym::sym32","",22,[[["endian",4]],["result",4]]],[11,"try_from_ctx","goblin::elf::sym::sym64","",23,[[["endian",4]],["result",4]]],[11,"try_from_ctx","goblin::elf::sym","",21,[[["ctx",3]],["result",4]]],[11,"try_from_ctx","goblin::elf::dynamic","",25,[[["ctx",3]],["result",4]]],[11,"try_from_ctx","goblin::elf::dynamic::dyn32","",28,[[["endian",4]],["result",4]]],[11,"try_from_ctx","goblin::elf::dynamic::dyn64","",30,[[["endian",4]],["result",4]]],[11,"try_from_ctx","goblin::elf::reloc::reloc32","",33,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",34,[[["endian",4]],["result",4]]],[11,"try_from_ctx","goblin::elf::reloc::reloc64","",35,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",36,[[["endian",4]],["result",4]]],[11,"try_from_ctx","goblin::elf::reloc","",32,[[],["result",4]]],[11,"try_from_ctx","goblin::elf::note","",38,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",39,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",42,[[],["result",4]]],[11,"try_from_ctx","goblin::elf","",8,[[],["result",4]]],[11,"try_from_ctx","goblin::mach::fat","",55,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",56,[[["endian",4]],["result",4]]],[11,"try_from_ctx","goblin::mach::header","",57,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",58,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",59,[[["ctx",3]],["result",6]]],[11,"try_from_ctx","goblin::mach::load_command","",62,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",63,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",64,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",65,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",66,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",67,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",68,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",69,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",70,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",71,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",72,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",73,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",74,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",75,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",76,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",77,[[["endian",4]],["result",6]]],[11,"try_from_ctx","","",78,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",79,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",80,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",81,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",82,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",83,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",84,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",85,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",86,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",87,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",88,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",89,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",90,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",91,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",92,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",93,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",94,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",95,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",96,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",97,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",98,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",99,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",100,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",101,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",102,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",104,[[["endian",4]],["result",6]]],[11,"try_from_ctx","goblin::mach::relocation","",105,[[["endian",4]],["result",4]]],[11,"try_from_ctx","goblin::mach::segment","",106,[[["ctx",3]],["result",4]]],[11,"try_from_ctx","goblin::mach::symbols","",109,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",110,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",111,[[["ctx",3]],["result",6]]],[11,"try_from_ctx","","",113,[[["symbolsctx",3]],["result",6]]],[11,"try_from_ctx","goblin::pe::data_directories","",116,[[["endian",4]],["result",4]]],[11,"try_from_ctx","goblin::pe::debug","",119,[[["endian",4]],["result",4]]],[11,"try_from_ctx","goblin::pe::exception","",121,[[["endian",4]],["result",4]]],[11,"try_from_ctx","goblin::pe::export","",129,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",133,[[["endian",4]],["result",4]]],[11,"try_from_ctx","goblin::pe::header","",137,[[["endian",4]],["result",4]]],[11,"try_from_ctx","goblin::pe::import","",140,[[["endian",4]],["result",4]]],[11,"try_from_ctx","goblin::pe::optional_header","",146,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",147,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",149,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",150,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",151,[[["endian",4]],["result",6]]],[11,"try_from_ctx","goblin::pe::relocation","",152,[[["endian",4]],["result",4]]],[11,"try_from_ctx","goblin::pe::symbol","",155,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",156,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",157,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",158,[[["endian",4]],["result",4]]],[11,"try_from_ctx","","",159,[[["endian",4]],["result",4]]],[11,"try_from_ctx","goblin::archive","",161,[[["endian",4]],["result",4]]],[11,"into_ctx","goblin::elf::compression_header","",9,[[["ctx",3]]]],[11,"into_ctx","goblin::elf::header","",12,[[["ctx",3]]]],[11,"into_ctx","goblin::elf::section_header","",18,[[["ctx",3]]]],[11,"into_ctx","goblin::elf::sym","",21,[[["ctx",3]]]],[11,"into_ctx","goblin::elf::reloc","Writes the relocation into `bytes`",32,[[]]],[11,"into_ctx","goblin::elf::note","",38,[[["endian",4]]]],[11,"into_ctx","","",39,[[["endian",4]]]],[11,"into_ctx","goblin::mach::header","",59,[[["ctx",3]]]],[11,"into_ctx","goblin::mach::load_command","",63,[[["endian",4]]]],[11,"into_ctx","","",64,[[["endian",4]]]],[11,"into_ctx","","",65,[[["endian",4]]]],[11,"into_ctx","","",66,[[["endian",4]]]],[11,"into_ctx","","",67,[[["endian",4]]]],[11,"into_ctx","","",68,[[["endian",4]]]],[11,"into_ctx","","",69,[[["endian",4]]]],[11,"into_ctx","","",70,[[["endian",4]]]],[11,"into_ctx","","",71,[[["endian",4]]]],[11,"into_ctx","","",72,[[["endian",4]]]],[11,"into_ctx","","",73,[[["endian",4]]]],[11,"into_ctx","","",74,[[["endian",4]]]],[11,"into_ctx","","",75,[[["endian",4]]]],[11,"into_ctx","","",76,[[["endian",4]]]],[11,"into_ctx","","",78,[[["endian",4]]]],[11,"into_ctx","","",79,[[["endian",4]]]],[11,"into_ctx","","",80,[[["endian",4]]]],[11,"into_ctx","","",81,[[["endian",4]]]],[11,"into_ctx","","",82,[[["endian",4]]]],[11,"into_ctx","","",83,[[["endian",4]]]],[11,"into_ctx","","",84,[[["endian",4]]]],[11,"into_ctx","","",85,[[["endian",4]]]],[11,"into_ctx","","",86,[[["endian",4]]]],[11,"into_ctx","","",87,[[["endian",4]]]],[11,"into_ctx","","",88,[[["endian",4]]]],[11,"into_ctx","","",89,[[["endian",4]]]],[11,"into_ctx","","",90,[[["endian",4]]]],[11,"into_ctx","","",91,[[["endian",4]]]],[11,"into_ctx","","",92,[[["endian",4]]]],[11,"into_ctx","","",93,[[["endian",4]]]],[11,"into_ctx","","",94,[[["endian",4]]]],[11,"into_ctx","","",96,[[["endian",4]]]],[11,"into_ctx","","",97,[[["endian",4]]]],[11,"into_ctx","","",98,[[["endian",4]]]],[11,"into_ctx","","",99,[[["endian",4]]]],[11,"into_ctx","","",100,[[["endian",4]]]],[11,"into_ctx","","",101,[[["endian",4]]]],[11,"into_ctx","","",102,[[["endian",4]]]],[11,"into_ctx","goblin::mach::relocation","",105,[[["endian",4]]]],[11,"into_ctx","goblin::mach::segment","",106,[[["ctx",3]]]],[11,"into_ctx","","",107,[[["ctx",3]]]],[11,"into_ctx","goblin::mach::symbols","",109,[[["endian",4]]]],[11,"into_ctx","","",110,[[["endian",4]]]],[11,"into_ctx","","",111,[[["ctx",3]]]],[11,"into_ctx","goblin::pe::header","",137,[[["endian",4]]]],[11,"into_ctx","goblin::pe::relocation","",152,[[["endian",4]]]],[11,"into_ctx","goblin::pe::section_table","",154,[[["endian",4]]]],[11,"into_ctx","goblin::pe::symbol","",155,[[["endian",4]]]],[11,"into_ctx","","",156,[[["endian",4]]]],[11,"into_ctx","","",157,[[["endian",4]]]],[11,"into_ctx","","",158,[[["endian",4]]]],[11,"into_ctx","","",159,[[["endian",4]]]],[11,"try_into_ctx","goblin::elf::compression_header::compression_header32","",10,[[["endian",4]],["result",4]]],[11,"try_into_ctx","goblin::elf::compression_header::compression_header64","",11,[[["endian",4]],["result",4]]],[11,"try_into_ctx","goblin::elf::compression_header","",9,[[["ctx",3]],["result",4]]],[11,"try_into_ctx","goblin::elf::header","",12,[[["endian",4]],["result",4]]],[11,"try_into_ctx","goblin::elf::header::header32","a Pwrite impl for Header: note we use the endianness value…",13,[[["endian",4]],["result",4]]],[11,"try_into_ctx","goblin::elf::header::header64","a Pwrite impl for Header: note we use the endianness value…",14,[[["endian",4]],["result",4]]],[11,"try_into_ctx","goblin::elf::program_header","",15,[[["ctx",3]],["result",4]]],[11,"try_into_ctx","goblin::elf::program_header::program_header32","",16,[[["endian",4]],["result",4]]],[11,"try_into_ctx","goblin::elf::program_header::program_header64","",17,[[["endian",4]],["result",4]]],[11,"try_into_ctx","goblin::elf::section_header::section_header32","",19,[[["endian",4]],["result",4]]],[11,"try_into_ctx","goblin::elf::section_header::section_header64","",20,[[["endian",4]],["result",4]]],[11,"try_into_ctx","goblin::elf::section_header","",18,[[["ctx",3]],["result",4]]],[11,"try_into_ctx","goblin::elf::sym::sym32","",22,[[["endian",4]],["result",4]]],[11,"try_into_ctx","goblin::elf::sym::sym64","",23,[[["endian",4]],["result",4]]],[11,"try_into_ctx","goblin::elf::sym","",21,[[["ctx",3]],["result",4]]],[11,"try_into_ctx","goblin::elf::dynamic","",25,[[["ctx",3]],["result",4]]],[11,"try_into_ctx","goblin::elf::dynamic::dyn32","",28,[[["endian",4]],["result",4]]],[11,"try_into_ctx","goblin::elf::dynamic::dyn64","",30,[[["endian",4]],["result",4]]],[11,"try_into_ctx","goblin::elf::reloc::reloc32","",33,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",34,[[["endian",4]],["result",4]]],[11,"try_into_ctx","goblin::elf::reloc::reloc64","",35,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",36,[[["endian",4]],["result",4]]],[11,"try_into_ctx","goblin::elf::reloc","Writes the relocation into `bytes`",32,[[],["result",4]]],[11,"try_into_ctx","goblin::elf::note","",38,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",39,[[["endian",4]],["result",4]]],[11,"try_into_ctx","goblin::mach::fat","",55,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",56,[[["endian",4]],["result",4]]],[11,"try_into_ctx","goblin::mach::header","",57,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",58,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",59,[[["ctx",3]],["result",6]]],[11,"try_into_ctx","goblin::mach::load_command","",62,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",63,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",64,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",65,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",66,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",67,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",68,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",69,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",70,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",71,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",72,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",73,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",74,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",75,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",76,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",78,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",79,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",80,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",81,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",82,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",83,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",84,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",85,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",86,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",87,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",88,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",89,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",90,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",91,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",92,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",93,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",94,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",95,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",96,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",97,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",98,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",99,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",100,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",101,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",102,[[["endian",4]],["result",4]]],[11,"try_into_ctx","goblin::mach::relocation","",105,[[["endian",4]],["result",4]]],[11,"try_into_ctx","goblin::mach::segment","",106,[[["ctx",3]],["result",4]]],[11,"try_into_ctx","","",107,[[["ctx",3]],["result",4]]],[11,"try_into_ctx","goblin::mach::symbols","",109,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",110,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",111,[[["ctx",3]],["result",4]]],[11,"try_into_ctx","goblin::pe::data_directories","",116,[[["endian",4]],["result",4]]],[11,"try_into_ctx","goblin::pe::debug","",119,[[["endian",4]],["result",4]]],[11,"try_into_ctx","goblin::pe::exception","",121,[[["endian",4]],["result",4]]],[11,"try_into_ctx","goblin::pe::export","",129,[[["endian",4]],["result",4]]],[11,"try_into_ctx","goblin::pe::header","",137,[[["endian",4]],["result",4]]],[11,"try_into_ctx","goblin::pe::import","",140,[[["endian",4]],["result",4]]],[11,"try_into_ctx","goblin::pe::optional_header","",146,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",147,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",149,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",150,[[["endian",4]],["result",4]]],[11,"try_into_ctx","goblin::pe::relocation","",152,[[["endian",4]],["result",4]]],[11,"try_into_ctx","goblin::pe::section_table","",154,[[["endian",4]],["result",4]]],[11,"try_into_ctx","goblin::pe::symbol","",155,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",156,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",157,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",158,[[["endian",4]],["result",4]]],[11,"try_into_ctx","","",159,[[["endian",4]],["result",4]]],[11,"try_into_ctx","goblin::archive","",161,[[["endian",4]],["result",4]]],[11,"size_with","goblin::elf::compression_header::compression_header32","",10,[[["endian",4]]]],[11,"size_with","goblin::elf::compression_header::compression_header64","",11,[[["endian",4]]]],[11,"size_with","goblin::elf::compression_header","",9,[[["ctx",3]]]],[11,"size_with","goblin::elf::header","",12,[[["ctx",3]]]],[11,"size_with","goblin::elf::program_header","",15,[[["ctx",3]]]],[11,"size_with","goblin::elf::program_header::program_header32","",16,[[["endian",4]]]],[11,"size_with","goblin::elf::program_header::program_header64","",17,[[["endian",4]]]],[11,"size_with","goblin::elf::section_header::section_header32","",19,[[["endian",4]]]],[11,"size_with","goblin::elf::section_header::section_header64","",20,[[["endian",4]]]],[11,"size_with","goblin::elf::section_header","",18,[[["ctx",3]]]],[11,"size_with","goblin::elf::sym::sym32","",22,[[["endian",4]]]],[11,"size_with","goblin::elf::sym::sym64","",23,[[["endian",4]]]],[11,"size_with","goblin::elf::sym","",21,[[["ctx",3]]]],[11,"size_with","goblin::elf::dynamic","",25,[[["ctx",3]]]],[11,"size_with","goblin::elf::dynamic::dyn32","",28,[[["endian",4]]]],[11,"size_with","goblin::elf::dynamic::dyn64","",30,[[["endian",4]]]],[11,"size_with","goblin::elf::reloc::reloc32","",33,[[["endian",4]]]],[11,"size_with","","",34,[[["endian",4]]]],[11,"size_with","goblin::elf::reloc::reloc64","",35,[[["endian",4]]]],[11,"size_with","","",36,[[["endian",4]]]],[11,"size_with","goblin::elf::reloc","",32,[[]]],[11,"size_with","goblin::elf::note","",38,[[["endian",4]]]],[11,"size_with","","",39,[[["endian",4]]]],[11,"size_with","goblin::mach::fat","",55,[[["endian",4]]]],[11,"size_with","","",56,[[["endian",4]]]],[11,"size_with","goblin::mach::header","",57,[[["endian",4]]]],[11,"size_with","","",58,[[["endian",4]]]],[11,"size_with","","",59,[[["ctx",3]]]],[11,"size_with","","",59,[[["container",4]]]],[11,"size_with","goblin::mach::load_command","",62,[[["endian",4]]]],[11,"size_with","","",63,[[["endian",4]]]],[11,"size_with","","",64,[[["endian",4]]]],[11,"size_with","","",65,[[["endian",4]]]],[11,"size_with","","",66,[[["endian",4]]]],[11,"size_with","","",67,[[["endian",4]]]],[11,"size_with","","",68,[[["endian",4]]]],[11,"size_with","","",69,[[["endian",4]]]],[11,"size_with","","",70,[[["endian",4]]]],[11,"size_with","","",71,[[["endian",4]]]],[11,"size_with","","",72,[[["endian",4]]]],[11,"size_with","","",73,[[["endian",4]]]],[11,"size_with","","",74,[[["endian",4]]]],[11,"size_with","","",75,[[["endian",4]]]],[11,"size_with","","",76,[[["endian",4]]]],[11,"size_with","","",78,[[["endian",4]]]],[11,"size_with","","",79,[[["endian",4]]]],[11,"size_with","","",80,[[["endian",4]]]],[11,"size_with","","",81,[[["endian",4]]]],[11,"size_with","","",82,[[["endian",4]]]],[11,"size_with","","",83,[[["endian",4]]]],[11,"size_with","","",84,[[["endian",4]]]],[11,"size_with","","",85,[[["endian",4]]]],[11,"size_with","","",86,[[["endian",4]]]],[11,"size_with","","",87,[[["endian",4]]]],[11,"size_with","","",88,[[["endian",4]]]],[11,"size_with","","",89,[[["endian",4]]]],[11,"size_with","","",90,[[["endian",4]]]],[11,"size_with","","",91,[[["endian",4]]]],[11,"size_with","","",92,[[["endian",4]]]],[11,"size_with","","",93,[[["endian",4]]]],[11,"size_with","","",94,[[["endian",4]]]],[11,"size_with","","",95,[[["endian",4]]]],[11,"size_with","","",96,[[["endian",4]]]],[11,"size_with","","",97,[[["endian",4]]]],[11,"size_with","","",98,[[["endian",4]]]],[11,"size_with","","",99,[[["endian",4]]]],[11,"size_with","","",100,[[["endian",4]]]],[11,"size_with","","",101,[[["endian",4]]]],[11,"size_with","","",102,[[["endian",4]]]],[11,"size_with","goblin::mach::relocation","",105,[[["endian",4]]]],[11,"size_with","goblin::mach::segment","",106,[[["ctx",3]]]],[11,"size_with","","",107,[[["ctx",3]]]],[11,"size_with","goblin::mach::symbols","",109,[[["endian",4]]]],[11,"size_with","","",110,[[["endian",4]]]],[11,"size_with","","",111,[[["ctx",3]]]],[11,"size_with","goblin::pe::data_directories","",116,[[["endian",4]]]],[11,"size_with","goblin::pe::debug","",119,[[["endian",4]]]],[11,"size_with","goblin::pe::header","",137,[[["endian",4]]]],[11,"size_with","goblin::pe::import","",140,[[["endian",4]]]],[11,"size_with","goblin::pe::optional_header","",146,[[["endian",4]]]],[11,"size_with","","",147,[[["endian",4]]]],[11,"size_with","","",149,[[["endian",4]]]],[11,"size_with","","",150,[[["endian",4]]]],[11,"size_with","goblin::pe::relocation","",152,[[["endian",4]]]],[11,"size_with","goblin::pe::section_table","",154,[[["endian",4]]]],[11,"size_with","goblin::pe::symbol","",155,[[["endian",4]]]],[11,"size_with","","",156,[[["endian",4]]]],[11,"size_with","","",157,[[["endian",4]]]],[11,"size_with","","",158,[[["endian",4]]]],[11,"size_with","","",159,[[["endian",4]]]],[11,"size_with","goblin::archive","",161,[[["endian",4]]]],[11,"network","goblin::container","",5,[[],["endian",4]]],[11,"is_little","","",5,[[]]]],"p":[[3,"HintData"],[4,"Hint"],[4,"Object"],[4,"Error"],[3,"Strtab"],[4,"Endian"],[3,"Ctx"],[4,"Container"],[3,"Elf"],[3,"CompressionHeader"],[3,"CompressionHeader"],[3,"CompressionHeader"],[3,"Header"],[3,"Header"],[3,"Header"],[3,"ProgramHeader"],[3,"ProgramHeader"],[3,"ProgramHeader"],[3,"SectionHeader"],[3,"SectionHeader"],[3,"SectionHeader"],[3,"Sym"],[3,"Sym"],[3,"Sym"],[3,"Symtab"],[3,"Dyn"],[3,"Dynamic"],[3,"DynamicInfo"],[3,"Dyn"],[3,"DynamicInfo"],[3,"Dyn"],[3,"DynamicInfo"],[3,"Reloc"],[3,"Rela"],[3,"Rel"],[3,"Rela"],[3,"Rel"],[3,"RelocSection"],[3,"Nhdr32"],[3,"Nhdr64"],[3,"NoteDataIterator"],[3,"NoteIterator"],[3,"Note"],[3,"GnuHash"],[3,"GnuHash"],[3,"MachO"],[3,"MultiArch"],[4,"Mach"],[3,"Export"],[4,"SymbolKind"],[4,"ExportInfo"],[13,"Regular"],[13,"Reexport"],[13,"Stub"],[3,"ExportTrie"],[3,"FatHeader"],[3,"FatArch"],[3,"Header32"],[3,"Header64"],[3,"Header"],[3,"Import"],[3,"BindInterpreter"],[3,"LoadCommandHeader"],[3,"Section32"],[3,"Section64"],[3,"SegmentCommand32"],[3,"SegmentCommand64"],[3,"Fvmlib"],[3,"FvmlibCommand"],[3,"Dylib"],[3,"DylibCommand"],[3,"SubFrameworkCommand"],[3,"SubClientCommand"],[3,"SubUmbrellaCommand"],[3,"SubLibraryCommand"],[3,"PreboundDylibCommand"],[3,"DylinkerCommand"],[3,"ThreadCommand"],[3,"RoutinesCommand32"],[3,"RoutinesCommand64"],[3,"SymtabCommand"],[3,"DysymtabCommand"],[3,"DylibTableOfContents"],[3,"DylibModule"],[3,"DylibModule64"],[3,"DylibReference"],[3,"TwolevelHintsCommand"],[3,"TwolevelHint"],[3,"PrebindCksumCommand"],[3,"UuidCommand"],[3,"RpathCommand"],[3,"LinkeditDataCommand"],[3,"EncryptionInfoCommand32"],[3,"EncryptionInfoCommand64"],[3,"VersionMinCommand"],[3,"DyldInfoCommand"],[3,"LinkerOptionCommand"],[3,"SymsegCommand"],[3,"IdentCommand"],[3,"FvmfileCommand"],[3,"EntryPointCommand"],[3,"SourceVersionCommand"],[3,"DataInCodeEntry"],[3,"LoadCommand"],[4,"CommandVariant"],[3,"RelocationInfo"],[3,"Section"],[3,"Segment"],[3,"Segments"],[3,"Nlist32"],[3,"Nlist64"],[3,"Nlist"],[3,"SymbolsCtx"],[3,"Symbols"],[3,"PE"],[3,"Coff"],[3,"DataDirectory"],[3,"DataDirectories"],[3,"DebugData"],[3,"ImageDebugDirectory"],[3,"CodeviewPDB70DebugInfo"],[3,"RuntimeFunction"],[3,"Register"],[3,"UnwindCode"],[3,"UnwindInfo"],[4,"StackFrameOffset"],[4,"UnwindOperation"],[4,"UnwindHandler"],[3,"ExceptionData"],[3,"ExportDirectoryTable"],[3,"ExportData"],[3,"Export"],[4,"ExportAddressTableEntry"],[4,"Reexport"],[13,"DLLName"],[13,"DLLOrdinal"],[3,"DosHeader"],[3,"CoffHeader"],[3,"Header"],[3,"HintNameTableEntry"],[3,"ImportDirectoryEntry"],[3,"SyntheticImportDirectoryEntry"],[3,"ImportData"],[3,"Import"],[4,"SyntheticImportLookupTableEntry"],[8,"Bitfield"],[3,"StandardFields32"],[3,"StandardFields64"],[3,"StandardFields"],[3,"WindowsFields32"],[3,"WindowsFields64"],[3,"OptionalHeader"],[3,"Relocation"],[3,"Relocations"],[3,"SectionTable"],[3,"Symbol"],[3,"AuxFunctionDefinition"],[3,"AuxBeginAndEndFunction"],[3,"AuxWeakExternal"],[3,"AuxSectionDefinition"],[3,"SymbolTable"],[3,"MemberHeader"],[3,"Header"],[3,"Member"],[3,"Index"],[4,"IndexType"],[3,"Archive"],[3,"SymIterator"],[3,"RelocIterator"],[3,"FatArchIterator"],[3,"MachOIterator"],[3,"RelocationIterator"],[3,"SectionIterator"],[3,"SymbolIterator"],[3,"RuntimeFunctionIterator"],[3,"UnwindCodeIterator"],[3,"SymbolIterator"],[6,"WindowsFields"]]},\
"hashbrown":{"doc":"This crate is a Rust port of Google\'s high-performance…","i":[[3,"HashMap","hashbrown","A hash map implemented with quadratic probing and SIMD…",null,null],[3,"HashSet","","A hash set implemented as a `HashMap` where the value is…",null,null],[4,"TryReserveError","","The error type for `try_reserve` methods.",null,null],[13,"CapacityOverflow","","Error due to the computed capacity exceeding the…",0,null],[13,"AllocError","","The memory allocator returned an error",0,null],[12,"layout","hashbrown::TryReserveError","The layout of the allocation request that failed.",1,null],[0,"raw","hashbrown","Experimental and unsafe `RawTable` API. This module is…",null,null],[3,"Bucket","hashbrown::raw","A reference to a hash table bucket containing a `T`.",null,null],[3,"RawTable","","A raw hash table with an unsafe API.",null,null],[3,"RawIter","","Iterator which returns a raw pointer to every full bucket…",null,null],[3,"RawIntoIter","","Iterator which consumes a table and returns elements.",null,null],[3,"RawDrain","","Iterator which consumes elements without freeing the table…",null,null],[3,"RawIterHash","","Iterator over occupied buckets that could match a given…",null,null],[11,"as_ptr","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"read","","",2,[[]]],[11,"write","","",2,[[]]],[11,"as_ref","","",2,[[]]],[11,"as_mut","","",2,[[]]],[11,"copy_from_nonoverlapping","","",2,[[]]],[11,"new","","Creates a new empty hash table without allocating any…",3,[[]]],[11,"try_with_capacity","","Attempts to allocate a new hash table with at least enough…",3,[[],[["result",4],["tryreserveerror",4]]]],[11,"with_capacity","","Allocates a new hash table with at least enough capacity…",3,[[]]],[11,"data_end","","Returns pointer to one past last element of data table.",3,[[],["nonnull",3]]],[11,"bucket_index","","Returns the index of a bucket from a `Bucket`.",3,[[["bucket",3]]]],[11,"bucket","","Returns a pointer to an element in the table.",3,[[],["bucket",3]]],[11,"erase_no_drop","","Erases an element from the table without dropping it.",3,[[["bucket",3]]]],[11,"erase","","Erases an element from the table, dropping it in place.",3,[[["bucket",3]]]],[11,"erase_entry","","Finds and erases an element from the table, dropping it in…",3,[[]]],[11,"remove","","Removes an element from the table, returning it.",3,[[["bucket",3]]]],[11,"remove_entry","","Finds and removes an element from the table, returning it.",3,[[],["option",4]]],[11,"clear_no_drop","","Marks all table buckets as empty without dropping their…",3,[[]]],[11,"clear","","Removes all elements from the table without freeing the…",3,[[]]],[11,"shrink_to","","Shrinks the table to fit `max(self.len(), min_size)`…",3,[[]]],[11,"reserve","","Ensures that at least `additional` items can be inserted…",3,[[]]],[11,"try_reserve","","Tries to ensure that at least `additional` items can be…",3,[[],[["result",4],["tryreserveerror",4]]]],[11,"insert","","Inserts a new element into the table, and returns its raw…",3,[[],["bucket",3]]],[11,"insert_entry","","Inserts a new element into the table, and returns a…",3,[[]]],[11,"insert_no_grow","","Inserts a new element into the table, without growing the…",3,[[],["bucket",3]]],[11,"replace_bucket_with","","Temporary removes a bucket, applying the given function to…",3,[[["bucket",3]]]],[11,"find","","Searches for an element in the table.",3,[[],[["bucket",3],["option",4]]]],[11,"get","","Gets a reference to an element in the table.",3,[[],["option",4]]],[11,"get_mut","","Gets a mutable reference to an element in the table.",3,[[],["option",4]]],[11,"capacity","","Returns the number of elements the map can hold without…",3,[[]]],[11,"len","","Returns the number of elements in the table.",3,[[]]],[11,"buckets","","Returns the number of buckets in the table.",3,[[]]],[11,"iter","","Returns an iterator over every element in the table. It is…",3,[[],["rawiter",3]]],[11,"iter_hash","","Returns an iterator over occupied buckets that could match…",3,[[],["rawiterhash",3]]],[11,"drain","","Returns an iterator which removes all elements from the…",3,[[],["rawdrain",3]]],[11,"drain_iter_from","","Returns an iterator which removes all elements from the…",3,[[["rawiter",3]],["rawdrain",3]]],[11,"into_iter_from","","Returns an iterator which consumes all elements from the…",3,[[["rawiter",3]],["rawintoiter",3]]],[11,"clone_from_with_hasher","","Variant of `clone_from` to use when a hasher is available.",3,[[]]],[11,"reflect_remove","","Refresh the iterator so that it reflects a removal from…",4,[[["bucket",3]]]],[11,"reflect_insert","","Refresh the iterator so that it reflects an insertion into…",4,[[["bucket",3]]]],[11,"iter","","",5,[[],["rawiter",3]]],[11,"iter","","",6,[[],["rawiter",3]]],[11,"with_hasher","hashbrown","Creates an empty `HashMap` which will use the given hash…",7,[[]]],[11,"with_capacity_and_hasher","","Creates an empty `HashMap` with the specified capacity,…",7,[[]]],[11,"hasher","","Returns a reference to the map\'s `BuildHasher`.",7,[[]]],[11,"capacity","","Returns the number of elements the map can hold without…",7,[[]]],[11,"keys","","An iterator visiting all keys in arbitrary order. The…",7,[[],["keys",3]]],[11,"values","","An iterator visiting all values in arbitrary order. The…",7,[[],["values",3]]],[11,"values_mut","","An iterator visiting all values mutably in arbitrary…",7,[[],["valuesmut",3]]],[11,"iter","","An iterator visiting all key-value pairs in arbitrary…",7,[[],["iter",3]]],[11,"iter_mut","","An iterator visiting all key-value pairs in arbitrary…",7,[[],["itermut",3]]],[11,"len","","Returns the number of elements in the map.",7,[[]]],[11,"is_empty","","Returns `true` if the map contains no elements.",7,[[]]],[11,"drain","","Clears the map, returning all key-value pairs as an…",7,[[],["drain",3]]],[11,"retain","","Retains only the elements specified by the predicate.",7,[[]]],[11,"drain_filter","","Drains elements which are true under the given predicate,…",7,[[],["drainfilter",3]]],[11,"clear","","Clears the map, removing all key-value pairs. Keeps the…",7,[[]]],[11,"reserve","","Reserves capacity for at least `additional` more elements…",7,[[]]],[11,"try_reserve","","Tries to reserve capacity for at least `additional` more…",7,[[],[["result",4],["tryreserveerror",4]]]],[11,"shrink_to_fit","","Shrinks the capacity of the map as much as possible. It…",7,[[]]],[11,"shrink_to","","Shrinks the capacity of the map with a lower limit. It…",7,[[]]],[11,"entry","","Gets the given key\'s corresponding entry in the map for…",7,[[],["entry",4]]],[11,"get","","Returns a reference to the value corresponding to the key.",7,[[],["option",4]]],[11,"get_key_value","","Returns the key-value pair corresponding to the supplied…",7,[[],["option",4]]],[11,"get_key_value_mut","","Returns the key-value pair corresponding to the supplied…",7,[[],["option",4]]],[11,"contains_key","","Returns `true` if the map contains a value for the…",7,[[]]],[11,"get_mut","","Returns a mutable reference to the value corresponding to…",7,[[],["option",4]]],[11,"insert","","Inserts a key-value pair into the map.",7,[[],["option",4]]],[11,"remove","","Removes a key from the map, returning the value at the key…",7,[[],["option",4]]],[11,"remove_entry","","Removes a key from the map, returning the stored key and…",7,[[],["option",4]]],[11,"raw_entry_mut","","Creates a raw entry builder for the HashMap.",7,[[],["rawentrybuildermut",3]]],[11,"raw_entry","","Creates a raw immutable entry builder for the HashMap.",7,[[],["rawentrybuilder",3]]],[11,"with_hasher","","Creates a new empty hash set which will use the given…",8,[[]]],[11,"with_capacity_and_hasher","","Creates an empty `HashSet` with the specified capacity,…",8,[[]]],[11,"capacity","","Returns the number of elements the set can hold without…",8,[[]]],[11,"iter","","An iterator visiting all elements in arbitrary order. The…",8,[[],["iter",3]]],[11,"len","","Returns the number of elements in the set.",8,[[]]],[11,"is_empty","","Returns `true` if the set contains no elements.",8,[[]]],[11,"drain","","Clears the set, returning all elements in an iterator.",8,[[],["drain",3]]],[11,"retain","","Retains only the elements specified by the predicate.",8,[[]]],[11,"drain_filter","","Drains elements which are true under the given predicate,…",8,[[],["drainfilter",3]]],[11,"clear","","Clears the set, removing all values.",8,[[]]],[11,"hasher","","Returns a reference to the set\'s `BuildHasher`.",8,[[]]],[11,"reserve","","Reserves capacity for at least `additional` more elements…",8,[[]]],[11,"try_reserve","","Tries to reserve capacity for at least `additional` more…",8,[[],[["result",4],["tryreserveerror",4]]]],[11,"shrink_to_fit","","Shrinks the capacity of the set as much as possible. It…",8,[[]]],[11,"shrink_to","","Shrinks the capacity of the set with a lower limit. It…",8,[[]]],[11,"difference","","Visits the values representing the difference, i.e., the…",8,[[],["difference",3]]],[11,"symmetric_difference","","Visits the values representing the symmetric difference,…",8,[[],["symmetricdifference",3]]],[11,"intersection","","Visits the values representing the intersection, i.e., the…",8,[[],["intersection",3]]],[11,"union","","Visits the values representing the union, i.e., all the…",8,[[],["union",3]]],[11,"contains","","Returns `true` if the set contains a value.",8,[[]]],[11,"get","","Returns a reference to the value in the set, if any, that…",8,[[],["option",4]]],[11,"get_or_insert","","Inserts the given `value` into the set if it is not…",8,[[]]],[11,"get_or_insert_owned","","Inserts an owned copy of the given `value` into the set if…",8,[[]]],[11,"get_or_insert_with","","Inserts a value computed from `f` into the set if the…",8,[[]]],[11,"is_disjoint","","Returns `true` if `self` has no elements in common with…",8,[[]]],[11,"is_subset","","Returns `true` if the set is a subset of another, i.e.,…",8,[[]]],[11,"is_superset","","Returns `true` if the set is a superset of another, i.e.,…",8,[[]]],[11,"insert","","Adds a value to the set.",8,[[]]],[11,"replace","","Adds a value to the set, replacing the existing value, if…",8,[[],["option",4]]],[11,"remove","","Removes a value from the set. Returns whether the value…",8,[[]]],[11,"take","","Removes and returns the value in the set, if any, that is…",8,[[],["option",4]]],[0,"hash_map","","A hash map implemented with quadratic probing and SIMD…",null,null],[3,"HashMap","hashbrown::hash_map","A hash map implemented with quadratic probing and SIMD…",null,null],[3,"Iter","","An iterator over the entries of a `HashMap`.",null,null],[3,"IterMut","","A mutable iterator over the entries of a `HashMap`.",null,null],[3,"IntoIter","","An owning iterator over the entries of a `HashMap`.",null,null],[3,"Keys","","An iterator over the keys of a `HashMap`.",null,null],[3,"Values","","An iterator over the values of a `HashMap`.",null,null],[3,"Drain","","A draining iterator over the entries of a `HashMap`.",null,null],[3,"DrainFilter","","A draining iterator over entries of a `HashMap` which…",null,null],[3,"ValuesMut","","A mutable iterator over the values of a `HashMap`.",null,null],[3,"RawEntryBuilderMut","","A builder for computing where in a [`HashMap`] a key-value…",null,null],[3,"RawOccupiedEntryMut","","A view into an occupied entry in a `HashMap`. It is part…",null,null],[3,"RawVacantEntryMut","","A view into a vacant entry in a `HashMap`. It is part of…",null,null],[3,"RawEntryBuilder","","A builder for computing where in a [`HashMap`] a key-value…",null,null],[3,"OccupiedEntry","","A view into an occupied entry in a `HashMap`. It is part…",null,null],[3,"VacantEntry","","A view into a vacant entry in a `HashMap`. It is part of…",null,null],[4,"DefaultHashBuilder","","Dummy default hasher for `HashMap`.",null,null],[4,"RawEntryMut","","A view into a single entry in a map, which may either be…",null,null],[13,"Occupied","","An occupied entry.",9,null],[13,"Vacant","","A vacant entry.",9,null],[4,"Entry","","A view into a single entry in a map, which may either be…",null,null],[13,"Occupied","","An occupied entry.",10,null],[13,"Vacant","","A vacant entry.",10,null],[0,"hash_set","hashbrown","A hash set implemented as a `HashMap` where the value is…",null,null],[3,"HashSet","hashbrown::hash_set","A hash set implemented as a `HashMap` where the value is…",null,null],[3,"Iter","","An iterator over the items of a `HashSet`.",null,null],[3,"IntoIter","","An owning iterator over the items of a `HashSet`.",null,null],[3,"Drain","","A draining iterator over the items of a `HashSet`.",null,null],[3,"DrainFilter","","A draining iterator over entries of a `HashSet` which…",null,null],[3,"Intersection","","A lazy iterator producing elements in the intersection of…",null,null],[3,"Difference","","A lazy iterator producing elements in the difference of…",null,null],[3,"SymmetricDifference","","A lazy iterator producing elements in the symmetric…",null,null],[3,"Union","","A lazy iterator producing elements in the union of…",null,null],[11,"from","hashbrown","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"into_iter","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"from","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"into_iter","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"from","hashbrown::raw","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"into_iter","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"into_iter","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"into_iter","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"into_iter","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"into_iter","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","hashbrown::hash_map","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"into_iter","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"from","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"into_iter","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"into_iter","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"into_iter","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"from","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"into_iter","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"from","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"into_iter","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"into_iter","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"into_iter","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","hashbrown::hash_set","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"into_iter","","",27,[[]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"from","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"into_iter","","",28,[[]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"into_iter","","",29,[[]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"into","","",30,[[]]],[11,"try_into","","",30,[[],["result",4]]],[11,"into_iter","","",30,[[]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"into","","",31,[[]]],[11,"try_into","","",31,[[],["result",4]]],[11,"into_iter","","",31,[[]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"from","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"into","","",32,[[]]],[11,"try_into","","",32,[[],["result",4]]],[11,"into_iter","","",32,[[]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"from","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"into","","",33,[[]]],[11,"try_into","","",33,[[],["result",4]]],[11,"into_iter","","",33,[[]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"from","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"into","","",34,[[]]],[11,"try_into","","",34,[[],["result",4]]],[11,"into_iter","","",34,[[]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"fmt","hashbrown","",7,[[["formatter",3]],["result",6]]],[11,"fmt","hashbrown::hash_map","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","hashbrown","",8,[[["formatter",3]],["result",6]]],[11,"fmt","hashbrown::hash_set","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","hashbrown","",0,[[["formatter",3]],["result",6]]],[11,"eq","","",7,[[]]],[11,"eq","","",8,[[]]],[11,"eq","","",0,[[["tryreserveerror",4]]]],[11,"ne","","",0,[[["tryreserveerror",4]]]],[11,"drop","hashbrown::raw","",3,[[]]],[11,"drop","","",5,[[]]],[11,"drop","","",6,[[]]],[11,"drop","hashbrown::hash_map","",18,[[]]],[11,"drop","hashbrown::hash_set","",30,[[]]],[11,"index","hashbrown","Returns a reference to the value corresponding to the…",7,[[]]],[11,"len","hashbrown::hash_map","",12,[[]]],[11,"len","","",13,[[]]],[11,"len","","",14,[[]]],[11,"len","","",15,[[]]],[11,"len","","",16,[[]]],[11,"len","","",19,[[]]],[11,"len","","",17,[[]]],[11,"len","hashbrown::hash_set","",27,[[]]],[11,"len","","",28,[[]]],[11,"len","","",29,[[]]],[11,"from_iter","hashbrown","",7,[[["intoiterator",8]]]],[11,"from_iter","","",8,[[["intoiterator",8]]]],[11,"next","hashbrown::raw","",4,[[],[["bucket",3],["option",4]]]],[11,"size_hint","","",4,[[]]],[11,"next","","",5,[[],["option",4]]],[11,"size_hint","","",5,[[]]],[11,"next","","",6,[[],["option",4]]],[11,"size_hint","","",6,[[]]],[11,"next","","",11,[[],[["bucket",3],["option",4]]]],[11,"next","hashbrown::hash_map","",18,[[],["option",4]]],[11,"size_hint","","",18,[[]]],[11,"next","","",12,[[],["option",4]]],[11,"size_hint","","",12,[[]]],[11,"next","","",13,[[],["option",4]]],[11,"size_hint","","",13,[[]]],[11,"next","","",14,[[],["option",4]]],[11,"size_hint","","",14,[[]]],[11,"next","","",15,[[],["option",4]]],[11,"size_hint","","",15,[[]]],[11,"next","","",16,[[],["option",4]]],[11,"size_hint","","",16,[[]]],[11,"next","","",19,[[],["option",4]]],[11,"size_hint","","",19,[[]]],[11,"next","","",17,[[],["option",4]]],[11,"size_hint","","",17,[[]]],[11,"next","hashbrown::hash_set","",27,[[],["option",4]]],[11,"size_hint","","",27,[[]]],[11,"next","","",28,[[],["option",4]]],[11,"size_hint","","",28,[[]]],[11,"next","","",29,[[],["option",4]]],[11,"size_hint","","",29,[[]]],[11,"next","","",30,[[],["option",4]]],[11,"size_hint","","",30,[[]]],[11,"next","","",31,[[],["option",4]]],[11,"size_hint","","",31,[[]]],[11,"next","","",32,[[],["option",4]]],[11,"size_hint","","",32,[[]]],[11,"next","","",33,[[],["option",4]]],[11,"size_hint","","",33,[[]]],[11,"next","","",34,[[],["option",4]]],[11,"size_hint","","",34,[[]]],[11,"into_iter","hashbrown::raw","",3,[[],["rawintoiter",3]]],[11,"into_iter","hashbrown","Creates a consuming iterator, that is, one that moves each…",7,[[],["intoiter",3]]],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each…",8,[[],["intoiter",3]]],[11,"extend","","",7,[[["intoiterator",8]]]],[11,"extend","","",7,[[["intoiterator",8]]]],[11,"extend","","",8,[[["intoiterator",8]]]],[11,"extend","","",8,[[["intoiterator",8]]]],[11,"clone","hashbrown::raw","",2,[[]]],[11,"clone","","",3,[[]]],[11,"clone_from","","",3,[[]]],[11,"clone","","",4,[[]]],[11,"clone","hashbrown","",7,[[]]],[11,"clone_from","","",7,[[]]],[11,"clone","hashbrown::hash_map","",12,[[]]],[11,"clone","","",15,[[]]],[11,"clone","","",16,[[]]],[11,"clone","hashbrown","",8,[[]]],[11,"clone_from","","",8,[[]]],[11,"clone","hashbrown::hash_set","",27,[[]]],[11,"clone","","",31,[[]]],[11,"clone","","",32,[[]]],[11,"clone","","",33,[[]]],[11,"clone","","",34,[[]]],[11,"clone","hashbrown","",0,[[],["tryreserveerror",4]]],[11,"default","","Creates an empty `HashMap<K, V, S>`, with the `Default`…",7,[[]]],[11,"default","","Creates an empty `HashSet<T, S>` with the `Default` value…",8,[[]]],[11,"from_key","hashbrown::hash_map","Creates a `RawEntryMut` from the given key.",20,[[],["rawentrymut",4]]],[11,"from_key_hashed_nocheck","","Creates a `RawEntryMut` from the given key and its hash.",20,[[],["rawentrymut",4]]],[11,"from_hash","","Creates a `RawEntryMut` from the given hash.",20,[[],["rawentrymut",4]]],[11,"from_key","","Access an entry by key.",23,[[],["option",4]]],[11,"from_key_hashed_nocheck","","Access an entry by a key and its hash.",23,[[],["option",4]]],[11,"from_hash","","Access an entry by hash.",23,[[],["option",4]]],[11,"insert","","Sets the value of the entry, and returns a…",9,[[],["rawoccupiedentrymut",3]]],[11,"or_insert","","Ensures a value is in the entry by inserting the default…",9,[[]]],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of…",9,[[]]],[11,"and_modify","","Provides in-place mutable access to an occupied entry…",9,[[]]],[11,"and_replace_entry_with","","Provides shared access to the key and owned access to the…",9,[[]]],[11,"key","","Gets a reference to the key in the entry.",21,[[]]],[11,"key_mut","","Gets a mutable reference to the key in the entry.",21,[[]]],[11,"into_key","","Converts the entry into a mutable reference to the key in…",21,[[]]],[11,"get","","Gets a reference to the value in the entry.",21,[[]]],[11,"into_mut","","Converts the OccupiedEntry into a mutable reference to the…",21,[[]]],[11,"get_mut","","Gets a mutable reference to the value in the entry.",21,[[]]],[11,"get_key_value","","Gets a reference to the key and value in the entry.",21,[[]]],[11,"get_key_value_mut","","Gets a mutable reference to the key and value in the entry.",21,[[]]],[11,"into_key_value","","Converts the OccupiedEntry into a mutable reference to the…",21,[[]]],[11,"insert","","Sets the value of the entry, and returns the entry\'s old…",21,[[]]],[11,"insert_key","","Sets the value of the entry, and returns the entry\'s old…",21,[[]]],[11,"remove","","Takes the value out of the entry, and returns it.",21,[[]]],[11,"remove_entry","","Take the ownership of the key and value from the map.",21,[[]]],[11,"replace_entry_with","","Provides shared access to the key and owned access to the…",21,[[],["rawentrymut",4]]],[11,"insert","","Sets the value of the entry with the VacantEntry\'s key,…",22,[[]]],[11,"insert_hashed_nocheck","","Sets the value of the entry with the VacantEntry\'s key,…",22,[[]]],[11,"insert_with_hasher","","Set the value of an entry with a custom hasher function.",22,[[]]],[11,"insert","","Sets the value of the entry, and returns an OccupiedEntry.",10,[[],["occupiedentry",3]]],[11,"or_insert","","Ensures a value is in the entry by inserting the default…",10,[[]]],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of…",10,[[["fnonce",8]]]],[11,"or_insert_with_key","","Ensures a value is in the entry by inserting, if empty,…",10,[[["fnonce",8]]]],[11,"key","","Returns a reference to this entry\'s key.",10,[[]]],[11,"and_modify","","Provides in-place mutable access to an occupied entry…",10,[[]]],[11,"and_replace_entry_with","","Provides shared access to the key and owned access to the…",10,[[]]],[11,"or_default","","Ensures a value is in the entry by inserting the default…",10,[[]]],[11,"key","","Gets a reference to the key in the entry.",24,[[]]],[11,"remove_entry","","Take the ownership of the key and value from the map.",24,[[]]],[11,"get","","Gets a reference to the value in the entry.",24,[[]]],[11,"get_mut","","Gets a mutable reference to the value in the entry.",24,[[]]],[11,"into_mut","","Converts the OccupiedEntry into a mutable reference to the…",24,[[]]],[11,"insert","","Sets the value of the entry, and returns the entry\'s old…",24,[[]]],[11,"remove","","Takes the value out of the entry, and returns it.",24,[[]]],[11,"replace_entry","","Replaces the entry, returning the old key and value. The…",24,[[]]],[11,"replace_key","","Replaces the key in the hash map with the key used to…",24,[[]]],[11,"replace_entry_with","","Provides shared access to the key and owned access to the…",24,[[],["entry",4]]],[11,"key","","Gets a reference to the key that would be used when…",25,[[]]],[11,"into_key","","Take ownership of the key.",25,[[]]],[11,"insert","","Sets the value of the entry with the VacantEntry\'s key,…",25,[[]]]],"p":[[4,"TryReserveError"],[13,"AllocError"],[3,"Bucket"],[3,"RawTable"],[3,"RawIter"],[3,"RawIntoIter"],[3,"RawDrain"],[3,"HashMap"],[3,"HashSet"],[4,"RawEntryMut"],[4,"Entry"],[3,"RawIterHash"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Keys"],[3,"Values"],[3,"Drain"],[3,"DrainFilter"],[3,"ValuesMut"],[3,"RawEntryBuilderMut"],[3,"RawOccupiedEntryMut"],[3,"RawVacantEntryMut"],[3,"RawEntryBuilder"],[3,"OccupiedEntry"],[3,"VacantEntry"],[4,"DefaultHashBuilder"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"DrainFilter"],[3,"Intersection"],[3,"Difference"],[3,"SymmetricDifference"],[3,"Union"]]},\
"humantime":{"doc":"Human-friendly time parser and formatter","i":[[3,"FormattedDuration","humantime","A wrapper type that allows you to Display a Duration",null,null],[3,"Duration","","A wrapper for duration that has `FromStr` implementation",null,null],[3,"Timestamp","","A wrapper for SystemTime that has `FromStr` implementation",null,null],[3,"Rfc3339Timestamp","","A wrapper type that allows you to Display a SystemTime",null,null],[4,"DurationError","","Error parsing human-friendly duration",null,null],[13,"InvalidCharacter","","Invalid character during parsing",0,null],[13,"NumberExpected","","Non-numeric value where number is expected",0,null],[13,"UnknownUnit","","Unit in the number is not one of allowed units",0,null],[13,"NumberOverflow","","The numeric value is too large",0,null],[13,"Empty","","The value was an empty string (or consists only whitespace)",0,null],[4,"TimestampError","","Error parsing datetime (timestamp)",null,null],[13,"OutOfRange","","Numeric component is out of range",1,null],[13,"InvalidDigit","","Bad character where digit is expected",1,null],[13,"InvalidFormat","","Other formatting errors",1,null],[5,"parse_duration","","Parse duration object `1hour 12min 5s`",null,[[],[["error",4],["result",4],["duration",3]]]],[5,"format_duration","","Formats duration into a human-readable string",null,[[["duration",3]],["formattedduration",3]]],[5,"parse_rfc3339","","Parse RFC3339 timestamp `2018-02-14T00:28:07Z`",null,[[],[["error",4],["systemtime",3],["result",4]]]],[5,"parse_rfc3339_weak","","Parse RFC3339-like timestamp `2018-02-14 00:28:07`",null,[[],[["error",4],["systemtime",3],["result",4]]]],[5,"format_rfc3339","","Format an RFC3339 timestamp `2018-02-14T00:28:07Z`",null,[[["systemtime",3]],["rfc3339timestamp",3]]],[5,"format_rfc3339_micros","","Format an RFC3339 timestamp `2018-02-14T00:28:07.000000Z`",null,[[["systemtime",3]],["rfc3339timestamp",3]]],[5,"format_rfc3339_millis","","Format an RFC3339 timestamp `2018-02-14T00:28:07.000Z`",null,[[["systemtime",3]],["rfc3339timestamp",3]]],[5,"format_rfc3339_nanos","","Format an RFC3339 timestamp `2018-02-14T00:28:07.000000000Z`",null,[[["systemtime",3]],["rfc3339timestamp",3]]],[5,"format_rfc3339_seconds","","Format an RFC3339 timestamp `2018-02-14T00:28:07Z`",null,[[["systemtime",3]],["rfc3339timestamp",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"as_ref","","",3,[[],["stdduration",3]]],[11,"as_ref","","",4,[[],["systemtime",3]]],[11,"from","","",3,[[["stdduration",3]],["duration",3]]],[11,"from","","",4,[[["systemtime",3]],["timestamp",3]]],[11,"into","","",3,[[],["stdduration",3]]],[11,"into","","",4,[[],["systemtime",3]]],[11,"clone","","",0,[[],["error",4]]],[11,"clone","","",2,[[],["formattedduration",3]]],[11,"clone","","",3,[[],["duration",3]]],[11,"clone","","",4,[[],["timestamp",3]]],[11,"clone","","",1,[[],["error",4]]],[11,"clone","","",5,[[],["rfc3339timestamp",3]]],[11,"eq","","",0,[[["error",4]]]],[11,"ne","","",0,[[["error",4]]]],[11,"eq","","",3,[[["duration",3]]]],[11,"ne","","",3,[[["duration",3]]]],[11,"eq","","",4,[[["timestamp",3]]]],[11,"ne","","",4,[[["timestamp",3]]]],[11,"eq","","",1,[[["error",4]]]],[11,"deref","","",3,[[],["stdduration",3]]],[11,"deref","","",4,[[],["systemtime",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"hash","","",3,[[]]],[11,"from_str","","",3,[[],[["result",4],["duration",3]]]],[11,"from_str","","",4,[[],[["timestamp",3],["result",4]]]],[11,"cause","","",0,[[],[["error",8],["option",4]]]],[11,"cause","","",1,[[],[["error",8],["option",4]]]]],"p":[[4,"DurationError"],[4,"TimestampError"],[3,"FormattedDuration"],[3,"Duration"],[3,"Timestamp"],[3,"Rfc3339Timestamp"]]},\
"indexmap":{"doc":"`IndexMap` is a hash table where the iteration order of…","i":[[0,"map","indexmap","`IndexMap` is a hash table where the iteration order of…",null,null],[3,"OccupiedEntry","indexmap::map","A view into an occupied entry in a `IndexMap`. It is part…",null,null],[3,"VacantEntry","","A view into a vacant entry in a `IndexMap`. It is part of…",null,null],[3,"IndexMap","","A hash table where the iteration order of the key-value…",null,null],[3,"Keys","","An iterator over the keys of a `IndexMap`.",null,null],[3,"Values","","An iterator over the values of a `IndexMap`.",null,null],[3,"ValuesMut","","A mutable iterator over the values of a `IndexMap`.",null,null],[3,"Iter","","An iterator over the entries of a `IndexMap`.",null,null],[3,"IterMut","","A mutable iterator over the entries of a `IndexMap`.",null,null],[3,"IntoIter","","An owning iterator over the entries of a `IndexMap`.",null,null],[3,"Drain","","A draining iterator over the entries of a `IndexMap`.",null,null],[4,"Entry","","Entry for an existing key-value pair or a vacant location…",null,null],[13,"Occupied","","Existing slot with equivalent key.",0,null],[13,"Vacant","","Vacant slot (no equivalent key in the map).",0,null],[11,"key","","",1,[[]]],[11,"get","","",1,[[]]],[11,"get_mut","","",1,[[]]],[11,"index","","Return the index of the key-value pair",1,[[]]],[11,"into_mut","","",1,[[]]],[11,"swap_remove_entry","","Remove and return the key, value pair stored in the map…",1,[[]]],[11,"shift_remove_entry","","Remove and return the key, value pair stored in the map…",1,[[]]],[11,"or_insert","","Computes in O(1) time (amortized average).",0,[[]]],[11,"or_insert_with","","Computes in O(1) time (amortized average).",0,[[]]],[11,"key","","",0,[[]]],[11,"index","","Return the index where the key-value pair exists or will…",0,[[]]],[11,"and_modify","","Modifies the entry if it is occupied.",0,[[]]],[11,"or_default","","Inserts a default-constructed value in the entry if it is…",0,[[]]],[11,"insert","","Sets the value of the entry to `value`, and returns the…",1,[[]]],[11,"remove","","Remove the key, value pair stored in the map for this…",1,[[]]],[11,"swap_remove","","Remove the key, value pair stored in the map for this…",1,[[]]],[11,"shift_remove","","Remove the key, value pair stored in the map for this…",1,[[]]],[11,"remove_entry","","Remove and return the key, value pair stored in the map…",1,[[]]],[11,"key","","",2,[[]]],[11,"into_key","","",2,[[]]],[11,"index","","Return the index where the key-value pair will be inserted.",2,[[]]],[11,"insert","","",2,[[]]],[8,"MutableKeys","","Opt-in mutable access to keys.",null,null],[16,"Key","","",3,null],[16,"Value","","",3,null],[10,"get_full_mut2","","Return item index, mutable reference to key and value",3,[[],["option",4]]],[10,"retain2","","Scan through each key-value pair in the map and keep those…",3,[[]]],[10,"__private_marker","","This method is not useful in itself – it is there to…",3,[[],["privatemarker",3]]],[11,"new","","Create a new map. (Does not allocate.)",4,[[]]],[11,"with_capacity","","Create a new map with capacity for `n` key-value pairs.…",4,[[]]],[11,"with_capacity_and_hasher","","Create a new map with capacity for `n` key-value pairs.…",4,[[]]],[11,"with_hasher","","Create a new map with `hash_builder`",4,[[]]],[11,"capacity","","Computes in O(1) time.",4,[[]]],[11,"hasher","","Return a reference to the map\'s `BuildHasher`.",4,[[]]],[11,"len","","Return the number of key-value pairs in the map.",4,[[]]],[11,"is_empty","","Returns true if the map contains no elements.",4,[[]]],[11,"iter","","Return an iterator over the key-value pairs of the map, in…",4,[[],["iter",3]]],[11,"iter_mut","","Return an iterator over the key-value pairs of the map, in…",4,[[],["itermut",3]]],[11,"keys","","Return an iterator over the keys of the map, in their order",4,[[],["keys",3]]],[11,"values","","Return an iterator over the values of the map, in their…",4,[[],["values",3]]],[11,"values_mut","","Return an iterator over mutable references to the the…",4,[[],["valuesmut",3]]],[11,"clear","","Remove all key-value pairs in the map, while preserving…",4,[[]]],[11,"drain","","Clears the `IndexMap` in the given index range, returning…",4,[[],["drain",3]]],[11,"reserve","","Reserve capacity for `additional` more key-value pairs.",4,[[]]],[11,"shrink_to_fit","","Shrink the capacity of the map as much as possible.",4,[[]]],[11,"insert","","Insert a key-value pair in the map.",4,[[],["option",4]]],[11,"insert_full","","Insert a key-value pair in the map, and get their index.",4,[[]]],[11,"entry","","Get the given key’s corresponding entry in the map for…",4,[[],["entry",4]]],[11,"contains_key","","Return `true` if an equivalent to `key` exists in the map.",4,[[]]],[11,"get","","Return a reference to the value stored for `key`, if it is…",4,[[],["option",4]]],[11,"get_key_value","","Return references to the key-value pair stored for `key`,…",4,[[],["option",4]]],[11,"get_full","","Return item index, key and value",4,[[],["option",4]]],[11,"get_index_of","","Return item index, if it exists in the map",4,[[],["option",4]]],[11,"get_mut","","",4,[[],["option",4]]],[11,"get_full_mut","","",4,[[],["option",4]]],[11,"remove","","Remove the key-value pair equivalent to `key` and return…",4,[[],["option",4]]],[11,"remove_entry","","Remove and return the key-value pair equivalent to `key`.",4,[[],["option",4]]],[11,"swap_remove","","Remove the key-value pair equivalent to `key` and return…",4,[[],["option",4]]],[11,"swap_remove_entry","","Remove and return the key-value pair equivalent to `key`.",4,[[],["option",4]]],[11,"swap_remove_full","","Remove the key-value pair equivalent to `key` and return…",4,[[],["option",4]]],[11,"shift_remove","","Remove the key-value pair equivalent to `key` and return…",4,[[],["option",4]]],[11,"shift_remove_entry","","Remove and return the key-value pair equivalent to `key`.",4,[[],["option",4]]],[11,"shift_remove_full","","Remove the key-value pair equivalent to `key` and return…",4,[[],["option",4]]],[11,"pop","","Remove the last key-value pair",4,[[],["option",4]]],[11,"retain","","Scan through each key-value pair in the map and keep those…",4,[[]]],[11,"sort_keys","","Sort the map’s key-value pairs by the default ordering of…",4,[[]]],[11,"sort_by","","Sort the map’s key-value pairs in place using the…",4,[[]]],[11,"sorted_by","","Sort the key-value pairs of the map and return a by value…",4,[[],["intoiter",3]]],[11,"reverse","","Reverses the order of the map’s key-value pairs in place.",4,[[]]],[11,"get_index","","Get a key-value pair by index",4,[[],["option",4]]],[11,"get_index_mut","","Get a key-value pair by index",4,[[],["option",4]]],[11,"swap_remove_index","","Remove the key-value pair by index",4,[[],["option",4]]],[11,"shift_remove_index","","Remove the key-value pair by index",4,[[],["option",4]]],[0,"set","indexmap","A hash set implemented using `IndexMap`",null,null],[3,"IndexSet","indexmap::set","A hash set where the iteration order of the values is…",null,null],[3,"IntoIter","","An owning iterator over the items of a `IndexSet`.",null,null],[3,"Iter","","An iterator over the items of a `IndexSet`.",null,null],[3,"Drain","","A draining iterator over the items of a `IndexSet`.",null,null],[3,"Difference","","A lazy iterator producing elements in the difference of…",null,null],[3,"Intersection","","A lazy iterator producing elements in the intersection of…",null,null],[3,"SymmetricDifference","","A lazy iterator producing elements in the symmetric…",null,null],[3,"Union","","A lazy iterator producing elements in the union of…",null,null],[11,"new","","Create a new set. (Does not allocate.)",5,[[]]],[11,"with_capacity","","Create a new set with capacity for `n` elements. (Does not…",5,[[]]],[11,"with_capacity_and_hasher","","Create a new set with capacity for `n` elements. (Does not…",5,[[]]],[11,"with_hasher","","Create a new set with `hash_builder`",5,[[]]],[11,"capacity","","Computes in O(1) time.",5,[[]]],[11,"hasher","","Return a reference to the set\'s `BuildHasher`.",5,[[]]],[11,"len","","Return the number of elements in the set.",5,[[]]],[11,"is_empty","","Returns true if the set contains no elements.",5,[[]]],[11,"iter","","Return an iterator over the values of the set, in their…",5,[[],["iter",3]]],[11,"clear","","Remove all elements in the set, while preserving its…",5,[[]]],[11,"drain","","Clears the `IndexSet` in the given index range, returning…",5,[[],["drain",3]]],[11,"reserve","","Reserve capacity for `additional` more values.",5,[[]]],[11,"shrink_to_fit","","Shrink the capacity of the set as much as possible.",5,[[]]],[11,"insert","","Insert the value into the set.",5,[[]]],[11,"insert_full","","Insert the value into the set, and get its index.",5,[[]]],[11,"difference","","Return an iterator over the values that are in `self` but…",5,[[["indexset",3]],["difference",3]]],[11,"symmetric_difference","","Return an iterator over the values that are in `self` or…",5,[[["indexset",3]],["symmetricdifference",3]]],[11,"intersection","","Return an iterator over the values that are in both `self`…",5,[[["indexset",3]],["intersection",3]]],[11,"union","","Return an iterator over all values that are in `self` or…",5,[[["indexset",3]],["union",3]]],[11,"contains","","Return `true` if an equivalent to `value` exists in the set.",5,[[]]],[11,"get","","Return a reference to the value stored in the set, if it…",5,[[],["option",4]]],[11,"get_full","","Return item index and value",5,[[],["option",4]]],[11,"get_index_of","","Return item index, if it exists in the set",5,[[],["option",4]]],[11,"replace","","Adds a value to the set, replacing the existing value, if…",5,[[],["option",4]]],[11,"remove","","Remove the value from the set, and return `true` if it was…",5,[[]]],[11,"swap_remove","","Remove the value from the set, and return `true` if it was…",5,[[]]],[11,"shift_remove","","Remove the value from the set, and return `true` if it was…",5,[[]]],[11,"take","","Removes and returns the value in the set, if any, that is…",5,[[],["option",4]]],[11,"swap_take","","Removes and returns the value in the set, if any, that is…",5,[[],["option",4]]],[11,"shift_take","","Removes and returns the value in the set, if any, that is…",5,[[],["option",4]]],[11,"swap_remove_full","","Remove the value from the set return it and the index it…",5,[[],["option",4]]],[11,"shift_remove_full","","Remove the value from the set return it and the index it…",5,[[],["option",4]]],[11,"pop","","Remove the last value",5,[[],["option",4]]],[11,"retain","","Scan through each value in the set and keep those where…",5,[[]]],[11,"sort","","Sort the set’s values by their default ordering.",5,[[]]],[11,"sort_by","","Sort the set’s values in place using the comparison…",5,[[]]],[11,"sorted_by","","Sort the values of the set and return a by value iterator…",5,[[],["intoiter",3]]],[11,"reverse","","Reverses the order of the set’s values in place.",5,[[]]],[11,"get_index","","Get a value by index",5,[[],["option",4]]],[11,"swap_remove_index","","Remove the key-value pair by index",5,[[],["option",4]]],[11,"shift_remove_index","","Remove the key-value pair by index",5,[[],["option",4]]],[11,"is_disjoint","","Returns `true` if `self` has no elements in common with…",5,[[["indexset",3]]]],[11,"is_subset","","Returns `true` if all elements of `self` are contained in…",5,[[["indexset",3]]]],[11,"is_superset","","Returns `true` if all elements of `other` are contained in…",5,[[["indexset",3]]]],[8,"Equivalent","indexmap","Key equivalence trait.",null,null],[10,"equivalent","","Compare self to `key` and return `true` if they are equal.",6,[[]]],[14,"indexmap","","Create an `IndexMap` from a list of key-value pairs",null,null],[14,"indexset","","Create an `IndexSet` from a list of values",null,null],[11,"from","indexmap::map","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"into_iter","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"into_iter","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"from","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"into_iter","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"from","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"into_iter","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"into_iter","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"from","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"into_iter","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"into_iter","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"into_iter","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","indexmap::set","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"into_iter","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"from","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"into_iter","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"into_iter","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"from","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"into_iter","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"into_iter","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"from","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"into_iter","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"from","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"into_iter","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"from","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"into_iter","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"get_full_mut2","indexmap::map","",4,[[],["option",4]]],[11,"retain2","","",4,[[]]],[11,"__private_marker","","",4,[[],["privatemarker",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","indexmap::set","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"eq","indexmap::map","",4,[[["indexmap",3]]]],[11,"eq","indexmap::set","",5,[[["indexset",3]]]],[11,"index","indexmap::map","Returns a reference to the value corresponding to the…",4,[[]]],[11,"index","","Returns a reference to the value at the supplied `index`.",4,[[]]],[11,"index","indexmap::set","Returns a reference to the value at the supplied `index`.",5,[[]]],[11,"index_mut","indexmap::map","Returns a mutable reference to the value corresponding to…",4,[[]]],[11,"index_mut","","Returns a mutable reference to the value at the supplied…",4,[[]]],[11,"len","","",7,[[]]],[11,"len","","",8,[[]]],[11,"len","","",9,[[]]],[11,"len","","",10,[[]]],[11,"len","","",11,[[]]],[11,"len","","",12,[[]]],[11,"len","indexmap::set","",14,[[]]],[11,"len","","",15,[[]]],[11,"from_iter","indexmap::map","Create an `IndexMap` from the sequence of key-value pairs…",4,[[["intoiterator",8]]]],[11,"from_iter","indexmap::set","",5,[[["intoiterator",8]]]],[11,"next_back","indexmap::map","",7,[[],["option",4]]],[11,"next_back","","",8,[[],["option",4]]],[11,"next_back","","",9,[[],["option",4]]],[11,"next_back","","",10,[[],["option",4]]],[11,"next_back","","",11,[[],["option",4]]],[11,"next_back","","",12,[[],["option",4]]],[11,"next_back","","",13,[[],["option",4]]],[11,"next_back","indexmap::set","",14,[[],["option",4]]],[11,"next_back","","",15,[[],["option",4]]],[11,"next_back","","",16,[[],["option",4]]],[11,"next_back","","",17,[[],["option",4]]],[11,"next_back","","",18,[[],["option",4]]],[11,"next_back","","",19,[[],["option",4]]],[11,"next_back","","",20,[[],["option",4]]],[11,"next","indexmap::map","",7,[[],["option",4]]],[11,"size_hint","","",7,[[]]],[11,"count","","",7,[[]]],[11,"nth","","",7,[[],["option",4]]],[11,"last","","",7,[[],["option",4]]],[11,"collect","","",7,[[]]],[11,"next","","",8,[[],["option",4]]],[11,"size_hint","","",8,[[]]],[11,"count","","",8,[[]]],[11,"nth","","",8,[[],["option",4]]],[11,"last","","",8,[[],["option",4]]],[11,"collect","","",8,[[]]],[11,"next","","",9,[[],["option",4]]],[11,"size_hint","","",9,[[]]],[11,"count","","",9,[[]]],[11,"nth","","",9,[[],["option",4]]],[11,"last","","",9,[[],["option",4]]],[11,"collect","","",9,[[]]],[11,"next","","",10,[[],["option",4]]],[11,"size_hint","","",10,[[]]],[11,"count","","",10,[[]]],[11,"nth","","",10,[[],["option",4]]],[11,"last","","",10,[[],["option",4]]],[11,"collect","","",10,[[]]],[11,"next","","",11,[[],["option",4]]],[11,"size_hint","","",11,[[]]],[11,"count","","",11,[[]]],[11,"nth","","",11,[[],["option",4]]],[11,"last","","",11,[[],["option",4]]],[11,"collect","","",11,[[]]],[11,"next","","",12,[[],["option",4]]],[11,"size_hint","","",12,[[]]],[11,"count","","",12,[[]]],[11,"nth","","",12,[[],["option",4]]],[11,"last","","",12,[[],["option",4]]],[11,"collect","","",12,[[]]],[11,"next","","",13,[[],["option",4]]],[11,"size_hint","","",13,[[]]],[11,"count","","",13,[[]]],[11,"nth","","",13,[[],["option",4]]],[11,"last","","",13,[[],["option",4]]],[11,"collect","","",13,[[]]],[11,"next","indexmap::set","",14,[[],["option",4]]],[11,"size_hint","","",14,[[]]],[11,"count","","",14,[[]]],[11,"nth","","",14,[[],["option",4]]],[11,"last","","",14,[[],["option",4]]],[11,"collect","","",14,[[]]],[11,"next","","",15,[[],["option",4]]],[11,"size_hint","","",15,[[]]],[11,"count","","",15,[[]]],[11,"nth","","",15,[[],["option",4]]],[11,"last","","",15,[[],["option",4]]],[11,"collect","","",15,[[]]],[11,"next","","",16,[[],["option",4]]],[11,"size_hint","","",16,[[]]],[11,"count","","",16,[[]]],[11,"nth","","",16,[[],["option",4]]],[11,"last","","",16,[[],["option",4]]],[11,"collect","","",16,[[]]],[11,"next","","",17,[[],["option",4]]],[11,"size_hint","","",17,[[]]],[11,"next","","",18,[[],["option",4]]],[11,"size_hint","","",18,[[]]],[11,"next","","",19,[[],["option",4]]],[11,"size_hint","","",19,[[]]],[11,"fold","","",19,[[]]],[11,"next","","",20,[[],["option",4]]],[11,"size_hint","","",20,[[]]],[11,"fold","","",20,[[]]],[11,"into_iter","indexmap::map","",4,[[]]],[11,"into_iter","indexmap::set","",5,[[]]],[11,"extend","indexmap::map","Extend the map with all key-value pairs in the iterable.",4,[[["intoiterator",8]]]],[11,"extend","","Extend the map with all key-value pairs in the iterable.",4,[[["intoiterator",8]]]],[11,"extend","indexmap::set","",5,[[["intoiterator",8]]]],[11,"extend","","",5,[[["intoiterator",8]]]],[11,"clone","indexmap::map","",4,[[]]],[11,"clone_from","","",4,[[]]],[11,"clone","","",7,[[]]],[11,"clone","","",8,[[]]],[11,"clone","","",10,[[]]],[11,"clone","indexmap::set","",5,[[]]],[11,"clone_from","","",5,[[]]],[11,"clone","","",15,[[]]],[11,"clone","","",17,[[]]],[11,"clone","","",18,[[]]],[11,"clone","","",19,[[]]],[11,"clone","","",20,[[]]],[11,"default","indexmap::map","Return an empty `IndexMap`",4,[[]]],[11,"default","indexmap::set","Return an empty `IndexSet`",5,[[]]]],"p":[[4,"Entry"],[3,"OccupiedEntry"],[3,"VacantEntry"],[8,"MutableKeys"],[3,"IndexMap"],[3,"IndexSet"],[8,"Equivalent"],[3,"Keys"],[3,"Values"],[3,"ValuesMut"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[3,"IntoIter"],[3,"Iter"],[3,"Drain"],[3,"Difference"],[3,"Intersection"],[3,"SymmetricDifference"],[3,"Union"]]},\
"indoc":{"doc":"github crates-io docs-rs","i":[[14,"indoc","indoc","",null,null]],"p":[]},\
"indoc_impl":{"doc":"","i":[[24,"proc_macro_hack_indoc","indoc_impl","",null,null]],"p":[]},\
"instant":{"doc":"","i":[[3,"Duration","instant","A `Duration` type to represent a span of time, typically…",null,null],[6,"Instant","","",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"add","","",0,[[["duration",3]],["duration",3]]],[11,"div_assign","","",0,[[]]],[11,"add_assign","","",0,[[["duration",3]]]],[11,"default","","",0,[[],["duration",3]]],[11,"partial_cmp","","",0,[[["duration",3]],[["option",4],["ordering",4]]]],[11,"lt","","",0,[[["duration",3]]]],[11,"le","","",0,[[["duration",3]]]],[11,"gt","","",0,[[["duration",3]]]],[11,"ge","","",0,[[["duration",3]]]],[11,"hash","","",0,[[]]],[11,"sum","","",0,[[],["duration",3]]],[11,"sum","","",0,[[],["duration",3]]],[11,"sub_assign","","",0,[[["duration",3]]]],[11,"clone","","",0,[[],["duration",3]]],[11,"eq","","",0,[[["duration",3]]]],[11,"ne","","",0,[[["duration",3]]]],[11,"mul_assign","","",0,[[]]],[11,"div","","",0,[[],["duration",3]]],[11,"mul","","",0,[[],["duration",3]]],[11,"cmp","","",0,[[["duration",3]],["ordering",4]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"sub","","",0,[[["duration",3]],["duration",3]]],[18,"SECOND","","The duration of one second.",0,null],[18,"MILLISECOND","","The duration of one millisecond.",0,null],[18,"MICROSECOND","","The duration of one microsecond.",0,null],[18,"NANOSECOND","","The duration of one nanosecond.",0,null],[18,"MIN","","The minimum duration.",0,null],[18,"MAX","","The maximum duration.",0,null],[11,"new","","Creates a new `Duration` from the specified number of…",0,[[],["duration",3]]],[11,"zero","","Creates a new `Duration` that spans no time.",0,[[],["duration",3]]],[11,"from_secs","","Creates a new `Duration` from the specified number of…",0,[[],["duration",3]]],[11,"from_millis","","Creates a new `Duration` from the specified number of…",0,[[],["duration",3]]],[11,"from_micros","","Creates a new `Duration` from the specified number of…",0,[[],["duration",3]]],[11,"from_nanos","","Creates a new `Duration` from the specified number of…",0,[[],["duration",3]]],[11,"is_zero","","Returns true if this `Duration` spans no time.",0,[[]]],[11,"as_secs","","Returns the number of whole seconds contained by this…",0,[[]]],[11,"subsec_millis","","Returns the fractional part of this `Duration`, in whole…",0,[[]]],[11,"subsec_micros","","Returns the fractional part of this `Duration`, in whole…",0,[[]]],[11,"subsec_nanos","","Returns the fractional part of this `Duration`, in…",0,[[]]],[11,"as_millis","","Returns the total number of whole milliseconds contained…",0,[[]]],[11,"as_micros","","Returns the total number of whole microseconds contained…",0,[[]]],[11,"as_nanos","","Returns the total number of nanoseconds contained by this…",0,[[]]],[11,"checked_add","","Checked `Duration` addition. Computes `self + other`,…",0,[[["duration",3]],[["option",4],["duration",3]]]],[11,"saturating_add","","Saturating `Duration` addition. Computes `self + other`,…",0,[[["duration",3]],["duration",3]]],[11,"checked_sub","","Checked `Duration` subtraction. Computes `self - other`,…",0,[[["duration",3]],[["option",4],["duration",3]]]],[11,"saturating_sub","","Saturating `Duration` subtraction. Computes `self -…",0,[[["duration",3]],["duration",3]]],[11,"checked_mul","","Checked `Duration` multiplication. Computes `self *…",0,[[],[["option",4],["duration",3]]]],[11,"saturating_mul","","Saturating `Duration` multiplication. Computes `self *…",0,[[],["duration",3]]],[11,"checked_div","","Checked `Duration` division. Computes `self / other`,…",0,[[],[["option",4],["duration",3]]]],[11,"as_secs_f64","","Returns the number of seconds contained by this `Duration`…",0,[[]]],[11,"as_secs_f32","","Returns the number of seconds contained by this `Duration`…",0,[[]]],[11,"from_secs_f64","","Creates a new `Duration` from the specified number of…",0,[[],["duration",3]]],[11,"from_secs_f32","","Creates a new `Duration` from the specified number of…",0,[[],["duration",3]]],[11,"mul_f64","","Multiplies `Duration` by `f64`.",0,[[],["duration",3]]],[11,"mul_f32","","Multiplies `Duration` by `f32`.",0,[[],["duration",3]]],[11,"div_f64","","Divide `Duration` by `f64`.",0,[[],["duration",3]]],[11,"div_f32","","Divide `Duration` by `f32`.",0,[[],["duration",3]]],[11,"div_duration_f64","","Divide `Duration` by `Duration` and return `f64`.",0,[[["duration",3]]]],[11,"div_duration_f32","","Divide `Duration` by `Duration` and return `f32`.",0,[[["duration",3]]]]],"p":[[3,"Duration"]]},\
"inventory":{"doc":"github crates-io docs-rs","i":[[6,"iter","inventory","An iterator over plugins registered of a given type.",null,null],[8,"Collect","","Trait bound corresponding to types that can be iterated by…",null,null],[14,"collect","","Associate a plugin registry with the specified type.",null,null],[14,"submit","","Enter an element into the plugin registry corresponding to…",null,null],[11,"into_iter","","",0,[[]]]],"p":[[6,"iter"]]},\
"inventory_impl":{"doc":"","i":[],"p":[]},\
"itertools":{"doc":"Extra iterator adaptors, functions and macros.","i":[[4,"Either","itertools","The enum `Either` with variants `Left` and `Right` is a…",null,null],[13,"Left","","A value of type `L`.",0,null],[13,"Right","","A value of type `R`.",0,null],[4,"Diff","","A type returned by the `diff_with` function.",null,null],[13,"FirstMismatch","","The index of the first non-matching element along with…",1,null],[13,"Shorter","","The total number of elements that were in `J` along with…",1,null],[13,"Longer","","The total number of elements that were in `I` along with…",1,null],[4,"MinMaxResult","","`MinMaxResult` is an enum returned by `minmax`. See…",null,null],[13,"NoElements","","Empty iterator",2,null],[13,"OneElement","","Iterator with one element, so the minimum and maximum are…",2,null],[13,"MinMax","","More than one element in the iterator, the first element…",2,null],[4,"Position","","A value yielded by `WithPosition`. Indicates the position…",null,null],[13,"First","","This is the first element.",3,null],[13,"Middle","","This is neither the first nor the last element.",3,null],[13,"Last","","This is the last element.",3,null],[13,"Only","","This is the only element.",3,null],[4,"EitherOrBoth","","Value that either holds a single A or B, or both.",null,null],[13,"Both","","Both values are present.",4,null],[13,"Left","","Only the left value of type `A` is present.",4,null],[13,"Right","","Only the right value of type `B` is present.",4,null],[4,"FoldWhile","","An enum used for controlling the execution of…",null,null],[13,"Continue","","Continue folding with this value",5,null],[13,"Done","","Fold is complete and will return this value",5,null],[5,"concat","","Combine all an iterator\'s elements into one element by…",null,[[]]],[5,"cons_tuples","","Create an iterator that maps for example iterators of…",null,[[],["constuples",3]]],[5,"diff_with","","Compares every element yielded by both `i` and `j` with…",null,[[],[["option",4],["diff",4]]]],[5,"kmerge_by","","Create an iterator that merges elements of the contained…",null,[[],["kmergeby",3]]],[5,"process_results","","“Lift” a function of the values of an iterator so that it…",null,[[],["result",4]]],[5,"repeat_n","","Create an iterator that produces `n` repetitions of…",null,[[],["repeatn",3]]],[5,"repeat_call","","An iterator source that produces elements indefinitely by…",null,[[],["repeatcall",3]]],[5,"unfold","","Creates a new unfold source with the specified closure as…",null,[[],["unfold",3]]],[5,"iterate","","Creates a new iterator that infinitely applies function to…",null,[[],["iterate",3]]],[5,"multizip","","An iterator that generalizes .zip() and allows running…",null,[[],["zip",3]]],[5,"interleave","","Create an iterator that interleaves elements in `i` and `j`.",null,[[],["interleave",3]]],[5,"merge","","Create an iterator that merges elements in `i` and `j`.",null,[[],["merge",6]]],[5,"put_back","","Create an iterator where you can put back a single item",null,[[],["putback",3]]],[5,"put_back_n","","Create an iterator where you can put back multiple values…",null,[[],["putbackn",3]]],[5,"multipeek","","An iterator adaptor that allows the user to peek at…",null,[[],["multipeek",3]]],[5,"kmerge","","Create an iterator that merges elements of the contained…",null,[[],["kmerge",6]]],[5,"zip_eq","","Iterate `i` and `j` in lock step.",null,[[],["zipeq",3]]],[5,"merge_join_by","","Return an iterator adaptor that merge-joins items from the…",null,[[],["mergejoinby",3]]],[5,"rciter","","Return an iterator inside a `Rc<RefCell<_>>` wrapper.",null,[[],["rciter",3]]],[5,"enumerate","","Iterate `iterable` with a running index.",null,[[],["enumerate",3]]],[5,"rev","","Iterate `iterable` in reverse.",null,[[],["rev",3]]],[5,"zip","","Iterate `i` and `j` in lock step.",null,[[],["zip",3]]],[5,"chain","","Create an iterator that first iterates `i` and then `j`.",null,[[],["chain",3]]],[5,"cloned","","Create an iterator that clones each element from &T to T",null,[[],["cloned",3]]],[5,"fold","","Perform a fold operation over the iterable.",null,[[]]],[5,"all","","Test whether the predicate holds for all elements in the…",null,[[]]],[5,"any","","Test whether the predicate holds for any elements in the…",null,[[]]],[5,"max","","Return the maximum value of the iterable.",null,[[],["option",4]]],[5,"min","","Return the minimum value of the iterable.",null,[[],["option",4]]],[5,"join","","Combine all iterator elements into one String, seperated…",null,[[],["string",3]]],[5,"sorted","","Sort all iterator elements into a new iterator in…",null,[[],["intoiter",3]]],[5,"equal","","Return `true` if both iterables produce equal sequences…",null,[[]]],[5,"assert_equal","","Assert that two iterables produce equal sequences, with…",null,[[]]],[5,"partition","","Partition a sequence using predicate `pred` so that…",null,[[]]],[0,"structs","","The concrete iterator types.",null,null],[3,"DedupBy","itertools::structs","An iterator adaptor that removes repeated duplicates,…",null,null],[3,"Interleave","","An iterator adaptor that alternates elements from two…",null,null],[3,"InterleaveShortest","","An iterator adaptor that alternates elements from the two…",null,null],[3,"Product","","An iterator adaptor that iterates over the cartesian…",null,null],[3,"PutBack","","An iterator adaptor that allows putting back a single item…",null,null],[3,"Batching","","A “meta iterator adaptor”. Its closure receives a…",null,null],[3,"MapInto","","An iterator adapter to apply `Into` conversion to each…",null,null],[3,"MapResults","","An iterator adapter to apply a transformation within a…",null,null],[3,"MergeBy","","An iterator adaptor that merges the two base iterators in…",null,null],[3,"TakeWhileRef","","An iterator adaptor that borrows from a `Clone`-able…",null,null],[3,"WhileSome","","An iterator adaptor that filters `Option<A>` iterator…",null,null],[3,"Coalesce","","An iterator adaptor that may join together adjacent…",null,null],[3,"TupleCombinations","","An iterator to iterate through all combinations in a…",null,null],[3,"Positions","","An iterator adapter to get the positions of each element…",null,null],[3,"Update","","An iterator adapter to apply a mutating function to each…",null,null],[3,"Step","","An iterator adaptor that steps a number elements in the…",null,null],[3,"MultiProduct","","An iterator adaptor that iterates over the cartesian…",null,null],[3,"Combinations","","An iterator to iterate through all the `k`-length…",null,null],[3,"CombinationsWithReplacement","","An iterator to iterate through all the `n`-length…",null,null],[3,"ConsTuples","","An iterator that maps an iterator of tuples like `((A, B),…",null,null],[3,"ExactlyOneError","","Iterator returned for the error case of…",null,null],[3,"Format","","Format all iterator elements lazily, separated by `sep`.",null,null],[3,"FormatWith","","Format all iterator elements lazily, separated by `sep`.",null,null],[3,"IntoChunks","","`ChunkLazy` is the storage for a lazy chunking operation.",null,null],[3,"Chunk","","An iterator for the elements in a single chunk.",null,null],[3,"Chunks","","An iterator that yields the Chunk iterators.",null,null],[3,"GroupBy","","`GroupBy` is the storage for the lazy grouping operation.",null,null],[3,"Group","","An iterator for the elements in a single group.",null,null],[3,"Groups","","An iterator that yields the Group iterators.",null,null],[3,"Intersperse","","An iterator adaptor to insert a particular value between…",null,null],[3,"KMergeBy","","An iterator adaptor that merges an abitrary number of base…",null,null],[3,"MergeJoinBy","","An iterator adaptor that merge-joins items from the two…",null,null],[3,"MultiPeek","","See `multipeek()` for more information.",null,null],[3,"PadUsing","","An iterator adaptor that pads a sequence to a minimum…",null,null],[3,"PeekingTakeWhile","","An iterator adaptor that takes items while a closure…",null,null],[3,"Permutations","","An iterator adaptor that iterates through all the…",null,null],[3,"ProcessResults","","An iterator that produces only the `T` values as long as…",null,null],[3,"PutBackN","","An iterator adaptor that allows putting multiple items in…",null,null],[3,"RcIter","","A wrapper for `Rc<RefCell<I>>`, that implements the…",null,null],[12,"rciter","","The boxed iterator.",6,null],[3,"RepeatN","","An iterator that produces n repetitions of an element.",null,null],[3,"RepeatCall","","See `repeat_call` for more information.",null,null],[3,"Unfold","","See `unfold` for more information.",null,null],[12,"state","","Internal state that will be passed to the closure on the…",7,null],[3,"Iterate","","An iterator that infinitely applies function to value and…",null,null],[3,"Tee","","One half of an iterator pair where both return the same…",null,null],[3,"TupleBuffer","","An iterator over a incomplete tuple.",null,null],[3,"TupleWindows","","An iterator over all contiguous windows that produces…",null,null],[3,"Tuples","","An iterator that groups the items in tuples of a specific…",null,null],[3,"Unique","","An iterator adapter to filter out duplicate elements.",null,null],[3,"UniqueBy","","An iterator adapter to filter out duplicate elements.",null,null],[3,"WithPosition","","An iterator adaptor that wraps each element in an…",null,null],[3,"ZipEq","","An iterator which iterates two other iterators…",null,null],[3,"ZipLongest","","An iterator which iterates two other iterators…",null,null],[3,"Zip","","See `multizip` for more information.",null,null],[6,"Dedup","","An iterator adaptor that removes repeated duplicates.",null,null],[6,"Merge","","An iterator adaptor that merges the two base iterators in…",null,null],[6,"KMerge","","An iterator adaptor that merges an abitrary number of base…",null,null],[0,"traits","itertools","Traits helpful for using certain `Itertools` methods in…",null,null],[8,"HomogeneousTuple","itertools::traits","Implemented for homogeneous tuples of size up to 4.",null,null],[11,"with_value","itertools::structs","put back value `value` (builder method)",8,[[]]],[11,"into_parts","","Split the `PutBack` into its parts.",8,[[]]],[11,"put_back","","Put back a single value to the front of the iterator.",8,[[]]],[11,"has_left","itertools","If `Left`, or `Both`, return true, otherwise, return false.",4,[[]]],[11,"has_right","","If `Right`, or `Both`, return true, otherwise, return false.",4,[[]]],[11,"is_left","","If Left, return true otherwise, return false. Exclusive…",4,[[]]],[11,"is_right","","If Right, return true otherwise, return false. Exclusive…",4,[[]]],[11,"is_both","","If Right, return true otherwise, return false. Equivalent…",4,[[]]],[11,"left","","If `Left`, or `Both`, return `Some` with the left value,…",4,[[],["option",4]]],[11,"right","","If `Right`, or `Both`, return `Some` with the right value,…",4,[[],["option",4]]],[11,"both","","If Both, return `Some` tuple containing left and right.",4,[[],["option",4]]],[11,"as_ref","","Converts from `&EitherOrBoth<A, B>` to `EitherOrBoth<&A,…",4,[[],["eitherorboth",4]]],[11,"as_mut","","Converts from `&mut EitherOrBoth<A, B>` to…",4,[[],["eitherorboth",4]]],[11,"flip","","Convert `EitherOrBoth<A, B>` to `EitherOrBoth<B, A>`.",4,[[],["eitherorboth",4]]],[11,"map_left","","Apply the function `f` on the value `a` in `Left(a)` or…",4,[[],["eitherorboth",4]]],[11,"map_right","","Apply the function `f` on the value `b` in `Right(b)` or…",4,[[],["eitherorboth",4]]],[11,"map_any","","Apply the functions `f` and `g` on the value `a` and `b`…",4,[[],["eitherorboth",4]]],[11,"left_and_then","","Apply the function `f` on the value `b` in `Right(b)` or…",4,[[],["eitherorboth",4]]],[11,"right_and_then","","Apply the function `f` on the value `a` in `Left(a)` or…",4,[[],["eitherorboth",4]]],[11,"reduce","","Return either value of left, right, or the product of `f`…",4,[[]]],[11,"into_option","","`into_option` creates an `Option` of type `(T, T)`. The…",2,[[],["option",4]]],[11,"reset_peek","itertools::structs","Reset the peeking “cursor”",9,[[]]],[11,"peek","","Works exactly like `.next()` with the only difference that…",9,[[],["option",4]]],[11,"put_back","","Puts x in front of the iterator. The values are yielded in…",10,[[]]],[11,"into_buffer","","Return a buffer with the produced items that was not…",11,[[],["tuplebuffer",3]]],[11,"into_inner","itertools","Return the inner value.",3,[[]]],[8,"PeekingNext","","An iterator that allows peeking at an element before…",null,null],[10,"peeking_next","","Pass a reference to the next iterator element to the…",12,[[],["option",4]]],[8,"Itertools","","An `Iterator` blanket implementation that provides extra…",null,null],[11,"interleave","","Alternate elements from two iterators until both have run…",13,[[],["interleave",3]]],[11,"interleave_shortest","","Alternate elements from two iterators until at least one…",13,[[],["interleaveshortest",3]]],[11,"intersperse","","An iterator adaptor to insert a particular value between…",13,[[],["intersperse",3]]],[11,"zip_longest","","Create an iterator which iterates over both this and the…",13,[[],["ziplongest",3]]],[11,"zip_eq","","Create an iterator which iterates over both this and the…",13,[[],["zipeq",3]]],[11,"batching","","A “meta iterator adaptor”. Its closure receives a…",13,[[],["batching",3]]],[11,"group_by","","Return an iterable that can group iterator elements.…",13,[[],["groupby",3]]],[11,"chunks","","Return an iterable that can chunk the iterator.",13,[[],["intochunks",3]]],[11,"tuple_windows","","Return an iterator over all contiguous windows producing…",13,[[],["tuplewindows",3]]],[11,"tuples","","Return an iterator that groups the items in tuples of a…",13,[[],["tuples",3]]],[11,"tee","","Split into an iterator pair that both yield all elements…",13,[[]]],[11,"step","","Return an iterator adaptor that steps `n` elements in the…",13,[[],["step",3]]],[11,"map_into","","Convert each item of the iterator using the `Into` trait.",13,[[],["mapinto",3]]],[11,"map_results","","Return an iterator adaptor that applies the provided…",13,[[],["mapresults",3]]],[11,"merge","","Return an iterator adaptor that merges the two base…",13,[[],["merge",6]]],[11,"merge_by","","Return an iterator adaptor that merges the two base…",13,[[],["mergeby",3]]],[11,"merge_join_by","","Create an iterator that merges items from both this and…",13,[[],["mergejoinby",3]]],[11,"kmerge","","Return an iterator adaptor that flattens an iterator of…",13,[[],["kmerge",6]]],[11,"kmerge_by","","Return an iterator adaptor that flattens an iterator of…",13,[[],["kmergeby",3]]],[11,"cartesian_product","","Return an iterator adaptor that iterates over the…",13,[[],["product",3]]],[11,"multi_cartesian_product","","Return an iterator adaptor that iterates over the…",13,[[],["multiproduct",3]]],[11,"coalesce","","Return an iterator adaptor that uses the passed-in closure…",13,[[],["coalesce",3]]],[11,"dedup","","Remove duplicates from sections of consecutive identical…",13,[[],["dedup",6]]],[11,"dedup_by","","Remove duplicates from sections of consecutive identical…",13,[[],["dedupby",3]]],[11,"unique","","Return an iterator adaptor that filters out elements that…",13,[[],["unique",3]]],[11,"unique_by","","Return an iterator adaptor that filters out elements that…",13,[[],["uniqueby",3]]],[11,"peeking_take_while","","Return an iterator adaptor that borrows from this iterator…",13,[[],["peekingtakewhile",3]]],[11,"take_while_ref","","Return an iterator adaptor that borrows from a…",13,[[],["takewhileref",3]]],[11,"while_some","","Return an iterator adaptor that filters `Option<A>`…",13,[[],["whilesome",3]]],[11,"tuple_combinations","","Return an iterator adaptor that iterates over the…",13,[[],["tuplecombinations",3]]],[11,"combinations","","Return an iterator adaptor that iterates over the…",13,[[],["combinations",3]]],[11,"combinations_with_replacement","","Return an iterator that iterates over the `k`-length…",13,[[],["combinationswithreplacement",3]]],[11,"permutations","","Return an iterator adaptor that iterates over all…",13,[[],["permutations",3]]],[11,"pad_using","","Return an iterator adaptor that pads the sequence to a…",13,[[],["padusing",3]]],[11,"with_position","","Return an iterator adaptor that wraps each element in a…",13,[[],["withposition",3]]],[11,"positions","","Return an iterator adaptor that yields the indices of all…",13,[[],["positions",3]]],[11,"update","","Return an iterator adaptor that applies a mutating…",13,[[],["update",3]]],[11,"next_tuple","","Advances the iterator and returns the next items grouped…",13,[[],["option",4]]],[11,"collect_tuple","","Collects all items from the iterator into a tuple of a…",13,[[],["option",4]]],[11,"find_position","","Find the position and value of the first element…",13,[[],["option",4]]],[11,"all_equal","","Check whether all elements compare equal.",13,[[]]],[11,"dropping","","Consume the first `n` elements from the iterator eagerly,…",13,[[]]],[11,"dropping_back","","Consume the last `n` elements from the iterator eagerly,…",13,[[]]],[11,"foreach","","Run the closure `f` eagerly on each element of the iterator.",13,[[]]],[11,"concat","","Combine all an iterator\'s elements into one element by…",13,[[]]],[11,"collect_vec","","`.collect_vec()` is simply a type specialization of…",13,[[],["vec",3]]],[11,"try_collect","","`.try_collect()` is more convenient way of writing…",13,[[],["result",4]]],[11,"set_from","","Assign to each reference in `self` from the `from`…",13,[[]]],[11,"join","","Combine all iterator elements into one String, separated…",13,[[],["string",3]]],[11,"format","","Format all iterator elements, separated by `sep`.",13,[[],["format",3]]],[11,"format_with","","Format all iterator elements, separated by `sep`.",13,[[],["formatwith",3]]],[11,"fold_results","","Fold `Result` values from an iterator.",13,[[],["result",4]]],[11,"fold_options","","Fold `Option` values from an iterator.",13,[[],["option",4]]],[11,"fold1","","Accumulator of the elements in the iterator.",13,[[],["option",4]]],[11,"tree_fold1","","Accumulate the elements in the iterator in a tree-like…",13,[[],["option",4]]],[11,"fold_while","","An iterator method that applies a function, producing a…",13,[[],["foldwhile",4]]],[11,"sum1","","Iterate over the entire iterator and add all the elements.",13,[[],["option",4]]],[11,"product1","","Iterate over the entire iterator and multiply all the…",13,[[],["option",4]]],[11,"sorted","","Sort all iterator elements into a new iterator in…",13,[[],["intoiter",3]]],[11,"sorted_by","","Sort all iterator elements into a new iterator in…",13,[[],["intoiter",3]]],[11,"sorted_by_key","","Sort all iterator elements into a new iterator in…",13,[[],["intoiter",3]]],[11,"partition_map","","Collect all iterator elements into one of two partitions.…",13,[[]]],[11,"into_group_map","","Return a `HashMap` of keys mapped to `Vec`s of values.…",13,[[],[["hashmap",3],["vec",3]]]],[11,"minmax","","Return the minimum and maximum elements in the iterator.",13,[[],["minmaxresult",4]]],[11,"minmax_by_key","","Return the minimum and maximum element of an iterator, as…",13,[[],["minmaxresult",4]]],[11,"minmax_by","","Return the minimum and maximum element of an iterator, as…",13,[[],["minmaxresult",4]]],[11,"position_max","","Return the position of the maximum element in the iterator.",13,[[],["option",4]]],[11,"position_max_by_key","","Return the position of the maximum element in the…",13,[[],["option",4]]],[11,"position_max_by","","Return the position of the maximum element in the…",13,[[],["option",4]]],[11,"position_min","","Return the position of the minimum element in the iterator.",13,[[],["option",4]]],[11,"position_min_by_key","","Return the position of the minimum element in the…",13,[[],["option",4]]],[11,"position_min_by","","Return the position of the minimum element in the…",13,[[],["option",4]]],[11,"position_minmax","","Return the positions of the minimum and maximum elements…",13,[[],["minmaxresult",4]]],[11,"position_minmax_by_key","","Return the postions of the minimum and maximum elements of…",13,[[],["minmaxresult",4]]],[11,"position_minmax_by","","Return the postions of the minimum and maximum elements of…",13,[[],["minmaxresult",4]]],[11,"exactly_one","","If the iterator yields exactly one element, that element…",13,[[],[["exactlyoneerror",3],["result",4]]]],[11,"into_inner","","Return the value in the continue or done.",5,[[]]],[11,"is_done","","Return true if `self` is `Done`, false if it is `Continue`.",5,[[]]],[14,"iproduct","","Create an iterator over the “cartesian product” of…",null,null],[14,"izip","","Create an iterator running multiple iterators in lockstep.",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"into_iter","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","itertools::structs","",14,[[]]],[11,"into","","",14,[[]]],[11,"into_iter","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"into_iter","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"into_iter","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"into_iter","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"into_iter","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"into_iter","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"into_iter","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"into_iter","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"into_iter","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"into_iter","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"into_iter","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"into_iter","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"into_iter","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"into_iter","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"into_iter","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"into_iter","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"into_iter","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"into_iter","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"into_iter","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"into_iter","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"into_iter","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"to_string","","",34,[[],["string",3]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"to_string","","",35,[[],["string",3]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"into_iter","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"into_iter","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"into_iter","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"into_iter","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"into_iter","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"into_iter","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"into_iter","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"into_iter","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"into_iter","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"into_iter","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"into_iter","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"into_iter","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into_iter","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"into_iter","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"into_iter","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"into_iter","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into_iter","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"into_iter","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"into_iter","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"into_iter","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"into_iter","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"into_iter","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"into_iter","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"into_iter","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"into_iter","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"into_iter","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"into_iter","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"into_iter","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"partial_cmp","itertools","",0,[[["either",4]],[["option",4],["ordering",4]]]],[11,"lt","","",0,[[["either",4]]]],[11,"le","","",0,[[["either",4]]]],[11,"gt","","",0,[[["either",4]]]],[11,"ge","","",0,[[["either",4]]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"next","","",0,[[],["option",4]]],[11,"size_hint","","",0,[[]]],[11,"fold","","",0,[[]]],[11,"count","","",0,[[]]],[11,"last","","",0,[[],["option",4]]],[11,"nth","","",0,[[],["option",4]]],[11,"collect","","",0,[[]]],[11,"all","","",0,[[]]],[11,"extend","","",0,[[]]],[11,"hash","","",0,[[]]],[11,"next_back","","",0,[[],["option",4]]],[11,"clone","","",0,[[],["either",4]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"read","","",0,[[],[["error",3],["result",4]]]],[11,"read_to_end","","",0,[[["vec",3]],[["error",3],["result",4]]]],[11,"from","","",0,[[["result",4]],["either",4]]],[11,"deref","","",0,[[]]],[11,"as_mut","","",0,[[],["cstr",3]]],[11,"as_mut","","",0,[[]]],[11,"as_mut","","",0,[[]]],[11,"as_mut","","",0,[[]]],[11,"as_mut","","",0,[[],["osstr",3]]],[11,"as_mut","","",0,[[],["path",3]]],[11,"cmp","","",0,[[["either",4]],["ordering",4]]],[11,"write","","",0,[[],[["error",3],["result",4]]]],[11,"flush","","",0,[[],[["result",4],["error",3]]]],[11,"eq","","",0,[[["either",4]]]],[11,"ne","","",0,[[["either",4]]]],[11,"into","","",0,[[],["result",4]]],[11,"description","","",0,[[]]],[11,"cause","","",0,[[],[["option",4],["error",8]]]],[11,"deref_mut","","",0,[[]]],[11,"as_ref","","",0,[[]]],[11,"as_ref","","",0,[[]]],[11,"as_ref","","",0,[[],["path",3]]],[11,"as_ref","","",0,[[]]],[11,"as_ref","","",0,[[],["osstr",3]]],[11,"as_ref","","",0,[[],["cstr",3]]],[11,"fill_buf","","",0,[[],[["error",3],["result",4]]]],[11,"consume","","",0,[[]]],[11,"peeking_next","itertools::structs","",9,[[],["option",4]]],[11,"peeking_next","","",8,[[],["option",4]]],[11,"peeking_next","","",10,[[],["option",4]]],[11,"drop","","",40,[[]]],[11,"drop","","",37,[[]]],[11,"from","","",60,[[]]],[11,"from","","",60,[[]]],[11,"from","","",60,[[]]],[11,"from","","",60,[[]]],[11,"from","","",60,[[]]],[11,"from","","",60,[[]]],[11,"from","","",60,[[]]],[11,"from","","",60,[[]]],[11,"into","itertools","",4,[[],[["option",4],["either",4]]]],[11,"next_back","itertools::structs","",19,[[],["option",4]]],[11,"next_back","","",26,[[],["option",4]]],[11,"next_back","","",27,[[],["option",4]]],[11,"next_back","","",32,[[],["option",4]]],[11,"next_back","","",32,[[],["option",4]]],[11,"next_back","","",32,[[],["option",4]]],[11,"next_back","","",32,[[],["option",4]]],[11,"next_back","","",32,[[],["option",4]]],[11,"next_back","","",32,[[],["option",4]]],[11,"next_back","","",45,[[],["option",4]]],[11,"next_back","","",6,[[],["option",4]]],[11,"next_back","","",49,[[],["option",4]]],[11,"next_back","","",59,[[],["option",4]]],[11,"next","","",29,[[],["option",4]]],[11,"count","","",29,[[]]],[11,"size_hint","","",29,[[]]],[11,"last","","",29,[[],["option",4]]],[11,"next","","",15,[[],["option",4]]],[11,"size_hint","","",15,[[]]],[11,"next","","",16,[[],["option",4]]],[11,"size_hint","","",16,[[]]],[11,"next","","",8,[[],["option",4]]],[11,"size_hint","","",8,[[]]],[11,"count","","",8,[[]]],[11,"last","","",8,[[],["option",4]]],[11,"nth","","",8,[[],["option",4]]],[11,"all","","",8,[[]]],[11,"fold","","",8,[[]]],[11,"next","","",17,[[],["option",4]]],[11,"size_hint","","",17,[[]]],[11,"fold","","",17,[[]]],[11,"next","","",18,[[],["option",4]]],[11,"size_hint","","",18,[[]]],[11,"next","","",28,[[],["option",4]]],[11,"size_hint","","",28,[[]]],[11,"next","","",21,[[],["option",4]]],[11,"size_hint","","",21,[[]]],[11,"next","","",24,[[],["option",4]]],[11,"size_hint","","",24,[[]]],[11,"next","","",14,[[],["option",4]]],[11,"size_hint","","",14,[[]]],[11,"fold","","",14,[[]]],[11,"next","","",22,[[],["option",4]]],[11,"size_hint","","",22,[[]]],[11,"next","","",23,[[],["option",4]]],[11,"size_hint","","",23,[[]]],[11,"next","","",25,[[],["option",4]]],[11,"next","","",19,[[],["option",4]]],[11,"size_hint","","",19,[[]]],[11,"fold","","",19,[[]]],[11,"next","","",20,[[],["option",4]]],[11,"size_hint","","",20,[[]]],[11,"fold","","",20,[[]]],[11,"collect","","",20,[[]]],[11,"next","","",26,[[],["option",4]]],[11,"size_hint","","",26,[[]]],[11,"next","","",27,[[],["option",4]]],[11,"size_hint","","",27,[[]]],[11,"fold","","",27,[[]]],[11,"collect","","",27,[[]]],[11,"next","","",32,[[],["option",4]]],[11,"size_hint","","",32,[[]]],[11,"fold","","",32,[[]]],[11,"next","","",32,[[],["option",4]]],[11,"size_hint","","",32,[[]]],[11,"fold","","",32,[[]]],[11,"next","","",32,[[],["option",4]]],[11,"size_hint","","",32,[[]]],[11,"fold","","",32,[[]]],[11,"next","","",32,[[],["option",4]]],[11,"size_hint","","",32,[[]]],[11,"fold","","",32,[[]]],[11,"next","","",32,[[],["option",4]]],[11,"size_hint","","",32,[[]]],[11,"fold","","",32,[[]]],[11,"next","","",32,[[],["option",4]]],[11,"size_hint","","",32,[[]]],[11,"fold","","",32,[[]]],[11,"next","","",30,[[],["option",4]]],[11,"next","","",31,[[],["option",4]]],[11,"next","","",33,[[],["option",4]]],[11,"size_hint","","",33,[[]]],[11,"next","","",41,[[],["option",4]]],[11,"next","","",40,[[],["option",4]]],[11,"next","","",38,[[],["option",4]]],[11,"next","","",37,[[],["option",4]]],[11,"next","","",42,[[],["option",4]]],[11,"size_hint","","",42,[[]]],[11,"fold","","",42,[[]]],[11,"next","","",43,[[],["option",4]]],[11,"size_hint","","",43,[[]]],[11,"next","","",44,[[],["option",4]]],[11,"size_hint","","",44,[[]]],[11,"count","","",44,[[]]],[11,"last","","",44,[[],["option",4]]],[11,"nth","","",44,[[],["option",4]]],[11,"next","","",9,[[],["option",4]]],[11,"size_hint","","",9,[[]]],[11,"next","","",45,[[],["option",4]]],[11,"size_hint","","",45,[[]]],[11,"next","","",46,[[],["option",4]]],[11,"size_hint","","",46,[[]]],[11,"next","","",47,[[],["option",4]]],[11,"count","","",47,[[]]],[11,"size_hint","","",47,[[]]],[11,"next","","",48,[[],["option",4]]],[11,"size_hint","","",48,[[]]],[11,"next","","",10,[[],["option",4]]],[11,"size_hint","","",10,[[]]],[11,"next","","",6,[[],["option",4]]],[11,"size_hint","","",6,[[]]],[11,"next","","",49,[[],["option",4]]],[11,"size_hint","","",49,[[]]],[11,"next","","",50,[[],["option",4]]],[11,"size_hint","","",50,[[]]],[11,"next","","",7,[[],["option",4]]],[11,"size_hint","","",7,[[]]],[11,"next","","",51,[[],["option",4]]],[11,"size_hint","","",51,[[]]],[11,"next","","",52,[[],["option",4]]],[11,"size_hint","","",52,[[]]],[11,"next","","",53,[[],["option",4]]],[11,"size_hint","","",53,[[]]],[11,"next","","",11,[[],["option",4]]],[11,"next","","",54,[[],["option",4]]],[11,"next","","",56,[[],["option",4]]],[11,"size_hint","","",56,[[]]],[11,"count","","",56,[[]]],[11,"next","","",55,[[],["option",4]]],[11,"size_hint","","",55,[[]]],[11,"count","","",55,[[]]],[11,"next","","",57,[[],["option",4]]],[11,"size_hint","","",57,[[]]],[11,"next","","",58,[[],["option",4]]],[11,"size_hint","","",58,[[]]],[11,"next","","",59,[[],["option",4]]],[11,"size_hint","","",59,[[]]],[11,"next","","",60,[[],["option",4]]],[11,"size_hint","","",60,[[]]],[11,"next","","",60,[[],["option",4]]],[11,"size_hint","","",60,[[]]],[11,"next","","",60,[[],["option",4]]],[11,"size_hint","","",60,[[]]],[11,"next","","",60,[[],["option",4]]],[11,"size_hint","","",60,[[]]],[11,"next","","",60,[[],["option",4]]],[11,"size_hint","","",60,[[]]],[11,"next","","",60,[[],["option",4]]],[11,"size_hint","","",60,[[]]],[11,"next","","",60,[[],["option",4]]],[11,"size_hint","","",60,[[]]],[11,"next","","",60,[[],["option",4]]],[11,"size_hint","","",60,[[]]],[11,"clone","","",29,[[],["multiproduct",3]]],[11,"clone","","",15,[[],["interleave",3]]],[11,"clone","","",16,[[],["interleaveshortest",3]]],[11,"clone","","",8,[[],["putback",3]]],[11,"clone","","",17,[[],["product",3]]],[11,"clone","","",18,[[],["batching",3]]],[11,"clone","","",28,[[],["step",3]]],[11,"clone","","",21,[[]]],[11,"clone","","",24,[[]]],[11,"clone","","",14,[[]]],[11,"clone","","",23,[[],["whilesome",3]]],[11,"clone","","",25,[[],["tuplecombinations",3]]],[11,"clone","","",19,[[],["mapinto",3]]],[11,"clone","","",20,[[],["mapresults",3]]],[11,"clone","","",26,[[],["positions",3]]],[11,"clone","","",27,[[],["update",3]]],[11,"clone","itertools","",4,[[],["eitherorboth",4]]],[11,"clone","itertools::structs","",32,[[]]],[11,"clone","","",30,[[]]],[11,"clone","","",31,[[],["combinationswithreplacement",3]]],[11,"clone","","",33,[[],["exactlyoneerror",3]]],[11,"clone","","",35,[[],["formatwith",3]]],[11,"clone","","",34,[[],["format",3]]],[11,"clone","","",42,[[],["intersperse",3]]],[11,"clone","","",43,[[]]],[11,"clone","","",44,[[]]],[11,"clone","itertools","",2,[[],["minmaxresult",4]]],[11,"clone","itertools::structs","",9,[[],["multipeek",3]]],[11,"clone","","",45,[[],["padusing",3]]],[11,"clone","","",47,[[]]],[11,"clone","","",10,[[],["putbackn",3]]],[11,"clone","","",6,[[]]],[11,"clone","","",49,[[],["repeatn",3]]],[11,"clone","","",50,[[],["repeatcall",3]]],[11,"clone","","",7,[[],["unfold",3]]],[11,"clone","","",51,[[],["iterate",3]]],[11,"clone","","",53,[[],["tuplebuffer",3]]],[11,"clone","","",11,[[],["tuples",3]]],[11,"clone","","",54,[[],["tuplewindows",3]]],[11,"clone","","",56,[[],["uniqueby",3]]],[11,"clone","","",55,[[],["unique",3]]],[11,"clone","","",57,[[]]],[11,"clone","itertools","",3,[[],["position",4]]],[11,"clone","itertools::structs","",58,[[],["zipeq",3]]],[11,"clone","","",59,[[],["ziplongest",3]]],[11,"clone","","",60,[[],["zip",3]]],[11,"clone","itertools","",5,[[],["foldwhile",4]]],[11,"eq","","",4,[[["eitherorboth",4]]]],[11,"ne","","",4,[[["eitherorboth",4]]]],[11,"eq","","",2,[[["minmaxresult",4]]]],[11,"ne","","",2,[[["minmaxresult",4]]]],[11,"eq","","",3,[[["position",4]]]],[11,"ne","","",3,[[["position",4]]]],[11,"eq","","",5,[[["foldwhile",4]]]],[11,"ne","","",5,[[["foldwhile",4]]]],[11,"fmt","itertools::structs","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","itertools","",4,[[["formatter",3]],["result",6]]],[11,"fmt","itertools::structs","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","itertools","",2,[[["formatter",3]],["result",6]]],[11,"fmt","itertools::structs","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","itertools","",3,[[["formatter",3]],["result",6]]],[11,"fmt","itertools::structs","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","itertools","",5,[[["formatter",3]],["result",6]]],[11,"fmt","itertools::structs","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"hash","itertools","",4,[[]]],[11,"fmt","itertools::structs","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"is_left","itertools","Return true if the value is the `Left` variant.",0,[[]]],[11,"is_right","","Return true if the value is the `Right` variant.",0,[[]]],[11,"left","","Convert the left side of `Either<L, R>` to an `Option<L>`.",0,[[],["option",4]]],[11,"right","","Convert the right side of `Either<L, R>` to an `Option<R>`.",0,[[],["option",4]]],[11,"as_ref","","Convert `&Either<L, R>` to `Either<&L, &R>`.",0,[[],["either",4]]],[11,"as_mut","","Convert `&mut Either<L, R>` to `Either<&mut L, &mut R>`.",0,[[],["either",4]]],[11,"flip","","Convert `Either<L, R>` to `Either<R, L>`.",0,[[],["either",4]]],[11,"map_left","","Apply the function `f` on the value in the `Left` variant…",0,[[],["either",4]]],[11,"map_right","","Apply the function `f` on the value in the `Right` variant…",0,[[],["either",4]]],[11,"either","","Apply one of two functions depending on contents, unifying…",0,[[]]],[11,"either_with","","Like `either`, but provide some context to whichever of…",0,[[]]],[11,"left_and_then","","Apply the function `f` on the value in the `Left` variant…",0,[[],["either",4]]],[11,"right_and_then","","Apply the function `f` on the value in the `Right` variant…",0,[[],["either",4]]],[11,"into_iter","","Convert the inner value to an iterator.",0,[[],["either",4]]],[11,"left_or","","Return left value or given value",0,[[]]],[11,"left_or_default","","Return left or a default",0,[[]]],[11,"left_or_else","","Returns left value or computes it from a closure",0,[[]]],[11,"right_or","","Return right value or given value",0,[[]]],[11,"right_or_default","","Return right or a default",0,[[]]],[11,"right_or_else","","Returns right value or computes it from a closure",0,[[]]],[11,"unwrap_left","","Returns the left value",0,[[]]],[11,"unwrap_right","","Returns the right value",0,[[]]],[11,"expect_left","","Returns the left value",0,[[]]],[11,"expect_right","","Returns the right value",0,[[]]],[11,"factor_first","","Factor out a homogeneous type from an either of pairs.",0,[[]]],[11,"factor_second","","Factor out a homogeneous type from an either of pairs.",0,[[]]],[11,"into_inner","","Extract the value of an either over two equivalent types.",0,[[]]],[11,"map","","Map `f` over the contained value and return the result in…",0,[[],["either",4]]]],"p":[[4,"Either"],[4,"Diff"],[4,"MinMaxResult"],[4,"Position"],[4,"EitherOrBoth"],[4,"FoldWhile"],[3,"RcIter"],[3,"Unfold"],[3,"PutBack"],[3,"MultiPeek"],[3,"PutBackN"],[3,"Tuples"],[8,"PeekingNext"],[8,"Itertools"],[3,"DedupBy"],[3,"Interleave"],[3,"InterleaveShortest"],[3,"Product"],[3,"Batching"],[3,"MapInto"],[3,"MapResults"],[3,"MergeBy"],[3,"TakeWhileRef"],[3,"WhileSome"],[3,"Coalesce"],[3,"TupleCombinations"],[3,"Positions"],[3,"Update"],[3,"Step"],[3,"MultiProduct"],[3,"Combinations"],[3,"CombinationsWithReplacement"],[3,"ConsTuples"],[3,"ExactlyOneError"],[3,"Format"],[3,"FormatWith"],[3,"IntoChunks"],[3,"Chunk"],[3,"Chunks"],[3,"GroupBy"],[3,"Group"],[3,"Groups"],[3,"Intersperse"],[3,"KMergeBy"],[3,"MergeJoinBy"],[3,"PadUsing"],[3,"PeekingTakeWhile"],[3,"Permutations"],[3,"ProcessResults"],[3,"RepeatN"],[3,"RepeatCall"],[3,"Iterate"],[3,"Tee"],[3,"TupleBuffer"],[3,"TupleWindows"],[3,"Unique"],[3,"UniqueBy"],[3,"WithPosition"],[3,"ZipEq"],[3,"ZipLongest"],[3,"Zip"]]},\
"itoa":{"doc":"github crates-io docs-rs","i":[[3,"Buffer","itoa","A safe API for formatting integers to text.",null,null],[5,"fmt","","Write integer to an `fmt::Write`.",null,[[["write",8],["integer",8]],["result",6]]],[8,"Integer","","An integer that can be formatted by `itoa::write` and…",null,null],[11,"new","","This is a cheap operation; you don\'t need to worry about…",0,[[],["buffer",3]]],[11,"format","","Print an integer into this buffer and return a reference…",0,[[["integer",8]]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"clone","","",0,[[]]],[11,"default","","",0,[[],["buffer",3]]]],"p":[[3,"Buffer"]]},\
"kernel32":{"doc":"","i":[],"p":[]},\
"lazy_static":{"doc":"A macro for declaring lazily evaluated statics.","i":[[5,"initialize","lazy_static","Takes a shared reference to a lazy static and initializes…",null,[[]]],[8,"LazyStatic","","Support trait for enabling a few common operation on lazy…",null,null],[14,"lazy_static","","",null,null]],"p":[]},\
"libc":{"doc":"libc - Raw FFI bindings to platforms\' system libraries","i":[[4,"c_void","libc","Equivalent to C\'s `void` type when used as a pointer.",null,null],[3,"group","","",null,null],[12,"gr_name","","",0,null],[12,"gr_passwd","","",0,null],[12,"gr_gid","","",0,null],[12,"gr_mem","","",0,null],[3,"utimbuf","","",null,null],[12,"actime","","",1,null],[12,"modtime","","",1,null],[3,"timeval","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_usec","","",2,null],[3,"timespec","","",null,null],[12,"tv_sec","","",3,null],[12,"tv_nsec","","",3,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",4,null],[12,"rlim_max","","",4,null],[3,"rusage","","",null,null],[12,"ru_utime","","",5,null],[12,"ru_stime","","",5,null],[12,"ru_maxrss","","",5,null],[12,"ru_ixrss","","",5,null],[12,"ru_idrss","","",5,null],[12,"ru_isrss","","",5,null],[12,"ru_minflt","","",5,null],[12,"ru_majflt","","",5,null],[12,"ru_nswap","","",5,null],[12,"ru_inblock","","",5,null],[12,"ru_oublock","","",5,null],[12,"ru_msgsnd","","",5,null],[12,"ru_msgrcv","","",5,null],[12,"ru_nsignals","","",5,null],[12,"ru_nvcsw","","",5,null],[12,"ru_nivcsw","","",5,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",6,null],[12,"ipv6mr_interface","","",6,null],[3,"hostent","","",null,null],[12,"h_name","","",7,null],[12,"h_aliases","","",7,null],[12,"h_addrtype","","",7,null],[12,"h_length","","",7,null],[12,"h_addr_list","","",7,null],[3,"iovec","","",null,null],[12,"iov_base","","",8,null],[12,"iov_len","","",8,null],[3,"pollfd","","",null,null],[12,"fd","","",9,null],[12,"events","","",9,null],[12,"revents","","",9,null],[3,"winsize","","",null,null],[12,"ws_row","","",10,null],[12,"ws_col","","",10,null],[12,"ws_xpixel","","",10,null],[12,"ws_ypixel","","",10,null],[3,"linger","","",null,null],[12,"l_onoff","","",11,null],[12,"l_linger","","",11,null],[3,"sigval","","",null,null],[12,"sival_ptr","","",12,null],[3,"itimerval","","",null,null],[12,"it_interval","","",13,null],[12,"it_value","","",13,null],[3,"tms","","",null,null],[12,"tms_utime","","",14,null],[12,"tms_stime","","",14,null],[12,"tms_cutime","","",14,null],[12,"tms_cstime","","",14,null],[3,"servent","","",null,null],[12,"s_name","","",15,null],[12,"s_aliases","","",15,null],[12,"s_port","","",15,null],[12,"s_proto","","",15,null],[3,"protoent","","",null,null],[12,"p_name","","",16,null],[12,"p_aliases","","",16,null],[12,"p_proto","","",16,null],[3,"in_addr","","",null,null],[12,"s_addr","","",17,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",18,null],[12,"imr_interface","","",18,null],[3,"ip_mreq_source","","",null,null],[12,"imr_multiaddr","","",19,null],[12,"imr_interface","","",19,null],[12,"imr_sourceaddr","","",19,null],[3,"sockaddr","","",null,null],[12,"sa_family","","",20,null],[12,"sa_data","","",20,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",21,null],[12,"sin_port","","",21,null],[12,"sin_addr","","",21,null],[12,"sin_zero","","",21,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",22,null],[12,"sin6_port","","",22,null],[12,"sin6_flowinfo","","",22,null],[12,"sin6_addr","","",22,null],[12,"sin6_scope_id","","",22,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",23,null],[12,"ai_family","","",23,null],[12,"ai_socktype","","",23,null],[12,"ai_protocol","","",23,null],[12,"ai_addrlen","","",23,null],[12,"ai_addr","","",23,null],[12,"ai_canonname","","",23,null],[12,"ai_next","","",23,null],[3,"sockaddr_ll","","",null,null],[12,"sll_family","","",24,null],[12,"sll_protocol","","",24,null],[12,"sll_ifindex","","",24,null],[12,"sll_hatype","","",24,null],[12,"sll_pkttype","","",24,null],[12,"sll_halen","","",24,null],[12,"sll_addr","","",24,null],[3,"fd_set","","",null,null],[3,"tm","","",null,null],[12,"tm_sec","","",25,null],[12,"tm_min","","",25,null],[12,"tm_hour","","",25,null],[12,"tm_mday","","",25,null],[12,"tm_mon","","",25,null],[12,"tm_year","","",25,null],[12,"tm_wday","","",25,null],[12,"tm_yday","","",25,null],[12,"tm_isdst","","",25,null],[12,"tm_gmtoff","","",25,null],[12,"tm_zone","","",25,null],[3,"sched_param","","",null,null],[12,"sched_priority","","",26,null],[3,"Dl_info","","",null,null],[12,"dli_fname","","",27,null],[12,"dli_fbase","","",27,null],[12,"dli_sname","","",27,null],[12,"dli_saddr","","",27,null],[3,"lconv","","",null,null],[12,"decimal_point","","",28,null],[12,"thousands_sep","","",28,null],[12,"grouping","","",28,null],[12,"int_curr_symbol","","",28,null],[12,"currency_symbol","","",28,null],[12,"mon_decimal_point","","",28,null],[12,"mon_thousands_sep","","",28,null],[12,"mon_grouping","","",28,null],[12,"positive_sign","","",28,null],[12,"negative_sign","","",28,null],[12,"int_frac_digits","","",28,null],[12,"frac_digits","","",28,null],[12,"p_cs_precedes","","",28,null],[12,"p_sep_by_space","","",28,null],[12,"n_cs_precedes","","",28,null],[12,"n_sep_by_space","","",28,null],[12,"p_sign_posn","","",28,null],[12,"n_sign_posn","","",28,null],[12,"int_p_cs_precedes","","",28,null],[12,"int_p_sep_by_space","","",28,null],[12,"int_n_cs_precedes","","",28,null],[12,"int_n_sep_by_space","","",28,null],[12,"int_p_sign_posn","","",28,null],[12,"int_n_sign_posn","","",28,null],[3,"in_pktinfo","","",null,null],[12,"ipi_ifindex","","",29,null],[12,"ipi_spec_dst","","",29,null],[12,"ipi_addr","","",29,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",30,null],[12,"ifa_name","","",30,null],[12,"ifa_flags","","",30,null],[12,"ifa_addr","","",30,null],[12,"ifa_netmask","","",30,null],[12,"ifa_ifu","","",30,null],[12,"ifa_data","","",30,null],[3,"in6_rtmsg","","",null,null],[3,"arpreq","","",null,null],[12,"arp_pa","","",31,null],[12,"arp_ha","","",31,null],[12,"arp_flags","","",31,null],[12,"arp_netmask","","",31,null],[12,"arp_dev","","",31,null],[3,"arpreq_old","","",null,null],[12,"arp_pa","","",32,null],[12,"arp_ha","","",32,null],[12,"arp_flags","","",32,null],[12,"arp_netmask","","",32,null],[3,"arphdr","","",null,null],[12,"ar_hrd","","",33,null],[12,"ar_pro","","",33,null],[12,"ar_hln","","",33,null],[12,"ar_pln","","",33,null],[12,"ar_op","","",33,null],[3,"mmsghdr","","",null,null],[12,"msg_hdr","","",34,null],[12,"msg_len","","",34,null],[3,"epoll_event","","",null,null],[12,"events","","",35,null],[12,"u64","","",35,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",36,null],[12,"sun_path","","",36,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",37,null],[3,"utsname","","",null,null],[12,"sysname","","",38,null],[12,"nodename","","",38,null],[12,"release","","",38,null],[12,"version","","",38,null],[12,"machine","","",38,null],[12,"domainname","","",38,null],[3,"sigevent","","",null,null],[12,"sigev_value","","",39,null],[12,"sigev_signo","","",39,null],[12,"sigev_notify","","",39,null],[12,"sigev_notify_thread_id","","",39,null],[3,"rlimit64","","",null,null],[12,"rlim_cur","","",40,null],[12,"rlim_max","","",40,null],[3,"glob_t","","",null,null],[12,"gl_pathc","","",41,null],[12,"gl_pathv","","",41,null],[12,"gl_offs","","",41,null],[12,"gl_flags","","",41,null],[3,"passwd","","",null,null],[12,"pw_name","","",42,null],[12,"pw_passwd","","",42,null],[12,"pw_uid","","",42,null],[12,"pw_gid","","",42,null],[12,"pw_gecos","","",42,null],[12,"pw_dir","","",42,null],[12,"pw_shell","","",42,null],[3,"spwd","","",null,null],[12,"sp_namp","","",43,null],[12,"sp_pwdp","","",43,null],[12,"sp_lstchg","","",43,null],[12,"sp_min","","",43,null],[12,"sp_max","","",43,null],[12,"sp_warn","","",43,null],[12,"sp_inact","","",43,null],[12,"sp_expire","","",43,null],[12,"sp_flag","","",43,null],[3,"dqblk","","",null,null],[12,"dqb_bhardlimit","","",44,null],[12,"dqb_bsoftlimit","","",44,null],[12,"dqb_curspace","","",44,null],[12,"dqb_ihardlimit","","",44,null],[12,"dqb_isoftlimit","","",44,null],[12,"dqb_curinodes","","",44,null],[12,"dqb_btime","","",44,null],[12,"dqb_itime","","",44,null],[12,"dqb_valid","","",44,null],[3,"signalfd_siginfo","","",null,null],[12,"ssi_signo","","",45,null],[12,"ssi_errno","","",45,null],[12,"ssi_code","","",45,null],[12,"ssi_pid","","",45,null],[12,"ssi_uid","","",45,null],[12,"ssi_fd","","",45,null],[12,"ssi_tid","","",45,null],[12,"ssi_band","","",45,null],[12,"ssi_overrun","","",45,null],[12,"ssi_trapno","","",45,null],[12,"ssi_status","","",45,null],[12,"ssi_int","","",45,null],[12,"ssi_ptr","","",45,null],[12,"ssi_utime","","",45,null],[12,"ssi_stime","","",45,null],[12,"ssi_addr","","",45,null],[12,"ssi_addr_lsb","","",45,null],[12,"ssi_syscall","","",45,null],[12,"ssi_call_addr","","",45,null],[12,"ssi_arch","","",45,null],[3,"itimerspec","","",null,null],[12,"it_interval","","",46,null],[12,"it_value","","",46,null],[3,"fsid_t","","",null,null],[3,"packet_mreq","","",null,null],[12,"mr_ifindex","","",47,null],[12,"mr_type","","",47,null],[12,"mr_alen","","",47,null],[12,"mr_address","","",47,null],[3,"cpu_set_t","","",null,null],[3,"if_nameindex","","",null,null],[12,"if_index","","",48,null],[12,"if_name","","",48,null],[3,"msginfo","","",null,null],[12,"msgpool","","",49,null],[12,"msgmap","","",49,null],[12,"msgmax","","",49,null],[12,"msgmnb","","",49,null],[12,"msgmni","","",49,null],[12,"msgssz","","",49,null],[12,"msgtql","","",49,null],[12,"msgseg","","",49,null],[3,"sembuf","","",null,null],[12,"sem_num","","",50,null],[12,"sem_op","","",50,null],[12,"sem_flg","","",50,null],[3,"input_event","","",null,null],[12,"time","","",51,null],[12,"type_","","",51,null],[12,"code","","",51,null],[12,"value","","",51,null],[3,"input_id","","",null,null],[12,"bustype","","",52,null],[12,"vendor","","",52,null],[12,"product","","",52,null],[12,"version","","",52,null],[3,"input_absinfo","","",null,null],[12,"value","","",53,null],[12,"minimum","","",53,null],[12,"maximum","","",53,null],[12,"fuzz","","",53,null],[12,"flat","","",53,null],[12,"resolution","","",53,null],[3,"input_keymap_entry","","",null,null],[12,"flags","","",54,null],[12,"len","","",54,null],[12,"index","","",54,null],[12,"keycode","","",54,null],[12,"scancode","","",54,null],[3,"input_mask","","",null,null],[12,"type_","","",55,null],[12,"codes_size","","",55,null],[12,"codes_ptr","","",55,null],[3,"ff_replay","","",null,null],[12,"length","","",56,null],[12,"delay","","",56,null],[3,"ff_trigger","","",null,null],[12,"button","","",57,null],[12,"interval","","",57,null],[3,"ff_envelope","","",null,null],[12,"attack_length","","",58,null],[12,"attack_level","","",58,null],[12,"fade_length","","",58,null],[12,"fade_level","","",58,null],[3,"ff_constant_effect","","",null,null],[12,"level","","",59,null],[12,"envelope","","",59,null],[3,"ff_ramp_effect","","",null,null],[12,"start_level","","",60,null],[12,"end_level","","",60,null],[12,"envelope","","",60,null],[3,"ff_condition_effect","","",null,null],[12,"right_saturation","","",61,null],[12,"left_saturation","","",61,null],[12,"right_coeff","","",61,null],[12,"left_coeff","","",61,null],[12,"deadband","","",61,null],[12,"center","","",61,null],[3,"ff_periodic_effect","","",null,null],[12,"waveform","","",62,null],[12,"period","","",62,null],[12,"magnitude","","",62,null],[12,"offset","","",62,null],[12,"phase","","",62,null],[12,"envelope","","",62,null],[12,"custom_len","","",62,null],[12,"custom_data","","",62,null],[3,"ff_rumble_effect","","",null,null],[12,"strong_magnitude","","",63,null],[12,"weak_magnitude","","",63,null],[3,"ff_effect","","",null,null],[12,"type_","","",64,null],[12,"id","","",64,null],[12,"direction","","",64,null],[12,"trigger","","",64,null],[12,"replay","","",64,null],[12,"u","","",64,null],[3,"dl_phdr_info","","",null,null],[12,"dlpi_addr","","",65,null],[12,"dlpi_name","","",65,null],[12,"dlpi_phdr","","",65,null],[12,"dlpi_phnum","","",65,null],[12,"dlpi_adds","","",65,null],[12,"dlpi_subs","","",65,null],[12,"dlpi_tls_modid","","",65,null],[12,"dlpi_tls_data","","",65,null],[3,"Elf32_Ehdr","","",null,null],[12,"e_ident","","",66,null],[12,"e_type","","",66,null],[12,"e_machine","","",66,null],[12,"e_version","","",66,null],[12,"e_entry","","",66,null],[12,"e_phoff","","",66,null],[12,"e_shoff","","",66,null],[12,"e_flags","","",66,null],[12,"e_ehsize","","",66,null],[12,"e_phentsize","","",66,null],[12,"e_phnum","","",66,null],[12,"e_shentsize","","",66,null],[12,"e_shnum","","",66,null],[12,"e_shstrndx","","",66,null],[3,"Elf64_Ehdr","","",null,null],[12,"e_ident","","",67,null],[12,"e_type","","",67,null],[12,"e_machine","","",67,null],[12,"e_version","","",67,null],[12,"e_entry","","",67,null],[12,"e_phoff","","",67,null],[12,"e_shoff","","",67,null],[12,"e_flags","","",67,null],[12,"e_ehsize","","",67,null],[12,"e_phentsize","","",67,null],[12,"e_phnum","","",67,null],[12,"e_shentsize","","",67,null],[12,"e_shnum","","",67,null],[12,"e_shstrndx","","",67,null],[3,"Elf32_Sym","","",null,null],[12,"st_name","","",68,null],[12,"st_value","","",68,null],[12,"st_size","","",68,null],[12,"st_info","","",68,null],[12,"st_other","","",68,null],[12,"st_shndx","","",68,null],[3,"Elf64_Sym","","",null,null],[12,"st_name","","",69,null],[12,"st_info","","",69,null],[12,"st_other","","",69,null],[12,"st_shndx","","",69,null],[12,"st_value","","",69,null],[12,"st_size","","",69,null],[3,"Elf32_Phdr","","",null,null],[12,"p_type","","",70,null],[12,"p_offset","","",70,null],[12,"p_vaddr","","",70,null],[12,"p_paddr","","",70,null],[12,"p_filesz","","",70,null],[12,"p_memsz","","",70,null],[12,"p_flags","","",70,null],[12,"p_align","","",70,null],[3,"Elf64_Phdr","","",null,null],[12,"p_type","","",71,null],[12,"p_flags","","",71,null],[12,"p_offset","","",71,null],[12,"p_vaddr","","",71,null],[12,"p_paddr","","",71,null],[12,"p_filesz","","",71,null],[12,"p_memsz","","",71,null],[12,"p_align","","",71,null],[3,"Elf32_Shdr","","",null,null],[12,"sh_name","","",72,null],[12,"sh_type","","",72,null],[12,"sh_flags","","",72,null],[12,"sh_addr","","",72,null],[12,"sh_offset","","",72,null],[12,"sh_size","","",72,null],[12,"sh_link","","",72,null],[12,"sh_info","","",72,null],[12,"sh_addralign","","",72,null],[12,"sh_entsize","","",72,null],[3,"Elf64_Shdr","","",null,null],[12,"sh_name","","",73,null],[12,"sh_type","","",73,null],[12,"sh_flags","","",73,null],[12,"sh_addr","","",73,null],[12,"sh_offset","","",73,null],[12,"sh_size","","",73,null],[12,"sh_link","","",73,null],[12,"sh_info","","",73,null],[12,"sh_addralign","","",73,null],[12,"sh_entsize","","",73,null],[3,"Elf32_Chdr","","",null,null],[12,"ch_type","","",74,null],[12,"ch_size","","",74,null],[12,"ch_addralign","","",74,null],[3,"Elf64_Chdr","","",null,null],[12,"ch_type","","",75,null],[12,"ch_reserved","","",75,null],[12,"ch_size","","",75,null],[12,"ch_addralign","","",75,null],[3,"ucred","","",null,null],[12,"pid","","",76,null],[12,"uid","","",76,null],[12,"gid","","",76,null],[3,"mntent","","",null,null],[12,"mnt_fsname","","",77,null],[12,"mnt_dir","","",77,null],[12,"mnt_type","","",77,null],[12,"mnt_opts","","",77,null],[12,"mnt_freq","","",77,null],[12,"mnt_passno","","",77,null],[3,"posix_spawn_file_actions_t","","",null,null],[3,"posix_spawnattr_t","","",null,null],[3,"genlmsghdr","","",null,null],[12,"cmd","","",78,null],[12,"version","","",78,null],[12,"reserved","","",78,null],[3,"in6_pktinfo","","",null,null],[12,"ipi6_addr","","",79,null],[12,"ipi6_ifindex","","",79,null],[3,"arpd_request","","",null,null],[12,"req","","",80,null],[12,"ip","","",80,null],[12,"dev","","",80,null],[12,"stamp","","",80,null],[12,"updated","","",80,null],[12,"ha","","",80,null],[3,"inotify_event","","",null,null],[12,"wd","","",81,null],[12,"mask","","",81,null],[12,"cookie","","",81,null],[12,"len","","",81,null],[3,"fanotify_response","","",null,null],[12,"fd","","",82,null],[12,"response","","",82,null],[3,"sockaddr_vm","","",null,null],[12,"svm_family","","",83,null],[12,"svm_reserved1","","",83,null],[12,"svm_port","","",83,null],[12,"svm_cid","","",83,null],[12,"svm_zero","","",83,null],[3,"regmatch_t","","",null,null],[12,"rm_so","","",84,null],[12,"rm_eo","","",84,null],[3,"sock_extended_err","","",null,null],[12,"ee_errno","","",85,null],[12,"ee_origin","","",85,null],[12,"ee_type","","",85,null],[12,"ee_code","","",85,null],[12,"ee_pad","","",85,null],[12,"ee_info","","",85,null],[12,"ee_data","","",85,null],[3,"sockaddr_nl","","",null,null],[12,"nl_family","","",86,null],[12,"nl_pid","","",86,null],[12,"nl_groups","","",86,null],[3,"dirent","","",null,null],[12,"d_ino","","",87,null],[12,"d_off","","",87,null],[12,"d_reclen","","",87,null],[12,"d_type","","",87,null],[12,"d_name","","",87,null],[3,"dirent64","","",null,null],[12,"d_ino","","",88,null],[12,"d_off","","",88,null],[12,"d_reclen","","",88,null],[12,"d_type","","",88,null],[12,"d_name","","",88,null],[3,"sockaddr_alg","","",null,null],[12,"salg_family","","",89,null],[12,"salg_type","","",89,null],[12,"salg_feat","","",89,null],[12,"salg_mask","","",89,null],[12,"salg_name","","",89,null],[3,"af_alg_iv","","",null,null],[12,"ivlen","","",90,null],[12,"iv","","",90,null],[3,"mq_attr","","",null,null],[12,"mq_flags","","",91,null],[12,"mq_maxmsg","","",91,null],[12,"mq_msgsize","","",91,null],[12,"mq_curmsgs","","",91,null],[3,"statx","","",null,null],[12,"stx_mask","","",92,null],[12,"stx_blksize","","",92,null],[12,"stx_attributes","","",92,null],[12,"stx_nlink","","",92,null],[12,"stx_uid","","",92,null],[12,"stx_gid","","",92,null],[12,"stx_mode","","",92,null],[12,"__statx_pad1","","",92,null],[12,"stx_ino","","",92,null],[12,"stx_size","","",92,null],[12,"stx_blocks","","",92,null],[12,"stx_attributes_mask","","",92,null],[12,"stx_atime","","",92,null],[12,"stx_btime","","",92,null],[12,"stx_ctime","","",92,null],[12,"stx_mtime","","",92,null],[12,"stx_rdev_major","","",92,null],[12,"stx_rdev_minor","","",92,null],[12,"stx_dev_major","","",92,null],[12,"stx_dev_minor","","",92,null],[12,"__statx_pad2","","",92,null],[3,"statx_timestamp","","",null,null],[12,"tv_sec","","",93,null],[12,"tv_nsec","","",93,null],[12,"__statx_timestamp_pad1","","",93,null],[3,"aiocb","","",null,null],[12,"aio_fildes","","",94,null],[12,"aio_lio_opcode","","",94,null],[12,"aio_reqprio","","",94,null],[12,"aio_buf","","",94,null],[12,"aio_nbytes","","",94,null],[12,"aio_sigevent","","",94,null],[12,"aio_offset","","",94,null],[3,"__exit_status","","",null,null],[12,"e_termination","","",95,null],[12,"e_exit","","",95,null],[3,"__timeval","","",null,null],[12,"tv_sec","","",96,null],[12,"tv_usec","","",96,null],[3,"glob64_t","","",null,null],[12,"gl_pathc","","",97,null],[12,"gl_pathv","","",97,null],[12,"gl_offs","","",97,null],[12,"gl_flags","","",97,null],[3,"msghdr","","",null,null],[12,"msg_name","","",98,null],[12,"msg_namelen","","",98,null],[12,"msg_iov","","",98,null],[12,"msg_iovlen","","",98,null],[12,"msg_control","","",98,null],[12,"msg_controllen","","",98,null],[12,"msg_flags","","",98,null],[3,"cmsghdr","","",null,null],[12,"cmsg_len","","",99,null],[12,"cmsg_level","","",99,null],[12,"cmsg_type","","",99,null],[3,"termios","","",null,null],[12,"c_iflag","","",100,null],[12,"c_oflag","","",100,null],[12,"c_cflag","","",100,null],[12,"c_lflag","","",100,null],[12,"c_line","","",100,null],[12,"c_cc","","",100,null],[12,"c_ispeed","","",100,null],[12,"c_ospeed","","",100,null],[3,"mallinfo","","",null,null],[12,"arena","","",101,null],[12,"ordblks","","",101,null],[12,"smblks","","",101,null],[12,"hblks","","",101,null],[12,"hblkhd","","",101,null],[12,"usmblks","","",101,null],[12,"fsmblks","","",101,null],[12,"uordblks","","",101,null],[12,"fordblks","","",101,null],[12,"keepcost","","",101,null],[3,"nlmsghdr","","",null,null],[12,"nlmsg_len","","",102,null],[12,"nlmsg_type","","",102,null],[12,"nlmsg_flags","","",102,null],[12,"nlmsg_seq","","",102,null],[12,"nlmsg_pid","","",102,null],[3,"nlmsgerr","","",null,null],[12,"error","","",103,null],[12,"msg","","",103,null],[3,"nl_pktinfo","","",null,null],[12,"group","","",104,null],[3,"nl_mmap_req","","",null,null],[12,"nm_block_size","","",105,null],[12,"nm_block_nr","","",105,null],[12,"nm_frame_size","","",105,null],[12,"nm_frame_nr","","",105,null],[3,"nl_mmap_hdr","","",null,null],[12,"nm_status","","",106,null],[12,"nm_len","","",106,null],[12,"nm_group","","",106,null],[12,"nm_pid","","",106,null],[12,"nm_uid","","",106,null],[12,"nm_gid","","",106,null],[3,"nlattr","","",null,null],[12,"nla_len","","",107,null],[12,"nla_type","","",107,null],[3,"rtentry","","",null,null],[12,"rt_pad1","","",108,null],[12,"rt_dst","","",108,null],[12,"rt_gateway","","",108,null],[12,"rt_genmask","","",108,null],[12,"rt_flags","","",108,null],[12,"rt_pad2","","",108,null],[12,"rt_pad3","","",108,null],[12,"rt_tos","","",108,null],[12,"rt_class","","",108,null],[12,"rt_pad4","","",108,null],[12,"rt_metric","","",108,null],[12,"rt_dev","","",108,null],[12,"rt_mtu","","",108,null],[12,"rt_window","","",108,null],[12,"rt_irtt","","",108,null],[3,"timex","","",null,null],[12,"modes","","",109,null],[12,"offset","","",109,null],[12,"freq","","",109,null],[12,"maxerror","","",109,null],[12,"esterror","","",109,null],[12,"status","","",109,null],[12,"constant","","",109,null],[12,"precision","","",109,null],[12,"tolerance","","",109,null],[12,"time","","",109,null],[12,"tick","","",109,null],[12,"ppsfreq","","",109,null],[12,"jitter","","",109,null],[12,"shift","","",109,null],[12,"stabil","","",109,null],[12,"jitcnt","","",109,null],[12,"calcnt","","",109,null],[12,"errcnt","","",109,null],[12,"stbcnt","","",109,null],[12,"tai","","",109,null],[12,"__unused1","","",109,null],[12,"__unused2","","",109,null],[12,"__unused3","","",109,null],[12,"__unused4","","",109,null],[12,"__unused5","","",109,null],[12,"__unused6","","",109,null],[12,"__unused7","","",109,null],[12,"__unused8","","",109,null],[12,"__unused9","","",109,null],[12,"__unused10","","",109,null],[12,"__unused11","","",109,null],[3,"ntptimeval","","",null,null],[12,"time","","",110,null],[12,"maxerror","","",110,null],[12,"esterror","","",110,null],[12,"tai","","",110,null],[12,"__glibc_reserved1","","",110,null],[12,"__glibc_reserved2","","",110,null],[12,"__glibc_reserved3","","",110,null],[12,"__glibc_reserved4","","",110,null],[3,"regex_t","","",null,null],[3,"utmpx","","",null,null],[12,"ut_type","","",111,null],[12,"ut_pid","","",111,null],[12,"ut_line","","",111,null],[12,"ut_id","","",111,null],[12,"ut_user","","",111,null],[12,"ut_host","","",111,null],[12,"ut_exit","","",111,null],[12,"ut_session","","",111,null],[12,"ut_tv","","",111,null],[12,"ut_addr_v6","","",111,null],[3,"sigset_t","","",null,null],[3,"sysinfo","","",null,null],[12,"uptime","","",112,null],[12,"loads","","",112,null],[12,"totalram","","",112,null],[12,"freeram","","",112,null],[12,"sharedram","","",112,null],[12,"bufferram","","",112,null],[12,"totalswap","","",112,null],[12,"freeswap","","",112,null],[12,"procs","","",112,null],[12,"pad","","",112,null],[12,"totalhigh","","",112,null],[12,"freehigh","","",112,null],[12,"mem_unit","","",112,null],[12,"_f","","",112,null],[3,"msqid_ds","","",null,null],[12,"msg_perm","","",113,null],[12,"msg_stime","","",113,null],[12,"msg_rtime","","",113,null],[12,"msg_ctime","","",113,null],[12,"msg_qnum","","",113,null],[12,"msg_qbytes","","",113,null],[12,"msg_lspid","","",113,null],[12,"msg_lrpid","","",113,null],[3,"sigaction","","",null,null],[12,"sa_sigaction","","",114,null],[12,"sa_mask","","",114,null],[12,"sa_flags","","",114,null],[12,"sa_restorer","","",114,null],[3,"statfs","","",null,null],[12,"f_type","","",115,null],[12,"f_bsize","","",115,null],[12,"f_blocks","","",115,null],[12,"f_bfree","","",115,null],[12,"f_bavail","","",115,null],[12,"f_files","","",115,null],[12,"f_ffree","","",115,null],[12,"f_fsid","","",115,null],[12,"f_namelen","","",115,null],[12,"f_frsize","","",115,null],[3,"flock","","",null,null],[12,"l_type","","",116,null],[12,"l_whence","","",116,null],[12,"l_start","","",116,null],[12,"l_len","","",116,null],[12,"l_pid","","",116,null],[3,"flock64","","",null,null],[12,"l_type","","",117,null],[12,"l_whence","","",117,null],[12,"l_start","","",117,null],[12,"l_len","","",117,null],[12,"l_pid","","",117,null],[3,"siginfo_t","","",null,null],[12,"si_signo","","",118,null],[12,"si_errno","","",118,null],[12,"si_code","","",118,null],[3,"stack_t","","",null,null],[12,"ss_sp","","",119,null],[12,"ss_flags","","",119,null],[12,"ss_size","","",119,null],[3,"stat","","",null,null],[12,"st_dev","","",120,null],[12,"st_ino","","",120,null],[12,"st_nlink","","",120,null],[12,"st_mode","","",120,null],[12,"st_uid","","",120,null],[12,"st_gid","","",120,null],[12,"st_rdev","","",120,null],[12,"st_size","","",120,null],[12,"st_blksize","","",120,null],[12,"st_blocks","","",120,null],[12,"st_atime","","",120,null],[12,"st_atime_nsec","","",120,null],[12,"st_mtime","","",120,null],[12,"st_mtime_nsec","","",120,null],[12,"st_ctime","","",120,null],[12,"st_ctime_nsec","","",120,null],[3,"stat64","","",null,null],[12,"st_dev","","",121,null],[12,"st_ino","","",121,null],[12,"st_nlink","","",121,null],[12,"st_mode","","",121,null],[12,"st_uid","","",121,null],[12,"st_gid","","",121,null],[12,"st_rdev","","",121,null],[12,"st_size","","",121,null],[12,"st_blksize","","",121,null],[12,"st_blocks","","",121,null],[12,"st_atime","","",121,null],[12,"st_atime_nsec","","",121,null],[12,"st_mtime","","",121,null],[12,"st_mtime_nsec","","",121,null],[12,"st_ctime","","",121,null],[12,"st_ctime_nsec","","",121,null],[3,"statfs64","","",null,null],[12,"f_type","","",122,null],[12,"f_bsize","","",122,null],[12,"f_blocks","","",122,null],[12,"f_bfree","","",122,null],[12,"f_bavail","","",122,null],[12,"f_files","","",122,null],[12,"f_ffree","","",122,null],[12,"f_fsid","","",122,null],[12,"f_namelen","","",122,null],[12,"f_frsize","","",122,null],[12,"f_flags","","",122,null],[12,"f_spare","","",122,null],[3,"statvfs64","","",null,null],[12,"f_bsize","","",123,null],[12,"f_frsize","","",123,null],[12,"f_blocks","","",123,null],[12,"f_bfree","","",123,null],[12,"f_bavail","","",123,null],[12,"f_files","","",123,null],[12,"f_ffree","","",123,null],[12,"f_favail","","",123,null],[12,"f_fsid","","",123,null],[12,"f_flag","","",123,null],[12,"f_namemax","","",123,null],[3,"pthread_attr_t","","",null,null],[3,"_libc_fpxreg","","",null,null],[12,"significand","","",124,null],[12,"exponent","","",124,null],[3,"_libc_xmmreg","","",null,null],[12,"element","","",125,null],[3,"_libc_fpstate","","",null,null],[12,"cwd","","",126,null],[12,"swd","","",126,null],[12,"ftw","","",126,null],[12,"fop","","",126,null],[12,"rip","","",126,null],[12,"rdp","","",126,null],[12,"mxcsr","","",126,null],[12,"mxcr_mask","","",126,null],[12,"_st","","",126,null],[12,"_xmm","","",126,null],[3,"user_regs_struct","","",null,null],[12,"r15","","",127,null],[12,"r14","","",127,null],[12,"r13","","",127,null],[12,"r12","","",127,null],[12,"rbp","","",127,null],[12,"rbx","","",127,null],[12,"r11","","",127,null],[12,"r10","","",127,null],[12,"r9","","",127,null],[12,"r8","","",127,null],[12,"rax","","",127,null],[12,"rcx","","",127,null],[12,"rdx","","",127,null],[12,"rsi","","",127,null],[12,"rdi","","",127,null],[12,"orig_rax","","",127,null],[12,"rip","","",127,null],[12,"cs","","",127,null],[12,"eflags","","",127,null],[12,"rsp","","",127,null],[12,"ss","","",127,null],[12,"fs_base","","",127,null],[12,"gs_base","","",127,null],[12,"ds","","",127,null],[12,"es","","",127,null],[12,"fs","","",127,null],[12,"gs","","",127,null],[3,"user","","",null,null],[12,"regs","","",128,null],[12,"u_fpvalid","","",128,null],[12,"i387","","",128,null],[12,"u_tsize","","",128,null],[12,"u_dsize","","",128,null],[12,"u_ssize","","",128,null],[12,"start_code","","",128,null],[12,"start_stack","","",128,null],[12,"signal","","",128,null],[12,"u_ar0","","",128,null],[12,"u_fpstate","","",128,null],[12,"magic","","",128,null],[12,"u_comm","","",128,null],[12,"u_debugreg","","",128,null],[3,"mcontext_t","","",null,null],[12,"gregs","","",129,null],[12,"fpregs","","",129,null],[3,"ipc_perm","","",null,null],[12,"__key","","",130,null],[12,"uid","","",130,null],[12,"gid","","",130,null],[12,"cuid","","",130,null],[12,"cgid","","",130,null],[12,"mode","","",130,null],[12,"__seq","","",130,null],[3,"shmid_ds","","",null,null],[12,"shm_perm","","",131,null],[12,"shm_segsz","","",131,null],[12,"shm_atime","","",131,null],[12,"shm_dtime","","",131,null],[12,"shm_ctime","","",131,null],[12,"shm_cpid","","",131,null],[12,"shm_lpid","","",131,null],[12,"shm_nattch","","",131,null],[3,"termios2","","",null,null],[12,"c_iflag","","",132,null],[12,"c_oflag","","",132,null],[12,"c_cflag","","",132,null],[12,"c_lflag","","",132,null],[12,"c_line","","",132,null],[12,"c_cc","","",132,null],[12,"c_ispeed","","",132,null],[12,"c_ospeed","","",132,null],[3,"ip_mreqn","","",null,null],[12,"imr_multiaddr","","",133,null],[12,"imr_address","","",133,null],[12,"imr_ifindex","","",133,null],[3,"user_fpregs_struct","","",null,null],[12,"cwd","","",134,null],[12,"swd","","",134,null],[12,"ftw","","",134,null],[12,"fop","","",134,null],[12,"rip","","",134,null],[12,"rdp","","",134,null],[12,"mxcsr","","",134,null],[12,"mxcr_mask","","",134,null],[12,"st_space","","",134,null],[12,"xmm_space","","",134,null],[3,"ucontext_t","","",null,null],[12,"uc_flags","","",135,null],[12,"uc_link","","",135,null],[12,"uc_stack","","",135,null],[12,"uc_mcontext","","",135,null],[12,"uc_sigmask","","",135,null],[3,"statvfs","","",null,null],[12,"f_bsize","","",136,null],[12,"f_frsize","","",136,null],[12,"f_blocks","","",136,null],[12,"f_bfree","","",136,null],[12,"f_bavail","","",136,null],[12,"f_files","","",136,null],[12,"f_ffree","","",136,null],[12,"f_favail","","",136,null],[12,"f_fsid","","",136,null],[12,"f_flag","","",136,null],[12,"f_namemax","","",136,null],[3,"max_align_t","","",null,null],[3,"sem_t","","",null,null],[3,"pthread_mutexattr_t","","",null,null],[3,"pthread_rwlockattr_t","","",null,null],[3,"pthread_condattr_t","","",null,null],[3,"fanotify_event_metadata","","",null,null],[12,"event_len","","",137,null],[12,"vers","","",137,null],[12,"reserved","","",137,null],[12,"metadata_len","","",137,null],[12,"mask","","",137,null],[12,"fd","","",137,null],[12,"pid","","",137,null],[3,"pthread_cond_t","","",null,null],[3,"pthread_mutex_t","","",null,null],[3,"pthread_rwlock_t","","",null,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",138,null],[4,"DIR","","",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[4,"timezone","","",null,null],[4,"fpos64_t","","",null,null],[5,"CMSG_FIRSTHDR","","",null,[[]]],[5,"CMSG_DATA","","",null,[[]]],[5,"CMSG_SPACE","","",null,[[["c_uint",6]],["c_uint",6]]],[5,"CMSG_LEN","","",null,[[["c_uint",6]],["c_uint",6]]],[5,"FD_CLR","","",null,[[["c_int",6]]]],[5,"FD_ISSET","","",null,[[["c_int",6]]]],[5,"FD_SET","","",null,[[["c_int",6]]]],[5,"FD_ZERO","","",null,[[]]],[5,"WIFSTOPPED","","",null,[[["c_int",6]]]],[5,"WSTOPSIG","","",null,[[["c_int",6]],["c_int",6]]],[5,"WIFCONTINUED","","",null,[[["c_int",6]]]],[5,"WIFSIGNALED","","",null,[[["c_int",6]]]],[5,"WTERMSIG","","",null,[[["c_int",6]],["c_int",6]]],[5,"WIFEXITED","","",null,[[["c_int",6]]]],[5,"WEXITSTATUS","","",null,[[["c_int",6]],["c_int",6]]],[5,"WCOREDUMP","","",null,[[["c_int",6]]]],[5,"W_EXITCODE","","",null,[[["c_int",6]],["c_int",6]]],[5,"W_STOPCODE","","",null,[[["c_int",6]],["c_int",6]]],[5,"QCMD","","",null,[[["c_int",6]],["c_int",6]]],[5,"IPOPT_COPIED","","",null,[[]]],[5,"IPOPT_CLASS","","",null,[[]]],[5,"IPOPT_NUMBER","","",null,[[]]],[5,"IPTOS_ECN","","",null,[[]]],[5,"NLA_ALIGN","","",null,[[["c_int",6]],["c_int",6]]],[5,"CMSG_NXTHDR","","",null,[[]]],[5,"CPU_ALLOC_SIZE","","",null,[[["c_int",6]],["size_t",6]]],[5,"CPU_ZERO","","",null,[[["cpu_set_t",3]]]],[5,"CPU_SET","","",null,[[["cpu_set_t",3]]]],[5,"CPU_CLR","","",null,[[["cpu_set_t",3]]]],[5,"CPU_ISSET","","",null,[[["cpu_set_t",3]]]],[5,"CPU_COUNT_S","","",null,[[["cpu_set_t",3]],["c_int",6]]],[5,"CPU_COUNT","","",null,[[["cpu_set_t",3]],["c_int",6]]],[5,"CPU_EQUAL","","",null,[[["cpu_set_t",3]]]],[5,"major","","",null,[[["dev_t",6]],["c_uint",6]]],[5,"minor","","",null,[[["dev_t",6]],["c_uint",6]]],[5,"makedev","","",null,[[["c_uint",6]],["dev_t",6]]],[5,"IPTOS_TOS","","",null,[[]]],[5,"IPTOS_PREC","","",null,[[]]],[5,"RT_TOS","","",null,[[]]],[5,"RT_ADDRCLASS","","",null,[[]]],[5,"RT_LOCALADDR","","",null,[[]]],[5,"SO_EE_OFFENDER","","",null,[[]]],[5,"isalnum","","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"isblank","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[5,"qsort","","",null,null],[5,"bsearch","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fmemopen","","",null,null],[5,"open_memstream","","",null,null],[5,"open_wmemstream","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"getchar","","",null,null],[5,"putchar","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"abort","","",null,null],[5,"exit","","",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strdup","","",null,null],[5,"strndup","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strcasecmp","","",null,null],[5,"strncasecmp","","",null,null],[5,"strlen","","",null,null],[5,"strnlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"strsignal","","",null,null],[5,"wcslen","","",null,null],[5,"wcstombs","","",null,null],[5,"memchr","","",null,null],[5,"wmemchr","","",null,null],[5,"memcmp","","",null,null],[5,"memcpy","","",null,null],[5,"memmove","","",null,null],[5,"memset","","",null,null],[5,"getpwnam","","",null,null],[5,"getpwuid","","",null,null],[5,"fprintf","","",null,null],[5,"printf","","",null,null],[5,"snprintf","","",null,null],[5,"sprintf","","",null,null],[5,"fscanf","","",null,null],[5,"scanf","","",null,null],[5,"sscanf","","",null,null],[5,"getchar_unlocked","","",null,null],[5,"putchar_unlocked","","",null,null],[5,"socket","","",null,null],[5,"connect","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"socketpair","","",null,null],[5,"sendto","","",null,null],[5,"shutdown","","",null,null],[5,"chmod","","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"stat","","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[5,"open","","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[5,"opendir","","",null,null],[5,"readdir","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"fchmodat","","",null,null],[5,"fchown","","",null,null],[5,"fchownat","","",null,null],[5,"fstatat","","",null,null],[5,"linkat","","",null,null],[5,"renameat","","",null,null],[5,"symlinkat","","",null,null],[5,"unlinkat","","",null,null],[5,"access","","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"fchdir","","",null,null],[5,"chown","","",null,null],[5,"lchown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execl","","",null,null],[5,"execle","","",null,null],[5,"execlp","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgid","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pipe","","",null,null],[5,"posix_memalign","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"seteuid","","",null,null],[5,"setegid","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"nanosleep","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"tcsetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"ttyname_r","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"umask","","",null,null],[5,"utime","","",null,null],[5,"kill","","",null,null],[5,"killpg","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[5,"if_nametoindex","","",null,null],[5,"if_indextoname","","",null,null],[5,"lstat","","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[5,"signal","","",null,null],[5,"getrusage","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[5,"times","","",null,null],[5,"pthread_self","","",null,null],[5,"pthread_join","","",null,null],[5,"pthread_exit","","",null,null],[5,"pthread_attr_init","","",null,null],[5,"pthread_attr_destroy","","",null,null],[5,"pthread_attr_setstacksize","","",null,null],[5,"pthread_attr_setdetachstate","","",null,null],[5,"pthread_detach","","",null,null],[5,"sched_yield","","",null,null],[5,"pthread_key_create","","",null,null],[5,"pthread_key_delete","","",null,null],[5,"pthread_getspecific","","",null,null],[5,"pthread_setspecific","","",null,null],[5,"pthread_mutex_init","","",null,null],[5,"pthread_mutex_destroy","","",null,null],[5,"pthread_mutex_lock","","",null,null],[5,"pthread_mutex_trylock","","",null,null],[5,"pthread_mutex_unlock","","",null,null],[5,"pthread_mutexattr_init","","",null,null],[5,"pthread_mutexattr_destroy","","",null,null],[5,"pthread_mutexattr_settype","","",null,null],[5,"pthread_cond_init","","",null,null],[5,"pthread_cond_wait","","",null,null],[5,"pthread_cond_timedwait","","",null,null],[5,"pthread_cond_signal","","",null,null],[5,"pthread_cond_broadcast","","",null,null],[5,"pthread_cond_destroy","","",null,null],[5,"pthread_condattr_init","","",null,null],[5,"pthread_condattr_destroy","","",null,null],[5,"pthread_rwlock_init","","",null,null],[5,"pthread_rwlock_destroy","","",null,null],[5,"pthread_rwlock_rdlock","","",null,null],[5,"pthread_rwlock_tryrdlock","","",null,null],[5,"pthread_rwlock_wrlock","","",null,null],[5,"pthread_rwlock_trywrlock","","",null,null],[5,"pthread_rwlock_unlock","","",null,null],[5,"pthread_rwlockattr_init","","",null,null],[5,"pthread_rwlockattr_destroy","","",null,null],[5,"getsockopt","","",null,null],[5,"raise","","",null,null],[5,"sigaction","","",null,null],[5,"utimes","","",null,null],[5,"dlopen","","",null,null],[5,"dlerror","","",null,null],[5,"dlsym","","",null,null],[5,"dlclose","","",null,null],[5,"dladdr","","",null,null],[5,"getaddrinfo","","",null,null],[5,"freeaddrinfo","","",null,null],[5,"gai_strerror","","",null,null],[5,"res_init","","",null,null],[5,"gmtime_r","","",null,null],[5,"localtime_r","","",null,null],[5,"mktime","","",null,null],[5,"time","","",null,null],[5,"gmtime","","",null,null],[5,"localtime","","",null,null],[5,"difftime","","",null,null],[5,"mknod","","",null,null],[5,"gethostname","","",null,null],[5,"getservbyname","","",null,null],[5,"getprotobyname","","",null,null],[5,"getprotobynumber","","",null,null],[5,"chroot","","",null,null],[5,"usleep","","",null,null],[5,"send","","",null,null],[5,"recv","","",null,null],[5,"putenv","","",null,null],[5,"poll","","",null,null],[5,"select","","",null,null],[5,"setlocale","","",null,null],[5,"localeconv","","",null,null],[5,"sem_wait","","",null,null],[5,"sem_trywait","","",null,null],[5,"sem_post","","",null,null],[5,"statvfs","","",null,null],[5,"fstatvfs","","",null,null],[5,"readlink","","",null,null],[5,"sigemptyset","","",null,null],[5,"sigaddset","","",null,null],[5,"sigfillset","","",null,null],[5,"sigdelset","","",null,null],[5,"sigismember","","",null,null],[5,"sigprocmask","","",null,null],[5,"sigpending","","",null,null],[5,"timegm","","",null,null],[5,"sysconf","","",null,null],[5,"mkfifo","","",null,null],[5,"pselect","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"tcdrain","","",null,null],[5,"cfgetispeed","","",null,null],[5,"cfgetospeed","","",null,null],[5,"cfsetispeed","","",null,null],[5,"cfsetospeed","","",null,null],[5,"tcgetattr","","",null,null],[5,"tcsetattr","","",null,null],[5,"tcflow","","",null,null],[5,"tcflush","","",null,null],[5,"tcgetsid","","",null,null],[5,"tcsendbreak","","",null,null],[5,"mkstemp","","",null,null],[5,"mkdtemp","","",null,null],[5,"tmpnam","","",null,null],[5,"openlog","","",null,null],[5,"closelog","","",null,null],[5,"setlogmask","","",null,null],[5,"syslog","","",null,null],[5,"nice","","",null,null],[5,"grantpt","","",null,null],[5,"posix_openpt","","",null,null],[5,"ptsname","","",null,null],[5,"unlockpt","","",null,null],[5,"strcasestr","","",null,null],[5,"getline","","",null,null],[5,"lockf","","",null,null],[5,"getsid","","",null,null],[5,"truncate","","",null,null],[5,"pause","","",null,null],[5,"readlinkat","","",null,null],[5,"mkdirat","","",null,null],[5,"openat","","",null,null],[5,"fdopendir","","",null,null],[5,"readdir_r","","The 64-bit libc on Solaris and illumos only has readdir_r.…",null,null],[5,"cfmakeraw","","",null,null],[5,"cfsetspeed","","",null,null],[5,"sem_destroy","","",null,null],[5,"sem_init","","",null,null],[5,"fdatasync","","",null,null],[5,"mincore","","",null,null],[5,"clock_getres","","",null,null],[5,"clock_gettime","","",null,null],[5,"clock_settime","","",null,null],[5,"clock_getcpuclockid","","",null,null],[5,"dirfd","","",null,null],[5,"pthread_getattr_np","","",null,null],[5,"pthread_attr_getstack","","",null,null],[5,"memalign","","",null,null],[5,"setgroups","","",null,null],[5,"pipe2","","",null,null],[5,"statfs","","",null,null],[5,"statfs64","","",null,null],[5,"fstatfs","","",null,null],[5,"fstatfs64","","",null,null],[5,"statvfs64","","",null,null],[5,"fstatvfs64","","",null,null],[5,"memrchr","","",null,null],[5,"posix_fadvise","","",null,null],[5,"posix_fadvise64","","",null,null],[5,"futimens","","",null,null],[5,"utimensat","","",null,null],[5,"duplocale","","",null,null],[5,"freelocale","","",null,null],[5,"newlocale","","",null,null],[5,"uselocale","","",null,null],[5,"creat64","","",null,null],[5,"fstat64","","",null,null],[5,"fstatat64","","",null,null],[5,"ftruncate64","","",null,null],[5,"lseek64","","",null,null],[5,"lstat64","","",null,null],[5,"mmap64","","",null,null],[5,"open64","","",null,null],[5,"openat64","","",null,null],[5,"pread64","","",null,null],[5,"preadv64","","",null,null],[5,"pwrite64","","",null,null],[5,"pwritev64","","",null,null],[5,"readdir64","","",null,null],[5,"readdir64_r","","",null,null],[5,"stat64","","",null,null],[5,"truncate64","","",null,null],[5,"mknodat","","",null,null],[5,"pthread_condattr_getclock","","",null,null],[5,"pthread_condattr_setclock","","",null,null],[5,"pthread_condattr_setpshared","","",null,null],[5,"accept4","","",null,null],[5,"pthread_mutexattr_setpshared","","",null,null],[5,"pthread_rwlockattr_getpshared","","",null,null],[5,"pthread_rwlockattr_setpshared","","",null,null],[5,"ptsname_r","","",null,null],[5,"clearenv","","",null,null],[5,"waitid","","",null,null],[5,"setreuid","","",null,null],[5,"setregid","","",null,null],[5,"getresuid","","",null,null],[5,"getresgid","","",null,null],[5,"acct","","",null,null],[5,"brk","","",null,null],[5,"sbrk","","",null,null],[5,"vfork","","",null,null],[5,"setresgid","","",null,null],[5,"setresuid","","",null,null],[5,"wait4","","",null,null],[5,"openpty","","",null,null],[5,"forkpty","","",null,null],[5,"login_tty","","",null,null],[5,"execvpe","","",null,null],[5,"fexecve","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"bind","","",null,null],[5,"writev","","",null,null],[5,"readv","","",null,null],[5,"sendmsg","","",null,null],[5,"recvmsg","","",null,null],[5,"uname","","",null,null],[5,"strerror_r","","",null,null],[5,"abs","","",null,null],[5,"atof","","",null,null],[5,"labs","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"aio_read","","",null,null],[5,"aio_write","","",null,null],[5,"aio_fsync","","",null,null],[5,"aio_error","","",null,null],[5,"aio_return","","",null,null],[5,"aio_suspend","","",null,null],[5,"aio_cancel","","",null,null],[5,"lio_listio","","",null,null],[5,"lutimes","","",null,null],[5,"setpwent","","",null,null],[5,"endpwent","","",null,null],[5,"getpwent","","",null,null],[5,"setgrent","","",null,null],[5,"endgrent","","",null,null],[5,"getgrent","","",null,null],[5,"setspent","","",null,null],[5,"endspent","","",null,null],[5,"getspent","","",null,null],[5,"getspnam","","",null,null],[5,"getspnam_r","","",null,null],[5,"shm_open","","",null,null],[5,"shmget","","",null,null],[5,"shmat","","",null,null],[5,"shmdt","","",null,null],[5,"shmctl","","",null,null],[5,"ftok","","",null,null],[5,"semget","","",null,null],[5,"semop","","",null,null],[5,"semctl","","",null,null],[5,"msgctl","","",null,null],[5,"msgget","","",null,null],[5,"msgrcv","","",null,null],[5,"msgsnd","","",null,null],[5,"mprotect","","",null,null],[5,"__errno_location","","",null,null],[5,"fopen64","","",null,null],[5,"freopen64","","",null,null],[5,"tmpfile64","","",null,null],[5,"fgetpos64","","",null,null],[5,"fsetpos64","","",null,null],[5,"fseeko64","","",null,null],[5,"ftello64","","",null,null],[5,"fallocate","","",null,null],[5,"fallocate64","","",null,null],[5,"posix_fallocate","","",null,null],[5,"posix_fallocate64","","",null,null],[5,"readahead","","",null,null],[5,"getxattr","","",null,null],[5,"lgetxattr","","",null,null],[5,"fgetxattr","","",null,null],[5,"setxattr","","",null,null],[5,"lsetxattr","","",null,null],[5,"fsetxattr","","",null,null],[5,"listxattr","","",null,null],[5,"llistxattr","","",null,null],[5,"flistxattr","","",null,null],[5,"removexattr","","",null,null],[5,"lremovexattr","","",null,null],[5,"fremovexattr","","",null,null],[5,"signalfd","","",null,null],[5,"timerfd_create","","",null,null],[5,"timerfd_gettime","","",null,null],[5,"timerfd_settime","","",null,null],[5,"pwritev","","",null,null],[5,"preadv","","",null,null],[5,"quotactl","","",null,null],[5,"mq_open","","",null,null],[5,"mq_close","","",null,null],[5,"mq_unlink","","",null,null],[5,"mq_receive","","",null,null],[5,"mq_timedreceive","","",null,null],[5,"mq_send","","",null,null],[5,"mq_timedsend","","",null,null],[5,"mq_getattr","","",null,null],[5,"mq_setattr","","",null,null],[5,"epoll_pwait","","",null,null],[5,"dup3","","",null,null],[5,"mkostemp","","",null,null],[5,"mkostemps","","",null,null],[5,"sigtimedwait","","",null,null],[5,"sigwaitinfo","","",null,null],[5,"nl_langinfo_l","","",null,null],[5,"getnameinfo","","",null,null],[5,"pthread_setschedprio","","",null,null],[5,"getloadavg","","",null,null],[5,"process_vm_readv","","",null,null],[5,"process_vm_writev","","",null,null],[5,"reboot","","",null,null],[5,"setfsgid","","",null,null],[5,"setfsuid","","",null,null],[5,"mkfifoat","","",null,null],[5,"if_nameindex","","",null,null],[5,"if_freenameindex","","",null,null],[5,"sync_file_range","","",null,null],[5,"mremap","","",null,null],[5,"glob","","",null,null],[5,"globfree","","",null,null],[5,"posix_madvise","","",null,null],[5,"shm_unlink","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[5,"madvise","","",null,null],[5,"msync","","",null,null],[5,"remap_file_pages","","",null,null],[5,"recvfrom","","",null,null],[5,"mkstemps","","",null,null],[5,"futimes","","",null,null],[5,"nl_langinfo","","",null,null],[5,"getdomainname","","",null,null],[5,"setdomainname","","",null,null],[5,"vhangup","","",null,null],[5,"sync","","",null,null],[5,"syscall","","",null,null],[5,"sched_getaffinity","","",null,null],[5,"sched_setaffinity","","",null,null],[5,"epoll_create","","",null,null],[5,"epoll_create1","","",null,null],[5,"epoll_wait","","",null,null],[5,"epoll_ctl","","",null,null],[5,"pthread_getschedparam","","",null,null],[5,"unshare","","",null,null],[5,"umount","","",null,null],[5,"sched_get_priority_max","","",null,null],[5,"tee","","",null,null],[5,"settimeofday","","",null,null],[5,"splice","","",null,null],[5,"eventfd","","",null,null],[5,"sched_rr_get_interval","","",null,null],[5,"sem_timedwait","","",null,null],[5,"sem_getvalue","","",null,null],[5,"sched_setparam","","",null,null],[5,"setns","","",null,null],[5,"swapoff","","",null,null],[5,"vmsplice","","",null,null],[5,"mount","","",null,null],[5,"personality","","",null,null],[5,"prctl","","",null,null],[5,"sched_getparam","","",null,null],[5,"ppoll","","",null,null],[5,"pthread_mutex_timedlock","","",null,null],[5,"clone","","",null,null],[5,"sched_getscheduler","","",null,null],[5,"clock_nanosleep","","",null,null],[5,"pthread_attr_getguardsize","","",null,null],[5,"sethostname","","",null,null],[5,"sched_get_priority_min","","",null,null],[5,"pthread_condattr_getpshared","","",null,null],[5,"sysinfo","","",null,null],[5,"umount2","","",null,null],[5,"pthread_setschedparam","","",null,null],[5,"swapon","","",null,null],[5,"sched_setscheduler","","",null,null],[5,"sendfile","","",null,null],[5,"sigsuspend","","",null,null],[5,"getgrgid_r","","",null,null],[5,"sigaltstack","","",null,null],[5,"sem_close","","",null,null],[5,"getdtablesize","","",null,null],[5,"getgrnam_r","","",null,null],[5,"initgroups","","",null,null],[5,"pthread_sigmask","","",null,null],[5,"sem_open","","",null,null],[5,"getgrnam","","",null,null],[5,"pthread_cancel","","",null,null],[5,"pthread_kill","","",null,null],[5,"sem_unlink","","",null,null],[5,"daemon","","",null,null],[5,"getpwnam_r","","",null,null],[5,"getpwuid_r","","",null,null],[5,"sigwait","","",null,null],[5,"pthread_atfork","","",null,null],[5,"getgrgid","","",null,null],[5,"getgrouplist","","",null,null],[5,"pthread_mutexattr_getpshared","","",null,null],[5,"popen","","",null,null],[5,"faccessat","","",null,null],[5,"pthread_create","","",null,null],[5,"dl_iterate_phdr","","",null,null],[5,"setmntent","","",null,null],[5,"getmntent","","",null,null],[5,"addmntent","","",null,null],[5,"endmntent","","",null,null],[5,"hasmntopt","","",null,null],[5,"posix_spawn","","",null,null],[5,"posix_spawnp","","",null,null],[5,"posix_spawnattr_init","","",null,null],[5,"posix_spawnattr_destroy","","",null,null],[5,"posix_spawnattr_getsigdefault","","",null,null],[5,"posix_spawnattr_setsigdefault","","",null,null],[5,"posix_spawnattr_getsigmask","","",null,null],[5,"posix_spawnattr_setsigmask","","",null,null],[5,"posix_spawnattr_getflags","","",null,null],[5,"posix_spawnattr_setflags","","",null,null],[5,"posix_spawnattr_getpgroup","","",null,null],[5,"posix_spawnattr_setpgroup","","",null,null],[5,"posix_spawnattr_getschedpolicy","","",null,null],[5,"posix_spawnattr_setschedpolicy","","",null,null],[5,"posix_spawnattr_getschedparam","","",null,null],[5,"posix_spawnattr_setschedparam","","",null,null],[5,"posix_spawn_file_actions_init","","",null,null],[5,"posix_spawn_file_actions_destroy","","",null,null],[5,"posix_spawn_file_actions_addopen","","",null,null],[5,"posix_spawn_file_actions_addclose","","",null,null],[5,"posix_spawn_file_actions_adddup2","","",null,null],[5,"fread_unlocked","","",null,null],[5,"inotify_rm_watch","","",null,null],[5,"inotify_init","","",null,null],[5,"inotify_init1","","",null,null],[5,"inotify_add_watch","","",null,null],[5,"fanotify_init","","",null,null],[5,"regcomp","","",null,null],[5,"regexec","","",null,null],[5,"regerror","","",null,null],[5,"regfree","","",null,null],[5,"fgetspent_r","","",null,null],[5,"sgetspent_r","","",null,null],[5,"getspent_r","","",null,null],[5,"qsort_r","","",null,null],[5,"sendmmsg","","",null,null],[5,"recvmmsg","","",null,null],[5,"getrlimit64","","",null,null],[5,"setrlimit64","","",null,null],[5,"getrlimit","","",null,null],[5,"setrlimit","","",null,null],[5,"prlimit","","",null,null],[5,"prlimit64","","",null,null],[5,"utmpname","","",null,null],[5,"utmpxname","","",null,null],[5,"getutxent","","",null,null],[5,"getutxid","","",null,null],[5,"getutxline","","",null,null],[5,"pututxline","","",null,null],[5,"setutxent","","",null,null],[5,"endutxent","","",null,null],[5,"getpt","","",null,null],[5,"mallopt","","",null,null],[5,"gettimeofday","","",null,null],[5,"statx","","",null,null],[5,"getrandom","","",null,null],[5,"memmem","","",null,null],[5,"getauxval","","",null,null],[5,"adjtimex","","",null,null],[5,"ntp_adjtime","","",null,null],[5,"ntp_gettime","","",null,null],[5,"copy_file_range","","",null,null],[5,"fanotify_mark","","",null,null],[5,"ioctl","","",null,null],[5,"backtrace","","",null,null],[5,"glob64","","",null,null],[5,"globfree64","","",null,null],[5,"ptrace","","",null,null],[5,"pthread_attr_getaffinity_np","","",null,null],[5,"pthread_attr_setaffinity_np","","",null,null],[5,"getpriority","","",null,null],[5,"setpriority","","",null,null],[5,"pthread_getaffinity_np","","",null,null],[5,"pthread_setaffinity_np","","",null,null],[5,"pthread_rwlockattr_getkind_np","","",null,null],[5,"pthread_rwlockattr_setkind_np","","",null,null],[5,"sched_getcpu","","",null,null],[5,"mallinfo","","",null,null],[5,"malloc_usable_size","","",null,null],[5,"getpwent_r","","",null,null],[5,"getgrent_r","","",null,null],[5,"pthread_getname_np","","",null,null],[5,"pthread_setname_np","","",null,null],[5,"dlmopen","","",null,null],[5,"dlinfo","","",null,null],[5,"getcontext","","",null,null],[5,"setcontext","","",null,null],[5,"makecontext","","",null,null],[5,"swapcontext","","",null,null],[5,"iopl","","",null,null],[5,"ioperm","","",null,null],[5,"sysctl","","",null,null],[11,"si_addr","","",118,[[]]],[11,"si_value","","",118,[[],["sigval",3]]],[11,"si_pid","","",118,[[],["pid_t",6]]],[11,"si_uid","","",118,[[],["uid_t",6]]],[11,"si_status","","",118,[[],["c_int",6]]],[11,"si_utime","","",118,[[],["c_long",6]]],[11,"si_stime","","",118,[[],["c_long",6]]],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"in_addr_t","","",null,null],[6,"in_port_t","","",null,null],[6,"sighandler_t","","",null,null],[6,"cc_t","","",null,null],[6,"locale_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"speed_t","","",null,null],[6,"tcflag_t","","",null,null],[6,"clockid_t","","",null,null],[6,"key_t","","",null,null],[6,"id_t","","",null,null],[6,"useconds_t","","",null,null],[6,"dev_t","","",null,null],[6,"socklen_t","","",null,null],[6,"mode_t","","",null,null],[6,"ino64_t","","",null,null],[6,"off64_t","","",null,null],[6,"blkcnt64_t","","",null,null],[6,"rlim64_t","","",null,null],[6,"mqd_t","","",null,null],[6,"nfds_t","","",null,null],[6,"nl_item","","",null,null],[6,"idtype_t","","",null,null],[6,"loff_t","","",null,null],[6,"pthread_key_t","","",null,null],[6,"__u8","","",null,null],[6,"__u16","","",null,null],[6,"__s16","","",null,null],[6,"__u32","","",null,null],[6,"__s32","","",null,null],[6,"Elf32_Half","","",null,null],[6,"Elf32_Word","","",null,null],[6,"Elf32_Off","","",null,null],[6,"Elf32_Addr","","",null,null],[6,"Elf64_Half","","",null,null],[6,"Elf64_Word","","",null,null],[6,"Elf64_Off","","",null,null],[6,"Elf64_Addr","","",null,null],[6,"Elf64_Xword","","",null,null],[6,"Elf64_Sxword","","",null,null],[6,"Elf32_Section","","",null,null],[6,"Elf64_Section","","",null,null],[6,"pthread_t","","",null,null],[6,"__priority_which_t","","",null,null],[6,"__rlimit_resource_t","","",null,null],[6,"Lmid_t","","",null,null],[6,"regoff_t","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"ino_t","","",null,null],[6,"off_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"shmatt_t","","",null,null],[6,"msgqnum_t","","",null,null],[6,"msglen_t","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[6,"rlim_t","","",null,null],[6,"__fsword_t","","",null,null],[6,"c_char","","",null,null],[6,"wchar_t","","",null,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[6,"greg_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"__u64","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[17,"INT_MIN","","",null,null],[17,"INT_MAX","","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[17,"SIG_ERR","","",null,null],[17,"DT_UNKNOWN","","",null,null],[17,"DT_FIFO","","",null,null],[17,"DT_CHR","","",null,null],[17,"DT_DIR","","",null,null],[17,"DT_BLK","","",null,null],[17,"DT_REG","","",null,null],[17,"DT_LNK","","",null,null],[17,"DT_SOCK","","",null,null],[17,"FD_CLOEXEC","","",null,null],[17,"USRQUOTA","","",null,null],[17,"GRPQUOTA","","",null,null],[17,"SIGIOT","","",null,null],[17,"S_ISUID","","",null,null],[17,"S_ISGID","","",null,null],[17,"S_ISVTX","","",null,null],[17,"IF_NAMESIZE","","",null,null],[17,"IFNAMSIZ","","",null,null],[17,"LOG_EMERG","","",null,null],[17,"LOG_ALERT","","",null,null],[17,"LOG_CRIT","","",null,null],[17,"LOG_ERR","","",null,null],[17,"LOG_WARNING","","",null,null],[17,"LOG_NOTICE","","",null,null],[17,"LOG_INFO","","",null,null],[17,"LOG_DEBUG","","",null,null],[17,"LOG_KERN","","",null,null],[17,"LOG_USER","","",null,null],[17,"LOG_MAIL","","",null,null],[17,"LOG_DAEMON","","",null,null],[17,"LOG_AUTH","","",null,null],[17,"LOG_SYSLOG","","",null,null],[17,"LOG_LPR","","",null,null],[17,"LOG_NEWS","","",null,null],[17,"LOG_UUCP","","",null,null],[17,"LOG_LOCAL0","","",null,null],[17,"LOG_LOCAL1","","",null,null],[17,"LOG_LOCAL2","","",null,null],[17,"LOG_LOCAL3","","",null,null],[17,"LOG_LOCAL4","","",null,null],[17,"LOG_LOCAL5","","",null,null],[17,"LOG_LOCAL6","","",null,null],[17,"LOG_LOCAL7","","",null,null],[17,"LOG_PID","","",null,null],[17,"LOG_CONS","","",null,null],[17,"LOG_ODELAY","","",null,null],[17,"LOG_NDELAY","","",null,null],[17,"LOG_NOWAIT","","",null,null],[17,"LOG_PRIMASK","","",null,null],[17,"LOG_FACMASK","","",null,null],[17,"PRIO_MIN","","",null,null],[17,"PRIO_MAX","","",null,null],[17,"IPPROTO_ICMP","","",null,null],[17,"IPPROTO_ICMPV6","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_UDP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"INADDR_LOOPBACK","","",null,null],[17,"INADDR_ANY","","",null,null],[17,"INADDR_BROADCAST","","",null,null],[17,"INADDR_NONE","","",null,null],[17,"ARPOP_REQUEST","","",null,null],[17,"ARPOP_REPLY","","",null,null],[17,"ATF_COM","","",null,null],[17,"ATF_PERM","","",null,null],[17,"ATF_PUBL","","",null,null],[17,"ATF_USETRAILERS","","",null,null],[17,"EXIT_FAILURE","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"F_DUPFD","","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"F_SETLEASE","","",null,null],[17,"F_GETLEASE","","",null,null],[17,"F_NOTIFY","","",null,null],[17,"F_CANCELLK","","",null,null],[17,"F_DUPFD_CLOEXEC","","",null,null],[17,"F_SETPIPE_SZ","","",null,null],[17,"F_GETPIPE_SZ","","",null,null],[17,"F_ADD_SEALS","","",null,null],[17,"F_GET_SEALS","","",null,null],[17,"F_SEAL_SEAL","","",null,null],[17,"F_SEAL_SHRINK","","",null,null],[17,"F_SEAL_GROW","","",null,null],[17,"F_SEAL_WRITE","","",null,null],[17,"SIGTRAP","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"CLOCK_PROCESS_CPUTIME_ID","","",null,null],[17,"CLOCK_THREAD_CPUTIME_ID","","",null,null],[17,"CLOCK_MONOTONIC_RAW","","",null,null],[17,"CLOCK_REALTIME_COARSE","","",null,null],[17,"CLOCK_MONOTONIC_COARSE","","",null,null],[17,"CLOCK_BOOTTIME","","",null,null],[17,"CLOCK_REALTIME_ALARM","","",null,null],[17,"CLOCK_BOOTTIME_ALARM","","",null,null],[17,"CLOCK_TAI","","",null,null],[17,"TIMER_ABSTIME","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"SOCK_CLOEXEC","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"LC_CTYPE","","",null,null],[17,"LC_NUMERIC","","",null,null],[17,"LC_TIME","","",null,null],[17,"LC_COLLATE","","",null,null],[17,"LC_MONETARY","","",null,null],[17,"LC_MESSAGES","","",null,null],[17,"LC_ALL","","",null,null],[17,"LC_CTYPE_MASK","","",null,null],[17,"LC_NUMERIC_MASK","","",null,null],[17,"LC_TIME_MASK","","",null,null],[17,"LC_COLLATE_MASK","","",null,null],[17,"LC_MONETARY_MASK","","",null,null],[17,"LC_MESSAGES_MASK","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MS_RDONLY","","",null,null],[17,"MS_NOSUID","","",null,null],[17,"MS_NODEV","","",null,null],[17,"MS_NOEXEC","","",null,null],[17,"MS_SYNCHRONOUS","","",null,null],[17,"MS_REMOUNT","","",null,null],[17,"MS_MANDLOCK","","",null,null],[17,"MS_DIRSYNC","","",null,null],[17,"MS_NOATIME","","",null,null],[17,"MS_NODIRATIME","","",null,null],[17,"MS_BIND","","",null,null],[17,"MS_MOVE","","",null,null],[17,"MS_REC","","",null,null],[17,"MS_SILENT","","",null,null],[17,"MS_POSIXACL","","",null,null],[17,"MS_UNBINDABLE","","",null,null],[17,"MS_PRIVATE","","",null,null],[17,"MS_SLAVE","","",null,null],[17,"MS_SHARED","","",null,null],[17,"MS_RELATIME","","",null,null],[17,"MS_KERNMOUNT","","",null,null],[17,"MS_I_VERSION","","",null,null],[17,"MS_STRICTATIME","","",null,null],[17,"MS_ACTIVE","","",null,null],[17,"MS_MGC_VAL","","",null,null],[17,"MS_MGC_MSK","","",null,null],[17,"SCM_RIGHTS","","",null,null],[17,"SCM_CREDENTIALS","","",null,null],[17,"PROT_GROWSDOWN","","",null,null],[17,"PROT_GROWSUP","","",null,null],[17,"MAP_TYPE","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_FREE","","",null,null],[17,"MADV_REMOVE","","",null,null],[17,"MADV_DONTFORK","","",null,null],[17,"MADV_DOFORK","","",null,null],[17,"MADV_MERGEABLE","","",null,null],[17,"MADV_UNMERGEABLE","","",null,null],[17,"MADV_HUGEPAGE","","",null,null],[17,"MADV_NOHUGEPAGE","","",null,null],[17,"MADV_DONTDUMP","","",null,null],[17,"MADV_DODUMP","","",null,null],[17,"MADV_HWPOISON","","",null,null],[17,"IFF_UP","","",null,null],[17,"IFF_BROADCAST","","",null,null],[17,"IFF_DEBUG","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"IFF_POINTOPOINT","","",null,null],[17,"IFF_NOTRAILERS","","",null,null],[17,"IFF_RUNNING","","",null,null],[17,"IFF_NOARP","","",null,null],[17,"IFF_PROMISC","","",null,null],[17,"IFF_ALLMULTI","","",null,null],[17,"IFF_MASTER","","",null,null],[17,"IFF_SLAVE","","",null,null],[17,"IFF_MULTICAST","","",null,null],[17,"IFF_PORTSEL","","",null,null],[17,"IFF_AUTOMEDIA","","",null,null],[17,"IFF_DYNAMIC","","",null,null],[17,"SOL_IP","","",null,null],[17,"SOL_TCP","","",null,null],[17,"SOL_UDP","","",null,null],[17,"SOL_IPV6","","",null,null],[17,"SOL_ICMPV6","","",null,null],[17,"SOL_RAW","","",null,null],[17,"SOL_DECNET","","",null,null],[17,"SOL_X25","","",null,null],[17,"SOL_PACKET","","",null,null],[17,"SOL_ATM","","",null,null],[17,"SOL_AAL","","",null,null],[17,"SOL_IRDA","","",null,null],[17,"SOL_NETBEUI","","",null,null],[17,"SOL_LLC","","",null,null],[17,"SOL_DCCP","","",null,null],[17,"SOL_NETLINK","","",null,null],[17,"SOL_TIPC","","",null,null],[17,"SOL_BLUETOOTH","","",null,null],[17,"SOL_ALG","","",null,null],[17,"AF_UNSPEC","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_LOCAL","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_AX25","","",null,null],[17,"AF_IPX","","",null,null],[17,"AF_APPLETALK","","",null,null],[17,"AF_NETROM","","",null,null],[17,"AF_BRIDGE","","",null,null],[17,"AF_ATMPVC","","",null,null],[17,"AF_X25","","",null,null],[17,"AF_INET6","","",null,null],[17,"AF_ROSE","","",null,null],[17,"AF_DECnet","","",null,null],[17,"AF_NETBEUI","","",null,null],[17,"AF_SECURITY","","",null,null],[17,"AF_KEY","","",null,null],[17,"AF_NETLINK","","",null,null],[17,"AF_ROUTE","","",null,null],[17,"AF_PACKET","","",null,null],[17,"AF_ASH","","",null,null],[17,"AF_ECONET","","",null,null],[17,"AF_ATMSVC","","",null,null],[17,"AF_RDS","","",null,null],[17,"AF_SNA","","",null,null],[17,"AF_IRDA","","",null,null],[17,"AF_PPPOX","","",null,null],[17,"AF_WANPIPE","","",null,null],[17,"AF_LLC","","",null,null],[17,"AF_CAN","","",null,null],[17,"AF_TIPC","","",null,null],[17,"AF_BLUETOOTH","","",null,null],[17,"AF_IUCV","","",null,null],[17,"AF_RXRPC","","",null,null],[17,"AF_ISDN","","",null,null],[17,"AF_PHONET","","",null,null],[17,"AF_IEEE802154","","",null,null],[17,"AF_CAIF","","",null,null],[17,"AF_ALG","","",null,null],[17,"PF_UNSPEC","","",null,null],[17,"PF_UNIX","","",null,null],[17,"PF_LOCAL","","",null,null],[17,"PF_INET","","",null,null],[17,"PF_AX25","","",null,null],[17,"PF_IPX","","",null,null],[17,"PF_APPLETALK","","",null,null],[17,"PF_NETROM","","",null,null],[17,"PF_BRIDGE","","",null,null],[17,"PF_ATMPVC","","",null,null],[17,"PF_X25","","",null,null],[17,"PF_INET6","","",null,null],[17,"PF_ROSE","","",null,null],[17,"PF_DECnet","","",null,null],[17,"PF_NETBEUI","","",null,null],[17,"PF_SECURITY","","",null,null],[17,"PF_KEY","","",null,null],[17,"PF_NETLINK","","",null,null],[17,"PF_ROUTE","","",null,null],[17,"PF_PACKET","","",null,null],[17,"PF_ASH","","",null,null],[17,"PF_ECONET","","",null,null],[17,"PF_ATMSVC","","",null,null],[17,"PF_RDS","","",null,null],[17,"PF_SNA","","",null,null],[17,"PF_IRDA","","",null,null],[17,"PF_PPPOX","","",null,null],[17,"PF_WANPIPE","","",null,null],[17,"PF_LLC","","",null,null],[17,"PF_CAN","","",null,null],[17,"PF_TIPC","","",null,null],[17,"PF_BLUETOOTH","","",null,null],[17,"PF_IUCV","","",null,null],[17,"PF_RXRPC","","",null,null],[17,"PF_ISDN","","",null,null],[17,"PF_PHONET","","",null,null],[17,"PF_IEEE802154","","",null,null],[17,"PF_CAIF","","",null,null],[17,"PF_ALG","","",null,null],[17,"SOMAXCONN","","",null,null],[17,"MSG_OOB","","",null,null],[17,"MSG_PEEK","","",null,null],[17,"MSG_DONTROUTE","","",null,null],[17,"MSG_CTRUNC","","",null,null],[17,"MSG_TRUNC","","",null,null],[17,"MSG_DONTWAIT","","",null,null],[17,"MSG_EOR","","",null,null],[17,"MSG_WAITALL","","",null,null],[17,"MSG_FIN","","",null,null],[17,"MSG_SYN","","",null,null],[17,"MSG_CONFIRM","","",null,null],[17,"MSG_RST","","",null,null],[17,"MSG_ERRQUEUE","","",null,null],[17,"MSG_NOSIGNAL","","",null,null],[17,"MSG_MORE","","",null,null],[17,"MSG_WAITFORONE","","",null,null],[17,"MSG_FASTOPEN","","",null,null],[17,"MSG_CMSG_CLOEXEC","","",null,null],[17,"SCM_TIMESTAMP","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"SOCK_RDM","","",null,null],[17,"IP_TOS","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_OPTIONS","","",null,null],[17,"IP_ROUTER_ALERT","","",null,null],[17,"IP_RECVOPTS","","",null,null],[17,"IP_RETOPTS","","",null,null],[17,"IP_PKTINFO","","",null,null],[17,"IP_PKTOPTIONS","","",null,null],[17,"IP_MTU_DISCOVER","","",null,null],[17,"IP_RECVERR","","",null,null],[17,"IP_RECVTTL","","",null,null],[17,"IP_RECVTOS","","",null,null],[17,"IP_MTU","","",null,null],[17,"IP_FREEBIND","","",null,null],[17,"IP_IPSEC_POLICY","","",null,null],[17,"IP_XFRM_POLICY","","",null,null],[17,"IP_PASSSEC","","",null,null],[17,"IP_TRANSPARENT","","",null,null],[17,"IP_ORIGDSTADDR","","",null,null],[17,"IP_RECVORIGDSTADDR","","",null,null],[17,"IP_MINTTL","","",null,null],[17,"IP_NODEFRAG","","",null,null],[17,"IP_CHECKSUM","","",null,null],[17,"IP_BIND_ADDRESS_NO_PORT","","",null,null],[17,"IP_MULTICAST_IF","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IP_UNBLOCK_SOURCE","","",null,null],[17,"IP_BLOCK_SOURCE","","",null,null],[17,"IP_ADD_SOURCE_MEMBERSHIP","","",null,null],[17,"IP_DROP_SOURCE_MEMBERSHIP","","",null,null],[17,"IP_MSFILTER","","",null,null],[17,"IP_MULTICAST_ALL","","",null,null],[17,"IP_UNICAST_IF","","",null,null],[17,"IP_DEFAULT_MULTICAST_TTL","","",null,null],[17,"IP_DEFAULT_MULTICAST_LOOP","","",null,null],[17,"IP_PMTUDISC_DONT","","",null,null],[17,"IP_PMTUDISC_WANT","","",null,null],[17,"IP_PMTUDISC_DO","","",null,null],[17,"IP_PMTUDISC_PROBE","","",null,null],[17,"IP_PMTUDISC_INTERFACE","","",null,null],[17,"IP_PMTUDISC_OMIT","","",null,null],[17,"IPPROTO_HOPOPTS","","Hop-by-hop option header",null,null],[17,"IPPROTO_IGMP","","group mgmt protocol",null,null],[17,"IPPROTO_IPIP","","for compatibility",null,null],[17,"IPPROTO_EGP","","exterior gateway protocol",null,null],[17,"IPPROTO_PUP","","pup",null,null],[17,"IPPROTO_IDP","","xns idp",null,null],[17,"IPPROTO_TP","","tp-4 w/ class negotiation",null,null],[17,"IPPROTO_DCCP","","DCCP",null,null],[17,"IPPROTO_ROUTING","","IP6 routing header",null,null],[17,"IPPROTO_FRAGMENT","","IP6 fragmentation header",null,null],[17,"IPPROTO_RSVP","","resource reservation",null,null],[17,"IPPROTO_GRE","","General Routing Encap.",null,null],[17,"IPPROTO_ESP","","IP6 Encap Sec. Payload",null,null],[17,"IPPROTO_AH","","IP6 Auth Header",null,null],[17,"IPPROTO_NONE","","IP6 no next header",null,null],[17,"IPPROTO_DSTOPTS","","IP6 destination option",null,null],[17,"IPPROTO_MTP","","",null,null],[17,"IPPROTO_BEETPH","","",null,null],[17,"IPPROTO_ENCAP","","encapsulation header",null,null],[17,"IPPROTO_PIM","","Protocol indep. multicast",null,null],[17,"IPPROTO_COMP","","IP Payload Comp. Protocol",null,null],[17,"IPPROTO_SCTP","","SCTP",null,null],[17,"IPPROTO_MH","","",null,null],[17,"IPPROTO_UDPLITE","","",null,null],[17,"IPPROTO_MPLS","","",null,null],[17,"IPPROTO_RAW","","raw IP packet",null,null],[17,"IPPROTO_MAX","","",null,null],[17,"MCAST_EXCLUDE","","",null,null],[17,"MCAST_INCLUDE","","",null,null],[17,"MCAST_JOIN_GROUP","","",null,null],[17,"MCAST_BLOCK_SOURCE","","",null,null],[17,"MCAST_UNBLOCK_SOURCE","","",null,null],[17,"MCAST_LEAVE_GROUP","","",null,null],[17,"MCAST_JOIN_SOURCE_GROUP","","",null,null],[17,"MCAST_LEAVE_SOURCE_GROUP","","",null,null],[17,"MCAST_MSFILTER","","",null,null],[17,"IPV6_ADDRFORM","","",null,null],[17,"IPV6_2292PKTINFO","","",null,null],[17,"IPV6_2292HOPOPTS","","",null,null],[17,"IPV6_2292DSTOPTS","","",null,null],[17,"IPV6_2292RTHDR","","",null,null],[17,"IPV6_2292PKTOPTIONS","","",null,null],[17,"IPV6_CHECKSUM","","",null,null],[17,"IPV6_2292HOPLIMIT","","",null,null],[17,"IPV6_NEXTHOP","","",null,null],[17,"IPV6_AUTHHDR","","",null,null],[17,"IPV6_UNICAST_HOPS","","",null,null],[17,"IPV6_MULTICAST_IF","","",null,null],[17,"IPV6_MULTICAST_HOPS","","",null,null],[17,"IPV6_MULTICAST_LOOP","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"IPV6_ROUTER_ALERT","","",null,null],[17,"IPV6_MTU_DISCOVER","","",null,null],[17,"IPV6_MTU","","",null,null],[17,"IPV6_RECVERR","","",null,null],[17,"IPV6_V6ONLY","","",null,null],[17,"IPV6_JOIN_ANYCAST","","",null,null],[17,"IPV6_LEAVE_ANYCAST","","",null,null],[17,"IPV6_IPSEC_POLICY","","",null,null],[17,"IPV6_XFRM_POLICY","","",null,null],[17,"IPV6_HDRINCL","","",null,null],[17,"IPV6_RECVPKTINFO","","",null,null],[17,"IPV6_PKTINFO","","",null,null],[17,"IPV6_RECVHOPLIMIT","","",null,null],[17,"IPV6_HOPLIMIT","","",null,null],[17,"IPV6_RECVHOPOPTS","","",null,null],[17,"IPV6_HOPOPTS","","",null,null],[17,"IPV6_RTHDRDSTOPTS","","",null,null],[17,"IPV6_RECVRTHDR","","",null,null],[17,"IPV6_RTHDR","","",null,null],[17,"IPV6_RECVDSTOPTS","","",null,null],[17,"IPV6_DSTOPTS","","",null,null],[17,"IPV6_RECVPATHMTU","","",null,null],[17,"IPV6_PATHMTU","","",null,null],[17,"IPV6_DONTFRAG","","",null,null],[17,"IPV6_RECVTCLASS","","",null,null],[17,"IPV6_TCLASS","","",null,null],[17,"IPV6_AUTOFLOWLABEL","","",null,null],[17,"IPV6_ADDR_PREFERENCES","","",null,null],[17,"IPV6_MINHOPCOUNT","","",null,null],[17,"IPV6_ORIGDSTADDR","","",null,null],[17,"IPV6_RECVORIGDSTADDR","","",null,null],[17,"IPV6_TRANSPARENT","","",null,null],[17,"IPV6_UNICAST_IF","","",null,null],[17,"IPV6_PREFER_SRC_TMP","","",null,null],[17,"IPV6_PREFER_SRC_PUBLIC","","",null,null],[17,"IPV6_PREFER_SRC_PUBTMP_DEFAULT","","",null,null],[17,"IPV6_PREFER_SRC_COA","","",null,null],[17,"IPV6_PREFER_SRC_HOME","","",null,null],[17,"IPV6_PREFER_SRC_CGA","","",null,null],[17,"IPV6_PREFER_SRC_NONCGA","","",null,null],[17,"IPV6_PMTUDISC_DONT","","",null,null],[17,"IPV6_PMTUDISC_WANT","","",null,null],[17,"IPV6_PMTUDISC_DO","","",null,null],[17,"IPV6_PMTUDISC_PROBE","","",null,null],[17,"IPV6_PMTUDISC_INTERFACE","","",null,null],[17,"IPV6_PMTUDISC_OMIT","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"TCP_CORK","","",null,null],[17,"TCP_KEEPIDLE","","",null,null],[17,"TCP_KEEPINTVL","","",null,null],[17,"TCP_KEEPCNT","","",null,null],[17,"TCP_SYNCNT","","",null,null],[17,"TCP_LINGER2","","",null,null],[17,"TCP_DEFER_ACCEPT","","",null,null],[17,"TCP_WINDOW_CLAMP","","",null,null],[17,"TCP_INFO","","",null,null],[17,"TCP_QUICKACK","","",null,null],[17,"TCP_CONGESTION","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[17,"SS_ONSTACK","","",null,null],[17,"SS_DISABLE","","",null,null],[17,"PATH_MAX","","",null,null],[17,"UIO_MAXIOV","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"EPOLLIN","","",null,null],[17,"EPOLLPRI","","",null,null],[17,"EPOLLOUT","","",null,null],[17,"EPOLLRDNORM","","",null,null],[17,"EPOLLRDBAND","","",null,null],[17,"EPOLLWRNORM","","",null,null],[17,"EPOLLWRBAND","","",null,null],[17,"EPOLLMSG","","",null,null],[17,"EPOLLERR","","",null,null],[17,"EPOLLHUP","","",null,null],[17,"EPOLLET","","",null,null],[17,"EPOLL_CTL_ADD","","",null,null],[17,"EPOLL_CTL_MOD","","",null,null],[17,"EPOLL_CTL_DEL","","",null,null],[17,"MNT_DETACH","","",null,null],[17,"MNT_EXPIRE","","",null,null],[17,"Q_GETFMT","","",null,null],[17,"Q_GETINFO","","",null,null],[17,"Q_SETINFO","","",null,null],[17,"QIF_BLIMITS","","",null,null],[17,"QIF_SPACE","","",null,null],[17,"QIF_ILIMITS","","",null,null],[17,"QIF_INODES","","",null,null],[17,"QIF_BTIME","","",null,null],[17,"QIF_ITIME","","",null,null],[17,"QIF_LIMITS","","",null,null],[17,"QIF_USAGE","","",null,null],[17,"QIF_TIMES","","",null,null],[17,"QIF_ALL","","",null,null],[17,"MNT_FORCE","","",null,null],[17,"Q_SYNC","","",null,null],[17,"Q_QUOTAON","","",null,null],[17,"Q_QUOTAOFF","","",null,null],[17,"Q_GETQUOTA","","",null,null],[17,"Q_SETQUOTA","","",null,null],[17,"TCIOFF","","",null,null],[17,"TCION","","",null,null],[17,"TCOOFF","","",null,null],[17,"TCOON","","",null,null],[17,"TCIFLUSH","","",null,null],[17,"TCOFLUSH","","",null,null],[17,"TCIOFLUSH","","",null,null],[17,"NL0","","",null,null],[17,"NL1","","",null,null],[17,"TAB0","","",null,null],[17,"CR0","","",null,null],[17,"FF0","","",null,null],[17,"BS0","","",null,null],[17,"VT0","","",null,null],[17,"VERASE","","",null,null],[17,"VKILL","","",null,null],[17,"VINTR","","",null,null],[17,"VQUIT","","",null,null],[17,"VLNEXT","","",null,null],[17,"IGNBRK","","",null,null],[17,"BRKINT","","",null,null],[17,"IGNPAR","","",null,null],[17,"PARMRK","","",null,null],[17,"INPCK","","",null,null],[17,"ISTRIP","","",null,null],[17,"INLCR","","",null,null],[17,"IGNCR","","",null,null],[17,"ICRNL","","",null,null],[17,"IXANY","","",null,null],[17,"IMAXBEL","","",null,null],[17,"OPOST","","",null,null],[17,"CS5","","",null,null],[17,"CRTSCTS","","",null,null],[17,"ECHO","","",null,null],[17,"OCRNL","","",null,null],[17,"ONOCR","","",null,null],[17,"ONLRET","","",null,null],[17,"OFILL","","",null,null],[17,"OFDEL","","",null,null],[17,"CLONE_VM","","",null,null],[17,"CLONE_FS","","",null,null],[17,"CLONE_FILES","","",null,null],[17,"CLONE_SIGHAND","","",null,null],[17,"CLONE_PTRACE","","",null,null],[17,"CLONE_VFORK","","",null,null],[17,"CLONE_PARENT","","",null,null],[17,"CLONE_THREAD","","",null,null],[17,"CLONE_NEWNS","","",null,null],[17,"CLONE_SYSVSEM","","",null,null],[17,"CLONE_SETTLS","","",null,null],[17,"CLONE_PARENT_SETTID","","",null,null],[17,"CLONE_CHILD_CLEARTID","","",null,null],[17,"CLONE_DETACHED","","",null,null],[17,"CLONE_UNTRACED","","",null,null],[17,"CLONE_CHILD_SETTID","","",null,null],[17,"CLONE_NEWUTS","","",null,null],[17,"CLONE_NEWIPC","","",null,null],[17,"CLONE_NEWUSER","","",null,null],[17,"CLONE_NEWPID","","",null,null],[17,"CLONE_NEWNET","","",null,null],[17,"CLONE_IO","","",null,null],[17,"CLONE_NEWCGROUP","","",null,null],[17,"WNOHANG","","",null,null],[17,"WUNTRACED","","",null,null],[17,"WSTOPPED","","",null,null],[17,"WEXITED","","",null,null],[17,"WCONTINUED","","",null,null],[17,"WNOWAIT","","",null,null],[17,"ADDR_NO_RANDOMIZE","","",null,null],[17,"MMAP_PAGE_ZERO","","",null,null],[17,"ADDR_COMPAT_LAYOUT","","",null,null],[17,"READ_IMPLIES_EXEC","","",null,null],[17,"ADDR_LIMIT_32BIT","","",null,null],[17,"SHORT_INODE","","",null,null],[17,"WHOLE_SECONDS","","",null,null],[17,"STICKY_TIMEOUTS","","",null,null],[17,"ADDR_LIMIT_3GB","","",null,null],[17,"PTRACE_O_TRACESYSGOOD","","",null,null],[17,"PTRACE_O_TRACEFORK","","",null,null],[17,"PTRACE_O_TRACEVFORK","","",null,null],[17,"PTRACE_O_TRACECLONE","","",null,null],[17,"PTRACE_O_TRACEEXEC","","",null,null],[17,"PTRACE_O_TRACEVFORKDONE","","",null,null],[17,"PTRACE_O_TRACEEXIT","","",null,null],[17,"PTRACE_O_TRACESECCOMP","","",null,null],[17,"PTRACE_O_EXITKILL","","",null,null],[17,"PTRACE_O_SUSPEND_SECCOMP","","",null,null],[17,"PTRACE_O_MASK","","",null,null],[17,"PTRACE_EVENT_FORK","","",null,null],[17,"PTRACE_EVENT_VFORK","","",null,null],[17,"PTRACE_EVENT_CLONE","","",null,null],[17,"PTRACE_EVENT_EXEC","","",null,null],[17,"PTRACE_EVENT_VFORK_DONE","","",null,null],[17,"PTRACE_EVENT_EXIT","","",null,null],[17,"PTRACE_EVENT_SECCOMP","","",null,null],[17,"__WNOTHREAD","","",null,null],[17,"__WALL","","",null,null],[17,"__WCLONE","","",null,null],[17,"SPLICE_F_MOVE","","",null,null],[17,"SPLICE_F_NONBLOCK","","",null,null],[17,"SPLICE_F_MORE","","",null,null],[17,"SPLICE_F_GIFT","","",null,null],[17,"RTLD_LOCAL","","",null,null],[17,"RTLD_LAZY","","",null,null],[17,"POSIX_FADV_NORMAL","","",null,null],[17,"POSIX_FADV_RANDOM","","",null,null],[17,"POSIX_FADV_SEQUENTIAL","","",null,null],[17,"POSIX_FADV_WILLNEED","","",null,null],[17,"AT_FDCWD","","",null,null],[17,"AT_SYMLINK_NOFOLLOW","","",null,null],[17,"AT_REMOVEDIR","","",null,null],[17,"AT_SYMLINK_FOLLOW","","",null,null],[17,"AT_NO_AUTOMOUNT","","",null,null],[17,"AT_EMPTY_PATH","","",null,null],[17,"LOG_CRON","","",null,null],[17,"LOG_AUTHPRIV","","",null,null],[17,"LOG_FTP","","",null,null],[17,"LOG_PERROR","","",null,null],[17,"PIPE_BUF","","",null,null],[17,"SI_LOAD_SHIFT","","",null,null],[17,"CLD_EXITED","","",null,null],[17,"CLD_KILLED","","",null,null],[17,"CLD_DUMPED","","",null,null],[17,"CLD_TRAPPED","","",null,null],[17,"CLD_STOPPED","","",null,null],[17,"CLD_CONTINUED","","",null,null],[17,"SIGEV_SIGNAL","","",null,null],[17,"SIGEV_NONE","","",null,null],[17,"SIGEV_THREAD","","",null,null],[17,"P_ALL","","",null,null],[17,"P_PID","","",null,null],[17,"P_PGID","","",null,null],[17,"P_PIDFD","","",null,null],[17,"UTIME_OMIT","","",null,null],[17,"UTIME_NOW","","",null,null],[17,"POLLIN","","",null,null],[17,"POLLPRI","","",null,null],[17,"POLLOUT","","",null,null],[17,"POLLERR","","",null,null],[17,"POLLHUP","","",null,null],[17,"POLLNVAL","","",null,null],[17,"POLLRDNORM","","",null,null],[17,"POLLRDBAND","","",null,null],[17,"IPTOS_LOWDELAY","","",null,null],[17,"IPTOS_THROUGHPUT","","",null,null],[17,"IPTOS_RELIABILITY","","",null,null],[17,"IPTOS_MINCOST","","",null,null],[17,"IPTOS_PREC_NETCONTROL","","",null,null],[17,"IPTOS_PREC_INTERNETCONTROL","","",null,null],[17,"IPTOS_PREC_CRITIC_ECP","","",null,null],[17,"IPTOS_PREC_FLASHOVERRIDE","","",null,null],[17,"IPTOS_PREC_FLASH","","",null,null],[17,"IPTOS_PREC_IMMEDIATE","","",null,null],[17,"IPTOS_PREC_PRIORITY","","",null,null],[17,"IPTOS_PREC_ROUTINE","","",null,null],[17,"IPTOS_ECN_MASK","","",null,null],[17,"IPTOS_ECN_ECT1","","",null,null],[17,"IPTOS_ECN_ECT0","","",null,null],[17,"IPTOS_ECN_CE","","",null,null],[17,"IPOPT_COPY","","",null,null],[17,"IPOPT_CLASS_MASK","","",null,null],[17,"IPOPT_NUMBER_MASK","","",null,null],[17,"IPOPT_CONTROL","","",null,null],[17,"IPOPT_RESERVED1","","",null,null],[17,"IPOPT_MEASUREMENT","","",null,null],[17,"IPOPT_RESERVED2","","",null,null],[17,"IPOPT_END","","",null,null],[17,"IPOPT_NOOP","","",null,null],[17,"IPOPT_SEC","","",null,null],[17,"IPOPT_LSRR","","",null,null],[17,"IPOPT_TIMESTAMP","","",null,null],[17,"IPOPT_RR","","",null,null],[17,"IPOPT_SID","","",null,null],[17,"IPOPT_SSRR","","",null,null],[17,"IPOPT_RA","","",null,null],[17,"IPVERSION","","",null,null],[17,"MAXTTL","","",null,null],[17,"IPDEFTTL","","",null,null],[17,"IPOPT_OPTVAL","","",null,null],[17,"IPOPT_OLEN","","",null,null],[17,"IPOPT_OFFSET","","",null,null],[17,"IPOPT_MINOFF","","",null,null],[17,"MAX_IPOPTLEN","","",null,null],[17,"IPOPT_NOP","","",null,null],[17,"IPOPT_EOL","","",null,null],[17,"IPOPT_TS","","",null,null],[17,"IPOPT_TS_TSONLY","","",null,null],[17,"IPOPT_TS_TSANDADDR","","",null,null],[17,"IPOPT_TS_PRESPEC","","",null,null],[17,"ARPOP_RREQUEST","","",null,null],[17,"ARPOP_RREPLY","","",null,null],[17,"ARPOP_InREQUEST","","",null,null],[17,"ARPOP_InREPLY","","",null,null],[17,"ARPOP_NAK","","",null,null],[17,"ATF_NETMASK","","",null,null],[17,"ATF_DONTPUB","","",null,null],[17,"ARPHRD_NETROM","","",null,null],[17,"ARPHRD_ETHER","","",null,null],[17,"ARPHRD_EETHER","","",null,null],[17,"ARPHRD_AX25","","",null,null],[17,"ARPHRD_PRONET","","",null,null],[17,"ARPHRD_CHAOS","","",null,null],[17,"ARPHRD_IEEE802","","",null,null],[17,"ARPHRD_ARCNET","","",null,null],[17,"ARPHRD_APPLETLK","","",null,null],[17,"ARPHRD_DLCI","","",null,null],[17,"ARPHRD_ATM","","",null,null],[17,"ARPHRD_METRICOM","","",null,null],[17,"ARPHRD_IEEE1394","","",null,null],[17,"ARPHRD_EUI64","","",null,null],[17,"ARPHRD_INFINIBAND","","",null,null],[17,"ARPHRD_SLIP","","",null,null],[17,"ARPHRD_CSLIP","","",null,null],[17,"ARPHRD_SLIP6","","",null,null],[17,"ARPHRD_CSLIP6","","",null,null],[17,"ARPHRD_RSRVD","","",null,null],[17,"ARPHRD_ADAPT","","",null,null],[17,"ARPHRD_ROSE","","",null,null],[17,"ARPHRD_X25","","",null,null],[17,"ARPHRD_HWX25","","",null,null],[17,"ARPHRD_PPP","","",null,null],[17,"ARPHRD_CISCO","","",null,null],[17,"ARPHRD_HDLC","","",null,null],[17,"ARPHRD_LAPB","","",null,null],[17,"ARPHRD_DDCMP","","",null,null],[17,"ARPHRD_RAWHDLC","","",null,null],[17,"ARPHRD_TUNNEL","","",null,null],[17,"ARPHRD_TUNNEL6","","",null,null],[17,"ARPHRD_FRAD","","",null,null],[17,"ARPHRD_SKIP","","",null,null],[17,"ARPHRD_LOOPBACK","","",null,null],[17,"ARPHRD_LOCALTLK","","",null,null],[17,"ARPHRD_FDDI","","",null,null],[17,"ARPHRD_BIF","","",null,null],[17,"ARPHRD_SIT","","",null,null],[17,"ARPHRD_IPDDP","","",null,null],[17,"ARPHRD_IPGRE","","",null,null],[17,"ARPHRD_PIMREG","","",null,null],[17,"ARPHRD_HIPPI","","",null,null],[17,"ARPHRD_ASH","","",null,null],[17,"ARPHRD_ECONET","","",null,null],[17,"ARPHRD_IRDA","","",null,null],[17,"ARPHRD_FCPP","","",null,null],[17,"ARPHRD_FCAL","","",null,null],[17,"ARPHRD_FCPL","","",null,null],[17,"ARPHRD_FCFABRIC","","",null,null],[17,"ARPHRD_IEEE802_TR","","",null,null],[17,"ARPHRD_IEEE80211","","",null,null],[17,"ARPHRD_IEEE80211_PRISM","","",null,null],[17,"ARPHRD_IEEE80211_RADIOTAP","","",null,null],[17,"ARPHRD_IEEE802154","","",null,null],[17,"ARPHRD_VOID","","",null,null],[17,"ARPHRD_NONE","","",null,null],[17,"ABDAY_1","","",null,null],[17,"ABDAY_2","","",null,null],[17,"ABDAY_3","","",null,null],[17,"ABDAY_4","","",null,null],[17,"ABDAY_5","","",null,null],[17,"ABDAY_6","","",null,null],[17,"ABDAY_7","","",null,null],[17,"DAY_1","","",null,null],[17,"DAY_2","","",null,null],[17,"DAY_3","","",null,null],[17,"DAY_4","","",null,null],[17,"DAY_5","","",null,null],[17,"DAY_6","","",null,null],[17,"DAY_7","","",null,null],[17,"ABMON_1","","",null,null],[17,"ABMON_2","","",null,null],[17,"ABMON_3","","",null,null],[17,"ABMON_4","","",null,null],[17,"ABMON_5","","",null,null],[17,"ABMON_6","","",null,null],[17,"ABMON_7","","",null,null],[17,"ABMON_8","","",null,null],[17,"ABMON_9","","",null,null],[17,"ABMON_10","","",null,null],[17,"ABMON_11","","",null,null],[17,"ABMON_12","","",null,null],[17,"MON_1","","",null,null],[17,"MON_2","","",null,null],[17,"MON_3","","",null,null],[17,"MON_4","","",null,null],[17,"MON_5","","",null,null],[17,"MON_6","","",null,null],[17,"MON_7","","",null,null],[17,"MON_8","","",null,null],[17,"MON_9","","",null,null],[17,"MON_10","","",null,null],[17,"MON_11","","",null,null],[17,"MON_12","","",null,null],[17,"AM_STR","","",null,null],[17,"PM_STR","","",null,null],[17,"D_T_FMT","","",null,null],[17,"D_FMT","","",null,null],[17,"T_FMT","","",null,null],[17,"T_FMT_AMPM","","",null,null],[17,"ERA","","",null,null],[17,"ERA_D_FMT","","",null,null],[17,"ALT_DIGITS","","",null,null],[17,"ERA_D_T_FMT","","",null,null],[17,"ERA_T_FMT","","",null,null],[17,"CODESET","","",null,null],[17,"CRNCYSTR","","",null,null],[17,"RUSAGE_THREAD","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"RADIXCHAR","","",null,null],[17,"THOUSEP","","",null,null],[17,"YESEXPR","","",null,null],[17,"NOEXPR","","",null,null],[17,"YESSTR","","",null,null],[17,"NOSTR","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"_PC_LINK_MAX","","",null,null],[17,"_PC_MAX_CANON","","",null,null],[17,"_PC_MAX_INPUT","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[17,"_PC_PATH_MAX","","",null,null],[17,"_PC_PIPE_BUF","","",null,null],[17,"_PC_CHOWN_RESTRICTED","","",null,null],[17,"_PC_NO_TRUNC","","",null,null],[17,"_PC_VDISABLE","","",null,null],[17,"_PC_SYNC_IO","","",null,null],[17,"_PC_ASYNC_IO","","",null,null],[17,"_PC_PRIO_IO","","",null,null],[17,"_PC_SOCK_MAXBUF","","",null,null],[17,"_PC_FILESIZEBITS","","",null,null],[17,"_PC_REC_INCR_XFER_SIZE","","",null,null],[17,"_PC_REC_MAX_XFER_SIZE","","",null,null],[17,"_PC_REC_MIN_XFER_SIZE","","",null,null],[17,"_PC_REC_XFER_ALIGN","","",null,null],[17,"_PC_ALLOC_SIZE_MIN","","",null,null],[17,"_PC_SYMLINK_MAX","","",null,null],[17,"_PC_2_SYMLINKS","","",null,null],[17,"MS_NOUSER","","",null,null],[17,"_SC_ARG_MAX","","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_PAGE_SIZE","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_UIO_MAXIOV","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_THREAD_PROCESS_SHARED","","",null,null],[17,"_SC_NPROCESSORS_CONF","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_PHYS_PAGES","","",null,null],[17,"_SC_AVPHYS_PAGES","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_PASS_MAX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_XOPEN_XPG2","","",null,null],[17,"_SC_XOPEN_XPG3","","",null,null],[17,"_SC_XOPEN_XPG4","","",null,null],[17,"_SC_NZERO","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LP64_OFF64","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"_SC_ADVISORY_INFO","","",null,null],[17,"_SC_BARRIERS","","",null,null],[17,"_SC_CLOCK_SELECTION","","",null,null],[17,"_SC_CPUTIME","","",null,null],[17,"_SC_THREAD_CPUTIME","","",null,null],[17,"_SC_MONOTONIC_CLOCK","","",null,null],[17,"_SC_READER_WRITER_LOCKS","","",null,null],[17,"_SC_SPIN_LOCKS","","",null,null],[17,"_SC_REGEXP","","",null,null],[17,"_SC_SHELL","","",null,null],[17,"_SC_SPAWN","","",null,null],[17,"_SC_SPORADIC_SERVER","","",null,null],[17,"_SC_THREAD_SPORADIC_SERVER","","",null,null],[17,"_SC_TIMEOUTS","","",null,null],[17,"_SC_TYPED_MEMORY_OBJECTS","","",null,null],[17,"_SC_2_PBS","","",null,null],[17,"_SC_2_PBS_ACCOUNTING","","",null,null],[17,"_SC_2_PBS_LOCATE","","",null,null],[17,"_SC_2_PBS_MESSAGE","","",null,null],[17,"_SC_2_PBS_TRACK","","",null,null],[17,"_SC_SYMLOOP_MAX","","",null,null],[17,"_SC_STREAMS","","",null,null],[17,"_SC_2_PBS_CHECKPOINT","","",null,null],[17,"_SC_V6_ILP32_OFF32","","",null,null],[17,"_SC_V6_ILP32_OFFBIG","","",null,null],[17,"_SC_V6_LP64_OFF64","","",null,null],[17,"_SC_V6_LPBIG_OFFBIG","","",null,null],[17,"_SC_HOST_NAME_MAX","","",null,null],[17,"_SC_TRACE","","",null,null],[17,"_SC_TRACE_EVENT_FILTER","","",null,null],[17,"_SC_TRACE_INHERIT","","",null,null],[17,"_SC_TRACE_LOG","","",null,null],[17,"_SC_IPV6","","",null,null],[17,"_SC_RAW_SOCKETS","","",null,null],[17,"_SC_V7_ILP32_OFF32","","",null,null],[17,"_SC_V7_ILP32_OFFBIG","","",null,null],[17,"_SC_V7_LP64_OFF64","","",null,null],[17,"_SC_V7_LPBIG_OFFBIG","","",null,null],[17,"_SC_SS_REPL_MAX","","",null,null],[17,"_SC_TRACE_EVENT_NAME_MAX","","",null,null],[17,"_SC_TRACE_NAME_MAX","","",null,null],[17,"_SC_TRACE_SYS_MAX","","",null,null],[17,"_SC_TRACE_USER_EVENT_MAX","","",null,null],[17,"_SC_XOPEN_STREAMS","","",null,null],[17,"_SC_THREAD_ROBUST_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_ROBUST_PRIO_PROTECT","","",null,null],[17,"RLIM_SAVED_MAX","","",null,null],[17,"RLIM_SAVED_CUR","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"F_SEAL_FUTURE_WRITE","","",null,null],[17,"IFF_LOWER_UP","","",null,null],[17,"IFF_DORMANT","","",null,null],[17,"IFF_ECHO","","",null,null],[17,"IFA_UNSPEC","","",null,null],[17,"IFA_ADDRESS","","",null,null],[17,"IFA_LOCAL","","",null,null],[17,"IFA_LABEL","","",null,null],[17,"IFA_BROADCAST","","",null,null],[17,"IFA_ANYCAST","","",null,null],[17,"IFA_CACHEINFO","","",null,null],[17,"IFA_MULTICAST","","",null,null],[17,"IFA_F_SECONDARY","","",null,null],[17,"IFA_F_TEMPORARY","","",null,null],[17,"IFA_F_NODAD","","",null,null],[17,"IFA_F_OPTIMISTIC","","",null,null],[17,"IFA_F_DADFAILED","","",null,null],[17,"IFA_F_HOMEADDRESS","","",null,null],[17,"IFA_F_DEPRECATED","","",null,null],[17,"IFA_F_TENTATIVE","","",null,null],[17,"IFA_F_PERMANENT","","",null,null],[17,"IFLA_UNSPEC","","",null,null],[17,"IFLA_ADDRESS","","",null,null],[17,"IFLA_BROADCAST","","",null,null],[17,"IFLA_IFNAME","","",null,null],[17,"IFLA_MTU","","",null,null],[17,"IFLA_LINK","","",null,null],[17,"IFLA_QDISC","","",null,null],[17,"IFLA_STATS","","",null,null],[17,"IFLA_COST","","",null,null],[17,"IFLA_PRIORITY","","",null,null],[17,"IFLA_MASTER","","",null,null],[17,"IFLA_WIRELESS","","",null,null],[17,"IFLA_PROTINFO","","",null,null],[17,"IFLA_TXQLEN","","",null,null],[17,"IFLA_MAP","","",null,null],[17,"IFLA_WEIGHT","","",null,null],[17,"IFLA_OPERSTATE","","",null,null],[17,"IFLA_LINKMODE","","",null,null],[17,"IFLA_LINKINFO","","",null,null],[17,"IFLA_NET_NS_PID","","",null,null],[17,"IFLA_IFALIAS","","",null,null],[17,"IFLA_NUM_VF","","",null,null],[17,"IFLA_VFINFO_LIST","","",null,null],[17,"IFLA_STATS64","","",null,null],[17,"IFLA_VF_PORTS","","",null,null],[17,"IFLA_PORT_SELF","","",null,null],[17,"IFLA_AF_SPEC","","",null,null],[17,"IFLA_GROUP","","",null,null],[17,"IFLA_NET_NS_FD","","",null,null],[17,"IFLA_EXT_MASK","","",null,null],[17,"IFLA_PROMISCUITY","","",null,null],[17,"IFLA_NUM_TX_QUEUES","","",null,null],[17,"IFLA_NUM_RX_QUEUES","","",null,null],[17,"IFLA_CARRIER","","",null,null],[17,"IFLA_PHYS_PORT_ID","","",null,null],[17,"IFLA_CARRIER_CHANGES","","",null,null],[17,"IFLA_PHYS_SWITCH_ID","","",null,null],[17,"IFLA_LINK_NETNSID","","",null,null],[17,"IFLA_PHYS_PORT_NAME","","",null,null],[17,"IFLA_PROTO_DOWN","","",null,null],[17,"IFLA_INFO_UNSPEC","","",null,null],[17,"IFLA_INFO_KIND","","",null,null],[17,"IFLA_INFO_DATA","","",null,null],[17,"IFLA_INFO_XSTATS","","",null,null],[17,"IFLA_INFO_SLAVE_KIND","","",null,null],[17,"IFLA_INFO_SLAVE_DATA","","",null,null],[17,"IFF_TUN","","",null,null],[17,"IFF_TAP","","",null,null],[17,"IFF_NO_PI","","",null,null],[17,"TUN_READQ_SIZE","","",null,null],[17,"TUN_TUN_DEV","","",null,null],[17,"TUN_TAP_DEV","","",null,null],[17,"TUN_TYPE_MASK","","",null,null],[17,"IFF_ONE_QUEUE","","",null,null],[17,"IFF_VNET_HDR","","",null,null],[17,"IFF_TUN_EXCL","","",null,null],[17,"IFF_MULTI_QUEUE","","",null,null],[17,"IFF_ATTACH_QUEUE","","",null,null],[17,"IFF_DETACH_QUEUE","","",null,null],[17,"IFF_PERSIST","","",null,null],[17,"IFF_NOFILTER","","",null,null],[17,"ST_RDONLY","","",null,null],[17,"ST_NOSUID","","",null,null],[17,"ST_NODEV","","",null,null],[17,"ST_NOEXEC","","",null,null],[17,"ST_SYNCHRONOUS","","",null,null],[17,"ST_MANDLOCK","","",null,null],[17,"ST_WRITE","","",null,null],[17,"ST_APPEND","","",null,null],[17,"ST_IMMUTABLE","","",null,null],[17,"ST_NOATIME","","",null,null],[17,"ST_NODIRATIME","","",null,null],[17,"RTLD_NEXT","","",null,null],[17,"RTLD_DEFAULT","","",null,null],[17,"RTLD_NODELETE","","",null,null],[17,"RTLD_NOW","","",null,null],[17,"AT_EACCESS","","",null,null],[17,"TCP_MD5SIG","","",null,null],[17,"PTHREAD_MUTEX_INITIALIZER","","",null,null],[17,"PTHREAD_COND_INITIALIZER","","",null,null],[17,"PTHREAD_RWLOCK_INITIALIZER","","",null,null],[17,"PTHREAD_MUTEX_NORMAL","","",null,null],[17,"PTHREAD_MUTEX_RECURSIVE","","",null,null],[17,"PTHREAD_MUTEX_ERRORCHECK","","",null,null],[17,"PTHREAD_MUTEX_DEFAULT","","",null,null],[17,"PTHREAD_PROCESS_PRIVATE","","",null,null],[17,"PTHREAD_PROCESS_SHARED","","",null,null],[17,"__SIZEOF_PTHREAD_COND_T","","",null,null],[17,"RENAME_NOREPLACE","","",null,null],[17,"RENAME_EXCHANGE","","",null,null],[17,"RENAME_WHITEOUT","","",null,null],[17,"SCHED_OTHER","","",null,null],[17,"SCHED_FIFO","","",null,null],[17,"SCHED_RR","","",null,null],[17,"SCHED_BATCH","","",null,null],[17,"SCHED_IDLE","","",null,null],[17,"SCHED_RESET_ON_FORK","","",null,null],[17,"AF_IB","","",null,null],[17,"AF_MPLS","","",null,null],[17,"AF_NFC","","",null,null],[17,"AF_VSOCK","","",null,null],[17,"AF_XDP","","",null,null],[17,"PF_IB","","",null,null],[17,"PF_MPLS","","",null,null],[17,"PF_NFC","","",null,null],[17,"PF_VSOCK","","",null,null],[17,"PF_XDP","","",null,null],[17,"IPC_PRIVATE","","",null,null],[17,"IPC_CREAT","","",null,null],[17,"IPC_EXCL","","",null,null],[17,"IPC_NOWAIT","","",null,null],[17,"IPC_RMID","","",null,null],[17,"IPC_SET","","",null,null],[17,"IPC_STAT","","",null,null],[17,"IPC_INFO","","",null,null],[17,"MSG_STAT","","",null,null],[17,"MSG_INFO","","",null,null],[17,"MSG_NOERROR","","",null,null],[17,"MSG_EXCEPT","","",null,null],[17,"MSG_COPY","","",null,null],[17,"SHM_R","","",null,null],[17,"SHM_W","","",null,null],[17,"SHM_RDONLY","","",null,null],[17,"SHM_RND","","",null,null],[17,"SHM_REMAP","","",null,null],[17,"SHM_EXEC","","",null,null],[17,"SHM_LOCK","","",null,null],[17,"SHM_UNLOCK","","",null,null],[17,"SHM_HUGETLB","","",null,null],[17,"SHM_NORESERVE","","",null,null],[17,"EPOLLRDHUP","","",null,null],[17,"EPOLLEXCLUSIVE","","",null,null],[17,"EPOLLONESHOT","","",null,null],[17,"QFMT_VFS_OLD","","",null,null],[17,"QFMT_VFS_V0","","",null,null],[17,"QFMT_VFS_V1","","",null,null],[17,"EFD_SEMAPHORE","","",null,null],[17,"LOG_NFACILITIES","","",null,null],[17,"SEM_FAILED","","",null,null],[17,"RB_AUTOBOOT","","",null,null],[17,"RB_HALT_SYSTEM","","",null,null],[17,"RB_ENABLE_CAD","","",null,null],[17,"RB_DISABLE_CAD","","",null,null],[17,"RB_POWER_OFF","","",null,null],[17,"RB_SW_SUSPEND","","",null,null],[17,"RB_KEXEC","","",null,null],[17,"AI_PASSIVE","","",null,null],[17,"AI_CANONNAME","","",null,null],[17,"AI_NUMERICHOST","","",null,null],[17,"AI_V4MAPPED","","",null,null],[17,"AI_ALL","","",null,null],[17,"AI_ADDRCONFIG","","",null,null],[17,"AI_NUMERICSERV","","",null,null],[17,"EAI_BADFLAGS","","",null,null],[17,"EAI_NONAME","","",null,null],[17,"EAI_AGAIN","","",null,null],[17,"EAI_FAIL","","",null,null],[17,"EAI_NODATA","","",null,null],[17,"EAI_FAMILY","","",null,null],[17,"EAI_SOCKTYPE","","",null,null],[17,"EAI_SERVICE","","",null,null],[17,"EAI_MEMORY","","",null,null],[17,"EAI_SYSTEM","","",null,null],[17,"EAI_OVERFLOW","","",null,null],[17,"NI_NUMERICHOST","","",null,null],[17,"NI_NUMERICSERV","","",null,null],[17,"NI_NOFQDN","","",null,null],[17,"NI_NAMEREQD","","",null,null],[17,"NI_DGRAM","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_BEFORE","","",null,null],[17,"SYNC_FILE_RANGE_WRITE","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_AFTER","","",null,null],[17,"AIO_CANCELED","","",null,null],[17,"AIO_NOTCANCELED","","",null,null],[17,"AIO_ALLDONE","","",null,null],[17,"LIO_READ","","",null,null],[17,"LIO_WRITE","","",null,null],[17,"LIO_NOP","","",null,null],[17,"LIO_WAIT","","",null,null],[17,"LIO_NOWAIT","","",null,null],[17,"MREMAP_MAYMOVE","","",null,null],[17,"MREMAP_FIXED","","",null,null],[17,"PR_SET_PDEATHSIG","","",null,null],[17,"PR_GET_PDEATHSIG","","",null,null],[17,"PR_GET_DUMPABLE","","",null,null],[17,"PR_SET_DUMPABLE","","",null,null],[17,"PR_GET_UNALIGN","","",null,null],[17,"PR_SET_UNALIGN","","",null,null],[17,"PR_UNALIGN_NOPRINT","","",null,null],[17,"PR_UNALIGN_SIGBUS","","",null,null],[17,"PR_GET_KEEPCAPS","","",null,null],[17,"PR_SET_KEEPCAPS","","",null,null],[17,"PR_GET_FPEMU","","",null,null],[17,"PR_SET_FPEMU","","",null,null],[17,"PR_FPEMU_NOPRINT","","",null,null],[17,"PR_FPEMU_SIGFPE","","",null,null],[17,"PR_GET_FPEXC","","",null,null],[17,"PR_SET_FPEXC","","",null,null],[17,"PR_FP_EXC_SW_ENABLE","","",null,null],[17,"PR_FP_EXC_DIV","","",null,null],[17,"PR_FP_EXC_OVF","","",null,null],[17,"PR_FP_EXC_UND","","",null,null],[17,"PR_FP_EXC_RES","","",null,null],[17,"PR_FP_EXC_INV","","",null,null],[17,"PR_FP_EXC_DISABLED","","",null,null],[17,"PR_FP_EXC_NONRECOV","","",null,null],[17,"PR_FP_EXC_ASYNC","","",null,null],[17,"PR_FP_EXC_PRECISE","","",null,null],[17,"PR_GET_TIMING","","",null,null],[17,"PR_SET_TIMING","","",null,null],[17,"PR_TIMING_STATISTICAL","","",null,null],[17,"PR_TIMING_TIMESTAMP","","",null,null],[17,"PR_SET_NAME","","",null,null],[17,"PR_GET_NAME","","",null,null],[17,"PR_GET_ENDIAN","","",null,null],[17,"PR_SET_ENDIAN","","",null,null],[17,"PR_ENDIAN_BIG","","",null,null],[17,"PR_ENDIAN_LITTLE","","",null,null],[17,"PR_ENDIAN_PPC_LITTLE","","",null,null],[17,"PR_GET_SECCOMP","","",null,null],[17,"PR_SET_SECCOMP","","",null,null],[17,"PR_CAPBSET_READ","","",null,null],[17,"PR_CAPBSET_DROP","","",null,null],[17,"PR_GET_TSC","","",null,null],[17,"PR_SET_TSC","","",null,null],[17,"PR_TSC_ENABLE","","",null,null],[17,"PR_TSC_SIGSEGV","","",null,null],[17,"PR_GET_SECUREBITS","","",null,null],[17,"PR_SET_SECUREBITS","","",null,null],[17,"PR_SET_TIMERSLACK","","",null,null],[17,"PR_GET_TIMERSLACK","","",null,null],[17,"PR_TASK_PERF_EVENTS_DISABLE","","",null,null],[17,"PR_TASK_PERF_EVENTS_ENABLE","","",null,null],[17,"PR_MCE_KILL","","",null,null],[17,"PR_MCE_KILL_CLEAR","","",null,null],[17,"PR_MCE_KILL_SET","","",null,null],[17,"PR_MCE_KILL_LATE","","",null,null],[17,"PR_MCE_KILL_EARLY","","",null,null],[17,"PR_MCE_KILL_DEFAULT","","",null,null],[17,"PR_MCE_KILL_GET","","",null,null],[17,"PR_SET_MM","","",null,null],[17,"PR_SET_MM_START_CODE","","",null,null],[17,"PR_SET_MM_END_CODE","","",null,null],[17,"PR_SET_MM_START_DATA","","",null,null],[17,"PR_SET_MM_END_DATA","","",null,null],[17,"PR_SET_MM_START_STACK","","",null,null],[17,"PR_SET_MM_START_BRK","","",null,null],[17,"PR_SET_MM_BRK","","",null,null],[17,"PR_SET_MM_ARG_START","","",null,null],[17,"PR_SET_MM_ARG_END","","",null,null],[17,"PR_SET_MM_ENV_START","","",null,null],[17,"PR_SET_MM_ENV_END","","",null,null],[17,"PR_SET_MM_AUXV","","",null,null],[17,"PR_SET_MM_EXE_FILE","","",null,null],[17,"PR_SET_MM_MAP","","",null,null],[17,"PR_SET_MM_MAP_SIZE","","",null,null],[17,"PR_SET_PTRACER","","",null,null],[17,"PR_SET_CHILD_SUBREAPER","","",null,null],[17,"PR_GET_CHILD_SUBREAPER","","",null,null],[17,"PR_SET_NO_NEW_PRIVS","","",null,null],[17,"PR_GET_NO_NEW_PRIVS","","",null,null],[17,"PR_GET_TID_ADDRESS","","",null,null],[17,"PR_SET_THP_DISABLE","","",null,null],[17,"PR_GET_THP_DISABLE","","",null,null],[17,"PR_MPX_ENABLE_MANAGEMENT","","",null,null],[17,"PR_MPX_DISABLE_MANAGEMENT","","",null,null],[17,"PR_SET_FP_MODE","","",null,null],[17,"PR_GET_FP_MODE","","",null,null],[17,"PR_FP_MODE_FR","","",null,null],[17,"PR_FP_MODE_FRE","","",null,null],[17,"PR_CAP_AMBIENT","","",null,null],[17,"PR_CAP_AMBIENT_IS_SET","","",null,null],[17,"PR_CAP_AMBIENT_RAISE","","",null,null],[17,"PR_CAP_AMBIENT_LOWER","","",null,null],[17,"PR_CAP_AMBIENT_CLEAR_ALL","","",null,null],[17,"GRND_NONBLOCK","","",null,null],[17,"GRND_RANDOM","","",null,null],[17,"SECCOMP_MODE_DISABLED","","",null,null],[17,"SECCOMP_MODE_STRICT","","",null,null],[17,"SECCOMP_MODE_FILTER","","",null,null],[17,"ITIMER_REAL","","",null,null],[17,"ITIMER_VIRTUAL","","",null,null],[17,"ITIMER_PROF","","",null,null],[17,"TFD_CLOEXEC","","",null,null],[17,"TFD_NONBLOCK","","",null,null],[17,"TFD_TIMER_ABSTIME","","",null,null],[17,"XATTR_CREATE","","",null,null],[17,"XATTR_REPLACE","","",null,null],[17,"_POSIX_VDISABLE","","",null,null],[17,"FALLOC_FL_KEEP_SIZE","","",null,null],[17,"FALLOC_FL_PUNCH_HOLE","","",null,null],[17,"FALLOC_FL_COLLAPSE_RANGE","","",null,null],[17,"FALLOC_FL_ZERO_RANGE","","",null,null],[17,"FALLOC_FL_INSERT_RANGE","","",null,null],[17,"FALLOC_FL_UNSHARE_RANGE","","",null,null],[17,"ENOATTR","","",null,null],[17,"SO_ORIGINAL_DST","","",null,null],[17,"IP_RECVFRAGSIZE","","",null,null],[17,"IPV6_FLOWINFO","","",null,null],[17,"IPV6_MULTICAST_ALL","","",null,null],[17,"IPV6_ROUTER_ALERT_ISOLATE","","",null,null],[17,"IPV6_FLOWLABEL_MGR","","",null,null],[17,"IPV6_FLOWINFO_SEND","","",null,null],[17,"IPV6_RECVFRAGSIZE","","",null,null],[17,"IPV6_FREEBIND","","",null,null],[17,"IPV6_FLOWINFO_FLOWLABEL","","",null,null],[17,"IPV6_FLOWINFO_PRIORITY","","",null,null],[17,"IPV6_RTHDR_LOOSE","","",null,null],[17,"IPV6_RTHDR_STRICT","","",null,null],[17,"IUTF8","","",null,null],[17,"CMSPAR","","",null,null],[17,"MFD_CLOEXEC","","",null,null],[17,"MFD_ALLOW_SEALING","","",null,null],[17,"MFD_HUGETLB","","",null,null],[17,"PT_NULL","","",null,null],[17,"PT_LOAD","","",null,null],[17,"PT_DYNAMIC","","",null,null],[17,"PT_INTERP","","",null,null],[17,"PT_NOTE","","",null,null],[17,"PT_SHLIB","","",null,null],[17,"PT_PHDR","","",null,null],[17,"PT_TLS","","",null,null],[17,"PT_NUM","","",null,null],[17,"PT_LOOS","","",null,null],[17,"PT_GNU_EH_FRAME","","",null,null],[17,"PT_GNU_STACK","","",null,null],[17,"PT_GNU_RELRO","","",null,null],[17,"ETH_ALEN","","",null,null],[17,"ETH_HLEN","","",null,null],[17,"ETH_ZLEN","","",null,null],[17,"ETH_DATA_LEN","","",null,null],[17,"ETH_FRAME_LEN","","",null,null],[17,"ETH_FCS_LEN","","",null,null],[17,"ETH_P_LOOP","","",null,null],[17,"ETH_P_PUP","","",null,null],[17,"ETH_P_PUPAT","","",null,null],[17,"ETH_P_IP","","",null,null],[17,"ETH_P_X25","","",null,null],[17,"ETH_P_ARP","","",null,null],[17,"ETH_P_BPQ","","",null,null],[17,"ETH_P_IEEEPUP","","",null,null],[17,"ETH_P_IEEEPUPAT","","",null,null],[17,"ETH_P_BATMAN","","",null,null],[17,"ETH_P_DEC","","",null,null],[17,"ETH_P_DNA_DL","","",null,null],[17,"ETH_P_DNA_RC","","",null,null],[17,"ETH_P_DNA_RT","","",null,null],[17,"ETH_P_LAT","","",null,null],[17,"ETH_P_DIAG","","",null,null],[17,"ETH_P_CUST","","",null,null],[17,"ETH_P_SCA","","",null,null],[17,"ETH_P_TEB","","",null,null],[17,"ETH_P_RARP","","",null,null],[17,"ETH_P_ATALK","","",null,null],[17,"ETH_P_AARP","","",null,null],[17,"ETH_P_8021Q","","",null,null],[17,"ETH_P_IPX","","",null,null],[17,"ETH_P_IPV6","","",null,null],[17,"ETH_P_PAUSE","","",null,null],[17,"ETH_P_SLOW","","",null,null],[17,"ETH_P_WCCP","","",null,null],[17,"ETH_P_MPLS_UC","","",null,null],[17,"ETH_P_MPLS_MC","","",null,null],[17,"ETH_P_ATMMPOA","","",null,null],[17,"ETH_P_PPP_DISC","","",null,null],[17,"ETH_P_PPP_SES","","",null,null],[17,"ETH_P_LINK_CTL","","",null,null],[17,"ETH_P_ATMFATE","","",null,null],[17,"ETH_P_PAE","","",null,null],[17,"ETH_P_AOE","","",null,null],[17,"ETH_P_8021AD","","",null,null],[17,"ETH_P_802_EX1","","",null,null],[17,"ETH_P_TIPC","","",null,null],[17,"ETH_P_MACSEC","","",null,null],[17,"ETH_P_8021AH","","",null,null],[17,"ETH_P_MVRP","","",null,null],[17,"ETH_P_1588","","",null,null],[17,"ETH_P_PRP","","",null,null],[17,"ETH_P_FCOE","","",null,null],[17,"ETH_P_TDLS","","",null,null],[17,"ETH_P_FIP","","",null,null],[17,"ETH_P_80221","","",null,null],[17,"ETH_P_LOOPBACK","","",null,null],[17,"ETH_P_QINQ1","","",null,null],[17,"ETH_P_QINQ2","","",null,null],[17,"ETH_P_QINQ3","","",null,null],[17,"ETH_P_EDSA","","",null,null],[17,"ETH_P_AF_IUCV","","",null,null],[17,"ETH_P_802_3_MIN","","",null,null],[17,"ETH_P_802_3","","",null,null],[17,"ETH_P_AX25","","",null,null],[17,"ETH_P_ALL","","",null,null],[17,"ETH_P_802_2","","",null,null],[17,"ETH_P_SNAP","","",null,null],[17,"ETH_P_DDCMP","","",null,null],[17,"ETH_P_WAN_PPP","","",null,null],[17,"ETH_P_PPP_MP","","",null,null],[17,"ETH_P_LOCALTALK","","",null,null],[17,"ETH_P_CANFD","","",null,null],[17,"ETH_P_PPPTALK","","",null,null],[17,"ETH_P_TR_802_2","","",null,null],[17,"ETH_P_MOBITEX","","",null,null],[17,"ETH_P_CONTROL","","",null,null],[17,"ETH_P_IRDA","","",null,null],[17,"ETH_P_ECONET","","",null,null],[17,"ETH_P_HDLC","","",null,null],[17,"ETH_P_ARCNET","","",null,null],[17,"ETH_P_DSA","","",null,null],[17,"ETH_P_TRAILER","","",null,null],[17,"ETH_P_PHONET","","",null,null],[17,"ETH_P_IEEE802154","","",null,null],[17,"ETH_P_CAIF","","",null,null],[17,"POSIX_SPAWN_RESETIDS","","",null,null],[17,"POSIX_SPAWN_SETPGROUP","","",null,null],[17,"POSIX_SPAWN_SETSIGDEF","","",null,null],[17,"POSIX_SPAWN_SETSIGMASK","","",null,null],[17,"POSIX_SPAWN_SETSCHEDPARAM","","",null,null],[17,"POSIX_SPAWN_SETSCHEDULER","","",null,null],[17,"NLMSG_NOOP","","",null,null],[17,"NLMSG_ERROR","","",null,null],[17,"NLMSG_DONE","","",null,null],[17,"NLMSG_OVERRUN","","",null,null],[17,"NLMSG_MIN_TYPE","","",null,null],[17,"NFNLGRP_NONE","","",null,null],[17,"NFNLGRP_CONNTRACK_NEW","","",null,null],[17,"NFNLGRP_CONNTRACK_UPDATE","","",null,null],[17,"NFNLGRP_CONNTRACK_DESTROY","","",null,null],[17,"NFNLGRP_CONNTRACK_EXP_NEW","","",null,null],[17,"NFNLGRP_CONNTRACK_EXP_UPDATE","","",null,null],[17,"NFNLGRP_CONNTRACK_EXP_DESTROY","","",null,null],[17,"NFNLGRP_NFTABLES","","",null,null],[17,"NFNLGRP_ACCT_QUOTA","","",null,null],[17,"NFNETLINK_V0","","",null,null],[17,"NFNL_SUBSYS_NONE","","",null,null],[17,"NFNL_SUBSYS_CTNETLINK","","",null,null],[17,"NFNL_SUBSYS_CTNETLINK_EXP","","",null,null],[17,"NFNL_SUBSYS_QUEUE","","",null,null],[17,"NFNL_SUBSYS_ULOG","","",null,null],[17,"NFNL_SUBSYS_OSF","","",null,null],[17,"NFNL_SUBSYS_IPSET","","",null,null],[17,"NFNL_SUBSYS_ACCT","","",null,null],[17,"NFNL_SUBSYS_CTNETLINK_TIMEOUT","","",null,null],[17,"NFNL_SUBSYS_CTHELPER","","",null,null],[17,"NFNL_SUBSYS_NFTABLES","","",null,null],[17,"NFNL_SUBSYS_NFT_COMPAT","","",null,null],[17,"NFNL_SUBSYS_COUNT","","",null,null],[17,"NFNL_MSG_BATCH_BEGIN","","",null,null],[17,"NFNL_MSG_BATCH_END","","",null,null],[17,"NFULNL_MSG_PACKET","","",null,null],[17,"NFULNL_MSG_CONFIG","","",null,null],[17,"NFULA_UNSPEC","","",null,null],[17,"NFULA_PACKET_HDR","","",null,null],[17,"NFULA_MARK","","",null,null],[17,"NFULA_TIMESTAMP","","",null,null],[17,"NFULA_IFINDEX_INDEV","","",null,null],[17,"NFULA_IFINDEX_OUTDEV","","",null,null],[17,"NFULA_IFINDEX_PHYSINDEV","","",null,null],[17,"NFULA_IFINDEX_PHYSOUTDEV","","",null,null],[17,"NFULA_HWADDR","","",null,null],[17,"NFULA_PAYLOAD","","",null,null],[17,"NFULA_PREFIX","","",null,null],[17,"NFULA_UID","","",null,null],[17,"NFULA_SEQ","","",null,null],[17,"NFULA_SEQ_GLOBAL","","",null,null],[17,"NFULA_GID","","",null,null],[17,"NFULA_HWTYPE","","",null,null],[17,"NFULA_HWHEADER","","",null,null],[17,"NFULA_HWLEN","","",null,null],[17,"NFULA_CT","","",null,null],[17,"NFULA_CT_INFO","","",null,null],[17,"NFULNL_CFG_CMD_NONE","","",null,null],[17,"NFULNL_CFG_CMD_BIND","","",null,null],[17,"NFULNL_CFG_CMD_UNBIND","","",null,null],[17,"NFULNL_CFG_CMD_PF_BIND","","",null,null],[17,"NFULNL_CFG_CMD_PF_UNBIND","","",null,null],[17,"NFULA_CFG_UNSPEC","","",null,null],[17,"NFULA_CFG_CMD","","",null,null],[17,"NFULA_CFG_MODE","","",null,null],[17,"NFULA_CFG_NLBUFSIZ","","",null,null],[17,"NFULA_CFG_TIMEOUT","","",null,null],[17,"NFULA_CFG_QTHRESH","","",null,null],[17,"NFULA_CFG_FLAGS","","",null,null],[17,"NFULNL_COPY_NONE","","",null,null],[17,"NFULNL_COPY_META","","",null,null],[17,"NFULNL_COPY_PACKET","","",null,null],[17,"NFULNL_CFG_F_SEQ","","",null,null],[17,"NFULNL_CFG_F_SEQ_GLOBAL","","",null,null],[17,"NFULNL_CFG_F_CONNTRACK","","",null,null],[17,"NFQNL_MSG_PACKET","","",null,null],[17,"NFQNL_MSG_VERDICT","","",null,null],[17,"NFQNL_MSG_CONFIG","","",null,null],[17,"NFQNL_MSG_VERDICT_BATCH","","",null,null],[17,"NFQA_UNSPEC","","",null,null],[17,"NFQA_PACKET_HDR","","",null,null],[17,"NFQA_VERDICT_HDR","","",null,null],[17,"NFQA_MARK","","",null,null],[17,"NFQA_TIMESTAMP","","",null,null],[17,"NFQA_IFINDEX_INDEV","","",null,null],[17,"NFQA_IFINDEX_OUTDEV","","",null,null],[17,"NFQA_IFINDEX_PHYSINDEV","","",null,null],[17,"NFQA_IFINDEX_PHYSOUTDEV","","",null,null],[17,"NFQA_HWADDR","","",null,null],[17,"NFQA_PAYLOAD","","",null,null],[17,"NFQA_CT","","",null,null],[17,"NFQA_CT_INFO","","",null,null],[17,"NFQA_CAP_LEN","","",null,null],[17,"NFQA_SKB_INFO","","",null,null],[17,"NFQA_EXP","","",null,null],[17,"NFQA_UID","","",null,null],[17,"NFQA_GID","","",null,null],[17,"NFQA_SECCTX","","",null,null],[17,"NFQNL_CFG_CMD_NONE","","",null,null],[17,"NFQNL_CFG_CMD_BIND","","",null,null],[17,"NFQNL_CFG_CMD_UNBIND","","",null,null],[17,"NFQNL_CFG_CMD_PF_BIND","","",null,null],[17,"NFQNL_CFG_CMD_PF_UNBIND","","",null,null],[17,"NFQNL_COPY_NONE","","",null,null],[17,"NFQNL_COPY_META","","",null,null],[17,"NFQNL_COPY_PACKET","","",null,null],[17,"NFQA_CFG_UNSPEC","","",null,null],[17,"NFQA_CFG_CMD","","",null,null],[17,"NFQA_CFG_PARAMS","","",null,null],[17,"NFQA_CFG_QUEUE_MAXLEN","","",null,null],[17,"NFQA_CFG_MASK","","",null,null],[17,"NFQA_CFG_FLAGS","","",null,null],[17,"NFQA_CFG_F_FAIL_OPEN","","",null,null],[17,"NFQA_CFG_F_CONNTRACK","","",null,null],[17,"NFQA_CFG_F_GSO","","",null,null],[17,"NFQA_CFG_F_UID_GID","","",null,null],[17,"NFQA_CFG_F_SECCTX","","",null,null],[17,"NFQA_CFG_F_MAX","","",null,null],[17,"NFQA_SKB_CSUMNOTREADY","","",null,null],[17,"NFQA_SKB_GSO","","",null,null],[17,"NFQA_SKB_CSUM_NOTVERIFIED","","",null,null],[17,"GENL_NAMSIZ","","",null,null],[17,"GENL_MIN_ID","","",null,null],[17,"GENL_MAX_ID","","",null,null],[17,"GENL_ADMIN_PERM","","",null,null],[17,"GENL_CMD_CAP_DO","","",null,null],[17,"GENL_CMD_CAP_DUMP","","",null,null],[17,"GENL_CMD_CAP_HASPOL","","",null,null],[17,"GENL_ID_CTRL","","",null,null],[17,"CTRL_CMD_UNSPEC","","",null,null],[17,"CTRL_CMD_NEWFAMILY","","",null,null],[17,"CTRL_CMD_DELFAMILY","","",null,null],[17,"CTRL_CMD_GETFAMILY","","",null,null],[17,"CTRL_CMD_NEWOPS","","",null,null],[17,"CTRL_CMD_DELOPS","","",null,null],[17,"CTRL_CMD_GETOPS","","",null,null],[17,"CTRL_CMD_NEWMCAST_GRP","","",null,null],[17,"CTRL_CMD_DELMCAST_GRP","","",null,null],[17,"CTRL_CMD_GETMCAST_GRP","","",null,null],[17,"CTRL_ATTR_UNSPEC","","",null,null],[17,"CTRL_ATTR_FAMILY_ID","","",null,null],[17,"CTRL_ATTR_FAMILY_NAME","","",null,null],[17,"CTRL_ATTR_VERSION","","",null,null],[17,"CTRL_ATTR_HDRSIZE","","",null,null],[17,"CTRL_ATTR_MAXATTR","","",null,null],[17,"CTRL_ATTR_OPS","","",null,null],[17,"CTRL_ATTR_MCAST_GROUPS","","",null,null],[17,"CTRL_ATTR_OP_UNSPEC","","",null,null],[17,"CTRL_ATTR_OP_ID","","",null,null],[17,"CTRL_ATTR_OP_FLAGS","","",null,null],[17,"CTRL_ATTR_MCAST_GRP_UNSPEC","","",null,null],[17,"CTRL_ATTR_MCAST_GRP_NAME","","",null,null],[17,"CTRL_ATTR_MCAST_GRP_ID","","",null,null],[17,"PACKET_ADD_MEMBERSHIP","","",null,null],[17,"PACKET_DROP_MEMBERSHIP","","",null,null],[17,"PACKET_MR_MULTICAST","","",null,null],[17,"PACKET_MR_PROMISC","","",null,null],[17,"PACKET_MR_ALLMULTI","","",null,null],[17,"PACKET_MR_UNICAST","","",null,null],[17,"NF_DROP","","",null,null],[17,"NF_ACCEPT","","",null,null],[17,"NF_STOLEN","","",null,null],[17,"NF_QUEUE","","",null,null],[17,"NF_REPEAT","","",null,null],[17,"NF_STOP","","",null,null],[17,"NF_MAX_VERDICT","","",null,null],[17,"NF_VERDICT_MASK","","",null,null],[17,"NF_VERDICT_FLAG_QUEUE_BYPASS","","",null,null],[17,"NF_VERDICT_QMASK","","",null,null],[17,"NF_VERDICT_QBITS","","",null,null],[17,"NF_VERDICT_BITS","","",null,null],[17,"NF_INET_PRE_ROUTING","","",null,null],[17,"NF_INET_LOCAL_IN","","",null,null],[17,"NF_INET_FORWARD","","",null,null],[17,"NF_INET_LOCAL_OUT","","",null,null],[17,"NF_INET_POST_ROUTING","","",null,null],[17,"NF_INET_NUMHOOKS","","",null,null],[17,"NFPROTO_UNSPEC","","",null,null],[17,"NFPROTO_IPV4","","",null,null],[17,"NFPROTO_ARP","","",null,null],[17,"NFPROTO_BRIDGE","","",null,null],[17,"NFPROTO_IPV6","","",null,null],[17,"NFPROTO_DECNET","","",null,null],[17,"NFPROTO_NUMPROTO","","",null,null],[17,"NF_IP_PRE_ROUTING","","",null,null],[17,"NF_IP_LOCAL_IN","","",null,null],[17,"NF_IP_FORWARD","","",null,null],[17,"NF_IP_LOCAL_OUT","","",null,null],[17,"NF_IP_POST_ROUTING","","",null,null],[17,"NF_IP_NUMHOOKS","","",null,null],[17,"NF_IP_PRI_FIRST","","",null,null],[17,"NF_IP_PRI_CONNTRACK_DEFRAG","","",null,null],[17,"NF_IP_PRI_RAW","","",null,null],[17,"NF_IP_PRI_SELINUX_FIRST","","",null,null],[17,"NF_IP_PRI_CONNTRACK","","",null,null],[17,"NF_IP_PRI_MANGLE","","",null,null],[17,"NF_IP_PRI_NAT_DST","","",null,null],[17,"NF_IP_PRI_FILTER","","",null,null],[17,"NF_IP_PRI_SECURITY","","",null,null],[17,"NF_IP_PRI_NAT_SRC","","",null,null],[17,"NF_IP_PRI_SELINUX_LAST","","",null,null],[17,"NF_IP_PRI_CONNTRACK_HELPER","","",null,null],[17,"NF_IP_PRI_CONNTRACK_CONFIRM","","",null,null],[17,"NF_IP_PRI_LAST","","",null,null],[17,"NF_IP6_PRE_ROUTING","","",null,null],[17,"NF_IP6_LOCAL_IN","","",null,null],[17,"NF_IP6_FORWARD","","",null,null],[17,"NF_IP6_LOCAL_OUT","","",null,null],[17,"NF_IP6_POST_ROUTING","","",null,null],[17,"NF_IP6_NUMHOOKS","","",null,null],[17,"NF_IP6_PRI_FIRST","","",null,null],[17,"NF_IP6_PRI_CONNTRACK_DEFRAG","","",null,null],[17,"NF_IP6_PRI_RAW","","",null,null],[17,"NF_IP6_PRI_SELINUX_FIRST","","",null,null],[17,"NF_IP6_PRI_CONNTRACK","","",null,null],[17,"NF_IP6_PRI_MANGLE","","",null,null],[17,"NF_IP6_PRI_NAT_DST","","",null,null],[17,"NF_IP6_PRI_FILTER","","",null,null],[17,"NF_IP6_PRI_SECURITY","","",null,null],[17,"NF_IP6_PRI_NAT_SRC","","",null,null],[17,"NF_IP6_PRI_SELINUX_LAST","","",null,null],[17,"NF_IP6_PRI_CONNTRACK_HELPER","","",null,null],[17,"NF_IP6_PRI_LAST","","",null,null],[17,"IP6T_SO_ORIGINAL_DST","","",null,null],[17,"SIOCADDRT","","",null,null],[17,"SIOCDELRT","","",null,null],[17,"SIOCGIFNAME","","",null,null],[17,"SIOCSIFLINK","","",null,null],[17,"SIOCGIFCONF","","",null,null],[17,"SIOCGIFFLAGS","","",null,null],[17,"SIOCSIFFLAGS","","",null,null],[17,"SIOCGIFADDR","","",null,null],[17,"SIOCSIFADDR","","",null,null],[17,"SIOCGIFDSTADDR","","",null,null],[17,"SIOCSIFDSTADDR","","",null,null],[17,"SIOCGIFBRDADDR","","",null,null],[17,"SIOCSIFBRDADDR","","",null,null],[17,"SIOCGIFNETMASK","","",null,null],[17,"SIOCSIFNETMASK","","",null,null],[17,"SIOCGIFMETRIC","","",null,null],[17,"SIOCSIFMETRIC","","",null,null],[17,"SIOCGIFMEM","","",null,null],[17,"SIOCSIFMEM","","",null,null],[17,"SIOCGIFMTU","","",null,null],[17,"SIOCSIFMTU","","",null,null],[17,"SIOCSIFHWADDR","","",null,null],[17,"SIOCGIFENCAP","","",null,null],[17,"SIOCSIFENCAP","","",null,null],[17,"SIOCGIFHWADDR","","",null,null],[17,"SIOCGIFSLAVE","","",null,null],[17,"SIOCSIFSLAVE","","",null,null],[17,"SIOCADDMULTI","","",null,null],[17,"SIOCDELMULTI","","",null,null],[17,"SIOCDARP","","",null,null],[17,"SIOCGARP","","",null,null],[17,"SIOCSARP","","",null,null],[17,"SIOCDRARP","","",null,null],[17,"SIOCGRARP","","",null,null],[17,"SIOCSRARP","","",null,null],[17,"SIOCGIFMAP","","",null,null],[17,"SIOCSIFMAP","","",null,null],[17,"PTRACE_EVENT_STOP","","",null,null],[17,"IPTOS_TOS_MASK","","",null,null],[17,"IPTOS_PREC_MASK","","",null,null],[17,"IPTOS_ECN_NOT_ECT","","",null,null],[17,"RTF_UP","","",null,null],[17,"RTF_GATEWAY","","",null,null],[17,"RTF_HOST","","",null,null],[17,"RTF_REINSTATE","","",null,null],[17,"RTF_DYNAMIC","","",null,null],[17,"RTF_MODIFIED","","",null,null],[17,"RTF_MTU","","",null,null],[17,"RTF_MSS","","",null,null],[17,"RTF_WINDOW","","",null,null],[17,"RTF_IRTT","","",null,null],[17,"RTF_REJECT","","",null,null],[17,"RTF_STATIC","","",null,null],[17,"RTF_XRESOLVE","","",null,null],[17,"RTF_NOFORWARD","","",null,null],[17,"RTF_THROW","","",null,null],[17,"RTF_NOPMTUDISC","","",null,null],[17,"RTF_DEFAULT","","",null,null],[17,"RTF_ALLONLINK","","",null,null],[17,"RTF_ADDRCONF","","",null,null],[17,"RTF_LINKRT","","",null,null],[17,"RTF_NONEXTHOP","","",null,null],[17,"RTF_CACHE","","",null,null],[17,"RTF_FLOW","","",null,null],[17,"RTF_POLICY","","",null,null],[17,"RTCF_VALVE","","",null,null],[17,"RTCF_MASQ","","",null,null],[17,"RTCF_NAT","","",null,null],[17,"RTCF_DOREDIRECT","","",null,null],[17,"RTCF_LOG","","",null,null],[17,"RTCF_DIRECTSRC","","",null,null],[17,"RTF_LOCAL","","",null,null],[17,"RTF_INTERFACE","","",null,null],[17,"RTF_MULTICAST","","",null,null],[17,"RTF_BROADCAST","","",null,null],[17,"RTF_NAT","","",null,null],[17,"RTF_ADDRCLASSMASK","","",null,null],[17,"RT_CLASS_UNSPEC","","",null,null],[17,"RT_CLASS_DEFAULT","","",null,null],[17,"RT_CLASS_MAIN","","",null,null],[17,"RT_CLASS_LOCAL","","",null,null],[17,"RT_CLASS_MAX","","",null,null],[17,"NUD_NONE","","",null,null],[17,"NUD_INCOMPLETE","","",null,null],[17,"NUD_REACHABLE","","",null,null],[17,"NUD_STALE","","",null,null],[17,"NUD_DELAY","","",null,null],[17,"NUD_PROBE","","",null,null],[17,"NUD_FAILED","","",null,null],[17,"NUD_NOARP","","",null,null],[17,"NUD_PERMANENT","","",null,null],[17,"NTF_USE","","",null,null],[17,"NTF_SELF","","",null,null],[17,"NTF_MASTER","","",null,null],[17,"NTF_PROXY","","",null,null],[17,"NTF_ROUTER","","",null,null],[17,"NDA_UNSPEC","","",null,null],[17,"NDA_DST","","",null,null],[17,"NDA_LLADDR","","",null,null],[17,"NDA_CACHEINFO","","",null,null],[17,"NDA_PROBES","","",null,null],[17,"NDA_VLAN","","",null,null],[17,"NDA_PORT","","",null,null],[17,"NDA_VNI","","",null,null],[17,"NDA_IFINDEX","","",null,null],[17,"NLA_ALIGNTO","","",null,null],[17,"NETLINK_ROUTE","","",null,null],[17,"NETLINK_UNUSED","","",null,null],[17,"NETLINK_USERSOCK","","",null,null],[17,"NETLINK_FIREWALL","","",null,null],[17,"NETLINK_SOCK_DIAG","","",null,null],[17,"NETLINK_NFLOG","","",null,null],[17,"NETLINK_XFRM","","",null,null],[17,"NETLINK_SELINUX","","",null,null],[17,"NETLINK_ISCSI","","",null,null],[17,"NETLINK_AUDIT","","",null,null],[17,"NETLINK_FIB_LOOKUP","","",null,null],[17,"NETLINK_CONNECTOR","","",null,null],[17,"NETLINK_NETFILTER","","",null,null],[17,"NETLINK_IP6_FW","","",null,null],[17,"NETLINK_DNRTMSG","","",null,null],[17,"NETLINK_KOBJECT_UEVENT","","",null,null],[17,"NETLINK_GENERIC","","",null,null],[17,"NETLINK_SCSITRANSPORT","","",null,null],[17,"NETLINK_ECRYPTFS","","",null,null],[17,"NETLINK_RDMA","","",null,null],[17,"NETLINK_CRYPTO","","",null,null],[17,"NETLINK_INET_DIAG","","",null,null],[17,"NLM_F_REQUEST","","",null,null],[17,"NLM_F_MULTI","","",null,null],[17,"NLM_F_ACK","","",null,null],[17,"NLM_F_ECHO","","",null,null],[17,"NLM_F_DUMP_INTR","","",null,null],[17,"NLM_F_DUMP_FILTERED","","",null,null],[17,"NLM_F_ROOT","","",null,null],[17,"NLM_F_MATCH","","",null,null],[17,"NLM_F_ATOMIC","","",null,null],[17,"NLM_F_DUMP","","",null,null],[17,"NLM_F_REPLACE","","",null,null],[17,"NLM_F_EXCL","","",null,null],[17,"NLM_F_CREATE","","",null,null],[17,"NLM_F_APPEND","","",null,null],[17,"NETLINK_ADD_MEMBERSHIP","","",null,null],[17,"NETLINK_DROP_MEMBERSHIP","","",null,null],[17,"NETLINK_PKTINFO","","",null,null],[17,"NETLINK_BROADCAST_ERROR","","",null,null],[17,"NETLINK_NO_ENOBUFS","","",null,null],[17,"NETLINK_RX_RING","","",null,null],[17,"NETLINK_TX_RING","","",null,null],[17,"NETLINK_LISTEN_ALL_NSID","","",null,null],[17,"NETLINK_LIST_MEMBERSHIPS","","",null,null],[17,"NETLINK_CAP_ACK","","",null,null],[17,"NLA_F_NESTED","","",null,null],[17,"NLA_F_NET_BYTEORDER","","",null,null],[17,"NLA_TYPE_MASK","","",null,null],[17,"TCA_UNSPEC","","",null,null],[17,"TCA_KIND","","",null,null],[17,"TCA_OPTIONS","","",null,null],[17,"TCA_STATS","","",null,null],[17,"TCA_XSTATS","","",null,null],[17,"TCA_RATE","","",null,null],[17,"TCA_FCNT","","",null,null],[17,"TCA_STATS2","","",null,null],[17,"TCA_STAB","","",null,null],[17,"RTM_NEWLINK","","",null,null],[17,"RTM_DELLINK","","",null,null],[17,"RTM_GETLINK","","",null,null],[17,"RTM_SETLINK","","",null,null],[17,"RTM_NEWADDR","","",null,null],[17,"RTM_DELADDR","","",null,null],[17,"RTM_GETADDR","","",null,null],[17,"RTM_NEWROUTE","","",null,null],[17,"RTM_DELROUTE","","",null,null],[17,"RTM_GETROUTE","","",null,null],[17,"RTM_NEWNEIGH","","",null,null],[17,"RTM_DELNEIGH","","",null,null],[17,"RTM_GETNEIGH","","",null,null],[17,"RTM_NEWRULE","","",null,null],[17,"RTM_DELRULE","","",null,null],[17,"RTM_GETRULE","","",null,null],[17,"RTM_NEWQDISC","","",null,null],[17,"RTM_DELQDISC","","",null,null],[17,"RTM_GETQDISC","","",null,null],[17,"RTM_NEWTCLASS","","",null,null],[17,"RTM_DELTCLASS","","",null,null],[17,"RTM_GETTCLASS","","",null,null],[17,"RTM_NEWTFILTER","","",null,null],[17,"RTM_DELTFILTER","","",null,null],[17,"RTM_GETTFILTER","","",null,null],[17,"RTM_NEWACTION","","",null,null],[17,"RTM_DELACTION","","",null,null],[17,"RTM_GETACTION","","",null,null],[17,"RTM_NEWPREFIX","","",null,null],[17,"RTM_GETMULTICAST","","",null,null],[17,"RTM_GETANYCAST","","",null,null],[17,"RTM_NEWNEIGHTBL","","",null,null],[17,"RTM_GETNEIGHTBL","","",null,null],[17,"RTM_SETNEIGHTBL","","",null,null],[17,"RTM_NEWNDUSEROPT","","",null,null],[17,"RTM_NEWADDRLABEL","","",null,null],[17,"RTM_DELADDRLABEL","","",null,null],[17,"RTM_GETADDRLABEL","","",null,null],[17,"RTM_GETDCB","","",null,null],[17,"RTM_SETDCB","","",null,null],[17,"RTM_NEWNETCONF","","",null,null],[17,"RTM_GETNETCONF","","",null,null],[17,"RTM_NEWMDB","","",null,null],[17,"RTM_DELMDB","","",null,null],[17,"RTM_GETMDB","","",null,null],[17,"RTM_NEWNSID","","",null,null],[17,"RTM_DELNSID","","",null,null],[17,"RTM_GETNSID","","",null,null],[17,"RTM_F_NOTIFY","","",null,null],[17,"RTM_F_CLONED","","",null,null],[17,"RTM_F_EQUALIZE","","",null,null],[17,"RTM_F_PREFIX","","",null,null],[17,"RTA_UNSPEC","","",null,null],[17,"RTA_DST","","",null,null],[17,"RTA_SRC","","",null,null],[17,"RTA_IIF","","",null,null],[17,"RTA_OIF","","",null,null],[17,"RTA_GATEWAY","","",null,null],[17,"RTA_PRIORITY","","",null,null],[17,"RTA_PREFSRC","","",null,null],[17,"RTA_METRICS","","",null,null],[17,"RTA_MULTIPATH","","",null,null],[17,"RTA_PROTOINFO","","",null,null],[17,"RTA_FLOW","","",null,null],[17,"RTA_CACHEINFO","","",null,null],[17,"RTA_SESSION","","",null,null],[17,"RTA_MP_ALGO","","",null,null],[17,"RTA_TABLE","","",null,null],[17,"RTA_MARK","","",null,null],[17,"RTA_MFC_STATS","","",null,null],[17,"RTN_UNSPEC","","",null,null],[17,"RTN_UNICAST","","",null,null],[17,"RTN_LOCAL","","",null,null],[17,"RTN_BROADCAST","","",null,null],[17,"RTN_ANYCAST","","",null,null],[17,"RTN_MULTICAST","","",null,null],[17,"RTN_BLACKHOLE","","",null,null],[17,"RTN_UNREACHABLE","","",null,null],[17,"RTN_PROHIBIT","","",null,null],[17,"RTN_THROW","","",null,null],[17,"RTN_NAT","","",null,null],[17,"RTN_XRESOLVE","","",null,null],[17,"RTPROT_UNSPEC","","",null,null],[17,"RTPROT_REDIRECT","","",null,null],[17,"RTPROT_KERNEL","","",null,null],[17,"RTPROT_BOOT","","",null,null],[17,"RTPROT_STATIC","","",null,null],[17,"RT_SCOPE_UNIVERSE","","",null,null],[17,"RT_SCOPE_SITE","","",null,null],[17,"RT_SCOPE_LINK","","",null,null],[17,"RT_SCOPE_HOST","","",null,null],[17,"RT_SCOPE_NOWHERE","","",null,null],[17,"RT_TABLE_UNSPEC","","",null,null],[17,"RT_TABLE_COMPAT","","",null,null],[17,"RT_TABLE_DEFAULT","","",null,null],[17,"RT_TABLE_MAIN","","",null,null],[17,"RT_TABLE_LOCAL","","",null,null],[17,"RTMSG_OVERRUN","","",null,null],[17,"RTMSG_NEWDEVICE","","",null,null],[17,"RTMSG_DELDEVICE","","",null,null],[17,"RTMSG_NEWROUTE","","",null,null],[17,"RTMSG_DELROUTE","","",null,null],[17,"RTMSG_NEWRULE","","",null,null],[17,"RTMSG_DELRULE","","",null,null],[17,"RTMSG_CONTROL","","",null,null],[17,"RTMSG_AR_FAILED","","",null,null],[17,"MAX_ADDR_LEN","","",null,null],[17,"ARPD_UPDATE","","",null,null],[17,"ARPD_LOOKUP","","",null,null],[17,"ARPD_FLUSH","","",null,null],[17,"ATF_MAGIC","","",null,null],[17,"SO_TIMESTAMPING","","",null,null],[17,"SCM_TIMESTAMPING","","",null,null],[17,"MODULE_INIT_IGNORE_MODVERSIONS","","",null,null],[17,"MODULE_INIT_IGNORE_VERMAGIC","","",null,null],[17,"SOF_TIMESTAMPING_TX_HARDWARE","","",null,null],[17,"SOF_TIMESTAMPING_TX_SOFTWARE","","",null,null],[17,"SOF_TIMESTAMPING_RX_HARDWARE","","",null,null],[17,"SOF_TIMESTAMPING_RX_SOFTWARE","","",null,null],[17,"SOF_TIMESTAMPING_SOFTWARE","","",null,null],[17,"SOF_TIMESTAMPING_SYS_HARDWARE","","",null,null],[17,"SOF_TIMESTAMPING_RAW_HARDWARE","","",null,null],[17,"ALG_SET_KEY","","",null,null],[17,"ALG_SET_IV","","",null,null],[17,"ALG_SET_OP","","",null,null],[17,"ALG_SET_AEAD_ASSOCLEN","","",null,null],[17,"ALG_SET_AEAD_AUTHSIZE","","",null,null],[17,"ALG_OP_DECRYPT","","",null,null],[17,"ALG_OP_ENCRYPT","","",null,null],[17,"UDP_CORK","","",null,null],[17,"UDP_ENCAP","","",null,null],[17,"UDP_NO_CHECK6_TX","","",null,null],[17,"UDP_NO_CHECK6_RX","","",null,null],[17,"UDP_SEGMENT","","",null,null],[17,"UDP_GRO","","",null,null],[17,"MAP_SHARED_VALIDATE","","",null,null],[17,"MAP_FIXED_NOREPLACE","","",null,null],[17,"VMADDR_CID_ANY","","",null,null],[17,"VMADDR_CID_HYPERVISOR","","",null,null],[17,"VMADDR_CID_RESERVED","","",null,null],[17,"VMADDR_CID_LOCAL","","",null,null],[17,"VMADDR_CID_HOST","","",null,null],[17,"VMADDR_PORT_ANY","","",null,null],[17,"IN_ACCESS","","",null,null],[17,"IN_MODIFY","","",null,null],[17,"IN_ATTRIB","","",null,null],[17,"IN_CLOSE_WRITE","","",null,null],[17,"IN_CLOSE_NOWRITE","","",null,null],[17,"IN_CLOSE","","",null,null],[17,"IN_OPEN","","",null,null],[17,"IN_MOVED_FROM","","",null,null],[17,"IN_MOVED_TO","","",null,null],[17,"IN_MOVE","","",null,null],[17,"IN_CREATE","","",null,null],[17,"IN_DELETE","","",null,null],[17,"IN_DELETE_SELF","","",null,null],[17,"IN_MOVE_SELF","","",null,null],[17,"IN_UNMOUNT","","",null,null],[17,"IN_Q_OVERFLOW","","",null,null],[17,"IN_IGNORED","","",null,null],[17,"IN_ONLYDIR","","",null,null],[17,"IN_DONT_FOLLOW","","",null,null],[17,"KEY_SPEC_THREAD_KEYRING","","",null,null],[17,"KEY_SPEC_PROCESS_KEYRING","","",null,null],[17,"KEY_SPEC_SESSION_KEYRING","","",null,null],[17,"KEY_SPEC_USER_KEYRING","","",null,null],[17,"KEY_SPEC_USER_SESSION_KEYRING","","",null,null],[17,"KEY_SPEC_GROUP_KEYRING","","",null,null],[17,"KEY_SPEC_REQKEY_AUTH_KEY","","",null,null],[17,"KEY_SPEC_REQUESTOR_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_NO_CHANGE","","",null,null],[17,"KEY_REQKEY_DEFL_DEFAULT","","",null,null],[17,"KEY_REQKEY_DEFL_THREAD_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_PROCESS_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_SESSION_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_USER_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_USER_SESSION_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_GROUP_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_REQUESTOR_KEYRING","","",null,null],[17,"KEYCTL_GET_KEYRING_ID","","",null,null],[17,"KEYCTL_JOIN_SESSION_KEYRING","","",null,null],[17,"KEYCTL_UPDATE","","",null,null],[17,"KEYCTL_REVOKE","","",null,null],[17,"KEYCTL_CHOWN","","",null,null],[17,"KEYCTL_SETPERM","","",null,null],[17,"KEYCTL_DESCRIBE","","",null,null],[17,"KEYCTL_CLEAR","","",null,null],[17,"KEYCTL_LINK","","",null,null],[17,"KEYCTL_UNLINK","","",null,null],[17,"KEYCTL_SEARCH","","",null,null],[17,"KEYCTL_READ","","",null,null],[17,"KEYCTL_INSTANTIATE","","",null,null],[17,"KEYCTL_NEGATE","","",null,null],[17,"KEYCTL_SET_REQKEY_KEYRING","","",null,null],[17,"KEYCTL_SET_TIMEOUT","","",null,null],[17,"KEYCTL_ASSUME_AUTHORITY","","",null,null],[17,"KEYCTL_GET_SECURITY","","",null,null],[17,"KEYCTL_SESSION_TO_PARENT","","",null,null],[17,"KEYCTL_REJECT","","",null,null],[17,"KEYCTL_INSTANTIATE_IOV","","",null,null],[17,"KEYCTL_INVALIDATE","","",null,null],[17,"KEYCTL_GET_PERSISTENT","","",null,null],[17,"IN_ISDIR","","",null,null],[17,"IN_ONESHOT","","",null,null],[17,"IN_ALL_EVENTS","","",null,null],[17,"IN_CLOEXEC","","",null,null],[17,"IN_NONBLOCK","","",null,null],[17,"FAN_ACCESS","","",null,null],[17,"FAN_MODIFY","","",null,null],[17,"FAN_CLOSE_WRITE","","",null,null],[17,"FAN_CLOSE_NOWRITE","","",null,null],[17,"FAN_OPEN","","",null,null],[17,"FAN_Q_OVERFLOW","","",null,null],[17,"FAN_OPEN_PERM","","",null,null],[17,"FAN_ACCESS_PERM","","",null,null],[17,"FAN_ONDIR","","",null,null],[17,"FAN_EVENT_ON_CHILD","","",null,null],[17,"FAN_CLOSE","","",null,null],[17,"FAN_CLOEXEC","","",null,null],[17,"FAN_NONBLOCK","","",null,null],[17,"FAN_CLASS_NOTIF","","",null,null],[17,"FAN_CLASS_CONTENT","","",null,null],[17,"FAN_CLASS_PRE_CONTENT","","",null,null],[17,"FAN_UNLIMITED_QUEUE","","",null,null],[17,"FAN_UNLIMITED_MARKS","","",null,null],[17,"FAN_MARK_ADD","","",null,null],[17,"FAN_MARK_REMOVE","","",null,null],[17,"FAN_MARK_DONT_FOLLOW","","",null,null],[17,"FAN_MARK_ONLYDIR","","",null,null],[17,"FAN_MARK_INODE","","",null,null],[17,"FAN_MARK_MOUNT","","",null,null],[17,"FAN_MARK_FILESYSTEM","","",null,null],[17,"FAN_MARK_IGNORED_MASK","","",null,null],[17,"FAN_MARK_IGNORED_SURV_MODIFY","","",null,null],[17,"FAN_MARK_FLUSH","","",null,null],[17,"FANOTIFY_METADATA_VERSION","","",null,null],[17,"FAN_ALLOW","","",null,null],[17,"FAN_DENY","","",null,null],[17,"FAN_NOFD","","",null,null],[17,"FUTEX_WAIT","","",null,null],[17,"FUTEX_WAKE","","",null,null],[17,"FUTEX_FD","","",null,null],[17,"FUTEX_REQUEUE","","",null,null],[17,"FUTEX_CMP_REQUEUE","","",null,null],[17,"FUTEX_WAKE_OP","","",null,null],[17,"FUTEX_LOCK_PI","","",null,null],[17,"FUTEX_UNLOCK_PI","","",null,null],[17,"FUTEX_TRYLOCK_PI","","",null,null],[17,"FUTEX_WAIT_BITSET","","",null,null],[17,"FUTEX_WAKE_BITSET","","",null,null],[17,"FUTEX_WAIT_REQUEUE_PI","","",null,null],[17,"FUTEX_CMP_REQUEUE_PI","","",null,null],[17,"FUTEX_PRIVATE_FLAG","","",null,null],[17,"FUTEX_CLOCK_REALTIME","","",null,null],[17,"FUTEX_CMD_MASK","","",null,null],[17,"LINUX_REBOOT_MAGIC1","","",null,null],[17,"LINUX_REBOOT_MAGIC2","","",null,null],[17,"LINUX_REBOOT_MAGIC2A","","",null,null],[17,"LINUX_REBOOT_MAGIC2B","","",null,null],[17,"LINUX_REBOOT_MAGIC2C","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART","","",null,null],[17,"LINUX_REBOOT_CMD_HALT","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_ON","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_POWER_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART2","","",null,null],[17,"LINUX_REBOOT_CMD_SW_SUSPEND","","",null,null],[17,"LINUX_REBOOT_CMD_KEXEC","","",null,null],[17,"REG_EXTENDED","","",null,null],[17,"REG_ICASE","","",null,null],[17,"REG_NEWLINE","","",null,null],[17,"REG_NOSUB","","",null,null],[17,"REG_NOTBOL","","",null,null],[17,"REG_NOTEOL","","",null,null],[17,"REG_ENOSYS","","",null,null],[17,"REG_NOMATCH","","",null,null],[17,"REG_BADPAT","","",null,null],[17,"REG_ECOLLATE","","",null,null],[17,"REG_ECTYPE","","",null,null],[17,"REG_EESCAPE","","",null,null],[17,"REG_ESUBREG","","",null,null],[17,"REG_EBRACK","","",null,null],[17,"REG_EPAREN","","",null,null],[17,"REG_EBRACE","","",null,null],[17,"REG_BADBR","","",null,null],[17,"REG_ERANGE","","",null,null],[17,"REG_ESPACE","","",null,null],[17,"REG_BADRPT","","",null,null],[17,"SO_EE_ORIGIN_NONE","","",null,null],[17,"SO_EE_ORIGIN_LOCAL","","",null,null],[17,"SO_EE_ORIGIN_ICMP","","",null,null],[17,"SO_EE_ORIGIN_ICMP6","","",null,null],[17,"SO_EE_ORIGIN_TXSTATUS","","",null,null],[17,"SO_EE_ORIGIN_TIMESTAMPING","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EAGAIN","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"HUGETLB_FLAG_ENCODE_SHIFT","","",null,null],[17,"HUGETLB_FLAG_ENCODE_MASK","","",null,null],[17,"HUGETLB_FLAG_ENCODE_64KB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_512KB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_1MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_2MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_8MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_16MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_32MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_256MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_512MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_1GB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_2GB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_16GB","","",null,null],[17,"MAP_HUGE_SHIFT","","",null,null],[17,"MAP_HUGE_MASK","","",null,null],[17,"MAP_HUGE_64KB","","",null,null],[17,"MAP_HUGE_512KB","","",null,null],[17,"MAP_HUGE_1MB","","",null,null],[17,"MAP_HUGE_2MB","","",null,null],[17,"MAP_HUGE_8MB","","",null,null],[17,"MAP_HUGE_16MB","","",null,null],[17,"MAP_HUGE_32MB","","",null,null],[17,"MAP_HUGE_256MB","","",null,null],[17,"MAP_HUGE_512MB","","",null,null],[17,"MAP_HUGE_1GB","","",null,null],[17,"MAP_HUGE_2GB","","",null,null],[17,"MAP_HUGE_16GB","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_LOCKS","","",null,null],[17,"RLIMIT_SIGPENDING","","",null,null],[17,"RLIMIT_MSGQUEUE","","",null,null],[17,"RLIMIT_NICE","","",null,null],[17,"RLIMIT_RTPRIO","","",null,null],[17,"RLIMIT_RTTIME","","",null,null],[17,"RLIMIT_NLIMITS","","",null,null],[17,"PRIO_PROCESS","","",null,null],[17,"PRIO_PGRP","","",null,null],[17,"PRIO_USER","","",null,null],[17,"MS_RMT_MASK","","",null,null],[17,"__UT_LINESIZE","","",null,null],[17,"__UT_NAMESIZE","","",null,null],[17,"__UT_HOSTSIZE","","",null,null],[17,"EMPTY","","",null,null],[17,"RUN_LVL","","",null,null],[17,"BOOT_TIME","","",null,null],[17,"NEW_TIME","","",null,null],[17,"OLD_TIME","","",null,null],[17,"INIT_PROCESS","","",null,null],[17,"LOGIN_PROCESS","","",null,null],[17,"USER_PROCESS","","",null,null],[17,"DEAD_PROCESS","","",null,null],[17,"ACCOUNTING","","",null,null],[17,"LM_ID_BASE","","",null,null],[17,"LM_ID_NEWLM","","",null,null],[17,"RTLD_DI_LMID","","",null,null],[17,"RTLD_DI_LINKMAP","","",null,null],[17,"RTLD_DI_CONFIGADDR","","",null,null],[17,"RTLD_DI_SERINFO","","",null,null],[17,"RTLD_DI_SERINFOSIZE","","",null,null],[17,"RTLD_DI_ORIGIN","","",null,null],[17,"RTLD_DI_PROFILENAME","","",null,null],[17,"RTLD_DI_PROFILEOUT","","",null,null],[17,"RTLD_DI_TLS_MODID","","",null,null],[17,"RTLD_DI_TLS_DATA","","",null,null],[17,"SOCK_NONBLOCK","","",null,null],[17,"SOL_RXRPC","","",null,null],[17,"SOL_PPPOL2TP","","",null,null],[17,"SOL_PNPIPE","","",null,null],[17,"SOL_RDS","","",null,null],[17,"SOL_IUCV","","",null,null],[17,"SOL_CAIF","","",null,null],[17,"SOL_NFC","","",null,null],[17,"SOL_XDP","","",null,null],[17,"MSG_TRYHARD","","",null,null],[17,"LC_PAPER","","",null,null],[17,"LC_NAME","","",null,null],[17,"LC_ADDRESS","","",null,null],[17,"LC_TELEPHONE","","",null,null],[17,"LC_MEASUREMENT","","",null,null],[17,"LC_IDENTIFICATION","","",null,null],[17,"LC_PAPER_MASK","","",null,null],[17,"LC_NAME_MASK","","",null,null],[17,"LC_ADDRESS_MASK","","",null,null],[17,"LC_TELEPHONE_MASK","","",null,null],[17,"LC_MEASUREMENT_MASK","","",null,null],[17,"LC_IDENTIFICATION_MASK","","",null,null],[17,"LC_ALL_MASK","","",null,null],[17,"ENOTSUP","","",null,null],[17,"SOCK_SEQPACKET","","",null,null],[17,"SOCK_DCCP","","",null,null],[17,"SOCK_PACKET","","",null,null],[17,"TCP_COOKIE_TRANSACTIONS","","",null,null],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",null,null],[17,"TCP_THIN_DUPACK","","",null,null],[17,"TCP_USER_TIMEOUT","","",null,null],[17,"TCP_REPAIR","","",null,null],[17,"TCP_REPAIR_QUEUE","","",null,null],[17,"TCP_QUEUE_SEQ","","",null,null],[17,"TCP_REPAIR_OPTIONS","","",null,null],[17,"TCP_FASTOPEN","","",null,null],[17,"TCP_TIMESTAMP","","",null,null],[17,"TCP_FASTOPEN_CONNECT","","",null,null],[17,"DCCP_SOCKOPT_PACKET_SIZE","","",null,null],[17,"DCCP_SOCKOPT_SERVICE","","",null,null],[17,"DCCP_SOCKOPT_CHANGE_L","","",null,null],[17,"DCCP_SOCKOPT_CHANGE_R","","",null,null],[17,"DCCP_SOCKOPT_GET_CUR_MPS","","",null,null],[17,"DCCP_SOCKOPT_SERVER_TIMEWAIT","","",null,null],[17,"DCCP_SOCKOPT_SEND_CSCOV","","",null,null],[17,"DCCP_SOCKOPT_RECV_CSCOV","","",null,null],[17,"DCCP_SOCKOPT_AVAILABLE_CCIDS","","",null,null],[17,"DCCP_SOCKOPT_CCID","","",null,null],[17,"DCCP_SOCKOPT_TX_CCID","","",null,null],[17,"DCCP_SOCKOPT_RX_CCID","","",null,null],[17,"DCCP_SOCKOPT_QPOLICY_ID","","",null,null],[17,"DCCP_SOCKOPT_QPOLICY_TXQLEN","","",null,null],[17,"DCCP_SOCKOPT_CCID_RX_INFO","","",null,null],[17,"DCCP_SOCKOPT_CCID_TX_INFO","","",null,null],[17,"DCCP_SERVICE_LIST_MAX_LEN","","maximum number of services provided on the same listening…",null,null],[17,"SIGEV_THREAD_ID","","",null,null],[17,"BUFSIZ","","",null,null],[17,"TMP_MAX","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_EQUIV_CLASS_MAX","","",null,null],[17,"_SC_CHARCLASS_NAME_MAX","","",null,null],[17,"_SC_PII","","",null,null],[17,"_SC_PII_XTI","","",null,null],[17,"_SC_PII_SOCKET","","",null,null],[17,"_SC_PII_INTERNET","","",null,null],[17,"_SC_PII_OSI","","",null,null],[17,"_SC_POLL","","",null,null],[17,"_SC_SELECT","","",null,null],[17,"_SC_PII_INTERNET_STREAM","","",null,null],[17,"_SC_PII_INTERNET_DGRAM","","",null,null],[17,"_SC_PII_OSI_COTS","","",null,null],[17,"_SC_PII_OSI_CLTS","","",null,null],[17,"_SC_PII_OSI_M","","",null,null],[17,"_SC_T_IOV_MAX","","",null,null],[17,"_SC_2_C_VERSION","","",null,null],[17,"_SC_CHAR_BIT","","",null,null],[17,"_SC_CHAR_MAX","","",null,null],[17,"_SC_CHAR_MIN","","",null,null],[17,"_SC_INT_MAX","","",null,null],[17,"_SC_INT_MIN","","",null,null],[17,"_SC_LONG_BIT","","",null,null],[17,"_SC_WORD_BIT","","",null,null],[17,"_SC_MB_LEN_MAX","","",null,null],[17,"_SC_SSIZE_MAX","","",null,null],[17,"_SC_SCHAR_MAX","","",null,null],[17,"_SC_SCHAR_MIN","","",null,null],[17,"_SC_SHRT_MAX","","",null,null],[17,"_SC_SHRT_MIN","","",null,null],[17,"_SC_UCHAR_MAX","","",null,null],[17,"_SC_UINT_MAX","","",null,null],[17,"_SC_ULONG_MAX","","",null,null],[17,"_SC_USHRT_MAX","","",null,null],[17,"_SC_NL_ARGMAX","","",null,null],[17,"_SC_NL_LANGMAX","","",null,null],[17,"_SC_NL_MSGMAX","","",null,null],[17,"_SC_NL_NMAX","","",null,null],[17,"_SC_NL_SETMAX","","",null,null],[17,"_SC_NL_TEXTMAX","","",null,null],[17,"_SC_BASE","","",null,null],[17,"_SC_C_LANG_SUPPORT","","",null,null],[17,"_SC_C_LANG_SUPPORT_R","","",null,null],[17,"_SC_DEVICE_IO","","",null,null],[17,"_SC_DEVICE_SPECIFIC","","",null,null],[17,"_SC_DEVICE_SPECIFIC_R","","",null,null],[17,"_SC_FD_MGMT","","",null,null],[17,"_SC_FIFO","","",null,null],[17,"_SC_PIPE","","",null,null],[17,"_SC_FILE_ATTRIBUTES","","",null,null],[17,"_SC_FILE_LOCKING","","",null,null],[17,"_SC_FILE_SYSTEM","","",null,null],[17,"_SC_MULTI_PROCESS","","",null,null],[17,"_SC_SINGLE_PROCESS","","",null,null],[17,"_SC_NETWORKING","","",null,null],[17,"_SC_REGEX_VERSION","","",null,null],[17,"_SC_SIGNALS","","",null,null],[17,"_SC_SYSTEM_DATABASE","","",null,null],[17,"_SC_SYSTEM_DATABASE_R","","",null,null],[17,"_SC_USER_GROUPS","","",null,null],[17,"_SC_USER_GROUPS_R","","",null,null],[17,"_SC_LEVEL1_ICACHE_SIZE","","",null,null],[17,"_SC_LEVEL1_ICACHE_ASSOC","","",null,null],[17,"_SC_LEVEL1_ICACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL1_DCACHE_SIZE","","",null,null],[17,"_SC_LEVEL1_DCACHE_ASSOC","","",null,null],[17,"_SC_LEVEL1_DCACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL2_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL2_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL2_CACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL3_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL3_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL3_CACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL4_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL4_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL4_CACHE_LINESIZE","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"ST_RELATIME","","",null,null],[17,"NI_MAXHOST","","",null,null],[17,"ADFS_SUPER_MAGIC","","",null,null],[17,"AFFS_SUPER_MAGIC","","",null,null],[17,"AFS_SUPER_MAGIC","","",null,null],[17,"AUTOFS_SUPER_MAGIC","","",null,null],[17,"BINDERFS_SUPER_MAGIC","","",null,null],[17,"BTRFS_SUPER_MAGIC","","",null,null],[17,"CGROUP2_SUPER_MAGIC","","",null,null],[17,"CGROUP_SUPER_MAGIC","","",null,null],[17,"CODA_SUPER_MAGIC","","",null,null],[17,"CRAMFS_MAGIC","","",null,null],[17,"DEVPTS_SUPER_MAGIC","","",null,null],[17,"ECRYPTFS_SUPER_MAGIC","","",null,null],[17,"EFS_SUPER_MAGIC","","",null,null],[17,"EXT2_SUPER_MAGIC","","",null,null],[17,"EXT3_SUPER_MAGIC","","",null,null],[17,"EXT4_SUPER_MAGIC","","",null,null],[17,"F2FS_SUPER_MAGIC","","",null,null],[17,"FUTEXFS_SUPER_MAGIC","","",null,null],[17,"HOSTFS_SUPER_MAGIC","","",null,null],[17,"HPFS_SUPER_MAGIC","","",null,null],[17,"HUGETLBFS_MAGIC","","",null,null],[17,"ISOFS_SUPER_MAGIC","","",null,null],[17,"JFFS2_SUPER_MAGIC","","",null,null],[17,"MINIX2_SUPER_MAGIC2","","",null,null],[17,"MINIX2_SUPER_MAGIC","","",null,null],[17,"MINIX3_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC2","","",null,null],[17,"MINIX_SUPER_MAGIC","","",null,null],[17,"MSDOS_SUPER_MAGIC","","",null,null],[17,"NCP_SUPER_MAGIC","","",null,null],[17,"NFS_SUPER_MAGIC","","",null,null],[17,"NILFS_SUPER_MAGIC","","",null,null],[17,"OCFS2_SUPER_MAGIC","","",null,null],[17,"OPENPROM_SUPER_MAGIC","","",null,null],[17,"OVERLAYFS_SUPER_MAGIC","","",null,null],[17,"PROC_SUPER_MAGIC","","",null,null],[17,"QNX4_SUPER_MAGIC","","",null,null],[17,"QNX6_SUPER_MAGIC","","",null,null],[17,"RDTGROUP_SUPER_MAGIC","","",null,null],[17,"REISERFS_SUPER_MAGIC","","",null,null],[17,"SMB_SUPER_MAGIC","","",null,null],[17,"TMPFS_MAGIC","","",null,null],[17,"UDF_SUPER_MAGIC","","",null,null],[17,"USBDEVICE_SUPER_MAGIC","","",null,null],[17,"XENFS_SUPER_MAGIC","","",null,null],[17,"XFS_SUPER_MAGIC","","",null,null],[17,"CPU_SETSIZE","","",null,null],[17,"PTRACE_TRACEME","","",null,null],[17,"PTRACE_PEEKTEXT","","",null,null],[17,"PTRACE_PEEKDATA","","",null,null],[17,"PTRACE_PEEKUSER","","",null,null],[17,"PTRACE_POKETEXT","","",null,null],[17,"PTRACE_POKEDATA","","",null,null],[17,"PTRACE_POKEUSER","","",null,null],[17,"PTRACE_CONT","","",null,null],[17,"PTRACE_KILL","","",null,null],[17,"PTRACE_SINGLESTEP","","",null,null],[17,"PTRACE_ATTACH","","",null,null],[17,"PTRACE_SYSCALL","","",null,null],[17,"PTRACE_SETOPTIONS","","",null,null],[17,"PTRACE_GETEVENTMSG","","",null,null],[17,"PTRACE_GETSIGINFO","","",null,null],[17,"PTRACE_SETSIGINFO","","",null,null],[17,"PTRACE_GETREGSET","","",null,null],[17,"PTRACE_SETREGSET","","",null,null],[17,"PTRACE_SEIZE","","",null,null],[17,"PTRACE_INTERRUPT","","",null,null],[17,"PTRACE_LISTEN","","",null,null],[17,"PTRACE_PEEKSIGINFO","","",null,null],[17,"EPOLLWAKEUP","","",null,null],[17,"SEEK_DATA","","",null,null],[17,"SEEK_HOLE","","",null,null],[17,"TCA_PAD","","",null,null],[17,"TCA_DUMP_INVISIBLE","","",null,null],[17,"TCA_CHAIN","","",null,null],[17,"TCA_HW_OFFLOAD","","",null,null],[17,"RTM_DELNETCONF","","",null,null],[17,"RTM_NEWSTATS","","",null,null],[17,"RTM_GETSTATS","","",null,null],[17,"RTM_NEWCACHEREPORT","","",null,null],[17,"RTM_F_LOOKUP_TABLE","","",null,null],[17,"RTM_F_FIB_MATCH","","",null,null],[17,"RTA_VIA","","",null,null],[17,"RTA_NEWDST","","",null,null],[17,"RTA_PREF","","",null,null],[17,"RTA_ENCAP_TYPE","","",null,null],[17,"RTA_ENCAP","","",null,null],[17,"RTA_EXPIRES","","",null,null],[17,"RTA_PAD","","",null,null],[17,"RTA_UID","","",null,null],[17,"RTA_TTL_PROPAGATE","","",null,null],[17,"NTF_EXT_LEARNED","","",null,null],[17,"NTF_OFFLOADED","","",null,null],[17,"NDA_MASTER","","",null,null],[17,"NDA_LINK_NETNSID","","",null,null],[17,"NDA_SRC_VNI","","",null,null],[17,"UNAME26","","",null,null],[17,"FDPIC_FUNCPTRS","","",null,null],[17,"IFA_FLAGS","","",null,null],[17,"IFA_F_MANAGETEMPADDR","","",null,null],[17,"IFA_F_NOPREFIXROUTE","","",null,null],[17,"IFA_F_MCAUTOJOIN","","",null,null],[17,"IFA_F_STABLE_PRIVACY","","",null,null],[17,"MAX_LINKS","","",null,null],[17,"GENL_UNS_ADMIN_PERM","","",null,null],[17,"GENL_ID_VFS_DQUOT","","",null,null],[17,"GENL_ID_PMCRAID","","",null,null],[17,"TIOCM_LE","","",null,null],[17,"TIOCM_DTR","","",null,null],[17,"TIOCM_RTS","","",null,null],[17,"TIOCM_CD","","",null,null],[17,"TIOCM_RI","","",null,null],[17,"NF_NETDEV_INGRESS","","",null,null],[17,"NF_NETDEV_NUMHOOKS","","",null,null],[17,"NFPROTO_INET","","",null,null],[17,"NFPROTO_NETDEV","","",null,null],[17,"KEYCTL_DH_COMPUTE","","",null,null],[17,"KEYCTL_PKEY_QUERY","","",null,null],[17,"KEYCTL_PKEY_ENCRYPT","","",null,null],[17,"KEYCTL_PKEY_DECRYPT","","",null,null],[17,"KEYCTL_PKEY_SIGN","","",null,null],[17,"KEYCTL_PKEY_VERIFY","","",null,null],[17,"KEYCTL_RESTRICT_KEYRING","","",null,null],[17,"KEYCTL_SUPPORTS_ENCRYPT","","",null,null],[17,"KEYCTL_SUPPORTS_DECRYPT","","",null,null],[17,"KEYCTL_SUPPORTS_SIGN","","",null,null],[17,"KEYCTL_SUPPORTS_VERIFY","","",null,null],[17,"KEYCTL_MOVE","","",null,null],[17,"KEYCTL_CAPABILITIES","","",null,null],[17,"KEYCTL_CAPS0_CAPABILITIES","","",null,null],[17,"KEYCTL_CAPS0_PERSISTENT_KEYRINGS","","",null,null],[17,"KEYCTL_CAPS0_DIFFIE_HELLMAN","","",null,null],[17,"KEYCTL_CAPS0_PUBLIC_KEY","","",null,null],[17,"KEYCTL_CAPS0_BIG_KEY","","",null,null],[17,"KEYCTL_CAPS0_INVALIDATE","","",null,null],[17,"KEYCTL_CAPS0_RESTRICT_KEYRING","","",null,null],[17,"KEYCTL_CAPS0_MOVE","","",null,null],[17,"KEYCTL_CAPS1_NS_KEYRING_NAME","","",null,null],[17,"KEYCTL_CAPS1_NS_KEY_TAG","","",null,null],[17,"NFT_TABLE_MAXNAMELEN","","",null,null],[17,"NFT_CHAIN_MAXNAMELEN","","",null,null],[17,"NFT_SET_MAXNAMELEN","","",null,null],[17,"NFT_OBJ_MAXNAMELEN","","",null,null],[17,"NFT_USERDATA_MAXLEN","","",null,null],[17,"NFT_REG_VERDICT","","",null,null],[17,"NFT_REG_1","","",null,null],[17,"NFT_REG_2","","",null,null],[17,"NFT_REG_3","","",null,null],[17,"NFT_REG_4","","",null,null],[17,"__NFT_REG_MAX","","",null,null],[17,"NFT_REG32_00","","",null,null],[17,"NFT_REG32_01","","",null,null],[17,"NFT_REG32_02","","",null,null],[17,"NFT_REG32_03","","",null,null],[17,"NFT_REG32_04","","",null,null],[17,"NFT_REG32_05","","",null,null],[17,"NFT_REG32_06","","",null,null],[17,"NFT_REG32_07","","",null,null],[17,"NFT_REG32_08","","",null,null],[17,"NFT_REG32_09","","",null,null],[17,"NFT_REG32_10","","",null,null],[17,"NFT_REG32_11","","",null,null],[17,"NFT_REG32_12","","",null,null],[17,"NFT_REG32_13","","",null,null],[17,"NFT_REG32_14","","",null,null],[17,"NFT_REG32_15","","",null,null],[17,"NFT_REG_SIZE","","",null,null],[17,"NFT_REG32_SIZE","","",null,null],[17,"NFT_CONTINUE","","",null,null],[17,"NFT_BREAK","","",null,null],[17,"NFT_JUMP","","",null,null],[17,"NFT_GOTO","","",null,null],[17,"NFT_RETURN","","",null,null],[17,"NFT_MSG_NEWTABLE","","",null,null],[17,"NFT_MSG_GETTABLE","","",null,null],[17,"NFT_MSG_DELTABLE","","",null,null],[17,"NFT_MSG_NEWCHAIN","","",null,null],[17,"NFT_MSG_GETCHAIN","","",null,null],[17,"NFT_MSG_DELCHAIN","","",null,null],[17,"NFT_MSG_NEWRULE","","",null,null],[17,"NFT_MSG_GETRULE","","",null,null],[17,"NFT_MSG_DELRULE","","",null,null],[17,"NFT_MSG_NEWSET","","",null,null],[17,"NFT_MSG_GETSET","","",null,null],[17,"NFT_MSG_DELSET","","",null,null],[17,"NFT_MSG_NEWSETELEM","","",null,null],[17,"NFT_MSG_GETSETELEM","","",null,null],[17,"NFT_MSG_DELSETELEM","","",null,null],[17,"NFT_MSG_NEWGEN","","",null,null],[17,"NFT_MSG_GETGEN","","",null,null],[17,"NFT_MSG_TRACE","","",null,null],[17,"NFT_MSG_NEWOBJ","","",null,null],[17,"NFT_MSG_GETOBJ","","",null,null],[17,"NFT_MSG_DELOBJ","","",null,null],[17,"NFT_MSG_GETOBJ_RESET","","",null,null],[17,"NFT_MSG_MAX","","",null,null],[17,"NFT_SET_ANONYMOUS","","",null,null],[17,"NFT_SET_CONSTANT","","",null,null],[17,"NFT_SET_INTERVAL","","",null,null],[17,"NFT_SET_MAP","","",null,null],[17,"NFT_SET_TIMEOUT","","",null,null],[17,"NFT_SET_EVAL","","",null,null],[17,"NFT_SET_POL_PERFORMANCE","","",null,null],[17,"NFT_SET_POL_MEMORY","","",null,null],[17,"NFT_SET_ELEM_INTERVAL_END","","",null,null],[17,"NFT_DATA_VALUE","","",null,null],[17,"NFT_DATA_VERDICT","","",null,null],[17,"NFT_DATA_RESERVED_MASK","","",null,null],[17,"NFT_DATA_VALUE_MAXLEN","","",null,null],[17,"NFT_BYTEORDER_NTOH","","",null,null],[17,"NFT_BYTEORDER_HTON","","",null,null],[17,"NFT_CMP_EQ","","",null,null],[17,"NFT_CMP_NEQ","","",null,null],[17,"NFT_CMP_LT","","",null,null],[17,"NFT_CMP_LTE","","",null,null],[17,"NFT_CMP_GT","","",null,null],[17,"NFT_CMP_GTE","","",null,null],[17,"NFT_RANGE_EQ","","",null,null],[17,"NFT_RANGE_NEQ","","",null,null],[17,"NFT_LOOKUP_F_INV","","",null,null],[17,"NFT_DYNSET_OP_ADD","","",null,null],[17,"NFT_DYNSET_OP_UPDATE","","",null,null],[17,"NFT_DYNSET_F_INV","","",null,null],[17,"NFT_PAYLOAD_LL_HEADER","","",null,null],[17,"NFT_PAYLOAD_NETWORK_HEADER","","",null,null],[17,"NFT_PAYLOAD_TRANSPORT_HEADER","","",null,null],[17,"NFT_PAYLOAD_CSUM_NONE","","",null,null],[17,"NFT_PAYLOAD_CSUM_INET","","",null,null],[17,"NFT_META_LEN","","",null,null],[17,"NFT_META_PROTOCOL","","",null,null],[17,"NFT_META_PRIORITY","","",null,null],[17,"NFT_META_MARK","","",null,null],[17,"NFT_META_IIF","","",null,null],[17,"NFT_META_OIF","","",null,null],[17,"NFT_META_IIFNAME","","",null,null],[17,"NFT_META_OIFNAME","","",null,null],[17,"NFT_META_IIFTYPE","","",null,null],[17,"NFT_META_OIFTYPE","","",null,null],[17,"NFT_META_SKUID","","",null,null],[17,"NFT_META_SKGID","","",null,null],[17,"NFT_META_NFTRACE","","",null,null],[17,"NFT_META_RTCLASSID","","",null,null],[17,"NFT_META_SECMARK","","",null,null],[17,"NFT_META_NFPROTO","","",null,null],[17,"NFT_META_L4PROTO","","",null,null],[17,"NFT_META_BRI_IIFNAME","","",null,null],[17,"NFT_META_BRI_OIFNAME","","",null,null],[17,"NFT_META_PKTTYPE","","",null,null],[17,"NFT_META_CPU","","",null,null],[17,"NFT_META_IIFGROUP","","",null,null],[17,"NFT_META_OIFGROUP","","",null,null],[17,"NFT_META_CGROUP","","",null,null],[17,"NFT_META_PRANDOM","","",null,null],[17,"NFT_CT_STATE","","",null,null],[17,"NFT_CT_DIRECTION","","",null,null],[17,"NFT_CT_STATUS","","",null,null],[17,"NFT_CT_MARK","","",null,null],[17,"NFT_CT_SECMARK","","",null,null],[17,"NFT_CT_EXPIRATION","","",null,null],[17,"NFT_CT_HELPER","","",null,null],[17,"NFT_CT_L3PROTOCOL","","",null,null],[17,"NFT_CT_SRC","","",null,null],[17,"NFT_CT_DST","","",null,null],[17,"NFT_CT_PROTOCOL","","",null,null],[17,"NFT_CT_PROTO_SRC","","",null,null],[17,"NFT_CT_PROTO_DST","","",null,null],[17,"NFT_CT_LABELS","","",null,null],[17,"NFT_CT_PKTS","","",null,null],[17,"NFT_CT_BYTES","","",null,null],[17,"NFT_LIMIT_PKTS","","",null,null],[17,"NFT_LIMIT_PKT_BYTES","","",null,null],[17,"NFT_LIMIT_F_INV","","",null,null],[17,"NFT_QUEUE_FLAG_BYPASS","","",null,null],[17,"NFT_QUEUE_FLAG_CPU_FANOUT","","",null,null],[17,"NFT_QUEUE_FLAG_MASK","","",null,null],[17,"NFT_QUOTA_F_INV","","",null,null],[17,"NFT_REJECT_ICMP_UNREACH","","",null,null],[17,"NFT_REJECT_TCP_RST","","",null,null],[17,"NFT_REJECT_ICMPX_UNREACH","","",null,null],[17,"NFT_REJECT_ICMPX_NO_ROUTE","","",null,null],[17,"NFT_REJECT_ICMPX_PORT_UNREACH","","",null,null],[17,"NFT_REJECT_ICMPX_HOST_UNREACH","","",null,null],[17,"NFT_REJECT_ICMPX_ADMIN_PROHIBITED","","",null,null],[17,"NFT_NAT_SNAT","","",null,null],[17,"NFT_NAT_DNAT","","",null,null],[17,"NFT_TRACETYPE_UNSPEC","","",null,null],[17,"NFT_TRACETYPE_POLICY","","",null,null],[17,"NFT_TRACETYPE_RETURN","","",null,null],[17,"NFT_TRACETYPE_RULE","","",null,null],[17,"NFT_NG_INCREMENTAL","","",null,null],[17,"NFT_NG_RANDOM","","",null,null],[17,"M_MXFAST","","",null,null],[17,"M_NLBLKS","","",null,null],[17,"M_GRAIN","","",null,null],[17,"M_KEEP","","",null,null],[17,"M_TRIM_THRESHOLD","","",null,null],[17,"M_TOP_PAD","","",null,null],[17,"M_MMAP_THRESHOLD","","",null,null],[17,"M_MMAP_MAX","","",null,null],[17,"M_CHECK_ACTION","","",null,null],[17,"M_PERTURB","","",null,null],[17,"M_ARENA_TEST","","",null,null],[17,"M_ARENA_MAX","","",null,null],[17,"AT_STATX_SYNC_TYPE","","",null,null],[17,"AT_STATX_SYNC_AS_STAT","","",null,null],[17,"AT_STATX_FORCE_SYNC","","",null,null],[17,"AT_STATX_DONT_SYNC","","",null,null],[17,"STATX_TYPE","","",null,null],[17,"STATX_MODE","","",null,null],[17,"STATX_NLINK","","",null,null],[17,"STATX_UID","","",null,null],[17,"STATX_GID","","",null,null],[17,"STATX_ATIME","","",null,null],[17,"STATX_MTIME","","",null,null],[17,"STATX_CTIME","","",null,null],[17,"STATX_INO","","",null,null],[17,"STATX_SIZE","","",null,null],[17,"STATX_BLOCKS","","",null,null],[17,"STATX_BASIC_STATS","","",null,null],[17,"STATX_BTIME","","",null,null],[17,"STATX_ALL","","",null,null],[17,"STATX__RESERVED","","",null,null],[17,"STATX_ATTR_COMPRESSED","","",null,null],[17,"STATX_ATTR_IMMUTABLE","","",null,null],[17,"STATX_ATTR_APPEND","","",null,null],[17,"STATX_ATTR_NODUMP","","",null,null],[17,"STATX_ATTR_ENCRYPTED","","",null,null],[17,"STATX_ATTR_AUTOMOUNT","","",null,null],[17,"AT_NULL","","",null,null],[17,"AT_IGNORE","","",null,null],[17,"AT_EXECFD","","",null,null],[17,"AT_PHDR","","",null,null],[17,"AT_PHENT","","",null,null],[17,"AT_PHNUM","","",null,null],[17,"AT_PAGESZ","","",null,null],[17,"AT_BASE","","",null,null],[17,"AT_FLAGS","","",null,null],[17,"AT_ENTRY","","",null,null],[17,"AT_NOTELF","","",null,null],[17,"AT_UID","","",null,null],[17,"AT_EUID","","",null,null],[17,"AT_GID","","",null,null],[17,"AT_EGID","","",null,null],[17,"AT_PLATFORM","","",null,null],[17,"AT_HWCAP","","",null,null],[17,"AT_CLKTCK","","",null,null],[17,"AT_SECURE","","",null,null],[17,"AT_BASE_PLATFORM","","",null,null],[17,"AT_RANDOM","","",null,null],[17,"AT_HWCAP2","","",null,null],[17,"AT_EXECFN","","",null,null],[17,"ADJ_OFFSET","","",null,null],[17,"ADJ_FREQUENCY","","",null,null],[17,"ADJ_MAXERROR","","",null,null],[17,"ADJ_ESTERROR","","",null,null],[17,"ADJ_STATUS","","",null,null],[17,"ADJ_TIMECONST","","",null,null],[17,"ADJ_TAI","","",null,null],[17,"ADJ_SETOFFSET","","",null,null],[17,"ADJ_MICRO","","",null,null],[17,"ADJ_NANO","","",null,null],[17,"ADJ_TICK","","",null,null],[17,"ADJ_OFFSET_SINGLESHOT","","",null,null],[17,"ADJ_OFFSET_SS_READ","","",null,null],[17,"MOD_OFFSET","","",null,null],[17,"MOD_FREQUENCY","","",null,null],[17,"MOD_MAXERROR","","",null,null],[17,"MOD_ESTERROR","","",null,null],[17,"MOD_STATUS","","",null,null],[17,"MOD_TIMECONST","","",null,null],[17,"MOD_CLKB","","",null,null],[17,"MOD_CLKA","","",null,null],[17,"MOD_TAI","","",null,null],[17,"MOD_MICRO","","",null,null],[17,"MOD_NANO","","",null,null],[17,"STA_PLL","","",null,null],[17,"STA_PPSFREQ","","",null,null],[17,"STA_PPSTIME","","",null,null],[17,"STA_FLL","","",null,null],[17,"STA_INS","","",null,null],[17,"STA_DEL","","",null,null],[17,"STA_UNSYNC","","",null,null],[17,"STA_FREQHOLD","","",null,null],[17,"STA_PPSSIGNAL","","",null,null],[17,"STA_PPSJITTER","","",null,null],[17,"STA_PPSWANDER","","",null,null],[17,"STA_PPSERROR","","",null,null],[17,"STA_CLOCKERR","","",null,null],[17,"STA_NANO","","",null,null],[17,"STA_MODE","","",null,null],[17,"STA_CLK","","",null,null],[17,"STA_RONLY","","",null,null],[17,"NTP_API","","",null,null],[17,"TIME_OK","","",null,null],[17,"TIME_INS","","",null,null],[17,"TIME_DEL","","",null,null],[17,"TIME_OOP","","",null,null],[17,"TIME_WAIT","","",null,null],[17,"TIME_ERROR","","",null,null],[17,"TIME_BAD","","",null,null],[17,"MAXTC","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"PTHREAD_MUTEX_ADAPTIVE_NP","","",null,null],[17,"REG_STARTEND","","",null,null],[17,"REG_EEND","","",null,null],[17,"REG_ESIZE","","",null,null],[17,"REG_ERPAREN","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCKATTR_T","","",null,null],[17,"O_LARGEFILE","","",null,null],[17,"POSIX_FADV_DONTNEED","","",null,null],[17,"POSIX_FADV_NOREUSE","","",null,null],[17,"VEOF","","",null,null],[17,"RTLD_DEEPBIND","","",null,null],[17,"RTLD_GLOBAL","","",null,null],[17,"RTLD_NOLOAD","","",null,null],[17,"TIOCGSOFTCAR","","",null,null],[17,"TIOCSSOFTCAR","","",null,null],[17,"TIOCGRS485","","",null,null],[17,"TIOCSRS485","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_SYNC","","",null,null],[17,"O_RSYNC","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_FSYNC","","",null,null],[17,"O_NOATIME","","",null,null],[17,"O_PATH","","",null,null],[17,"O_TMPFILE","","",null,null],[17,"MADV_SOFT_OFFLINE","","",null,null],[17,"MAP_GROWSDOWN","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"ELOOP","","",null,null],[17,"ENOMSG","","",null,null],[17,"EIDRM","","",null,null],[17,"ECHRNG","","",null,null],[17,"EL2NSYNC","","",null,null],[17,"EL3HLT","","",null,null],[17,"EL3RST","","",null,null],[17,"ELNRNG","","",null,null],[17,"EUNATCH","","",null,null],[17,"ENOCSI","","",null,null],[17,"EL2HLT","","",null,null],[17,"EBADE","","",null,null],[17,"EBADR","","",null,null],[17,"EXFULL","","",null,null],[17,"ENOANO","","",null,null],[17,"EBADRQC","","",null,null],[17,"EBADSLT","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"ENOTUNIQ","","",null,null],[17,"EBADFD","","",null,null],[17,"EBADMSG","","",null,null],[17,"EREMCHG","","",null,null],[17,"ELIBACC","","",null,null],[17,"ELIBBAD","","",null,null],[17,"ELIBSCN","","",null,null],[17,"ELIBMAX","","",null,null],[17,"ELIBEXEC","","",null,null],[17,"EILSEQ","","",null,null],[17,"ERESTART","","",null,null],[17,"ESTRPIPE","","",null,null],[17,"EUSERS","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"EALREADY","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"ESTALE","","",null,null],[17,"EDQUOT","","",null,null],[17,"ENOMEDIUM","","",null,null],[17,"EMEDIUMTYPE","","",null,null],[17,"ECANCELED","","",null,null],[17,"ENOKEY","","",null,null],[17,"EKEYEXPIRED","","",null,null],[17,"EKEYREVOKED","","",null,null],[17,"EKEYREJECTED","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EHWPOISON","","",null,null],[17,"ERFKILL","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_SNDBUFFORCE","","",null,null],[17,"SO_RCVBUFFORCE","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_NO_CHECK","","",null,null],[17,"SO_PRIORITY","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_BSDCOMPAT","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_PASSCRED","","",null,null],[17,"SO_PEERCRED","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"SO_SECURITY_AUTHENTICATION","","",null,null],[17,"SO_SECURITY_ENCRYPTION_TRANSPORT","","",null,null],[17,"SO_SECURITY_ENCRYPTION_NETWORK","","",null,null],[17,"SO_BINDTODEVICE","","",null,null],[17,"SO_ATTACH_FILTER","","",null,null],[17,"SO_DETACH_FILTER","","",null,null],[17,"SO_GET_FILTER","","",null,null],[17,"SO_PEERNAME","","",null,null],[17,"SO_TIMESTAMP","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"SO_PEERSEC","","",null,null],[17,"SO_PASSSEC","","",null,null],[17,"SO_TIMESTAMPNS","","",null,null],[17,"SCM_TIMESTAMPNS","","",null,null],[17,"SO_MARK","","",null,null],[17,"SO_PROTOCOL","","",null,null],[17,"SO_DOMAIN","","",null,null],[17,"SO_RXQ_OVFL","","",null,null],[17,"SO_WIFI_STATUS","","",null,null],[17,"SCM_WIFI_STATUS","","",null,null],[17,"SO_PEEK_OFF","","",null,null],[17,"SO_NOFCS","","",null,null],[17,"SO_LOCK_FILTER","","",null,null],[17,"SO_SELECT_ERR_QUEUE","","",null,null],[17,"SO_BUSY_POLL","","",null,null],[17,"SO_MAX_PACING_RATE","","",null,null],[17,"SO_BPF_EXTENSIONS","","",null,null],[17,"SO_INCOMING_CPU","","",null,null],[17,"SO_ATTACH_BPF","","",null,null],[17,"SO_DETACH_BPF","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SA_ONSTACK","","",null,null],[17,"SA_SIGINFO","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[17,"SIGTTIN","","",null,null],[17,"SIGTTOU","","",null,null],[17,"SIGXCPU","","",null,null],[17,"SIGXFSZ","","",null,null],[17,"SIGVTALRM","","",null,null],[17,"SIGPROF","","",null,null],[17,"SIGWINCH","","",null,null],[17,"SIGCHLD","","",null,null],[17,"SIGBUS","","",null,null],[17,"SIGUSR1","","",null,null],[17,"SIGUSR2","","",null,null],[17,"SIGCONT","","",null,null],[17,"SIGSTOP","","",null,null],[17,"SIGTSTP","","",null,null],[17,"SIGURG","","",null,null],[17,"SIGIO","","",null,null],[17,"SIGSYS","","",null,null],[17,"SIGSTKFLT","","",null,null],[17,"SIGUNUSED","","",null,null],[17,"SIGPOLL","","",null,null],[17,"SIGPWR","","",null,null],[17,"SIG_SETMASK","","",null,null],[17,"SIG_BLOCK","","",null,null],[17,"SIG_UNBLOCK","","",null,null],[17,"POLLWRNORM","","",null,null],[17,"POLLWRBAND","","",null,null],[17,"O_ASYNC","","",null,null],[17,"O_NDELAY","","",null,null],[17,"PTRACE_DETACH","","",null,null],[17,"EFD_NONBLOCK","","",null,null],[17,"F_GETLK","","",null,null],[17,"F_GETOWN","","",null,null],[17,"F_SETOWN","","",null,null],[17,"F_SETLK","","",null,null],[17,"F_SETLKW","","",null,null],[17,"F_OFD_GETLK","","",null,null],[17,"F_OFD_SETLK","","",null,null],[17,"F_OFD_SETLKW","","",null,null],[17,"F_RDLCK","","",null,null],[17,"F_WRLCK","","",null,null],[17,"F_UNLCK","","",null,null],[17,"SFD_NONBLOCK","","",null,null],[17,"TCSANOW","","",null,null],[17,"TCSADRAIN","","",null,null],[17,"TCSAFLUSH","","",null,null],[17,"TIOCLINUX","","",null,null],[17,"TIOCGSERIAL","","",null,null],[17,"TIOCEXCL","","",null,null],[17,"TIOCNXCL","","",null,null],[17,"TIOCSCTTY","","",null,null],[17,"TIOCSTI","","",null,null],[17,"TIOCMGET","","",null,null],[17,"TIOCMBIS","","",null,null],[17,"TIOCMBIC","","",null,null],[17,"TIOCMSET","","",null,null],[17,"TIOCCONS","","",null,null],[17,"TIOCM_ST","","",null,null],[17,"TIOCM_SR","","",null,null],[17,"TIOCM_CTS","","",null,null],[17,"TIOCM_CAR","","",null,null],[17,"TIOCM_RNG","","",null,null],[17,"TIOCM_DSR","","",null,null],[17,"SFD_CLOEXEC","","",null,null],[17,"NCCS","","",null,null],[17,"O_TRUNC","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"EBFONT","","",null,null],[17,"ENOSTR","","",null,null],[17,"ENODATA","","",null,null],[17,"ETIME","","",null,null],[17,"ENOSR","","",null,null],[17,"ENONET","","",null,null],[17,"ENOPKG","","",null,null],[17,"EREMOTE","","",null,null],[17,"ENOLINK","","",null,null],[17,"EADV","","",null,null],[17,"ESRMNT","","",null,null],[17,"ECOMM","","",null,null],[17,"EPROTO","","",null,null],[17,"EDOTDOT","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"SA_RESTART","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"EPOLL_CLOEXEC","","",null,null],[17,"EFD_CLOEXEC","","",null,null],[17,"__SIZEOF_PTHREAD_CONDATTR_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T","","",null,null],[17,"O_DIRECT","","",null,null],[17,"O_DIRECTORY","","",null,null],[17,"O_NOFOLLOW","","",null,null],[17,"MAP_HUGETLB","","",null,null],[17,"MAP_LOCKED","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_32BIT","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"MAP_DENYWRITE","","",null,null],[17,"MAP_EXECUTABLE","","",null,null],[17,"MAP_POPULATE","","",null,null],[17,"MAP_NONBLOCK","","",null,null],[17,"MAP_STACK","","",null,null],[17,"MAP_SYNC","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"EUCLEAN","","",null,null],[17,"ENOTNAM","","",null,null],[17,"ENAVAIL","","",null,null],[17,"EISNAM","","",null,null],[17,"EREMOTEIO","","",null,null],[17,"FIOCLEX","","",null,null],[17,"FIONCLEX","","",null,null],[17,"FIONBIO","","",null,null],[17,"PTRACE_GETFPREGS","","",null,null],[17,"PTRACE_SETFPREGS","","",null,null],[17,"PTRACE_GETFPXREGS","","",null,null],[17,"PTRACE_SETFPXREGS","","",null,null],[17,"PTRACE_GETREGS","","",null,null],[17,"PTRACE_SETREGS","","",null,null],[17,"PTRACE_PEEKSIGINFO_SHARED","","",null,null],[17,"PTRACE_SYSEMU","","",null,null],[17,"PTRACE_SYSEMU_SINGLESTEP","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"SIGSTKSZ","","",null,null],[17,"MINSIGSTKSZ","","",null,null],[17,"CBAUD","","",null,null],[17,"TAB1","","",null,null],[17,"TAB2","","",null,null],[17,"TAB3","","",null,null],[17,"CR1","","",null,null],[17,"CR2","","",null,null],[17,"CR3","","",null,null],[17,"FF1","","",null,null],[17,"BS1","","",null,null],[17,"VT1","","",null,null],[17,"VWERASE","","",null,null],[17,"VREPRINT","","",null,null],[17,"VSUSP","","",null,null],[17,"VSTART","","",null,null],[17,"VSTOP","","",null,null],[17,"VDISCARD","","",null,null],[17,"VTIME","","",null,null],[17,"IXON","","",null,null],[17,"IXOFF","","",null,null],[17,"ONLCR","","",null,null],[17,"CSIZE","","",null,null],[17,"CS6","","",null,null],[17,"CS7","","",null,null],[17,"CS8","","",null,null],[17,"CSTOPB","","",null,null],[17,"CREAD","","",null,null],[17,"PARENB","","",null,null],[17,"PARODD","","",null,null],[17,"HUPCL","","",null,null],[17,"CLOCAL","","",null,null],[17,"ECHOKE","","",null,null],[17,"ECHOE","","",null,null],[17,"ECHOK","","",null,null],[17,"ECHONL","","",null,null],[17,"ECHOPRT","","",null,null],[17,"ECHOCTL","","",null,null],[17,"ISIG","","",null,null],[17,"ICANON","","",null,null],[17,"PENDIN","","",null,null],[17,"NOFLSH","","",null,null],[17,"CIBAUD","","",null,null],[17,"CBAUDEX","","",null,null],[17,"VSWTC","","",null,null],[17,"OLCUC","","",null,null],[17,"NLDLY","","",null,null],[17,"CRDLY","","",null,null],[17,"TABDLY","","",null,null],[17,"BSDLY","","",null,null],[17,"FFDLY","","",null,null],[17,"VTDLY","","",null,null],[17,"XTABS","","",null,null],[17,"B0","","",null,null],[17,"B50","","",null,null],[17,"B75","","",null,null],[17,"B110","","",null,null],[17,"B134","","",null,null],[17,"B150","","",null,null],[17,"B200","","",null,null],[17,"B300","","",null,null],[17,"B600","","",null,null],[17,"B1200","","",null,null],[17,"B1800","","",null,null],[17,"B2400","","",null,null],[17,"B4800","","",null,null],[17,"B9600","","",null,null],[17,"B19200","","",null,null],[17,"B38400","","",null,null],[17,"EXTA","","",null,null],[17,"EXTB","","",null,null],[17,"BOTHER","","",null,null],[17,"B57600","","",null,null],[17,"B115200","","",null,null],[17,"B230400","","",null,null],[17,"B460800","","",null,null],[17,"B500000","","",null,null],[17,"B576000","","",null,null],[17,"B921600","","",null,null],[17,"B1000000","","",null,null],[17,"B1152000","","",null,null],[17,"B1500000","","",null,null],[17,"B2000000","","",null,null],[17,"B2500000","","",null,null],[17,"B3000000","","",null,null],[17,"B3500000","","",null,null],[17,"B4000000","","",null,null],[17,"VEOL","","",null,null],[17,"VEOL2","","",null,null],[17,"VMIN","","",null,null],[17,"IEXTEN","","",null,null],[17,"TOSTOP","","",null,null],[17,"FLUSHO","","",null,null],[17,"EXTPROC","","",null,null],[17,"TCGETS","","",null,null],[17,"TCSETS","","",null,null],[17,"TCSETSW","","",null,null],[17,"TCSETSF","","",null,null],[17,"TCGETA","","",null,null],[17,"TCSETA","","",null,null],[17,"TCSETAW","","",null,null],[17,"TCSETAF","","",null,null],[17,"TCSBRK","","",null,null],[17,"TCXONC","","",null,null],[17,"TCFLSH","","",null,null],[17,"TIOCINQ","","",null,null],[17,"TIOCGPGRP","","",null,null],[17,"TIOCSPGRP","","",null,null],[17,"TIOCOUTQ","","",null,null],[17,"TIOCGWINSZ","","",null,null],[17,"TIOCSWINSZ","","",null,null],[17,"FIONREAD","","",null,null],[17,"TIOCSBRK","","",null,null],[17,"TIOCCBRK","","",null,null],[17,"R15","","",null,null],[17,"R14","","",null,null],[17,"R13","","",null,null],[17,"R12","","",null,null],[17,"RBP","","",null,null],[17,"RBX","","",null,null],[17,"R11","","",null,null],[17,"R10","","",null,null],[17,"R9","","",null,null],[17,"R8","","",null,null],[17,"RAX","","",null,null],[17,"RCX","","",null,null],[17,"RDX","","",null,null],[17,"RSI","","",null,null],[17,"RDI","","",null,null],[17,"ORIG_RAX","","",null,null],[17,"RIP","","",null,null],[17,"CS","","",null,null],[17,"EFLAGS","","",null,null],[17,"RSP","","",null,null],[17,"SS","","",null,null],[17,"FS_BASE","","",null,null],[17,"GS_BASE","","",null,null],[17,"DS","","",null,null],[17,"ES","","",null,null],[17,"FS","","",null,null],[17,"GS","","",null,null],[17,"REG_R8","","",null,null],[17,"REG_R9","","",null,null],[17,"REG_R10","","",null,null],[17,"REG_R11","","",null,null],[17,"REG_R12","","",null,null],[17,"REG_R13","","",null,null],[17,"REG_R14","","",null,null],[17,"REG_R15","","",null,null],[17,"REG_RDI","","",null,null],[17,"REG_RSI","","",null,null],[17,"REG_RBP","","",null,null],[17,"REG_RBX","","",null,null],[17,"REG_RDX","","",null,null],[17,"REG_RAX","","",null,null],[17,"REG_RCX","","",null,null],[17,"REG_RSP","","",null,null],[17,"REG_RIP","","",null,null],[17,"REG_EFL","","",null,null],[17,"REG_CSGSFS","","",null,null],[17,"REG_ERR","","",null,null],[17,"REG_TRAPNO","","",null,null],[17,"REG_OLDMASK","","",null,null],[17,"REG_CR2","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEX_T","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCK_T","","",null,null],[17,"PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP","","",null,null],[17,"PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP","","",null,null],[17,"PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP","","",null,null],[17,"SYS_read","","",null,null],[17,"SYS_write","","",null,null],[17,"SYS_open","","",null,null],[17,"SYS_close","","",null,null],[17,"SYS_stat","","",null,null],[17,"SYS_fstat","","",null,null],[17,"SYS_lstat","","",null,null],[17,"SYS_poll","","",null,null],[17,"SYS_lseek","","",null,null],[17,"SYS_mmap","","",null,null],[17,"SYS_mprotect","","",null,null],[17,"SYS_munmap","","",null,null],[17,"SYS_brk","","",null,null],[17,"SYS_rt_sigaction","","",null,null],[17,"SYS_rt_sigprocmask","","",null,null],[17,"SYS_rt_sigreturn","","",null,null],[17,"SYS_ioctl","","",null,null],[17,"SYS_pread64","","",null,null],[17,"SYS_pwrite64","","",null,null],[17,"SYS_readv","","",null,null],[17,"SYS_writev","","",null,null],[17,"SYS_access","","",null,null],[17,"SYS_pipe","","",null,null],[17,"SYS_select","","",null,null],[17,"SYS_sched_yield","","",null,null],[17,"SYS_mremap","","",null,null],[17,"SYS_msync","","",null,null],[17,"SYS_mincore","","",null,null],[17,"SYS_madvise","","",null,null],[17,"SYS_shmget","","",null,null],[17,"SYS_shmat","","",null,null],[17,"SYS_shmctl","","",null,null],[17,"SYS_dup","","",null,null],[17,"SYS_dup2","","",null,null],[17,"SYS_pause","","",null,null],[17,"SYS_nanosleep","","",null,null],[17,"SYS_getitimer","","",null,null],[17,"SYS_alarm","","",null,null],[17,"SYS_setitimer","","",null,null],[17,"SYS_getpid","","",null,null],[17,"SYS_sendfile","","",null,null],[17,"SYS_socket","","",null,null],[17,"SYS_connect","","",null,null],[17,"SYS_accept","","",null,null],[17,"SYS_sendto","","",null,null],[17,"SYS_recvfrom","","",null,null],[17,"SYS_sendmsg","","",null,null],[17,"SYS_recvmsg","","",null,null],[17,"SYS_shutdown","","",null,null],[17,"SYS_bind","","",null,null],[17,"SYS_listen","","",null,null],[17,"SYS_getsockname","","",null,null],[17,"SYS_getpeername","","",null,null],[17,"SYS_socketpair","","",null,null],[17,"SYS_setsockopt","","",null,null],[17,"SYS_getsockopt","","",null,null],[17,"SYS_clone","","",null,null],[17,"SYS_fork","","",null,null],[17,"SYS_vfork","","",null,null],[17,"SYS_execve","","",null,null],[17,"SYS_exit","","",null,null],[17,"SYS_wait4","","",null,null],[17,"SYS_kill","","",null,null],[17,"SYS_uname","","",null,null],[17,"SYS_semget","","",null,null],[17,"SYS_semop","","",null,null],[17,"SYS_semctl","","",null,null],[17,"SYS_shmdt","","",null,null],[17,"SYS_msgget","","",null,null],[17,"SYS_msgsnd","","",null,null],[17,"SYS_msgrcv","","",null,null],[17,"SYS_msgctl","","",null,null],[17,"SYS_fcntl","","",null,null],[17,"SYS_flock","","",null,null],[17,"SYS_fsync","","",null,null],[17,"SYS_fdatasync","","",null,null],[17,"SYS_truncate","","",null,null],[17,"SYS_ftruncate","","",null,null],[17,"SYS_getdents","","",null,null],[17,"SYS_getcwd","","",null,null],[17,"SYS_chdir","","",null,null],[17,"SYS_fchdir","","",null,null],[17,"SYS_rename","","",null,null],[17,"SYS_mkdir","","",null,null],[17,"SYS_rmdir","","",null,null],[17,"SYS_creat","","",null,null],[17,"SYS_link","","",null,null],[17,"SYS_unlink","","",null,null],[17,"SYS_symlink","","",null,null],[17,"SYS_readlink","","",null,null],[17,"SYS_chmod","","",null,null],[17,"SYS_fchmod","","",null,null],[17,"SYS_chown","","",null,null],[17,"SYS_fchown","","",null,null],[17,"SYS_lchown","","",null,null],[17,"SYS_umask","","",null,null],[17,"SYS_gettimeofday","","",null,null],[17,"SYS_getrlimit","","",null,null],[17,"SYS_getrusage","","",null,null],[17,"SYS_sysinfo","","",null,null],[17,"SYS_times","","",null,null],[17,"SYS_ptrace","","",null,null],[17,"SYS_getuid","","",null,null],[17,"SYS_syslog","","",null,null],[17,"SYS_getgid","","",null,null],[17,"SYS_setuid","","",null,null],[17,"SYS_setgid","","",null,null],[17,"SYS_geteuid","","",null,null],[17,"SYS_getegid","","",null,null],[17,"SYS_setpgid","","",null,null],[17,"SYS_getppid","","",null,null],[17,"SYS_getpgrp","","",null,null],[17,"SYS_setsid","","",null,null],[17,"SYS_setreuid","","",null,null],[17,"SYS_setregid","","",null,null],[17,"SYS_getgroups","","",null,null],[17,"SYS_setgroups","","",null,null],[17,"SYS_setresuid","","",null,null],[17,"SYS_getresuid","","",null,null],[17,"SYS_setresgid","","",null,null],[17,"SYS_getresgid","","",null,null],[17,"SYS_getpgid","","",null,null],[17,"SYS_setfsuid","","",null,null],[17,"SYS_setfsgid","","",null,null],[17,"SYS_getsid","","",null,null],[17,"SYS_capget","","",null,null],[17,"SYS_capset","","",null,null],[17,"SYS_rt_sigpending","","",null,null],[17,"SYS_rt_sigtimedwait","","",null,null],[17,"SYS_rt_sigqueueinfo","","",null,null],[17,"SYS_rt_sigsuspend","","",null,null],[17,"SYS_sigaltstack","","",null,null],[17,"SYS_utime","","",null,null],[17,"SYS_mknod","","",null,null],[17,"SYS_uselib","","",null,null],[17,"SYS_personality","","",null,null],[17,"SYS_ustat","","",null,null],[17,"SYS_statfs","","",null,null],[17,"SYS_fstatfs","","",null,null],[17,"SYS_sysfs","","",null,null],[17,"SYS_getpriority","","",null,null],[17,"SYS_setpriority","","",null,null],[17,"SYS_sched_setparam","","",null,null],[17,"SYS_sched_getparam","","",null,null],[17,"SYS_sched_setscheduler","","",null,null],[17,"SYS_sched_getscheduler","","",null,null],[17,"SYS_sched_get_priority_max","","",null,null],[17,"SYS_sched_get_priority_min","","",null,null],[17,"SYS_sched_rr_get_interval","","",null,null],[17,"SYS_mlock","","",null,null],[17,"SYS_munlock","","",null,null],[17,"SYS_mlockall","","",null,null],[17,"SYS_munlockall","","",null,null],[17,"SYS_vhangup","","",null,null],[17,"SYS_modify_ldt","","",null,null],[17,"SYS_pivot_root","","",null,null],[17,"SYS__sysctl","","",null,null],[17,"SYS_prctl","","",null,null],[17,"SYS_arch_prctl","","",null,null],[17,"SYS_adjtimex","","",null,null],[17,"SYS_setrlimit","","",null,null],[17,"SYS_chroot","","",null,null],[17,"SYS_sync","","",null,null],[17,"SYS_acct","","",null,null],[17,"SYS_settimeofday","","",null,null],[17,"SYS_mount","","",null,null],[17,"SYS_umount2","","",null,null],[17,"SYS_swapon","","",null,null],[17,"SYS_swapoff","","",null,null],[17,"SYS_reboot","","",null,null],[17,"SYS_sethostname","","",null,null],[17,"SYS_setdomainname","","",null,null],[17,"SYS_iopl","","",null,null],[17,"SYS_ioperm","","",null,null],[17,"SYS_create_module","","",null,null],[17,"SYS_init_module","","",null,null],[17,"SYS_delete_module","","",null,null],[17,"SYS_get_kernel_syms","","",null,null],[17,"SYS_query_module","","",null,null],[17,"SYS_quotactl","","",null,null],[17,"SYS_nfsservctl","","",null,null],[17,"SYS_getpmsg","","",null,null],[17,"SYS_putpmsg","","",null,null],[17,"SYS_afs_syscall","","",null,null],[17,"SYS_tuxcall","","",null,null],[17,"SYS_security","","",null,null],[17,"SYS_gettid","","",null,null],[17,"SYS_readahead","","",null,null],[17,"SYS_setxattr","","",null,null],[17,"SYS_lsetxattr","","",null,null],[17,"SYS_fsetxattr","","",null,null],[17,"SYS_getxattr","","",null,null],[17,"SYS_lgetxattr","","",null,null],[17,"SYS_fgetxattr","","",null,null],[17,"SYS_listxattr","","",null,null],[17,"SYS_llistxattr","","",null,null],[17,"SYS_flistxattr","","",null,null],[17,"SYS_removexattr","","",null,null],[17,"SYS_lremovexattr","","",null,null],[17,"SYS_fremovexattr","","",null,null],[17,"SYS_tkill","","",null,null],[17,"SYS_time","","",null,null],[17,"SYS_futex","","",null,null],[17,"SYS_sched_setaffinity","","",null,null],[17,"SYS_sched_getaffinity","","",null,null],[17,"SYS_set_thread_area","","",null,null],[17,"SYS_io_setup","","",null,null],[17,"SYS_io_destroy","","",null,null],[17,"SYS_io_getevents","","",null,null],[17,"SYS_io_submit","","",null,null],[17,"SYS_io_cancel","","",null,null],[17,"SYS_get_thread_area","","",null,null],[17,"SYS_lookup_dcookie","","",null,null],[17,"SYS_epoll_create","","",null,null],[17,"SYS_epoll_ctl_old","","",null,null],[17,"SYS_epoll_wait_old","","",null,null],[17,"SYS_remap_file_pages","","",null,null],[17,"SYS_getdents64","","",null,null],[17,"SYS_set_tid_address","","",null,null],[17,"SYS_restart_syscall","","",null,null],[17,"SYS_semtimedop","","",null,null],[17,"SYS_fadvise64","","",null,null],[17,"SYS_timer_create","","",null,null],[17,"SYS_timer_settime","","",null,null],[17,"SYS_timer_gettime","","",null,null],[17,"SYS_timer_getoverrun","","",null,null],[17,"SYS_timer_delete","","",null,null],[17,"SYS_clock_settime","","",null,null],[17,"SYS_clock_gettime","","",null,null],[17,"SYS_clock_getres","","",null,null],[17,"SYS_clock_nanosleep","","",null,null],[17,"SYS_exit_group","","",null,null],[17,"SYS_epoll_wait","","",null,null],[17,"SYS_epoll_ctl","","",null,null],[17,"SYS_tgkill","","",null,null],[17,"SYS_utimes","","",null,null],[17,"SYS_vserver","","",null,null],[17,"SYS_mbind","","",null,null],[17,"SYS_set_mempolicy","","",null,null],[17,"SYS_get_mempolicy","","",null,null],[17,"SYS_mq_open","","",null,null],[17,"SYS_mq_unlink","","",null,null],[17,"SYS_mq_timedsend","","",null,null],[17,"SYS_mq_timedreceive","","",null,null],[17,"SYS_mq_notify","","",null,null],[17,"SYS_mq_getsetattr","","",null,null],[17,"SYS_kexec_load","","",null,null],[17,"SYS_waitid","","",null,null],[17,"SYS_add_key","","",null,null],[17,"SYS_request_key","","",null,null],[17,"SYS_keyctl","","",null,null],[17,"SYS_ioprio_set","","",null,null],[17,"SYS_ioprio_get","","",null,null],[17,"SYS_inotify_init","","",null,null],[17,"SYS_inotify_add_watch","","",null,null],[17,"SYS_inotify_rm_watch","","",null,null],[17,"SYS_migrate_pages","","",null,null],[17,"SYS_openat","","",null,null],[17,"SYS_mkdirat","","",null,null],[17,"SYS_mknodat","","",null,null],[17,"SYS_fchownat","","",null,null],[17,"SYS_futimesat","","",null,null],[17,"SYS_newfstatat","","",null,null],[17,"SYS_unlinkat","","",null,null],[17,"SYS_renameat","","",null,null],[17,"SYS_linkat","","",null,null],[17,"SYS_symlinkat","","",null,null],[17,"SYS_readlinkat","","",null,null],[17,"SYS_fchmodat","","",null,null],[17,"SYS_faccessat","","",null,null],[17,"SYS_pselect6","","",null,null],[17,"SYS_ppoll","","",null,null],[17,"SYS_unshare","","",null,null],[17,"SYS_set_robust_list","","",null,null],[17,"SYS_get_robust_list","","",null,null],[17,"SYS_splice","","",null,null],[17,"SYS_tee","","",null,null],[17,"SYS_sync_file_range","","",null,null],[17,"SYS_vmsplice","","",null,null],[17,"SYS_move_pages","","",null,null],[17,"SYS_utimensat","","",null,null],[17,"SYS_epoll_pwait","","",null,null],[17,"SYS_signalfd","","",null,null],[17,"SYS_timerfd_create","","",null,null],[17,"SYS_eventfd","","",null,null],[17,"SYS_fallocate","","",null,null],[17,"SYS_timerfd_settime","","",null,null],[17,"SYS_timerfd_gettime","","",null,null],[17,"SYS_accept4","","",null,null],[17,"SYS_signalfd4","","",null,null],[17,"SYS_eventfd2","","",null,null],[17,"SYS_epoll_create1","","",null,null],[17,"SYS_dup3","","",null,null],[17,"SYS_pipe2","","",null,null],[17,"SYS_inotify_init1","","",null,null],[17,"SYS_preadv","","",null,null],[17,"SYS_pwritev","","",null,null],[17,"SYS_rt_tgsigqueueinfo","","",null,null],[17,"SYS_perf_event_open","","",null,null],[17,"SYS_recvmmsg","","",null,null],[17,"SYS_fanotify_init","","",null,null],[17,"SYS_fanotify_mark","","",null,null],[17,"SYS_prlimit64","","",null,null],[17,"SYS_name_to_handle_at","","",null,null],[17,"SYS_open_by_handle_at","","",null,null],[17,"SYS_clock_adjtime","","",null,null],[17,"SYS_syncfs","","",null,null],[17,"SYS_sendmmsg","","",null,null],[17,"SYS_setns","","",null,null],[17,"SYS_getcpu","","",null,null],[17,"SYS_process_vm_readv","","",null,null],[17,"SYS_process_vm_writev","","",null,null],[17,"SYS_kcmp","","",null,null],[17,"SYS_finit_module","","",null,null],[17,"SYS_sched_setattr","","",null,null],[17,"SYS_sched_getattr","","",null,null],[17,"SYS_renameat2","","",null,null],[17,"SYS_seccomp","","",null,null],[17,"SYS_getrandom","","",null,null],[17,"SYS_memfd_create","","",null,null],[17,"SYS_kexec_file_load","","",null,null],[17,"SYS_bpf","","",null,null],[17,"SYS_execveat","","",null,null],[17,"SYS_userfaultfd","","",null,null],[17,"SYS_membarrier","","",null,null],[17,"SYS_mlock2","","",null,null],[17,"SYS_copy_file_range","","",null,null],[17,"SYS_preadv2","","",null,null],[17,"SYS_pwritev2","","",null,null],[17,"SYS_pkey_mprotect","","",null,null],[17,"SYS_pkey_alloc","","",null,null],[17,"SYS_pkey_free","","",null,null],[17,"SYS_statx","","",null,null],[17,"SYS_pidfd_open","","",null,null],[17,"SYS_clone3","","",null,null],[11,"from","","",139,[[]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"into","","",139,[[]]],[11,"try_into","","",139,[[],["result",4]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",140,[[]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"into","","",140,[[]]],[11,"try_into","","",140,[[],["result",4]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"into","","",30,[[]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",141,[[]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"into","","",141,[[]]],[11,"try_into","","",141,[[],["result",4]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"into","","",31,[[]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"into","","",32,[[]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"into","","",33,[[]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"into","","",34,[[]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"into","","",35,[[]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"into","","",36,[[]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"into","","",37,[[]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"into","","",38,[[]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"into","","",39,[[]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"into","","",40,[[]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"into","","",41,[[]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"into","","",42,[[]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"into","","",43,[[]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"into","","",44,[[]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"into","","",45,[[]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"into","","",46,[[]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",142,[[]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"into","","",142,[[]]],[11,"try_into","","",142,[[],["result",4]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"into","","",47,[[]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",143,[[]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"into","","",143,[[]]],[11,"try_into","","",143,[[],["result",4]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"into","","",48,[[]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"into","","",49,[[]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"into","","",50,[[]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"into","","",51,[[]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"into","","",52,[[]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"into","","",53,[[]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"into","","",54,[[]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"into","","",55,[[]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"into","","",56,[[]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"into","","",57,[[]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"into","","",58,[[]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"into","","",59,[[]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"into","","",60,[[]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"into","","",61,[[]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"into","","",62,[[]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"from","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"into","","",63,[[]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"into","","",64,[[]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"into","","",65,[[]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"into","","",66,[[]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"into","","",67,[[]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"into","","",68,[[]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"from","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"into","","",69,[[]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"into","","",70,[[]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"from","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"into","","",71,[[]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"into","","",72,[[]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"into","","",73,[[]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"into","","",74,[[]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"into","","",75,[[]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"into","","",76,[[]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"from","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"into","","",77,[[]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from","","",144,[[]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"into","","",144,[[]]],[11,"try_into","","",144,[[],["result",4]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"from","","",145,[[]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"into","","",145,[[]]],[11,"try_into","","",145,[[],["result",4]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"from","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"into","","",78,[[]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"from","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"into","","",79,[[]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"from","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"into","","",80,[[]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"from","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"into","","",81,[[]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"from","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"into","","",82,[[]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"from","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"into","","",83,[[]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"from","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"into","","",84,[[]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"from","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"into","","",85,[[]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"from","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"into","","",86,[[]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"from","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"into","","",87,[[]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"from","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"into","","",88,[[]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"from","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"into","","",89,[[]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"from","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"into","","",90,[[]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"from","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"into","","",91,[[]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"from","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"into","","",92,[[]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"from","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"into","","",93,[[]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"from","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"into","","",94,[[]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"from","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"into","","",95,[[]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"from","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"into","","",96,[[]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"from","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"into","","",97,[[]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"from","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"into","","",98,[[]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"from","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"into","","",99,[[]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"from","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"into","","",100,[[]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"from","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"into","","",101,[[]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"from","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"into","","",102,[[]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"from","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"into","","",103,[[]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"from","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"into","","",104,[[]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"from","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"into","","",105,[[]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"from","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"into","","",106,[[]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"from","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"into","","",107,[[]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"from","","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"into","","",108,[[]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"from","","",109,[[]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"into","","",109,[[]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"from","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"into","","",110,[[]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"from","","",146,[[]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"into","","",146,[[]]],[11,"try_into","","",146,[[],["result",4]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"from","","",111,[[]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"into","","",111,[[]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"from","","",147,[[]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"into","","",147,[[]]],[11,"try_into","","",147,[[],["result",4]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"from","","",112,[[]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"into","","",112,[[]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"from","","",113,[[]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"into","","",113,[[]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"from","","",114,[[]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"into","","",114,[[]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"from","","",115,[[]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"into","","",115,[[]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"from","","",116,[[]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"into","","",116,[[]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"from","","",117,[[]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"into","","",117,[[]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"from","","",118,[[]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"into","","",118,[[]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"from","","",119,[[]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"into","","",119,[[]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"from","","",120,[[]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"into","","",120,[[]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"from","","",121,[[]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"into","","",121,[[]]],[11,"try_into","","",121,[[],["result",4]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"from","","",122,[[]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"into","","",122,[[]]],[11,"try_into","","",122,[[],["result",4]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"from","","",123,[[]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"into","","",123,[[]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"from","","",148,[[]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"into","","",148,[[]]],[11,"try_into","","",148,[[],["result",4]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"from","","",124,[[]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"into","","",124,[[]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"from","","",125,[[]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"into","","",125,[[]]],[11,"try_into","","",125,[[],["result",4]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"from","","",126,[[]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"into","","",126,[[]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"from","","",127,[[]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"into","","",127,[[]]],[11,"try_into","","",127,[[],["result",4]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"from","","",128,[[]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"into","","",128,[[]]],[11,"try_into","","",128,[[],["result",4]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"from","","",129,[[]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"into","","",129,[[]]],[11,"try_into","","",129,[[],["result",4]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"from","","",130,[[]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"into","","",130,[[]]],[11,"try_into","","",130,[[],["result",4]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"from","","",131,[[]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"into","","",131,[[]]],[11,"try_into","","",131,[[],["result",4]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"from","","",132,[[]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"into","","",132,[[]]],[11,"try_into","","",132,[[],["result",4]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"from","","",133,[[]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"into","","",133,[[]]],[11,"try_into","","",133,[[],["result",4]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"from","","",134,[[]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"into","","",134,[[]]],[11,"try_into","","",134,[[],["result",4]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"from","","",135,[[]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"into","","",135,[[]]],[11,"try_into","","",135,[[],["result",4]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"from","","",136,[[]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"into","","",136,[[]]],[11,"try_into","","",136,[[],["result",4]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"from","","",149,[[]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"into","","",149,[[]]],[11,"try_into","","",149,[[],["result",4]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"from","","",150,[[]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"into","","",150,[[]]],[11,"try_into","","",150,[[],["result",4]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"from","","",151,[[]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"into","","",151,[[]]],[11,"try_into","","",151,[[],["result",4]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"from","","",152,[[]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"into","","",152,[[]]],[11,"try_into","","",152,[[],["result",4]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"from","","",153,[[]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"into","","",153,[[]]],[11,"try_into","","",153,[[],["result",4]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"from","","",137,[[]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"into","","",137,[[]]],[11,"try_into","","",137,[[],["result",4]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"from","","",154,[[]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"into","","",154,[[]]],[11,"try_into","","",154,[[],["result",4]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"from","","",155,[[]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"into","","",155,[[]]],[11,"try_into","","",155,[[],["result",4]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"from","","",156,[[]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"into","","",156,[[]]],[11,"try_into","","",156,[[],["result",4]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"from","","",138,[[]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"into","","",138,[[]]],[11,"try_into","","",138,[[],["result",4]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"from","","",157,[[]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"into","","",157,[[]]],[11,"try_into","","",157,[[],["result",4]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"from","","",158,[[]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"into","","",158,[[]]],[11,"try_into","","",158,[[],["result",4]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"from","","",159,[[]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"into","","",159,[[]]],[11,"try_into","","",159,[[],["result",4]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"from","","",160,[[]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"into","","",160,[[]]],[11,"try_into","","",160,[[],["result",4]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"from","","",161,[[]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"into","","",161,[[]]],[11,"try_into","","",161,[[],["result",4]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"fmt","","",139,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",157,[[],["dir",4]]],[11,"clone","","",0,[[],["group",3]]],[11,"clone","","",1,[[],["utimbuf",3]]],[11,"clone","","",2,[[],["timeval",3]]],[11,"clone","","",3,[[],["timespec",3]]],[11,"clone","","",4,[[],["rlimit",3]]],[11,"clone","","",5,[[],["rusage",3]]],[11,"clone","","",6,[[],["ipv6_mreq",3]]],[11,"clone","","",7,[[],["hostent",3]]],[11,"clone","","",8,[[],["iovec",3]]],[11,"clone","","",9,[[],["pollfd",3]]],[11,"clone","","",10,[[],["winsize",3]]],[11,"clone","","",11,[[],["linger",3]]],[11,"clone","","",12,[[],["sigval",3]]],[11,"clone","","",13,[[],["itimerval",3]]],[11,"clone","","",14,[[],["tms",3]]],[11,"clone","","",15,[[],["servent",3]]],[11,"clone","","",16,[[],["protoent",3]]],[11,"clone","","",158,[[],["file",4]]],[11,"clone","","",159,[[],["fpos_t",4]]],[11,"clone","","",160,[[],["timezone",4]]],[11,"clone","","",17,[[],["in_addr",3]]],[11,"clone","","",18,[[],["ip_mreq",3]]],[11,"clone","","",19,[[],["ip_mreq_source",3]]],[11,"clone","","",20,[[],["sockaddr",3]]],[11,"clone","","",21,[[],["sockaddr_in",3]]],[11,"clone","","",22,[[],["sockaddr_in6",3]]],[11,"clone","","",23,[[],["addrinfo",3]]],[11,"clone","","",24,[[],["sockaddr_ll",3]]],[11,"clone","","",140,[[],["fd_set",3]]],[11,"clone","","",25,[[],["tm",3]]],[11,"clone","","",26,[[],["sched_param",3]]],[11,"clone","","",27,[[],["dl_info",3]]],[11,"clone","","",28,[[],["lconv",3]]],[11,"clone","","",29,[[],["in_pktinfo",3]]],[11,"clone","","",30,[[],["ifaddrs",3]]],[11,"clone","","",141,[[],["in6_rtmsg",3]]],[11,"clone","","",31,[[],["arpreq",3]]],[11,"clone","","",32,[[],["arpreq_old",3]]],[11,"clone","","",33,[[],["arphdr",3]]],[11,"clone","","",34,[[],["mmsghdr",3]]],[11,"clone","","",35,[[],["epoll_event",3]]],[11,"clone","","",36,[[],["sockaddr_un",3]]],[11,"clone","","",37,[[],["sockaddr_storage",3]]],[11,"clone","","",38,[[],["utsname",3]]],[11,"clone","","",39,[[],["sigevent",3]]],[11,"clone","","",161,[[],["fpos64_t",4]]],[11,"clone","","",40,[[],["rlimit64",3]]],[11,"clone","","",41,[[],["glob_t",3]]],[11,"clone","","",42,[[],["passwd",3]]],[11,"clone","","",43,[[],["spwd",3]]],[11,"clone","","",44,[[],["dqblk",3]]],[11,"clone","","",45,[[],["signalfd_siginfo",3]]],[11,"clone","","",46,[[],["itimerspec",3]]],[11,"clone","","",142,[[],["fsid_t",3]]],[11,"clone","","",47,[[],["packet_mreq",3]]],[11,"clone","","",143,[[],["cpu_set_t",3]]],[11,"clone","","",48,[[],["if_nameindex",3]]],[11,"clone","","",49,[[],["msginfo",3]]],[11,"clone","","",50,[[],["sembuf",3]]],[11,"clone","","",51,[[],["input_event",3]]],[11,"clone","","",52,[[],["input_id",3]]],[11,"clone","","",53,[[],["input_absinfo",3]]],[11,"clone","","",54,[[],["input_keymap_entry",3]]],[11,"clone","","",55,[[],["input_mask",3]]],[11,"clone","","",56,[[],["ff_replay",3]]],[11,"clone","","",57,[[],["ff_trigger",3]]],[11,"clone","","",58,[[],["ff_envelope",3]]],[11,"clone","","",59,[[],["ff_constant_effect",3]]],[11,"clone","","",60,[[],["ff_ramp_effect",3]]],[11,"clone","","",61,[[],["ff_condition_effect",3]]],[11,"clone","","",62,[[],["ff_periodic_effect",3]]],[11,"clone","","",63,[[],["ff_rumble_effect",3]]],[11,"clone","","",64,[[],["ff_effect",3]]],[11,"clone","","",65,[[],["dl_phdr_info",3]]],[11,"clone","","",66,[[],["elf32_ehdr",3]]],[11,"clone","","",67,[[],["elf64_ehdr",3]]],[11,"clone","","",68,[[],["elf32_sym",3]]],[11,"clone","","",69,[[],["elf64_sym",3]]],[11,"clone","","",70,[[],["elf32_phdr",3]]],[11,"clone","","",71,[[],["elf64_phdr",3]]],[11,"clone","","",72,[[],["elf32_shdr",3]]],[11,"clone","","",73,[[],["elf64_shdr",3]]],[11,"clone","","",74,[[],["elf32_chdr",3]]],[11,"clone","","",75,[[],["elf64_chdr",3]]],[11,"clone","","",76,[[],["ucred",3]]],[11,"clone","","",77,[[],["mntent",3]]],[11,"clone","","",144,[[],["posix_spawn_file_actions_t",3]]],[11,"clone","","",145,[[],["posix_spawnattr_t",3]]],[11,"clone","","",78,[[],["genlmsghdr",3]]],[11,"clone","","",79,[[],["in6_pktinfo",3]]],[11,"clone","","",80,[[],["arpd_request",3]]],[11,"clone","","",81,[[],["inotify_event",3]]],[11,"clone","","",82,[[],["fanotify_response",3]]],[11,"clone","","",83,[[],["sockaddr_vm",3]]],[11,"clone","","",84,[[],["regmatch_t",3]]],[11,"clone","","",85,[[],["sock_extended_err",3]]],[11,"clone","","",86,[[],["sockaddr_nl",3]]],[11,"clone","","",87,[[],["dirent",3]]],[11,"clone","","",88,[[],["dirent64",3]]],[11,"clone","","",89,[[],["sockaddr_alg",3]]],[11,"clone","","",90,[[],["af_alg_iv",3]]],[11,"clone","","",91,[[],["mq_attr",3]]],[11,"clone","","",92,[[],["statx",3]]],[11,"clone","","",93,[[],["statx_timestamp",3]]],[11,"clone","","",94,[[],["aiocb",3]]],[11,"clone","","",95,[[],["__exit_status",3]]],[11,"clone","","",96,[[],["__timeval",3]]],[11,"clone","","",97,[[],["glob64_t",3]]],[11,"clone","","",98,[[],["msghdr",3]]],[11,"clone","","",99,[[],["cmsghdr",3]]],[11,"clone","","",100,[[],["termios",3]]],[11,"clone","","",101,[[],["mallinfo",3]]],[11,"clone","","",102,[[],["nlmsghdr",3]]],[11,"clone","","",103,[[],["nlmsgerr",3]]],[11,"clone","","",104,[[],["nl_pktinfo",3]]],[11,"clone","","",105,[[],["nl_mmap_req",3]]],[11,"clone","","",106,[[],["nl_mmap_hdr",3]]],[11,"clone","","",107,[[],["nlattr",3]]],[11,"clone","","",108,[[],["rtentry",3]]],[11,"clone","","",109,[[],["timex",3]]],[11,"clone","","",110,[[],["ntptimeval",3]]],[11,"clone","","",146,[[],["regex_t",3]]],[11,"clone","","",111,[[],["utmpx",3]]],[11,"clone","","",147,[[],["sigset_t",3]]],[11,"clone","","",112,[[],["sysinfo",3]]],[11,"clone","","",113,[[],["msqid_ds",3]]],[11,"clone","","",114,[[],["sigaction",3]]],[11,"clone","","",115,[[],["statfs",3]]],[11,"clone","","",116,[[],["flock",3]]],[11,"clone","","",117,[[],["flock64",3]]],[11,"clone","","",118,[[],["siginfo_t",3]]],[11,"clone","","",119,[[],["stack_t",3]]],[11,"clone","","",120,[[],["stat",3]]],[11,"clone","","",121,[[],["stat64",3]]],[11,"clone","","",122,[[],["statfs64",3]]],[11,"clone","","",123,[[],["statvfs64",3]]],[11,"clone","","",148,[[],["pthread_attr_t",3]]],[11,"clone","","",124,[[],["_libc_fpxreg",3]]],[11,"clone","","",125,[[],["_libc_xmmreg",3]]],[11,"clone","","",126,[[],["_libc_fpstate",3]]],[11,"clone","","",127,[[],["user_regs_struct",3]]],[11,"clone","","",128,[[],["user",3]]],[11,"clone","","",129,[[],["mcontext_t",3]]],[11,"clone","","",130,[[],["ipc_perm",3]]],[11,"clone","","",131,[[],["shmid_ds",3]]],[11,"clone","","",132,[[],["termios2",3]]],[11,"clone","","",133,[[],["ip_mreqn",3]]],[11,"clone","","",134,[[],["user_fpregs_struct",3]]],[11,"clone","","",135,[[],["ucontext_t",3]]],[11,"clone","","",136,[[],["statvfs",3]]],[11,"clone","","",149,[[],["max_align_t",3]]],[11,"clone","","",150,[[],["sem_t",3]]],[11,"clone","","",151,[[],["pthread_mutexattr_t",3]]],[11,"clone","","",152,[[],["pthread_rwlockattr_t",3]]],[11,"clone","","",153,[[],["pthread_condattr_t",3]]],[11,"clone","","",137,[[],["fanotify_event_metadata",3]]],[11,"clone","","",154,[[],["pthread_cond_t",3]]],[11,"clone","","",155,[[],["pthread_mutex_t",3]]],[11,"clone","","",156,[[],["pthread_rwlock_t",3]]],[11,"clone","","",138,[[],["in6_addr",3]]]],"p":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,"itimerval"],[3,"tms"],[3,"servent"],[3,"protoent"],[3,"in_addr"],[3,"ip_mreq"],[3,"ip_mreq_source"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"addrinfo"],[3,"sockaddr_ll"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"lconv"],[3,"in_pktinfo"],[3,"ifaddrs"],[3,"arpreq"],[3,"arpreq_old"],[3,"arphdr"],[3,"mmsghdr"],[3,"epoll_event"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"utsname"],[3,"sigevent"],[3,"rlimit64"],[3,"glob_t"],[3,"passwd"],[3,"spwd"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"itimerspec"],[3,"packet_mreq"],[3,"if_nameindex"],[3,"msginfo"],[3,"sembuf"],[3,"input_event"],[3,"input_id"],[3,"input_absinfo"],[3,"input_keymap_entry"],[3,"input_mask"],[3,"ff_replay"],[3,"ff_trigger"],[3,"ff_envelope"],[3,"ff_constant_effect"],[3,"ff_ramp_effect"],[3,"ff_condition_effect"],[3,"ff_periodic_effect"],[3,"ff_rumble_effect"],[3,"ff_effect"],[3,"dl_phdr_info"],[3,"Elf32_Ehdr"],[3,"Elf64_Ehdr"],[3,"Elf32_Sym"],[3,"Elf64_Sym"],[3,"Elf32_Phdr"],[3,"Elf64_Phdr"],[3,"Elf32_Shdr"],[3,"Elf64_Shdr"],[3,"Elf32_Chdr"],[3,"Elf64_Chdr"],[3,"ucred"],[3,"mntent"],[3,"genlmsghdr"],[3,"in6_pktinfo"],[3,"arpd_request"],[3,"inotify_event"],[3,"fanotify_response"],[3,"sockaddr_vm"],[3,"regmatch_t"],[3,"sock_extended_err"],[3,"sockaddr_nl"],[3,"dirent"],[3,"dirent64"],[3,"sockaddr_alg"],[3,"af_alg_iv"],[3,"mq_attr"],[3,"statx"],[3,"statx_timestamp"],[3,"aiocb"],[3,"__exit_status"],[3,"__timeval"],[3,"glob64_t"],[3,"msghdr"],[3,"cmsghdr"],[3,"termios"],[3,"mallinfo"],[3,"nlmsghdr"],[3,"nlmsgerr"],[3,"nl_pktinfo"],[3,"nl_mmap_req"],[3,"nl_mmap_hdr"],[3,"nlattr"],[3,"rtentry"],[3,"timex"],[3,"ntptimeval"],[3,"utmpx"],[3,"sysinfo"],[3,"msqid_ds"],[3,"sigaction"],[3,"statfs"],[3,"flock"],[3,"flock64"],[3,"siginfo_t"],[3,"stack_t"],[3,"stat"],[3,"stat64"],[3,"statfs64"],[3,"statvfs64"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"user_regs_struct"],[3,"user"],[3,"mcontext_t"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"termios2"],[3,"ip_mreqn"],[3,"user_fpregs_struct"],[3,"ucontext_t"],[3,"statvfs"],[3,"fanotify_event_metadata"],[3,"in6_addr"],[4,"c_void"],[3,"fd_set"],[3,"in6_rtmsg"],[3,"fsid_t"],[3,"cpu_set_t"],[3,"posix_spawn_file_actions_t"],[3,"posix_spawnattr_t"],[3,"regex_t"],[3,"sigset_t"],[3,"pthread_attr_t"],[3,"max_align_t"],[3,"sem_t"],[3,"pthread_mutexattr_t"],[3,"pthread_rwlockattr_t"],[3,"pthread_condattr_t"],[3,"pthread_cond_t"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[4,"DIR"],[4,"FILE"],[4,"fpos_t"],[4,"timezone"],[4,"fpos64_t"]]},\
"lock_api":{"doc":"This library provides type-safe and fully-featured `Mutex`…","i":[[3,"GuardSend","lock_api","Marker type which indicates that the Guard type for a lock…",null,null],[3,"GuardNoSend","","Marker type which indicates that the Guard type for a lock…",null,null],[3,"Mutex","","A mutual exclusion primitive useful for protecting shared…",null,null],[3,"MutexGuard","","An RAII implementation of a \\\"scoped lock\\\" of a mutex. When…",null,null],[3,"MappedMutexGuard","","An RAII mutex guard returned by `MutexGuard::map`, which…",null,null],[3,"RawReentrantMutex","","A raw mutex type that wraps another raw mutex to provide…",null,null],[3,"ReentrantMutex","","A mutex which can be recursively locked by a single thread.",null,null],[3,"ReentrantMutexGuard","","An RAII implementation of a \\\"scoped lock\\\" of a reentrant…",null,null],[3,"MappedReentrantMutexGuard","","An RAII mutex guard returned by…",null,null],[3,"RwLock","","A reader-writer lock",null,null],[3,"RwLockReadGuard","","RAII structure used to release the shared read access of a…",null,null],[3,"RwLockWriteGuard","","RAII structure used to release the exclusive write access…",null,null],[3,"RwLockUpgradableReadGuard","","RAII structure used to release the upgradable read access…",null,null],[3,"MappedRwLockReadGuard","","An RAII read lock guard returned by…",null,null],[3,"MappedRwLockWriteGuard","","An RAII write lock guard returned by…",null,null],[11,"new","","Creates a new mutex in an unlocked state ready for use.",0,[[],["mutex",3]]],[11,"into_inner","","Consumes this mutex, returning the underlying data.",0,[[]]],[11,"const_new","","Creates a new mutex based on a pre-existing raw mutex.",0,[[],["mutex",3]]],[11,"lock","","Acquires a mutex, blocking the current thread until it is…",0,[[],["mutexguard",3]]],[11,"try_lock","","Attempts to acquire this lock.",0,[[],[["option",4],["mutexguard",3]]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",0,[[]]],[11,"is_locked","","Checks whether the mutex is currently locked.",0,[[]]],[11,"force_unlock","","Forcibly unlocks the mutex.",0,[[]]],[11,"raw","","Returns the underlying raw mutex object.",0,[[]]],[11,"data_ptr","","Returns a raw pointer to the underlying data.",0,[[]]],[11,"force_unlock_fair","","Forcibly unlocks the mutex using a fair unlock procotol.",0,[[]]],[11,"try_lock_for","","Attempts to acquire this lock until a timeout is reached.",0,[[],[["option",4],["mutexguard",3]]]],[11,"try_lock_until","","Attempts to acquire this lock until a timeout is reached.",0,[[],[["option",4],["mutexguard",3]]]],[11,"mutex","","Returns a reference to the original `Mutex` object.",1,[[],["mutex",3]]],[11,"map","","Makes a new `MappedMutexGuard` for a component of the…",1,[[],[["mappedmutexguard",3],["sized",8]]]],[11,"try_map","","Attempts to make a new `MappedMutexGuard` for a component…",1,[[],[["mappedmutexguard",3],["result",4]]]],[11,"unlocked","","Temporarily unlocks the mutex to execute the given function.",1,[[]]],[11,"unlock_fair","","Unlocks the mutex using a fair unlock protocol.",1,[[]]],[11,"unlocked_fair","","Temporarily unlocks the mutex to execute the given function.",1,[[]]],[11,"bump","","Temporarily yields the mutex to a waiting thread if there…",1,[[]]],[11,"map","","Makes a new `MappedMutexGuard` for a component of the…",2,[[],[["mappedmutexguard",3],["sized",8]]]],[11,"try_map","","Attempts to make a new `MappedMutexGuard` for a component…",2,[[],[["mappedmutexguard",3],["result",4]]]],[11,"unlock_fair","","Unlocks the mutex using a fair unlock protocol.",2,[[]]],[18,"INIT","","Initial value for an unlocked mutex.",3,null],[11,"lock","","Acquires this mutex, blocking if it\'s held by another…",3,[[]]],[11,"try_lock","","Attempts to acquire this mutex without blocking. Returns…",3,[[]]],[11,"unlock","","Unlocks this mutex. The inner mutex may not be unlocked if…",3,[[]]],[11,"is_locked","","Checks whether the mutex is currently locked.",3,[[]]],[11,"unlock_fair","","Unlocks this mutex using a fair unlock protocol. The inner…",3,[[]]],[11,"bump","","Temporarily yields the mutex to a waiting thread if there…",3,[[]]],[11,"try_lock_until","","Attempts to acquire this lock until a timeout is reached.",3,[[]]],[11,"try_lock_for","","Attempts to acquire this lock until a timeout is reached.",3,[[]]],[11,"new","","Creates a new reentrant mutex in an unlocked state ready…",4,[[],["reentrantmutex",3]]],[11,"into_inner","","Consumes this mutex, returning the underlying data.",4,[[]]],[11,"const_new","","Creates a new reentrant mutex based on a pre-existing raw…",4,[[],["reentrantmutex",3]]],[11,"lock","","Acquires a reentrant mutex, blocking the current thread…",4,[[],["reentrantmutexguard",3]]],[11,"try_lock","","Attempts to acquire this lock.",4,[[],[["reentrantmutexguard",3],["option",4]]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",4,[[]]],[11,"is_locked","","Checks whether the mutex is currently locked.",4,[[]]],[11,"force_unlock","","Forcibly unlocks the mutex.",4,[[]]],[11,"raw","","Returns the underlying raw mutex object.",4,[[]]],[11,"data_ptr","","Returns a raw pointer to the underlying data.",4,[[]]],[11,"force_unlock_fair","","Forcibly unlocks the mutex using a fair unlock protocol.",4,[[]]],[11,"try_lock_for","","Attempts to acquire this lock until a timeout is reached.",4,[[],[["reentrantmutexguard",3],["option",4]]]],[11,"try_lock_until","","Attempts to acquire this lock until a timeout is reached.",4,[[],[["reentrantmutexguard",3],["option",4]]]],[11,"remutex","","Returns a reference to the original `ReentrantMutex` object.",5,[[],["reentrantmutex",3]]],[11,"map","","Makes a new `MappedReentrantMutexGuard` for a component of…",5,[[],[["mappedreentrantmutexguard",3],["sized",8]]]],[11,"try_map","","Attempts to make a new `MappedReentrantMutexGuard` for a…",5,[[],[["mappedreentrantmutexguard",3],["result",4]]]],[11,"unlocked","","Temporarily unlocks the mutex to execute the given function.",5,[[]]],[11,"unlock_fair","","Unlocks the mutex using a fair unlock protocol.",5,[[]]],[11,"unlocked_fair","","Temporarily unlocks the mutex to execute the given function.",5,[[]]],[11,"bump","","Temporarily yields the mutex to a waiting thread if there…",5,[[]]],[11,"map","","Makes a new `MappedReentrantMutexGuard` for a component of…",6,[[],[["mappedreentrantmutexguard",3],["sized",8]]]],[11,"try_map","","Attempts to make a new `MappedReentrantMutexGuard` for a…",6,[[],[["mappedreentrantmutexguard",3],["result",4]]]],[11,"unlock_fair","","Unlocks the mutex using a fair unlock protocol.",6,[[]]],[11,"new","","Creates a new instance of an `RwLock<T>` which is unlocked.",7,[[],["rwlock",3]]],[11,"into_inner","","Consumes this `RwLock`, returning the underlying data.",7,[[]]],[11,"const_new","","Creates a new new instance of an `RwLock<T>` based on a…",7,[[],["rwlock",3]]],[11,"read","","Locks this `RwLock` with shared read access, blocking the…",7,[[],["rwlockreadguard",3]]],[11,"try_read","","Attempts to acquire this `RwLock` with shared read access.",7,[[],[["rwlockreadguard",3],["option",4]]]],[11,"write","","Locks this `RwLock` with exclusive write access, blocking…",7,[[],["rwlockwriteguard",3]]],[11,"try_write","","Attempts to lock this `RwLock` with exclusive write access.",7,[[],[["option",4],["rwlockwriteguard",3]]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",7,[[]]],[11,"is_locked","","Checks whether this `RwLock` is currently locked in any way.",7,[[]]],[11,"force_unlock_read","","Forcibly unlocks a read lock.",7,[[]]],[11,"force_unlock_write","","Forcibly unlocks a write lock.",7,[[]]],[11,"raw","","Returns the underlying raw reader-writer lock object.",7,[[]]],[11,"data_ptr","","Returns a raw pointer to the underlying data.",7,[[]]],[11,"force_unlock_read_fair","","Forcibly unlocks a read lock using a fair unlock procotol.",7,[[]]],[11,"force_unlock_write_fair","","Forcibly unlocks a write lock using a fair unlock procotol.",7,[[]]],[11,"try_read_for","","Attempts to acquire this `RwLock` with shared read access…",7,[[],[["rwlockreadguard",3],["option",4]]]],[11,"try_read_until","","Attempts to acquire this `RwLock` with shared read access…",7,[[],[["rwlockreadguard",3],["option",4]]]],[11,"try_write_for","","Attempts to acquire this `RwLock` with exclusive write…",7,[[],[["option",4],["rwlockwriteguard",3]]]],[11,"try_write_until","","Attempts to acquire this `RwLock` with exclusive write…",7,[[],[["option",4],["rwlockwriteguard",3]]]],[11,"read_recursive","","Locks this `RwLock` with shared read access, blocking the…",7,[[],["rwlockreadguard",3]]],[11,"try_read_recursive","","Attempts to acquire this `RwLock` with shared read access.",7,[[],[["rwlockreadguard",3],["option",4]]]],[11,"try_read_recursive_for","","Attempts to acquire this `RwLock` with shared read access…",7,[[],[["rwlockreadguard",3],["option",4]]]],[11,"try_read_recursive_until","","Attempts to acquire this `RwLock` with shared read access…",7,[[],[["rwlockreadguard",3],["option",4]]]],[11,"upgradable_read","","Locks this `RwLock` with upgradable read access, blocking…",7,[[],["rwlockupgradablereadguard",3]]],[11,"try_upgradable_read","","Attempts to acquire this `RwLock` with upgradable read…",7,[[],[["option",4],["rwlockupgradablereadguard",3]]]],[11,"try_upgradable_read_for","","Attempts to acquire this `RwLock` with upgradable read…",7,[[],[["option",4],["rwlockupgradablereadguard",3]]]],[11,"try_upgradable_read_until","","Attempts to acquire this `RwLock` with upgradable read…",7,[[],[["option",4],["rwlockupgradablereadguard",3]]]],[11,"rwlock","","Returns a reference to the original reader-writer lock…",8,[[],["rwlock",3]]],[11,"map","","Make a new `MappedRwLockReadGuard` for a component of the…",8,[[],[["mappedrwlockreadguard",3],["sized",8]]]],[11,"try_map","","Attempts to make a new `MappedRwLockReadGuard` for a…",8,[[],[["mappedrwlockreadguard",3],["result",4]]]],[11,"unlocked","","Temporarily unlocks the `RwLock` to execute the given…",8,[[]]],[11,"unlock_fair","","Unlocks the `RwLock` using a fair unlock protocol.",8,[[]]],[11,"unlocked_fair","","Temporarily unlocks the `RwLock` to execute the given…",8,[[]]],[11,"bump","","Temporarily yields the `RwLock` to a waiting thread if…",8,[[]]],[11,"rwlock","","Returns a reference to the original reader-writer lock…",9,[[],["rwlock",3]]],[11,"map","","Make a new `MappedRwLockWriteGuard` for a component of the…",9,[[],[["mappedrwlockwriteguard",3],["sized",8]]]],[11,"try_map","","Attempts to make a new `MappedRwLockWriteGuard` for a…",9,[[],[["result",4],["mappedrwlockwriteguard",3]]]],[11,"unlocked","","Temporarily unlocks the `RwLock` to execute the given…",9,[[]]],[11,"downgrade","","Atomically downgrades a write lock into a read lock…",9,[[],["rwlockreadguard",3]]],[11,"downgrade_to_upgradable","","Atomically downgrades a write lock into an upgradable read…",9,[[],["rwlockupgradablereadguard",3]]],[11,"unlock_fair","","Unlocks the `RwLock` using a fair unlock protocol.",9,[[]]],[11,"unlocked_fair","","Temporarily unlocks the `RwLock` to execute the given…",9,[[]]],[11,"bump","","Temporarily yields the `RwLock` to a waiting thread if…",9,[[]]],[11,"rwlock","","Returns a reference to the original reader-writer lock…",10,[[],["rwlock",3]]],[11,"unlocked","","Temporarily unlocks the `RwLock` to execute the given…",10,[[]]],[11,"upgrade","","Atomically upgrades an upgradable read lock lock into a…",10,[[],["rwlockwriteguard",3]]],[11,"try_upgrade","","Tries to atomically upgrade an upgradable read lock into a…",10,[[],[["result",4],["rwlockwriteguard",3]]]],[11,"unlock_fair","","Unlocks the `RwLock` using a fair unlock protocol.",10,[[]]],[11,"unlocked_fair","","Temporarily unlocks the `RwLock` to execute the given…",10,[[]]],[11,"bump","","Temporarily yields the `RwLock` to a waiting thread if…",10,[[]]],[11,"downgrade","","Atomically downgrades an upgradable read lock lock into a…",10,[[],["rwlockreadguard",3]]],[11,"try_upgrade_for","","Tries to atomically upgrade an upgradable read lock into a…",10,[[],[["result",4],["rwlockwriteguard",3]]]],[11,"try_upgrade_until","","Tries to atomically upgrade an upgradable read lock into a…",10,[[],[["result",4],["rwlockwriteguard",3]]]],[11,"map","","Make a new `MappedRwLockReadGuard` for a component of the…",11,[[],[["mappedrwlockreadguard",3],["sized",8]]]],[11,"try_map","","Attempts to make a new `MappedRwLockReadGuard` for a…",11,[[],[["mappedrwlockreadguard",3],["result",4]]]],[11,"unlock_fair","","Unlocks the `RwLock` using a fair unlock protocol.",11,[[]]],[11,"map","","Make a new `MappedRwLockWriteGuard` for a component of the…",12,[[],[["mappedrwlockwriteguard",3],["sized",8]]]],[11,"try_map","","Attempts to make a new `MappedRwLockWriteGuard` for a…",12,[[],[["result",4],["mappedrwlockwriteguard",3]]]],[11,"unlock_fair","","Unlocks the `RwLock` using a fair unlock protocol.",12,[[]]],[8,"RawMutex","","Basic operations for a mutex.",null,null],[18,"INIT","","Initial value for an unlocked mutex.",13,null],[16,"GuardMarker","","Marker type which determines whether a lock guard should…",13,null],[10,"lock","","Acquires this mutex, blocking the current thread until it…",13,[[]]],[10,"try_lock","","Attempts to acquire this mutex without blocking. Returns…",13,[[]]],[10,"unlock","","Unlocks this mutex.",13,[[]]],[11,"is_locked","","Checks whether the mutex is currently locked.",13,[[]]],[8,"RawMutexFair","","Additional methods for mutexes which support fair unlocking.",null,null],[10,"unlock_fair","","Unlocks this mutex using a fair unlock protocol.",14,[[]]],[11,"bump","","Temporarily yields the mutex to a waiting thread if there…",14,[[]]],[8,"RawMutexTimed","","Additional methods for mutexes which support locking with…",null,null],[16,"Duration","","Duration type used for `try_lock_for`.",15,null],[16,"Instant","","Instant type used for `try_lock_until`.",15,null],[10,"try_lock_for","","Attempts to acquire this lock until a timeout is reached.",15,[[]]],[10,"try_lock_until","","Attempts to acquire this lock until a timeout is reached.",15,[[]]],[8,"GetThreadId","","Helper trait which returns a non-zero thread ID.",null,null],[18,"INIT","","Initial value.",16,null],[10,"nonzero_thread_id","","Returns a non-zero thread ID which identifies the current…",16,[[],["nonzerousize",3]]],[8,"RawRwLock","","Basic operations for a reader-writer lock.",null,null],[18,"INIT","","Initial value for an unlocked `RwLock`.",17,null],[16,"GuardMarker","","Marker type which determines whether a lock guard should…",17,null],[10,"lock_shared","","Acquires a shared lock, blocking the current thread until…",17,[[]]],[10,"try_lock_shared","","Attempts to acquire a shared lock without blocking.",17,[[]]],[10,"unlock_shared","","Releases a shared lock.",17,[[]]],[10,"lock_exclusive","","Acquires an exclusive lock, blocking the current thread…",17,[[]]],[10,"try_lock_exclusive","","Attempts to acquire an exclusive lock without blocking.",17,[[]]],[10,"unlock_exclusive","","Releases an exclusive lock.",17,[[]]],[11,"is_locked","","Checks if this `RwLock` is currently locked in any way.",17,[[]]],[8,"RawRwLockFair","","Additional methods for RwLocks which support fair unlocking.",null,null],[10,"unlock_shared_fair","","Releases a shared lock using a fair unlock protocol.",18,[[]]],[10,"unlock_exclusive_fair","","Releases an exclusive lock using a fair unlock protocol.",18,[[]]],[11,"bump_shared","","Temporarily yields a shared lock to a waiting thread if…",18,[[]]],[11,"bump_exclusive","","Temporarily yields an exclusive lock to a waiting thread…",18,[[]]],[8,"RawRwLockDowngrade","","Additional methods for RwLocks which support atomically…",null,null],[10,"downgrade","","Atomically downgrades an exclusive lock into a shared lock…",19,[[]]],[8,"RawRwLockTimed","","Additional methods for RwLocks which support locking with…",null,null],[16,"Duration","","Duration type used for `try_lock_for`.",20,null],[16,"Instant","","Instant type used for `try_lock_until`.",20,null],[10,"try_lock_shared_for","","Attempts to acquire a shared lock until a timeout is…",20,[[]]],[10,"try_lock_shared_until","","Attempts to acquire a shared lock until a timeout is…",20,[[]]],[10,"try_lock_exclusive_for","","Attempts to acquire an exclusive lock until a timeout is…",20,[[]]],[10,"try_lock_exclusive_until","","Attempts to acquire an exclusive lock until a timeout is…",20,[[]]],[8,"RawRwLockRecursive","","Additional methods for RwLocks which support recursive…",null,null],[10,"lock_shared_recursive","","Acquires a shared lock without deadlocking in case of a…",21,[[]]],[10,"try_lock_shared_recursive","","Attempts to acquire a shared lock without deadlocking in…",21,[[]]],[8,"RawRwLockRecursiveTimed","","Additional methods for RwLocks which support recursive…",null,null],[10,"try_lock_shared_recursive_for","","Attempts to acquire a shared lock until a timeout is…",22,[[]]],[10,"try_lock_shared_recursive_until","","Attempts to acquire a shared lock until a timeout is…",22,[[]]],[8,"RawRwLockUpgrade","","Additional methods for RwLocks which support atomically…",null,null],[10,"lock_upgradable","","Acquires an upgradable lock, blocking the current thread…",23,[[]]],[10,"try_lock_upgradable","","Attempts to acquire an upgradable lock without blocking.",23,[[]]],[10,"unlock_upgradable","","Releases an upgradable lock.",23,[[]]],[10,"upgrade","","Upgrades an upgradable lock to an exclusive lock.",23,[[]]],[10,"try_upgrade","","Attempts to upgrade an upgradable lock to an exclusive…",23,[[]]],[8,"RawRwLockUpgradeFair","","Additional methods for RwLocks which support upgradable…",null,null],[10,"unlock_upgradable_fair","","Releases an upgradable lock using a fair unlock protocol.",24,[[]]],[11,"bump_upgradable","","Temporarily yields an upgradable lock to a waiting thread…",24,[[]]],[8,"RawRwLockUpgradeDowngrade","","Additional methods for RwLocks which support upgradable…",null,null],[10,"downgrade_upgradable","","Downgrades an upgradable lock to a shared lock.",25,[[]]],[10,"downgrade_to_upgradable","","Downgrades an exclusive lock to an upgradable lock.",25,[[]]],[8,"RawRwLockUpgradeTimed","","Additional methods for RwLocks which support upgradable…",null,null],[10,"try_lock_upgradable_for","","Attempts to acquire an upgradable lock until a timeout is…",26,[[]]],[10,"try_lock_upgradable_until","","Attempts to acquire an upgradable lock until a timeout is…",26,[[]]],[10,"try_upgrade_for","","Attempts to upgrade an upgradable lock to an exclusive…",26,[[]]],[10,"try_upgrade_until","","Attempts to upgrade an upgradable lock to an exclusive…",26,[[]]],[11,"from","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"deref","","",1,[[]]],[11,"deref","","",2,[[]]],[11,"deref","","",5,[[]]],[11,"deref","","",6,[[]]],[11,"deref","","",8,[[]]],[11,"deref","","",9,[[]]],[11,"deref","","",10,[[]]],[11,"deref","","",11,[[]]],[11,"deref","","",12,[[]]],[11,"deref_mut","","",1,[[]]],[11,"deref_mut","","",2,[[]]],[11,"deref_mut","","",9,[[]]],[11,"deref_mut","","",12,[[]]],[11,"from","","",0,[[],["mutex",3]]],[11,"from","","",4,[[],["reentrantmutex",3]]],[11,"from","","",7,[[],["rwlock",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"drop","","",1,[[]]],[11,"drop","","",2,[[]]],[11,"drop","","",5,[[]]],[11,"drop","","",6,[[]]],[11,"drop","","",8,[[]]],[11,"drop","","",9,[[]]],[11,"drop","","",10,[[]]],[11,"drop","","",11,[[]]],[11,"drop","","",12,[[]]],[11,"default","","",0,[[],["mutex",3]]],[11,"default","","",4,[[],["reentrantmutex",3]]],[11,"default","","",7,[[],["rwlock",3]]],[18,"INIT","","Initial value for an unlocked mutex.",13,null],[11,"is_locked","","Checks whether the mutex is currently locked.",13,[[]]],[11,"bump","","Temporarily yields the mutex to a waiting thread if there…",14,[[]]],[18,"INIT","","Initial value.",16,null],[18,"INIT","","Initial value for an unlocked `RwLock`.",17,null],[11,"is_locked","","Checks if this `RwLock` is currently locked in any way.",17,[[]]],[11,"bump_shared","","Temporarily yields a shared lock to a waiting thread if…",18,[[]]],[11,"bump_exclusive","","Temporarily yields an exclusive lock to a waiting thread…",18,[[]]],[11,"bump_upgradable","","Temporarily yields an upgradable lock to a waiting thread…",24,[[]]]],"p":[[3,"Mutex"],[3,"MutexGuard"],[3,"MappedMutexGuard"],[3,"RawReentrantMutex"],[3,"ReentrantMutex"],[3,"ReentrantMutexGuard"],[3,"MappedReentrantMutexGuard"],[3,"RwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"RwLockUpgradableReadGuard"],[3,"MappedRwLockReadGuard"],[3,"MappedRwLockWriteGuard"],[8,"RawMutex"],[8,"RawMutexFair"],[8,"RawMutexTimed"],[8,"GetThreadId"],[8,"RawRwLock"],[8,"RawRwLockFair"],[8,"RawRwLockDowngrade"],[8,"RawRwLockTimed"],[8,"RawRwLockRecursive"],[8,"RawRwLockRecursiveTimed"],[8,"RawRwLockUpgrade"],[8,"RawRwLockUpgradeFair"],[8,"RawRwLockUpgradeDowngrade"],[8,"RawRwLockUpgradeTimed"],[3,"GuardSend"],[3,"GuardNoSend"]]},\
"log":{"doc":"A lightweight logging facade.","i":[[3,"LogRecord","log","The \\\"payload\\\" of a log message.",null,null],[3,"LogMetadata","","Metadata about a log message.",null,null],[3,"LogLocation","","The location of a log message.",null,null],[3,"MaxLogLevelFilter","","A token providing read and write access to the global…",null,null],[3,"SetLoggerError","","The type returned by `set_logger` if `set_logger` has…",null,null],[3,"ShutdownLoggerError","","The type returned by `shutdown_logger_raw` if…",null,null],[4,"LogLevel","","An enum representing the available verbosity levels of the…",null,null],[13,"Error","","The \\\"error\\\" level.",0,null],[13,"Warn","","The \\\"warn\\\" level.",0,null],[13,"Info","","The \\\"info\\\" level.",0,null],[13,"Debug","","The \\\"debug\\\" level.",0,null],[13,"Trace","","The \\\"trace\\\" level.",0,null],[4,"LogLevelFilter","","An enum representing the available verbosity level filters…",null,null],[13,"Off","","A level lower than all log levels.",1,null],[13,"Error","","Corresponds to the `Error` log level.",1,null],[13,"Warn","","Corresponds to the `Warn` log level.",1,null],[13,"Info","","Corresponds to the `Info` log level.",1,null],[13,"Debug","","Corresponds to the `Debug` log level.",1,null],[13,"Trace","","Corresponds to the `Trace` log level.",1,null],[5,"max_log_level","","Returns the current maximum log level.",null,[[],["loglevelfilter",4]]],[5,"set_logger","","Sets the global logger.",null,[[],[["result",4],["setloggererror",3]]]],[5,"set_logger_raw","","Sets the global logger from a raw pointer.",null,[[],[["result",4],["setloggererror",3]]]],[5,"shutdown_logger","","Shuts down the global logger.",null,[[],[["shutdownloggererror",3],["box",3],["result",4]]]],[5,"shutdown_logger_raw","","Shuts down the global logger.",null,[[],[["shutdownloggererror",3],["result",4]]]],[8,"Log","","A trait encapsulating the operations required of a logger",null,null],[10,"enabled","","Determines if a log message with the specified metadata…",2,[[["logmetadata",3]]]],[10,"log","","Logs the `LogRecord`.",2,[[["logrecord",3]]]],[11,"max","","Returns the most verbose logging level.",0,[[],["loglevel",4]]],[11,"to_log_level_filter","","Converts the `LogLevel` to the equivalent `LogLevelFilter`.",0,[[],["loglevelfilter",4]]],[11,"max","","Returns the most verbose logging level filter.",1,[[],["loglevelfilter",4]]],[11,"to_log_level","","Converts `self` to the equivalent `LogLevel`.",1,[[],[["option",4],["loglevel",4]]]],[11,"args","","The message body.",3,[[],["arguments",3]]],[11,"metadata","","Metadata about the log directive.",3,[[],["logmetadata",3]]],[11,"location","","The location of the log directive.",3,[[],["loglocation",3]]],[11,"level","","The verbosity level of the message.",3,[[],["loglevel",4]]],[11,"target","","The name of the target of the directive.",3,[[]]],[11,"level","","The verbosity level of the message.",4,[[],["loglevel",4]]],[11,"target","","The name of the target of the directive.",4,[[]]],[11,"module_path","","The module path of the message.",5,[[]]],[11,"file","","The source file containing the message.",5,[[]]],[11,"line","","The line containing the message.",5,[[]]],[11,"get","","Gets the current maximum log level filter.",6,[[],["loglevelfilter",4]]],[11,"set","","Sets the maximum log level.",6,[[["loglevelfilter",4]]]],[14,"log","","The standard logging macro.",null,null],[14,"error","","Logs a message at the error level.",null,null],[14,"warn","","Logs a message at the warn level.",null,null],[14,"info","","Logs a message at the info level.",null,null],[14,"debug","","Logs a message at the debug level.",null,null],[14,"trace","","Logs a message at the trace level.",null,null],[14,"log_enabled","","Determines if a message logged at the specified level in…",null,null],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"clone","","",0,[[],["loglevel",4]]],[11,"clone","","",1,[[],["loglevelfilter",4]]],[11,"clone","","",5,[[],["loglocation",3]]],[11,"cmp","","",0,[[["loglevel",4]],["ordering",4]]],[11,"cmp","","",1,[[["loglevelfilter",4]],["ordering",4]]],[11,"eq","","",0,[[["loglevel",4]]]],[11,"eq","","",0,[[["loglevelfilter",4]]]],[11,"eq","","",1,[[["loglevelfilter",4]]]],[11,"eq","","",1,[[["loglevel",4]]]],[11,"partial_cmp","","",0,[[["loglevel",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",0,[[["loglevelfilter",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",1,[[["loglevelfilter",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",1,[[["loglevel",4]],[["ordering",4],["option",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"from_str","","",0,[[],[["result",4],["loglevel",4]]]],[11,"from_str","","",1,[[],[["loglevelfilter",4],["result",4]]]],[11,"description","","",7,[[]]],[11,"description","","",8,[[]]]],"p":[[4,"LogLevel"],[4,"LogLevelFilter"],[8,"Log"],[3,"LogRecord"],[3,"LogMetadata"],[3,"LogLocation"],[3,"MaxLogLevelFilter"],[3,"SetLoggerError"],[3,"ShutdownLoggerError"]]},\
"maplit":{"doc":"Macros for container literals with specific type.","i":[[14,"hashmap","maplit","Create a HashMap from a list of key-value pairs",null,null],[14,"hashset","","Create a HashSet from a list of elements.",null,null],[14,"btreemap","","Create a BTreeMap from a list of key-value pairs",null,null],[14,"btreeset","","Create a BTreeSet from a list of elements.",null,null],[14,"convert_args","","Macro that converts the keys or key-value pairs passed to…",null,null]],"p":[]},\
"mashup":{"doc":"github crates-io docs-rs","i":[[14,"mashup","mashup","A working stable concat_idents.",null,null]],"p":[]},\
"mashup_impl":{"doc":"","i":[[24,"mashup_macro_impl","mashup_impl","",null,null]],"p":[]},\
"matrixmultiply":{"doc":"General matrix multiplication for f32, f64 matrices.","i":[[5,"sgemm","matrixmultiply","General matrix multiplication (f32)",null,[[]]],[5,"dgemm","","General matrix multiplication (f64)",null,[[]]]],"p":[]},\
"memchr":{"doc":"This crate defines two functions, `memchr` and `memrchr`,…","i":[[5,"memchr","memchr","A safe interface to `memchr`.",null,[[],["option",4]]],[5,"memrchr","","A safe interface to `memrchr`.",null,[[],["option",4]]],[5,"memchr2","","Like `memchr`, but searches for two bytes instead of one.",null,[[],["option",4]]],[5,"memchr3","","Like `memchr`, but searches for three bytes instead of one.",null,[[],["option",4]]]],"p":[]},\
"memoffset":{"doc":"A crate used for calculating offsets of struct members and…","i":[[14,"raw_field","memoffset","Computes a const raw pointer to the given field of the…",null,null],[14,"offset_of","","Calculates the offset of the specified field from the…",null,null],[14,"span_of","","Produces a range instance representing the sub-slice…",null,null]],"p":[]},\
"miniz_oxide":{"doc":"A pure rust replacement for the miniz DEFLATE/zlib…","i":[[3,"StreamResult","miniz_oxide","A structure containg the result of a call to the inflate…",null,null],[12,"bytes_consumed","","The number of bytes consumed from the input slice.",0,null],[12,"bytes_written","","The number of bytes written to the output slice.",0,null],[12,"status","","The return status of the call.",0,null],[4,"MZFlush","","A list of flush types.",null,null],[13,"None","","Don\'t force any flushing. Used when more input data is…",1,null],[13,"Partial","","Zlib partial flush. Currently treated as `Sync`.",1,null],[13,"Sync","","Finish compressing the currently buffered data, and output…",1,null],[13,"Full","","Same as `Sync`, but resets the compression dictionary so…",1,null],[13,"Finish","","Attempt to flush the remaining data and end the stream.",1,null],[13,"Block","","Not implemented.",1,null],[4,"MZStatus","","A list of miniz successful status codes.",null,null],[13,"Ok","","",2,null],[13,"StreamEnd","","",2,null],[13,"NeedDict","","",2,null],[4,"MZError","","A list of miniz failed status codes.",null,null],[13,"ErrNo","","",3,null],[13,"Stream","","",3,null],[13,"Data","","",3,null],[13,"Mem","","",3,null],[13,"Buf","","",3,null],[13,"Version","","",3,null],[13,"Param","","",3,null],[4,"DataFormat","","How compressed data is wrapped.",null,null],[13,"Zlib","","Wrapped using the zlib format.",4,null],[13,"Raw","","Raw DEFLATE.",4,null],[0,"deflate","","This module contains functionality for compression.",null,null],[4,"CompressionLevel","miniz_oxide::deflate","How much processing the compressor should do to compress…",null,null],[13,"NoCompression","","Don\'t do any compression, only output uncompressed blocks.",5,null],[13,"BestSpeed","","Fast compression. Uses a special compression routine that…",5,null],[13,"BestCompression","","Slow/high compression. Do a lot of checks to try to find…",5,null],[13,"UberCompression","","Even more checks, can be very slow.",5,null],[13,"DefaultLevel","","Default compromise between speed and compression.",5,null],[13,"DefaultCompression","","Use the default compression level.",5,null],[5,"compress_to_vec","","Compress the input data to a vector, using the specified…",null,[[],["vec",3]]],[5,"compress_to_vec_zlib","","Compress the input data to a vector, using the specified…",null,[[],["vec",3]]],[0,"core","","Streaming compression functionality.",null,null],[3,"CompressorOxide","miniz_oxide::deflate::core","Main compression struct.",null,null],[3,"CallbackFunc","","Callback function and user used in `compress_to_output`.",null,null],[12,"put_buf_func","","",6,null],[4,"CompressionStrategy","","Strategy setting for compression.",null,null],[13,"Default","","Don\'t use any of the special strategies.",7,null],[13,"Filtered","","Only use matches that are at least 5 bytes long.",7,null],[13,"HuffmanOnly","","Don\'t look for matches, only huffman encode the literals.",7,null],[13,"RLE","","Only look for matches with a distance of 1, i.e do…",7,null],[13,"Fixed","","Only use static/fixed blocks. (Blocks using the default…",7,null],[4,"TDEFLFlush","","A list of deflate flush types.",null,null],[13,"None","","Compress as much as there is space for, and then return…",8,null],[13,"Sync","","Try to flush the current data and output an empty raw block.",8,null],[13,"Full","","Same as sync, but reset the dictionary so that the…",8,null],[13,"Finish","","Try to flush everything and end the stream.",8,null],[4,"TDEFLStatus","","Return status codes.",null,null],[13,"BadParam","","",9,null],[13,"PutBufFailed","","",9,null],[13,"Okay","","",9,null],[13,"Done","","",9,null],[5,"compress","","Main compression function. Tries to compress as much as…",null,[[["compressoroxide",3],["tdeflflush",4]]]],[5,"compress_to_output","","Main compression function. Callbacks output.",null,[[["compressoroxide",3],["tdeflflush",4]]]],[5,"create_comp_flags_from_zip_params","","Create a set of compression flags using parameters used by…",null,[[]]],[0,"deflate_flags","","",null,null],[17,"TDEFL_WRITE_ZLIB_HEADER","miniz_oxide::deflate::core::deflate_flags","Whether to use a zlib wrapper.",null,null],[17,"TDEFL_COMPUTE_ADLER32","","Should we compute the adler32 checksum.",null,null],[17,"TDEFL_GREEDY_PARSING_FLAG","","Should we use greedy parsing (as opposed to lazy parsing…",null,null],[17,"TDEFL_NONDETERMINISTIC_PARSING_FLAG","","Used in miniz to skip zero-initializing hash and dict. We…",null,null],[17,"TDEFL_RLE_MATCHES","","Only look for matches with a distance of 0.",null,null],[17,"TDEFL_FILTER_MATCHES","","Only use matches that are at least 6 bytes long.",null,null],[17,"TDEFL_FORCE_ALL_STATIC_BLOCKS","","Force the compressor to only output static blocks. (Blocks…",null,null],[17,"TDEFL_FORCE_ALL_RAW_BLOCKS","","Force the compressor to only output raw/uncompressed blocks.",null,null],[11,"new","miniz_oxide::deflate::core","",8,[[],[["mzerror",4],["result",4]]]],[11,"new","","Create a new `CompressorOxide` with the given flags.",10,[[]]],[11,"adler32","","Get the adler32 checksum of the currently encoded data.",10,[[]]],[11,"prev_return_status","","Get the return status of the previous `compress` call with…",10,[[],["tdeflstatus",4]]],[11,"flags","","Get the raw compressor flags.",10,[[]]],[11,"data_format","","Returns whether the compressor is wrapping the data in a…",10,[[],["dataformat",4]]],[11,"reset","","Reset the state of the compressor, keeping the same…",10,[[]]],[11,"set_compression_level","","Set the compression level of the compressor.",10,[[["compressionlevel",4]]]],[11,"set_compression_level_raw","","Set the compression level of the compressor using an…",10,[[]]],[11,"set_format_and_level","","Update the compression settings of the compressor.",10,[[["dataformat",4]]]],[0,"stream","miniz_oxide::deflate","Extra streaming compression functionality.",null,null],[5,"deflate","miniz_oxide::deflate::stream","Try to compress from input to output with the given…",null,[[["compressoroxide",3],["mzflush",4]],["streamresult",3]]],[0,"inflate","miniz_oxide","This module contains functionality for decompression.",null,null],[4,"TINFLStatus","miniz_oxide::inflate","Return status codes.",null,null],[13,"FailedCannotMakeProgress","","More input data was expected, but the caller indicated…",11,null],[13,"BadParam","","One or more of the input parameters were invalid.",11,null],[13,"Adler32Mismatch","","The decompression went fine, but the adler32 checksum did…",11,null],[13,"Failed","","Failed to decompress due to invalid data.",11,null],[13,"Done","","Finished decomression without issues.",11,null],[13,"NeedsMoreInput","","The decompressor needs more input data to continue…",11,null],[13,"HasMoreOutput","","There is still pending data that didn\'t fit in the output…",11,null],[5,"decompress_to_vec","","Decompress the deflate-encoded data in `input` to a vector.",null,[[],[["vec",3],["tinflstatus",4],["result",4]]]],[5,"decompress_to_vec_zlib","","Decompress the deflate-encoded data (with a zlib wrapper)…",null,[[],[["vec",3],["tinflstatus",4],["result",4]]]],[0,"core","","Streaming decompression functionality.",null,null],[3,"DecompressorOxide","miniz_oxide::inflate::core","Main decompression struct.",null,null],[5,"decompress","","Main decompression function. Keeps decompressing data from…",null,[[["decompressoroxide",3],["cursor",3]]]],[0,"inflate_flags","","",null,null],[17,"TINFL_FLAG_PARSE_ZLIB_HEADER","miniz_oxide::inflate::core::inflate_flags","Should we try to parse a zlib header?",null,null],[17,"TINFL_FLAG_HAS_MORE_INPUT","","There is more input that hasn\'t been given to the…",null,null],[17,"TINFL_FLAG_USING_NON_WRAPPING_OUTPUT_BUF","","The output buffer should not wrap around.",null,null],[17,"TINFL_FLAG_COMPUTE_ADLER32","","Should we calculate the adler32 checksum of the output data?",null,null],[17,"TINFL_LZ_DICT_SIZE","miniz_oxide::inflate::core","",null,null],[11,"new","","Create a new tinfl_decompressor with all fields set to 0.",12,[[],["decompressoroxide",3]]],[11,"init","","Set the current state to `Start`.",12,[[]]],[11,"adler32","","Returns the adler32 checksum of the currently decompressed…",12,[[],["option",4]]],[0,"stream","miniz_oxide::inflate","Extra streaming decompression functionality.",null,null],[3,"InflateState","miniz_oxide::inflate::stream","A struct that compbines a decompressor with extra data for…",null,null],[5,"inflate","","Try to decompress from `input` to `output` with the given…",null,[[["inflatestate",3],["mzflush",4]],["streamresult",3]]],[11,"new","","Create a new state.",13,[[["dataformat",4]],["inflatestate",3]]],[11,"new_boxed","","Create a new state on the heap.",13,[[["dataformat",4]],[["inflatestate",3],["box",3]]]],[11,"decompressor","","Access the innner decompressor.",13,[[],["decompressoroxide",3]]],[11,"last_status","","Return the status of the last call to `inflate` with this…",13,[[],["tinflstatus",4]]],[11,"new_boxed_with_window_bits","","Create a new state using miniz/zlib style window bits…",13,[[],[["inflatestate",3],["box",3]]]],[11,"reset","","Reset the decompressor without re-allocating memory, using…",13,[[["dataformat",4]]]],[11,"from_i32","miniz_oxide::inflate","",11,[[],[["tinflstatus",4],["option",4]]]],[6,"MZResult","miniz_oxide","`Result` alias for all miniz status codes both successful…",null,null],[11,"new","","Create an MZFlush value from an integer value.",1,[[],[["mzerror",4],["result",4]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","miniz_oxide::deflate","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","miniz_oxide::deflate::core","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","miniz_oxide::inflate","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","miniz_oxide::inflate::core","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","miniz_oxide::inflate::stream","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","miniz_oxide::deflate::core","",8,[[["mzflush",4]]]],[11,"from","miniz_oxide","",14,[[["streamresult",3]]]],[11,"from","","",14,[[["streamresult",3]]]],[11,"clone","miniz_oxide::deflate::core","",7,[[],["compressionstrategy",4]]],[11,"clone","","",8,[[],["tdeflflush",4]]],[11,"clone","","",9,[[],["tdeflstatus",4]]],[11,"clone","miniz_oxide::deflate","",5,[[],["compressionlevel",4]]],[11,"clone","miniz_oxide::inflate","",11,[[],["tinflstatus",4]]],[11,"clone","miniz_oxide","",1,[[],["mzflush",4]]],[11,"clone","","",2,[[],["mzstatus",4]]],[11,"clone","","",3,[[],["mzerror",4]]],[11,"clone","","",4,[[],["dataformat",4]]],[11,"clone","","",0,[[],["streamresult",3]]],[11,"default","miniz_oxide::deflate::core","Initialize the compressor with a level of 4, zlib wrapper…",10,[[]]],[11,"default","miniz_oxide::inflate::core","Create a new tinfl_decompressor with all fields set to 0.",12,[[]]],[11,"default","miniz_oxide::inflate::stream","",13,[[]]],[11,"eq","miniz_oxide::deflate::core","",7,[[["compressionstrategy",4]]]],[11,"eq","","",8,[[["tdeflflush",4]]]],[11,"eq","","",9,[[["tdeflstatus",4]]]],[11,"eq","miniz_oxide::deflate","",5,[[["compressionlevel",4]]]],[11,"eq","miniz_oxide::inflate","",11,[[["tinflstatus",4]]]],[11,"eq","miniz_oxide","",1,[[["mzflush",4]]]],[11,"eq","","",2,[[["mzstatus",4]]]],[11,"eq","","",3,[[["mzerror",4]]]],[11,"eq","","",4,[[["dataformat",4]]]],[11,"eq","","",0,[[["streamresult",3]]]],[11,"ne","","",0,[[["streamresult",3]]]],[11,"fmt","miniz_oxide::deflate::core","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","miniz_oxide::deflate","",5,[[["formatter",3]],["result",6]]],[11,"fmt","miniz_oxide::inflate","",11,[[["formatter",3]],["result",6]]],[11,"fmt","miniz_oxide","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"hash","miniz_oxide::deflate::core","",7,[[]]],[11,"hash","","",8,[[]]],[11,"hash","","",9,[[]]],[11,"hash","miniz_oxide::deflate","",5,[[]]],[11,"hash","miniz_oxide::inflate","",11,[[]]],[11,"hash","miniz_oxide","",1,[[]]],[11,"hash","","",2,[[]]],[11,"hash","","",3,[[]]],[11,"hash","","",4,[[]]],[11,"hash","","",0,[[]]]],"p":[[3,"StreamResult"],[4,"MZFlush"],[4,"MZStatus"],[4,"MZError"],[4,"DataFormat"],[4,"CompressionLevel"],[3,"CallbackFunc"],[4,"CompressionStrategy"],[4,"TDEFLFlush"],[4,"TDEFLStatus"],[3,"CompressorOxide"],[4,"TINFLStatus"],[3,"DecompressorOxide"],[3,"InflateState"],[6,"MZResult"]]},\
"ndarray":{"doc":"The `ndarray` crate provides an n-dimensional container…","i":[[3,"Dim","ndarray","Dimension description.",null,null],[3,"Axis","","An axis index.",null,null],[12,"0","","",0,null],[3,"AxisDescription","","Description of the axis, its length and its stride.",null,null],[12,"0","","",1,null],[12,"1","","",1,null],[12,"2","","",1,null],[3,"IxDynImpl","","Dynamic dimension or index type.",null,null],[3,"ShapeError","","An error related to array shape or layout.",null,null],[3,"Slice","","A slice (range with step size).",null,null],[12,"start","","",2,null],[12,"end","","",2,null],[12,"step","","",2,null],[3,"SliceInfo","","Represents all of the necessary information to perform a…",null,null],[3,"Zip","","Lock step function application across several arrays or…",null,null],[3,"ArrayBase","","An n-dimensional array.",null,null],[3,"OwnedRepr","","Array\'s representation.",null,null],[3,"OwnedArcRepr","","ArcArray\'s representation.",null,null],[3,"RawViewRepr","","Array pointer’s representation.",null,null],[3,"ViewRepr","","Array view’s representation.",null,null],[3,"Shape","","A contiguous array shape of n dimensions.",null,null],[3,"StrideShape","","An array shape of n dimensions in c-order, f-order or…",null,null],[4,"ErrorKind","","Error code for an error related to array shape or layout.",null,null],[13,"IncompatibleShape","","incompatible shape",3,null],[13,"IncompatibleLayout","","incompatible memory layout",3,null],[13,"RangeLimited","","the shape does not fit inside type limits",3,null],[13,"OutOfBounds","","out of bounds indexing",3,null],[13,"Unsupported","","aliasing array elements",3,null],[13,"Overflow","","overflow when computing offset, length, etc.",3,null],[4,"SliceOrIndex","","A slice (range with step) or an index.",null,null],[13,"Slice","","A range with step size. `end` is an exclusive index.…",4,null],[12,"start","ndarray::SliceOrIndex","",5,null],[12,"end","","",5,null],[12,"step","","",5,null],[13,"Index","ndarray","A single index.",4,null],[4,"FoldWhile","","Value controlling the execution of `.fold_while` on `Zip`.",null,null],[13,"Continue","","Continue folding with this value",6,null],[13,"Done","","Fold is complete and will return this value",6,null],[4,"CowRepr","","CowArray\'s representation.",null,null],[13,"View","","Borrowed data.",7,null],[13,"Owned","","Owned data.",7,null],[5,"Dim","","Create a new dimension value.",null,[[]]],[5,"indices","","Create an iterable of the array shape `shape`.",null,[[],["indices",3]]],[5,"indices_of","","Return an iterable of the indices of the passed-in array.",null,[[["arraybase",3]],["indices",3]]],[5,"stack","","Stack arrays along the given axis.",null,[[["axis",3]],[["result",4],["shapeerror",3],["array",6]]]],[5,"Ix0","","Create a zero-dimensional index",null,[[],["ix0",6]]],[5,"Ix1","","Create a one-dimensional index",null,[[["ix",6]],["ix1",6]]],[5,"Ix2","","Create a two-dimensional index",null,[[["ix",6]],["ix2",6]]],[5,"Ix3","","Create a three-dimensional index",null,[[["ix",6]],["ix3",6]]],[5,"Ix4","","Create a four-dimensional index",null,[[["ix",6]],["ix4",6]]],[5,"Ix5","","Create a five-dimensional index",null,[[["ix",6]],["ix5",6]]],[5,"Ix6","","Create a six-dimensional index",null,[[["ix",6]],["ix6",6]]],[5,"IxDyn","","Create a dynamic-dimensional index",null,[[],["ixdyn",6]]],[5,"arr0","","Create a zero-dimensional array with the element `x`.",null,[[],["array0",6]]],[5,"arr1","","Create a one-dimensional array with elements from `xs`.",null,[[],[["clone",8],["array1",6]]]],[5,"rcarr1","","Create a one-dimensional array with elements from `xs`.",null,[[],[["clone",8],["arcarray1",6]]]],[5,"aview0","","Create a zero-dimensional array view borrowing `x`.",null,[[],["arrayview0",6]]],[5,"aview1","","Create a one-dimensional array view with elements…",null,[[],["arrayview1",6]]],[5,"aview2","","Create a two-dimensional array view with elements…",null,[[],["arrayview2",6]]],[5,"aview_mut1","","Create a one-dimensional read-write array view with…",null,[[],["arrayviewmut1",6]]],[5,"aview_mut2","","Create a two-dimensional read-write array view with…",null,[[],["arrayviewmut2",6]]],[5,"arr2","","Create a two-dimensional array with elements from `xs`.",null,[[],[["array2",6],["clone",8]]]],[5,"rcarr2","","Create a two-dimensional array with elements from `xs`.",null,[[],[["arcarray2",6],["clone",8]]]],[5,"arr3","","Create a three-dimensional array with elements from `xs`.",null,[[],[["clone",8],["array3",6]]]],[5,"rcarr3","","Create a three-dimensional array with elements from `xs`.",null,[[],[["ix3",6],["clone",8],["arcarray",6]]]],[0,"iter","","Producers, iterables and iterators.",null,null],[3,"Axes","ndarray::iter","An iterator over the length and stride of each axis of an…",null,null],[3,"Indices","","Indices producer and iterable.",null,null],[3,"IndicesIter","","An iterator over the indexes of an array shape.",null,null],[3,"AxisChunksIter","","An iterator that traverses over the specified axis and…",null,null],[3,"AxisChunksIterMut","","An iterator that traverses over the specified axis and…",null,null],[3,"AxisIter","","An iterator that traverses over an axis and and yields…",null,null],[3,"AxisIterMut","","An iterator that traverses over an axis and and yields…",null,null],[3,"ExactChunks","","Exact chunks producer and iterable.",null,null],[3,"ExactChunksIter","","Exact chunks iterator.",null,null],[3,"ExactChunksIterMut","","Exact chunks iterator.",null,null],[3,"ExactChunksMut","","Exact chunks producer and iterable.",null,null],[3,"IndexedIter","","An iterator over the indexes and elements of an array.",null,null],[3,"IndexedIterMut","","An iterator over the indexes and elements of an array…",null,null],[3,"Iter","","An iterator over the elements of an array.",null,null],[3,"IterMut","","An iterator over the elements of an array (mutable).",null,null],[3,"Lanes","","See `.lanes()` for more information.",null,null],[3,"LanesIter","","An iterator that traverses over all axes but one, and…",null,null],[3,"LanesIterMut","","An iterator that traverses over all dimensions but the…",null,null],[3,"LanesMut","","See `.lanes_mut()` for more information.",null,null],[3,"Windows","","Window producer and iterable",null,null],[11,"kind","ndarray","Return the `ErrorKind` of this error.",8,[[],["errorkind",4]]],[11,"from_kind","","Create a new `ShapeError`",8,[[["errorkind",4]]]],[11,"split_at","ndarray::iter","Splits the iterator at `index`, yielding two disjoint…",9,[[]]],[11,"split_at","","Splits the iterator at `index`, yielding two disjoint…",10,[[]]],[11,"split_at","","Splits the iterator at index, yielding two disjoint…",11,[[]]],[11,"split_at","","Splits the iterator at index, yielding two disjoint…",12,[[]]],[11,"size","ndarray","Return the size of the shape in number of elements",13,[[]]],[11,"new","","Create a new `Slice` with the given extents.",2,[[["option",4]],["slice",3]]],[11,"step_by","","Create a new `Slice` with the given step size (multiplied…",2,[[]]],[11,"is_slice","","Returns `true` if `self` is a `Slice` value.",4,[[]]],[11,"is_index","","Returns `true` if `self` is an `Index` value.",4,[[]]],[11,"step_by","","Returns a new `SliceOrIndex` with the given step size…",4,[[]]],[11,"new","","Returns a new `SliceInfo` instance.",14,[[],[["result",4],["shapeerror",3],["sliceinfo",3]]]],[11,"out_ndim","","Returns the number of dimensions after calling `.slice()`…",14,[[]]],[11,"from","","Create a new `Zip` from the input array or other producer…",15,[[]]],[11,"indexed","","Create a new `Zip` with an index producer and the producer…",15,[[]]],[11,"size","","Return a the number of element tuples in the Zip",15,[[]]],[11,"apply","","Apply a function to all elements of the input arrays,…",15,[[]]],[11,"fold","","Apply a fold function to all elements of the input arrays,…",15,[[]]],[11,"fold_while","","Apply a fold function to the input arrays while the return…",15,[[],["foldwhile",4]]],[11,"all","","Tests if every element of the iterator matches a predicate.",15,[[]]],[11,"and","","Include the producer `p` in the Zip.",15,[[],["zip",3]]],[11,"and_broadcast","","Include the producer `p` in the Zip, broadcasting if needed.",15,[[],["zip",3]]],[11,"apply_collect","","Apply and collect the results into a new array, which has…",15,[[],["array",6]]],[11,"apply_assign_into","","Apply and assign the results into the producer `into`,…",15,[[]]],[11,"split","","Split the `Zip` evenly in two.",15,[[]]],[11,"apply","","Apply a function to all elements of the input arrays,…",15,[[]]],[11,"fold","","Apply a fold function to all elements of the input arrays,…",15,[[]]],[11,"fold_while","","Apply a fold function to the input arrays while the return…",15,[[],["foldwhile",4]]],[11,"all","","Tests if every element of the iterator matches a predicate.",15,[[]]],[11,"and","","Include the producer `p` in the Zip.",15,[[],["zip",3]]],[11,"and_broadcast","","Include the producer `p` in the Zip, broadcasting if needed.",15,[[],["zip",3]]],[11,"apply_collect","","Apply and collect the results into a new array, which has…",15,[[],["array",6]]],[11,"apply_assign_into","","Apply and assign the results into the producer `into`,…",15,[[]]],[11,"split","","Split the `Zip` evenly in two.",15,[[]]],[11,"apply","","Apply a function to all elements of the input arrays,…",15,[[]]],[11,"fold","","Apply a fold function to all elements of the input arrays,…",15,[[]]],[11,"fold_while","","Apply a fold function to the input arrays while the return…",15,[[],["foldwhile",4]]],[11,"all","","Tests if every element of the iterator matches a predicate.",15,[[]]],[11,"and","","Include the producer `p` in the Zip.",15,[[],["zip",3]]],[11,"and_broadcast","","Include the producer `p` in the Zip, broadcasting if needed.",15,[[],["zip",3]]],[11,"apply_collect","","Apply and collect the results into a new array, which has…",15,[[],["array",6]]],[11,"apply_assign_into","","Apply and assign the results into the producer `into`,…",15,[[]]],[11,"split","","Split the `Zip` evenly in two.",15,[[]]],[11,"apply","","Apply a function to all elements of the input arrays,…",15,[[]]],[11,"fold","","Apply a fold function to all elements of the input arrays,…",15,[[]]],[11,"fold_while","","Apply a fold function to the input arrays while the return…",15,[[],["foldwhile",4]]],[11,"all","","Tests if every element of the iterator matches a predicate.",15,[[]]],[11,"and","","Include the producer `p` in the Zip.",15,[[],["zip",3]]],[11,"and_broadcast","","Include the producer `p` in the Zip, broadcasting if needed.",15,[[],["zip",3]]],[11,"apply_collect","","Apply and collect the results into a new array, which has…",15,[[],["array",6]]],[11,"apply_assign_into","","Apply and assign the results into the producer `into`,…",15,[[]]],[11,"split","","Split the `Zip` evenly in two.",15,[[]]],[11,"apply","","Apply a function to all elements of the input arrays,…",15,[[]]],[11,"fold","","Apply a fold function to all elements of the input arrays,…",15,[[]]],[11,"fold_while","","Apply a fold function to the input arrays while the return…",15,[[],["foldwhile",4]]],[11,"all","","Tests if every element of the iterator matches a predicate.",15,[[]]],[11,"and","","Include the producer `p` in the Zip.",15,[[],["zip",3]]],[11,"and_broadcast","","Include the producer `p` in the Zip, broadcasting if needed.",15,[[],["zip",3]]],[11,"apply_collect","","Apply and collect the results into a new array, which has…",15,[[],["array",6]]],[11,"apply_assign_into","","Apply and assign the results into the producer `into`,…",15,[[]]],[11,"split","","Split the `Zip` evenly in two.",15,[[]]],[11,"apply","","Apply a function to all elements of the input arrays,…",15,[[]]],[11,"fold","","Apply a fold function to all elements of the input arrays,…",15,[[]]],[11,"fold_while","","Apply a fold function to the input arrays while the return…",15,[[],["foldwhile",4]]],[11,"all","","Tests if every element of the iterator matches a predicate.",15,[[]]],[11,"split","","Split the `Zip` evenly in two.",15,[[]]],[11,"into_inner","","Return the inner value",6,[[]]],[11,"is_done","","Return true if it is `Done`, false if `Continue`",6,[[]]],[11,"axis","","Return axis",1,[[],["axis",3]]],[11,"len","","Return length",1,[[],["ix",6]]],[11,"stride","","Return stride",1,[[],["ixs",6]]],[11,"index","","Return the index of the axis.",0,[[]]],[11,"zeros","","Create a new dimension value with `n` axes, all zeros",16,[[],["ixdyn",6]]],[0,"prelude","","ndarray prelude.",null,null],[11,"from_vec","","Create a one-dimensional array from a vector (no copying…",17,[[["vec",3]]]],[11,"linspace","","Create a one-dimensional array with `n` evenly spaced…",17,[[]]],[11,"range","","Create a one-dimensional array with elements from `start`…",17,[[]]],[11,"logspace","","Create a one-dimensional array with `n` logarithmically…",17,[[]]],[11,"geomspace","","Create a one-dimensional array with `n` geometrically…",17,[[],["option",4]]],[11,"eye","","Create an identity matrix of size `n` (square 2D array).",17,[[["ix",6]]]],[11,"from_diag","","Create a 2D matrix from its diagonal",17,[[["arraybase",3]]]],[11,"from_elem","","Create an array with copies of `elem`, shape `shape`.",17,[[]]],[11,"zeros","","Create an array with zeros, shape `shape`.",17,[[]]],[11,"ones","","Create an array with ones, shape `shape`.",17,[[]]],[11,"default","","Create an array with default values, shape `shape`",17,[[]]],[11,"from_shape_simple_fn","","Create an array with values created by the function `f`.",17,[[]]],[11,"from_shape_fn","","Create an array with values created by the function `f`.",17,[[]]],[11,"from_shape_vec","","Create an array with the given shape from a vector. (No…",17,[[["vec",3]],[["shapeerror",3],["result",4]]]],[11,"from_shape_vec_unchecked","","Creates an array from a vector and interpret it according…",17,[[["vec",3]]]],[11,"uninitialized","","Create an array with uninitalized elements, shape `shape`.",17,[[]]],[11,"maybe_uninit","","Create an array with uninitalized elements, shape `shape`.",17,[[]]],[11,"len","","Return the total number of elements in the array.",17,[[]]],[11,"len_of","","Return the length of `axis`.",17,[[["axis",3]]]],[11,"is_empty","","Return whether the array has any elements",17,[[]]],[11,"ndim","","Return the number of dimensions (axes) in the array",17,[[]]],[11,"dim","","Return the shape of the array in its “pattern” form, an…",17,[[]]],[11,"raw_dim","","Return the shape of the array as it stored in the array.",17,[[]]],[11,"shape","","Return the shape of the array as a slice.",17,[[]]],[11,"strides","","Return the strides of the array as a slice.",17,[[]]],[11,"stride_of","","Return the stride of `axis`.",17,[[["axis",3]]]],[11,"view","","Return a read-only view of the array",17,[[],["arrayview",6]]],[11,"view_mut","","Return a read-write view of the array",17,[[],["arrayviewmut",6]]],[11,"to_owned","","Return an uniquely owned copy of the array.",17,[[],["array",6]]],[11,"to_shared","","Return a shared ownership (copy on write) array.",17,[[],["arcarray",6]]],[11,"into_owned","","Turn the array into a uniquely owned array, cloning the…",17,[[],["array",6]]],[11,"into_shared","","Turn the array into a shared ownership (copy on write)…",17,[[],["arcarray",6]]],[11,"first","","Returns a reference to the first element of the array, or…",17,[[],["option",4]]],[11,"first_mut","","Returns a mutable reference to the first element of the…",17,[[],["option",4]]],[11,"iter","","Return an iterator of references to the elements of the…",17,[[],["iter",3]]],[11,"iter_mut","","Return an iterator of mutable references to the elements…",17,[[],["itermut",3]]],[11,"indexed_iter","","Return an iterator of indexes and references to the…",17,[[],["indexediter",3]]],[11,"indexed_iter_mut","","Return an iterator of indexes and mutable references to…",17,[[],["indexeditermut",3]]],[11,"slice","","Return a sliced view of the array.",17,[[["sliceinfo",3]],["arrayview",6]]],[11,"slice_mut","","Return a sliced read-write view of the array.",17,[[["sliceinfo",3]],["arrayviewmut",6]]],[11,"multi_slice_mut","","Return multiple disjoint, sliced, mutable views of the…",17,[[]]],[11,"slice_move","","Slice the array, possibly changing the number of dimensions.",17,[[["sliceinfo",3]],["arraybase",3]]],[11,"slice_collapse","","Slice the array in place without changing the number of…",17,[[]]],[11,"slice_inplace","","Slice the array in place without changing the number of…",17,[[]]],[11,"slice_axis","","Return a view of the array, sliced along the specified axis.",17,[[["slice",3],["axis",3]],["arrayview",6]]],[11,"slice_axis_mut","","Return a mutable view of the array, sliced along the…",17,[[["slice",3],["axis",3]],["arrayviewmut",6]]],[11,"slice_axis_inplace","","Slice the array in place along the specified axis.",17,[[["slice",3],["axis",3]]]],[11,"get","","Return a reference to the element at `index`, or return…",17,[[],["option",4]]],[11,"get_mut","","Return a mutable reference to the element at `index`, or…",17,[[],["option",4]]],[11,"uget","","Perform unchecked array indexing.",17,[[]]],[11,"uget_mut","","Perform unchecked array indexing.",17,[[]]],[11,"swap","","Swap elements at indices `index1` and `index2`.",17,[[]]],[11,"uswap","","Swap elements unchecked at indices `index1` and `index2`.",17,[[]]],[11,"index_axis","","Returns a view restricted to `index` along the axis, with…",17,[[["axis",3]],["arrayview",6]]],[11,"index_axis_mut","","Returns a mutable view restricted to `index` along the…",17,[[["axis",3]],["arrayviewmut",6]]],[11,"index_axis_move","","Collapses the array to `index` along the axis and removes…",17,[[["axis",3]],["arraybase",3]]],[11,"collapse_axis","","Selects `index` along the axis, collapsing the axis into…",17,[[["axis",3]]]],[11,"subview","","Along `axis`, select the subview `index` and return a view…",17,[[["axis",3],["ix",6]],["arrayview",6]]],[11,"subview_mut","","Along `axis`, select the subview `index` and return a…",17,[[["axis",3],["ix",6]],["arrayviewmut",6]]],[11,"subview_inplace","","Collapse dimension `axis` into length one, and select the…",17,[[["axis",3],["ix",6]]]],[11,"into_subview","","Along `axis`, select the subview `index` and return `self`…",17,[[["axis",3],["ix",6]],["arraybase",3]]],[11,"select","","Along `axis`, select arbitrary subviews corresponding to…",17,[[["axis",3]],["array",6]]],[11,"genrows","","Return a producer and iterable that traverses over the…",17,[[],["lanes",3]]],[11,"genrows_mut","","Return a producer and iterable that traverses over the…",17,[[],["lanesmut",3]]],[11,"gencolumns","","Return a producer and iterable that traverses over the…",17,[[],["lanes",3]]],[11,"gencolumns_mut","","Return a producer and iterable that traverses over the…",17,[[],["lanesmut",3]]],[11,"lanes","","Return a producer and iterable that traverses over all 1D…",17,[[["axis",3]],["lanes",3]]],[11,"lanes_mut","","Return a producer and iterable that traverses over all 1D…",17,[[["axis",3]],["lanesmut",3]]],[11,"outer_iter","","Return an iterator that traverses over the outermost…",17,[[],["axisiter",3]]],[11,"outer_iter_mut","","Return an iterator that traverses over the outermost…",17,[[],["axisitermut",3]]],[11,"axis_iter","","Return an iterator that traverses over `axis` and yields…",17,[[["axis",3]],["axisiter",3]]],[11,"axis_iter_mut","","Return an iterator that traverses over `axis` and yields…",17,[[["axis",3]],["axisitermut",3]]],[11,"axis_chunks_iter","","Return an iterator that traverses over `axis` by chunks of…",17,[[["axis",3]],["axischunksiter",3]]],[11,"axis_chunks_iter_mut","","Return an iterator that traverses over `axis` by chunks of…",17,[[["axis",3]],["axischunksitermut",3]]],[11,"exact_chunks","","Return an exact chunks producer (and iterable).",17,[[],["exactchunks",3]]],[11,"exact_chunks_mut","","Return an exact chunks producer (and iterable).",17,[[],["exactchunksmut",3]]],[11,"windows","","Return a window producer and iterable.",17,[[],["windows",3]]],[11,"diag","","Return an view of the diagonal elements of the array.",17,[[],["arrayview1",6]]],[11,"diag_mut","","Return a read-write view over the diagonal elements of the…",17,[[],["arrayviewmut1",6]]],[11,"into_diag","","Return the diagonal as a one-dimensional array.",17,[[],[["ix1",6],["arraybase",3]]]],[11,"is_standard_layout","","Return `true` if the array data is laid out in contiguous…",17,[[]]],[11,"as_standard_layout","","Return a standard-layout array containing the data,…",17,[[],["cowarray",6]]],[11,"as_ptr","","Return a pointer to the first element in the array.",17,[[]]],[11,"as_mut_ptr","","Return a mutable pointer to the first element in the array.",17,[[]]],[11,"raw_view","","Return a raw view of the array.",17,[[],["rawarrayview",6]]],[11,"raw_view_mut","","Return a raw mutable view of the array.",17,[[],["rawarrayviewmut",6]]],[11,"as_slice","","Return the array’s data as a slice, if it is contiguous…",17,[[],["option",4]]],[11,"as_slice_mut","","Return the array’s data as a slice, if it is contiguous…",17,[[],["option",4]]],[11,"as_slice_memory_order","","Return the array’s data as a slice if it is contiguous,…",17,[[],["option",4]]],[11,"as_slice_memory_order_mut","","Return the array’s data as a slice if it is contiguous,…",17,[[],["option",4]]],[11,"into_shape","","Transform the array into `shape`; any shape with the same…",17,[[],[["arraybase",3],["result",4],["shapeerror",3]]]],[11,"reshape","","Note: Reshape is for `ArcArray` only. Use `.into_shape()`…",17,[[],["arraybase",3]]],[11,"into_dyn","","Convert any array or array view to a dynamic dimensional…",17,[[],[["arraybase",3],["ixdyn",6]]]],[11,"into_dimensionality","","Convert an array or array view to another with the same…",17,[[],[["shapeerror",3],["result",4],["arraybase",3]]]],[11,"broadcast","","Act like a larger size and/or shape array by broadcasting…",17,[[],[["arrayview",6],["option",4]]]],[11,"swap_axes","","Swap axes `ax` and `bx`.",17,[[]]],[11,"permuted_axes","","Permute the axes.",17,[[],["arraybase",3]]],[11,"reversed_axes","","Transpose the array by reversing axes.",17,[[],["arraybase",3]]],[11,"t","","Return a transposed view of the array.",17,[[],["arrayview",6]]],[11,"axes","","Return an iterator over the length and stride of each axis.",17,[[],["axes",3]]],[11,"max_stride_axis","","Return the axis with the greatest stride (by absolute…",17,[[],["axis",3]]],[11,"invert_axis","","Reverse the stride of `axis`.",17,[[["axis",3]]]],[11,"merge_axes","","If possible, merge in the axis `take` to `into`.",17,[[["axis",3]]]],[11,"insert_axis","","Insert new array axis at `axis` and return the result.",17,[[["axis",3]],["arraybase",3]]],[11,"remove_axis","","Remove array axis `axis` and return the result.",17,[[["axis",3]],["arraybase",3]]],[11,"assign","","Perform an elementwise assigment to `self` from `rhs`.",17,[[["arraybase",3]]]],[11,"fill","","Perform an elementwise assigment to `self` from element `x`.",17,[[]]],[11,"zip_mut_with","","Traverse two arrays in unspecified order, in lock step,…",17,[[["arraybase",3]]]],[11,"fold","","Traverse the array elements and apply a fold, returning…",17,[[]]],[11,"map","","Call `f` by reference on each element and create a new…",17,[[],["array",6]]],[11,"map_mut","","Call `f` on a mutable reference of each element and create…",17,[[],["array",6]]],[11,"mapv","","Call `f` by value on each element and create a new array…",17,[[],["array",6]]],[11,"mapv_into","","Call `f` by value on each element, update the array with…",17,[[]]],[11,"map_inplace","","Modify the array in place by calling `f` by mutable…",17,[[]]],[11,"mapv_inplace","","Modify the array in place by calling `f` by value on each…",17,[[]]],[11,"visit","","Visit each element in the array by calling `f` by…",17,[[]]],[11,"fold_axis","","Fold along an axis.",17,[[["axis",3]],["array",6]]],[11,"map_axis","","Reduce the values along an axis into just one value,…",17,[[["axis",3]],["array",6]]],[11,"map_axis_mut","","Reduce the values along an axis into just one value,…",17,[[["axis",3]],["array",6]]],[11,"accumulate_axis_inplace","","Iterates over pairs of consecutive elements along the axis.",17,[[["axis",3]]]],[11,"into_scalar","","Returns the single element in the array without cloning it.",17,[[]]],[11,"into_raw_vec","","Return a vector of the elements in the array, in the way…",17,[[],["vec",3]]],[11,"assume_init","","Promise that the array\'s elements are all fully…",17,[[],["arraybase",3]]],[11,"to_vec","","Return an vector with the elements of the one-dimensional…",17,[[],["vec",3]]],[11,"row","","Return an array view of row `index`.",17,[[["ix",6]],["arrayview1",6]]],[11,"row_mut","","Return a mutable array view of row `index`.",17,[[["ix",6]],["arrayviewmut1",6]]],[11,"nrows","","Return the number of rows (length of `Axis(0)`) in the…",17,[[]]],[11,"rows","","Return the number of rows (length of `Axis(0)`) in the…",17,[[]]],[11,"column","","Return an array view of column `index`.",17,[[["ix",6]],["arrayview1",6]]],[11,"column_mut","","Return a mutable array view of column `index`.",17,[[["ix",6]],["arrayviewmut1",6]]],[11,"ncols","","Return the number of columns (length of `Axis(1)`) in the…",17,[[]]],[11,"cols","","Return the number of columns (length of `Axis(1)`) in the…",17,[[]]],[11,"is_square","","Return true if the array is square, false otherwise.",17,[[]]],[11,"insert_axis_inplace","","Insert new array axis of length 1 at `axis`, modifying the…",17,[[["axis",3]]]],[11,"index_axis_inplace","","Collapses the array to `index` along the axis and removes…",17,[[["axis",3]]]],[11,"sum","","Return the sum of all elements in the array.",17,[[]]],[11,"mean","","Returns the arithmetic mean x̅ of all elements in the array:",17,[[],["option",4]]],[11,"scalar_sum","","Return the sum of all elements in the array.",17,[[]]],[11,"product","","Return the product of all elements in the array.",17,[[]]],[11,"sum_axis","","Return sum along `axis`.",17,[[["axis",3]],["array",6]]],[11,"mean_axis","","Return mean along `axis`.",17,[[["axis",3]],[["option",4],["array",6]]]],[11,"var_axis","","Return variance along `axis`.",17,[[["axis",3]],["array",6]]],[11,"std_axis","","Return standard deviation along `axis`.",17,[[["axis",3]],["array",6]]],[11,"all_close","","Return `true` if the arrays\' elementwise differences are…",17,[[["arraybase",3]]]],[0,"linalg","","Linear algebra.",null,null],[5,"general_mat_mul","ndarray::linalg","General matrix-matrix multiplication.",null,[[["arraybase",3],["arraybase",3],["arraybase",3]]]],[5,"general_mat_vec_mul","","General matrix-vector multiplication.",null,[[["arraybase",3],["arraybase",3],["arraybase",3]]]],[11,"dot","ndarray","Perform dot product or matrix multiplication of arrays…",17,[[]]],[11,"dot","","Perform matrix multiplication of rectangular arrays `self`…",17,[[]]],[11,"scaled_add","","Perform the operation `self += alpha * rhs` efficiently,…",17,[[["arraybase",3]]]],[8,"Dot","ndarray::linalg","Matrix Multiplication",null,null],[16,"Output","","The result of the operation.",18,null],[10,"dot","","",18,[[]]],[11,"from_shape","ndarray","Create a read-only array view borrowing its data from a…",17,[[],[["shapeerror",3],["result",4]]]],[11,"from_shape_ptr","","Create an `ArrayView<A, D>` from shape information and a…",17,[[]]],[11,"from_shape","","Create a read-write array view borrowing its data from a…",17,[[],[["shapeerror",3],["result",4]]]],[11,"from_shape_ptr","","Create an `ArrayViewMut<A, D>` from shape information and…",17,[[]]],[11,"reborrow","","Convert the view into an `ArrayViewMut<\'b, A, D>` where…",17,[[],["arrayviewmut",6]]],[11,"reborrow","","Convert the view into an `ArrayView<\'b, A, D>` where `\'b`…",17,[[],["arrayview",6]]],[11,"into_slice","","Return the array’s data as a slice, if it is contiguous…",17,[[],["option",4]]],[11,"to_slice","","Return the array’s data as a slice, if it is contiguous…",17,[[],["option",4]]],[11,"into_scalar","","Consume the view and return a reference to the single…",17,[[]]],[11,"into_scalar","","Consume the mutable view and return a mutable reference to…",17,[[]]],[11,"into_slice","","Return the array’s data as a slice, if it is contiguous…",17,[[],["option",4]]],[11,"split_at","","Split the array view along `axis` and return one view…",17,[[["axis",3],["ix",6]]]],[11,"split_at","","Split the array view along `axis` and return one mutable…",17,[[["axis",3],["ix",6]]]],[11,"multi_slice_move","","Split the view into multiple disjoint slices.",17,[[]]],[11,"from_shape_ptr","","Create an `RawArrayView<A, D>` from shape information and…",17,[[]]],[11,"deref_into_view","","Converts to a read-only view of the array.",17,[[],["arrayview",6]]],[11,"split_at","","Split the array view along `axis` and return one array…",17,[[["axis",3],["ix",6]]]],[11,"cast","","Cast the raw pointer of the raw array view to a different…",17,[[],["rawarrayview",6]]],[11,"from_shape_ptr","","Create an `RawArrayViewMut<A, D>` from shape information…",17,[[]]],[11,"deref_into_view","","Converts to a read-only view of the array.",17,[[],["arrayview",6]]],[11,"deref_into_view_mut","","Converts to a mutable view of the array.",17,[[],["arrayviewmut",6]]],[11,"split_at","","Split the array view along `axis` and return one array…",17,[[["axis",3],["ix",6]]]],[11,"cast","","Cast the raw pointer of the raw array view to a different…",17,[[],["rawarrayviewmut",6]]],[11,"is_view","","Returns `true` iff the array is the view (borrowed) variant.",17,[[]]],[11,"is_owned","","Returns `true` iff the array is the owned variant.",17,[[]]],[6,"Ix0","","zero-dimensionial",null,null],[6,"Ix1","","one-dimensional",null,null],[6,"Ix2","","two-dimensional",null,null],[6,"Ix3","","three-dimensional",null,null],[6,"Ix4","","four-dimensional",null,null],[6,"Ix5","","five-dimensional",null,null],[6,"Ix6","","six-dimensional",null,null],[6,"IxDyn","","dynamic-dimensional",null,null],[6,"Array0","","zero-dimensional array",null,null],[6,"Array1","","one-dimensional array",null,null],[6,"Array2","","two-dimensional array",null,null],[6,"Array3","","three-dimensional array",null,null],[6,"Array4","","four-dimensional array",null,null],[6,"Array5","","five-dimensional array",null,null],[6,"Array6","","six-dimensional array",null,null],[6,"ArrayD","","dynamic-dimensional array",null,null],[6,"ArrayView0","","zero-dimensional array view",null,null],[6,"ArrayView1","","one-dimensional array view",null,null],[6,"ArrayView2","","two-dimensional array view",null,null],[6,"ArrayView3","","three-dimensional array view",null,null],[6,"ArrayView4","","four-dimensional array view",null,null],[6,"ArrayView5","","five-dimensional array view",null,null],[6,"ArrayView6","","six-dimensional array view",null,null],[6,"ArrayViewD","","dynamic-dimensional array view",null,null],[6,"ArrayViewMut0","","zero-dimensional read-write array view",null,null],[6,"ArrayViewMut1","","one-dimensional read-write array view",null,null],[6,"ArrayViewMut2","","two-dimensional read-write array view",null,null],[6,"ArrayViewMut3","","three-dimensional read-write array view",null,null],[6,"ArrayViewMut4","","four-dimensional read-write array view",null,null],[6,"ArrayViewMut5","","five-dimensional read-write array view",null,null],[6,"ArrayViewMut6","","six-dimensional read-write array view",null,null],[6,"ArrayViewMutD","","dynamic-dimensional read-write array view",null,null],[6,"RcArray1","","one-dimensional shared ownership array",null,null],[6,"RcArray2","","two-dimensional shared ownership array",null,null],[6,"ArcArray1","","one-dimensional shared ownership array",null,null],[6,"ArcArray2","","two-dimensional shared ownership array",null,null],[6,"Ix","","Array index type",null,null],[6,"Ixs","","Array index type (signed)",null,null],[6,"RcArray","","An array where the data has shared ownership and is copy…",null,null],[6,"ArcArray","","An array where the data has shared ownership and is copy…",null,null],[6,"Array","","An array that owns its data uniquely.",null,null],[6,"CowArray","","An array with copy-on-write behavior.",null,null],[6,"ArrayView","","A read-only array view.",null,null],[6,"ArrayViewMut","","A read-write array view.",null,null],[6,"RawArrayView","","A read-only array view without a lifetime.",null,null],[6,"RawArrayViewMut","","A mutable array view without a lifetime.",null,null],[8,"Dimension","","Array shape and index trait.",null,null],[18,"NDIM","","For fixed-size dimension representations (e.g. `Ix2`),…",19,null],[16,"SliceArg","","`SliceArg` is the type which is used to specify slicing…",19,null],[16,"Pattern","","Pattern matching friendly form of the dimension value.",19,null],[16,"Smaller","","Next smaller dimension (if applicable)",19,null],[16,"Larger","","Next larger dimension",19,null],[10,"ndim","","Returns the number of dimensions (number of axes).",19,[[]]],[10,"into_pattern","","Convert the dimension into a pattern matching friendly…",19,[[]]],[11,"size","","Compute the size of the dimension (number of elements)",19,[[]]],[11,"size_checked","","Compute the size while checking for overflow.",19,[[],["option",4]]],[11,"as_array_view","","Borrow as a read-only array view.",19,[[],[["arrayview1",6],["ix",6]]]],[11,"as_array_view_mut","","Borrow as a read-write array view.",19,[[],[["arrayviewmut1",6],["ix",6]]]],[10,"zeros","","Creates a dimension of all zeros with the specified ndim.",19,[[]]],[11,"into_dyn","","Convert the dimensional into a dynamic dimensional (IxDyn).",19,[[],["ixdyn",6]]],[10,"__private__","","This trait is private to implement; this method exists to…",19,[[],["privatemarker",3]]],[8,"IntoDimension","","Argument conversion a dimension.",null,null],[16,"Dim","","",20,null],[10,"into_dimension","","",20,[[]]],[8,"RemoveAxis","","Array shape with a next smaller dimension.",null,null],[10,"remove_axis","","",21,[[["axis",3]]]],[8,"NdIndex","","Tuple or fixed size arrays that can be used to index an…",null,null],[8,"AsArray","","Argument conversion into an array view",null,null],[8,"LinalgScalar","","Elements that support linear algebra operations.",null,null],[8,"NdFloat","","Floating-point element types `f32` and `f64`.",null,null],[8,"IndexLonger","","Extra indexing methods for array views",null,null],[16,"Output","","The type of the reference to the element that is produced,…",22,null],[10,"index","","Get a reference of a element through the view.",22,[[]]],[10,"get","","Get a reference of a element through the view.",22,[[],["option",4]]],[10,"uget","","Get a reference of a element through the view without…",22,[[]]],[8,"ShapeBuilder","","A trait for `Shape` and `D where D: Dimension` that allows…",null,null],[16,"Dim","","",23,null],[16,"Strides","","",23,null],[10,"into_shape","","",23,[[],["shape",3]]],[10,"f","","",23,[[],["shape",3]]],[10,"set_f","","",23,[[],["shape",3]]],[10,"strides","","",23,[[],["strideshape",3]]],[8,"AssignElem","","A producer element that can be assigned to once",null,null],[10,"assign_elem","","Assign the value `input` to the element that self…",24,[[]]],[8,"Data","","Array representation trait.",null,null],[8,"DataClone","","Array representation trait.",null,null],[8,"DataMut","","Array representation trait.",null,null],[8,"DataOwned","","Array representation trait.",null,null],[8,"DataShared","","Array representation trait.",null,null],[8,"RawData","","Array representation trait.",null,null],[16,"Elem","","The array element type.",25,null],[10,"__private__","","This trait is private to implement; this method exists to…",25,[[],["privatemarker",3]]],[8,"RawDataClone","","Array representation trait.",null,null],[8,"RawDataMut","","Array representation trait.",null,null],[8,"RawDataSubst","","Array representation trait.",null,null],[16,"Output","","The resulting array storage of the same kind but…",26,null],[8,"FixedInitializer","","Fixed-size array used for array initialization",null,null],[16,"Elem","","",27,null],[10,"as_init_slice","","",27,[[]]],[10,"len","","",27,[[]]],[8,"IntoNdProducer","","Argument conversion into a producer.",null,null],[16,"Item","","The element produced per iteration.",28,null],[16,"Dim","","Dimension type of the producer",28,null],[16,"Output","","",28,null],[10,"into_producer","","Convert the value into an `NdProducer`.",28,[[]]],[8,"NdProducer","","A producer of an n-dimensional set of elements; for…",null,null],[16,"Item","","The element produced per iteration.",29,null],[16,"Dim","","Dimension type",29,null],[10,"__private__","","This trait is private to implement; this method exists to…",29,[[],["privatemarker",3]]],[8,"ScalarOperand","","Elements that can be used as direct operands in arithmetic…",null,null],[11,"is_view","","Returns `true` iff the data is the `View` variant.",7,[[]]],[11,"is_owned","","Returns `true` iff the data is the `Owned` variant.",7,[[]]],[14,"array","","Create an `Array` with one, two or three dimensions.",null,null],[14,"s","","Slice argument constructor.",null,null],[14,"stack","","Stack arrays along the given axis.",null,null],[14,"azip","","Array zip macro: lock step function application across…",null,null],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"into_iter","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"to_string","","",17,[[],["string",3]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","ndarray::iter","",36,[[]]],[11,"into","","",36,[[]]],[11,"into_iter","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"into_iter","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"into_iter","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"into_iter","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"into_iter","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"into_iter","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into_iter","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"into_iter","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"into_iter","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"into_iter","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"into_iter","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"into_iter","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"into_iter","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"into_iter","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"into_iter","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"into_iter","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"into_iter","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"into_iter","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"into_iter","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"into_iter","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"_data_slice","ndarray","",33,[[],["option",4]]],[11,"_data_slice","","",33,[[],["option",4]]],[11,"_data_slice","","",32,[[],["option",4]]],[11,"_data_slice","","",31,[[],["option",4]]],[11,"_data_slice","","",34,[[],["option",4]]],[11,"_data_slice","","",34,[[],["option",4]]],[11,"_data_slice","","",7,[[],["option",4]]],[11,"try_ensure_unique","","",33,[[["arraybase",3]]]],[11,"try_is_unique","","",33,[[],["option",4]]],[11,"try_ensure_unique","","",32,[[["arraybase",3]]]],[11,"try_is_unique","","",32,[[],["option",4]]],[11,"try_ensure_unique","","",31,[[["arraybase",3]]]],[11,"try_is_unique","","",31,[[],["option",4]]],[11,"try_ensure_unique","","",34,[[["arraybase",3]]]],[11,"try_is_unique","","",34,[[],["option",4]]],[11,"try_ensure_unique","","",7,[[["arraybase",3]]]],[11,"try_is_unique","","",7,[[],["option",4]]],[11,"clone_with_ptr","","",33,[[["nonnull",3]]]],[11,"clone_with_ptr","","",33,[[["nonnull",3]]]],[11,"clone_with_ptr","","",32,[[["nonnull",3]]]],[11,"clone_with_ptr","","",31,[[["nonnull",3]]]],[11,"clone_from_with_ptr","","",31,[[["nonnull",3]],["nonnull",3]]],[11,"clone_with_ptr","","",34,[[["nonnull",3]]]],[11,"clone_with_ptr","","",7,[[["nonnull",3]]]],[11,"into_owned","","",32,[[["arraybase",3]],[["arraybase",3],["ownedrepr",3]]]],[11,"into_owned","","",31,[[["arraybase",3]],[["arraybase",3],["ownedrepr",3]]]],[11,"into_owned","","",34,[[["arraybase",3]],[["arraybase",3],["ownedrepr",3]]]],[11,"into_owned","","",34,[[["arraybase",3]],[["arraybase",3],["ownedrepr",3]]]],[11,"into_owned","","",7,[[["arraybase",3],["cowrepr",4]],[["arraybase",3],["ownedrepr",3]]]],[11,"new","","",31,[[["vec",3]]]],[11,"into_shared","","",31,[[],["ownedrcrepr",3]]],[11,"new","","",32,[[["vec",3]]]],[11,"into_shared","","",32,[[],["ownedrcrepr",3]]],[11,"into_shape","","",13,[[],["shape",3]]],[11,"f","","",13,[[]]],[11,"set_f","","",13,[[]]],[11,"strides","","",13,[[],["strideshape",3]]],[11,"contiguous_stride","ndarray::iter","",37,[[]]],[11,"contiguous_stride","","",9,[[]]],[11,"contiguous_stride","","",10,[[]]],[11,"contiguous_stride","ndarray","",52,[[]]],[11,"contiguous_stride","","",53,[[]]],[11,"contiguous_stride","","",54,[[]]],[11,"contiguous_stride","","",55,[[]]],[11,"into_dimension","","",56,[[],["ix1",6]]],[11,"into_dimension","","",30,[[]]],[11,"ndim","","",16,[[]]],[11,"slice","","",16,[[]]],[11,"slice_mut","","",16,[[]]],[11,"_fastest_varying_stride_order","","",16,[[]]],[11,"into_pattern","","",16,[[]]],[11,"zeros","","",16,[[]]],[11,"next_for","","",16,[[],["option",4]]],[11,"insert_axis","","",16,[[["axis",3]]]],[11,"try_remove_axis","","",16,[[["axis",3]]]],[11,"ndim","","",16,[[]]],[11,"slice","","",16,[[]]],[11,"slice_mut","","",16,[[]]],[11,"into_pattern","","",16,[[]]],[11,"zeros","","",16,[[]]],[11,"next_for","","",16,[[],["option",4]]],[11,"equal","","",16,[[]]],[11,"size","","",16,[[]]],[11,"size_checked","","",16,[[],["option",4]]],[11,"default_strides","","",16,[[]]],[11,"_fastest_varying_stride_order","","",16,[[]]],[11,"min_stride_axis","","",16,[[],["axis",3]]],[11,"max_stride_axis","","",16,[[],["axis",3]]],[11,"first_index","","",16,[[],["option",4]]],[11,"stride_offset","","Self is an index, return the stride offset",16,[[]]],[11,"stride_offset_checked","","Return stride offset for this dimension and index.",16,[[],["option",4]]],[11,"insert_axis","","",16,[[["axis",3]]]],[11,"try_remove_axis","","",16,[[["axis",3]]]],[11,"ndim","","",16,[[]]],[11,"into_pattern","","",16,[[]]],[11,"slice","","",16,[[]]],[11,"slice_mut","","",16,[[]]],[11,"zeros","","",16,[[]]],[11,"next_for","","",16,[[],["option",4]]],[11,"equal","","",16,[[]]],[11,"size","","",16,[[]]],[11,"size_checked","","",16,[[],["option",4]]],[11,"last_elem","","",16,[[]]],[11,"set_last_elem","","",16,[[]]],[11,"default_strides","","",16,[[]]],[11,"fortran_strides","","",16,[[]]],[11,"_fastest_varying_stride_order","","",16,[[]]],[11,"min_stride_axis","","",16,[[],["axis",3]]],[11,"first_index","","",16,[[],["option",4]]],[11,"stride_offset","","Self is an index, return the stride offset",16,[[]]],[11,"stride_offset_checked","","Return stride offset for this dimension and index.",16,[[],["option",4]]],[11,"insert_axis","","",16,[[["axis",3]]]],[11,"try_remove_axis","","",16,[[["axis",3]]]],[11,"ndim","","",16,[[]]],[11,"into_pattern","","",16,[[]]],[11,"slice","","",16,[[]]],[11,"slice_mut","","",16,[[]]],[11,"size","","",16,[[]]],[11,"zeros","","",16,[[]]],[11,"next_for","","",16,[[],["option",4]]],[11,"stride_offset","","Self is an index, return the stride offset",16,[[]]],[11,"stride_offset_checked","","Return stride offset for this dimension and index.",16,[[],["option",4]]],[11,"_fastest_varying_stride_order","","",16,[[]]],[11,"insert_axis","","",16,[[["axis",3]]]],[11,"try_remove_axis","","",16,[[["axis",3]]]],[11,"ndim","","",16,[[]]],[11,"into_pattern","","",16,[[]]],[11,"slice","","",16,[[]]],[11,"slice_mut","","",16,[[]]],[11,"zeros","","",16,[[]]],[11,"insert_axis","","",16,[[["axis",3]]]],[11,"try_remove_axis","","",16,[[["axis",3]]]],[11,"ndim","","",16,[[]]],[11,"into_pattern","","",16,[[]]],[11,"slice","","",16,[[]]],[11,"slice_mut","","",16,[[]]],[11,"zeros","","",16,[[]]],[11,"insert_axis","","",16,[[["axis",3]]]],[11,"try_remove_axis","","",16,[[["axis",3]]]],[11,"ndim","","",16,[[]]],[11,"into_pattern","","",16,[[]]],[11,"slice","","",16,[[]]],[11,"slice_mut","","",16,[[]]],[11,"zeros","","",16,[[]]],[11,"insert_axis","","",16,[[["axis",3]]]],[11,"try_remove_axis","","",16,[[["axis",3]]]],[11,"ndim","","",57,[[]]],[11,"slice","","",57,[[]]],[11,"slice_mut","","",57,[[]]],[11,"into_pattern","","",57,[[]]],[11,"zeros","","",57,[[]]],[11,"insert_axis","","",57,[[["axis",3]]]],[11,"try_remove_axis","","",57,[[["axis",3]]]],[11,"from_dimension","","",57,[[],["option",4]]],[11,"index_checked","","",56,[[["ix1",6]],["option",4]]],[11,"index_unchecked","","",56,[[["ix1",6]]]],[11,"index_checked","","",56,[[["ixdyn",6]],["option",4]]],[11,"index_unchecked","","",56,[[["ixdyn",6]]]],[11,"index_checked","","",16,[[["ixdyn",6]],["option",4]]],[11,"index_unchecked","","",16,[[["ixdyn",6]]]],[11,"index_checked","","",16,[[["ixdyn",6]],["option",4]]],[11,"index_unchecked","","",16,[[["ixdyn",6]]]],[11,"index_checked","","",16,[[["ixdyn",6]],["option",4]]],[11,"index_unchecked","","",16,[[["ixdyn",6]]]],[11,"index_checked","","",16,[[["ixdyn",6]],["option",4]]],[11,"index_unchecked","","",16,[[["ixdyn",6]]]],[11,"index_checked","","",16,[[["ixdyn",6]],["option",4]]],[11,"index_unchecked","","",16,[[["ixdyn",6]]]],[11,"index_checked","","",16,[[["ixdyn",6]],["option",4]]],[11,"index_unchecked","","",16,[[["ixdyn",6]]]],[11,"index_checked","","",16,[[["ixdyn",6]],["option",4]]],[11,"index_unchecked","","",16,[[["ixdyn",6]]]],[11,"remove_axis","","",16,[[["axis",3]]]],[11,"remove_axis","","",16,[[["axis",3]],["ix0",6]]],[11,"remove_axis","","",16,[[["axis",3]],["ix1",6]]],[11,"remove_axis","","",16,[[["axis",3]]]],[11,"remove_axis","","",16,[[["axis",3]]]],[11,"remove_axis","","",16,[[["axis",3]]]],[11,"remove_axis","","",16,[[["axis",3]]]],[11,"dot","","Compute the dot product of one-dimensional arrays.",17,[[["arraybase",3]]]],[11,"dot","","Perform the matrix multiplication of the row vector `self`…",17,[[["arraybase",3]],[["array",6],["ix1",6]]]],[11,"dot","","",17,[[["arraybase",3]],["array2",6]]],[11,"dot","","",17,[[["arraybase",3]],[["array",6],["ix1",6]]]],[11,"index","","Convert a mutable array view to a mutable reference of a…",53,[[]]],[11,"get","","Convert a mutable array view to a mutable reference of a…",53,[[],["option",4]]],[11,"uget","","Convert a mutable array view to a mutable reference of a…",53,[[]]],[11,"drop","","",31,[[]]],[11,"as_ref","","",14,[[]]],[11,"as_ref","","",14,[[],["sliceinfo",3]]],[11,"from","","Create a one-dimensional array from a vector (no copying…",17,[[["vec",3]]]],[11,"from","","Create a one-dimensional read-only array view of the data…",52,[[]]],[11,"from","","Create a read-only array view of the array.",52,[[["arraybase",3]]]],[11,"from","","Create a one-dimensional read-write array view of the data…",53,[[]]],[11,"from","","Create a read-write array view of the array.",53,[[["arraybase",3]]]],[11,"from","","Converts the `Vec` of arrays to an owned 2-D array.",58,[[["vec",3]]]],[11,"from","","Converts the `Vec` of arrays to an owned 3-D array.",59,[[["vec",3]]]],[11,"from","","Create a `Shape` from `dimension`, using the default…",13,[[],["shape",3]]],[11,"from","","",35,[[]]],[11,"from","","",2,[[["range",3]],["slice",3]]],[11,"from","","",2,[[["rangeinclusive",3]],["slice",3]]],[11,"from","","",2,[[["rangefrom",3]],["slice",3]]],[11,"from","","",2,[[["rangeto",3]],["slice",3]]],[11,"from","","",2,[[["rangetoinclusive",3]],["slice",3]]],[11,"from","","",2,[[["range",3]],["slice",3]]],[11,"from","","",2,[[["rangeinclusive",3]],["slice",3]]],[11,"from","","",2,[[["rangefrom",3]],["slice",3]]],[11,"from","","",2,[[["rangeto",3]],["slice",3]]],[11,"from","","",2,[[["rangetoinclusive",3]],["slice",3]]],[11,"from","","",2,[[["range",3]],["slice",3]]],[11,"from","","",2,[[["rangeinclusive",3]],["slice",3]]],[11,"from","","",2,[[["rangefrom",3]],["slice",3]]],[11,"from","","",2,[[["rangeto",3]],["slice",3]]],[11,"from","","",2,[[["rangetoinclusive",3]],["slice",3]]],[11,"from","","",4,[[["range",3]],["sliceorindex",4]]],[11,"from","","",4,[[["rangeinclusive",3]],["sliceorindex",4]]],[11,"from","","",4,[[["rangefrom",3]],["sliceorindex",4]]],[11,"from","","",4,[[["rangeto",3]],["sliceorindex",4]]],[11,"from","","",4,[[["rangetoinclusive",3]],["sliceorindex",4]]],[11,"from","","",4,[[["range",3]],["sliceorindex",4]]],[11,"from","","",4,[[["rangeinclusive",3]],["sliceorindex",4]]],[11,"from","","",4,[[["rangefrom",3]],["sliceorindex",4]]],[11,"from","","",4,[[["rangeto",3]],["sliceorindex",4]]],[11,"from","","",4,[[["rangetoinclusive",3]],["sliceorindex",4]]],[11,"from","","",4,[[["range",3]],["sliceorindex",4]]],[11,"from","","",4,[[["rangeinclusive",3]],["sliceorindex",4]]],[11,"from","","",4,[[["rangefrom",3]],["sliceorindex",4]]],[11,"from","","",4,[[["rangeto",3]],["sliceorindex",4]]],[11,"from","","",4,[[["rangetoinclusive",3]],["sliceorindex",4]]],[11,"from","","",2,[[["rangefull",3]],["slice",3]]],[11,"from","","",4,[[["rangefull",3]],["sliceorindex",4]]],[11,"from","","",4,[[["slice",3]],["sliceorindex",4]]],[11,"from","","",4,[[],["sliceorindex",4]]],[11,"from","","",4,[[],["sliceorindex",4]]],[11,"from","","",4,[[],["sliceorindex",4]]],[11,"from","","",30,[[]]],[11,"from","","",30,[[["vec",3],["ix",6]]]],[11,"from","","",60,[[["arrayview",6]],["cowarray",6]]],[11,"from","","",60,[[["array",6]],["cowarray",6]]],[11,"next_back","ndarray::iter","",45,[[],["option",4]]],[11,"nth_back","","",45,[[],["option",4]]],[11,"rfold","","",45,[[]]],[11,"next_back","","",46,[[],["option",4]]],[11,"nth_back","","",46,[[],["option",4]]],[11,"rfold","","",46,[[]]],[11,"next_back","","",9,[[],["option",4]]],[11,"next_back","","",10,[[],["option",4]]],[11,"next_back","","",11,[[],["option",4]]],[11,"next_back","","",12,[[],["option",4]]],[11,"next_back","","",36,[[],["option",4]]],[11,"len","","",45,[[]]],[11,"len","","",43,[[]]],[11,"len","","",46,[[]]],[11,"len","","",44,[[]]],[11,"len","","",48,[[]]],[11,"len","","",49,[[]]],[11,"len","","",9,[[]]],[11,"len","","",10,[[]]],[11,"into_iter","ndarray","",52,[[]]],[11,"into_iter","","",53,[[]]],[11,"into_iter","ndarray::iter","",37,[[]]],[11,"into_iter","","",39,[[]]],[11,"into_iter","","",42,[[]]],[11,"into_iter","","",47,[[]]],[11,"into_iter","","",50,[[]]],[11,"into_iter","","",51,[[]]],[11,"next","","",38,[[],["option",4]]],[11,"size_hint","","",38,[[]]],[11,"fold","","",38,[[]]],[11,"next","","",40,[[],["option",4]]],[11,"size_hint","","",40,[[]]],[11,"next","","",41,[[],["option",4]]],[11,"size_hint","","",41,[[]]],[11,"next","","",45,[[],["option",4]]],[11,"size_hint","","",45,[[]]],[11,"fold","","",45,[[]]],[11,"nth","","",45,[[],["option",4]]],[11,"collect","","",45,[[]]],[11,"all","","",45,[[]]],[11,"any","","",45,[[]]],[11,"find","","",45,[[],["option",4]]],[11,"find_map","","",45,[[],["option",4]]],[11,"count","","",45,[[]]],[11,"last","","",45,[[],["option",4]]],[11,"position","","",45,[[],["option",4]]],[11,"next","","",43,[[],["option",4]]],[11,"size_hint","","",43,[[]]],[11,"next","","",46,[[],["option",4]]],[11,"size_hint","","",46,[[]]],[11,"fold","","",46,[[]]],[11,"nth","","",46,[[],["option",4]]],[11,"collect","","",46,[[]]],[11,"all","","",46,[[]]],[11,"any","","",46,[[]]],[11,"find","","",46,[[],["option",4]]],[11,"find_map","","",46,[[],["option",4]]],[11,"count","","",46,[[]]],[11,"last","","",46,[[],["option",4]]],[11,"position","","",46,[[],["option",4]]],[11,"next","","",44,[[],["option",4]]],[11,"size_hint","","",44,[[]]],[11,"next","","",48,[[],["option",4]]],[11,"size_hint","","",48,[[]]],[11,"next","","",49,[[],["option",4]]],[11,"size_hint","","",49,[[]]],[11,"next","","",9,[[],["option",4]]],[11,"size_hint","","",9,[[]]],[11,"next","","",10,[[],["option",4]]],[11,"size_hint","","",10,[[]]],[11,"next","","",11,[[],["option",4]]],[11,"size_hint","","",11,[[]]],[11,"next","","",12,[[],["option",4]]],[11,"size_hint","","",12,[[]]],[11,"next","","",36,[[],["option",4]]],[11,"fold","","",36,[[]]],[11,"size_hint","","",36,[[]]],[11,"clone","ndarray","",31,[[]]],[11,"clone_from","","",31,[[]]],[11,"clone","","",8,[[],["shapeerror",3]]],[11,"clone","","",3,[[],["errorkind",4]]],[11,"clone","ndarray::iter","",38,[[],["indicesiter",3]]],[11,"clone","","",37,[[],["indices",3]]],[11,"clone","","",39,[[]]],[11,"clone","","",40,[[]]],[11,"clone","","",47,[[]]],[11,"clone","","",51,[[]]],[11,"clone","","",45,[[]]],[11,"clone","","",43,[[],["indexediter",3]]],[11,"clone","","",48,[[]]],[11,"clone","","",9,[[]]],[11,"clone","","",11,[[]]],[11,"clone","ndarray","",2,[[],["slice",3]]],[11,"clone","","",4,[[]]],[11,"clone","","",14,[[]]],[11,"clone","","",15,[[],["zip",3]]],[11,"clone","","",6,[[],["foldwhile",4]]],[11,"clone","","",1,[[]]],[11,"clone","ndarray::iter","",36,[[]]],[11,"clone","ndarray","",0,[[],["axis",3]]],[11,"clone","","",16,[[],["dim",3]]],[11,"clone","","",30,[[],["ixdynimpl",3]]],[11,"clone","","",32,[[]]],[11,"clone","","",33,[[],["rawviewrepr",3]]],[11,"clone","","",34,[[],["viewrepr",3]]],[11,"clone","","",17,[[],["arraybase",3]]],[11,"clone_from","","`Array` implements `.clone_from()` to reuse an array\'s…",17,[[]]],[11,"clone","","",13,[[],["shape",3]]],[11,"clone","","",35,[[],["strideshape",3]]],[11,"default","","",17,[[]]],[11,"default","","",16,[[],["dim",3]]],[11,"default","","",30,[[],["ixdynimpl",3]]],[11,"cmp","","",0,[[["axis",3]],["ordering",4]]],[11,"eq","","",17,[[["arraybase",3]]]],[11,"eq","","",3,[[]]],[11,"eq","","",8,[[]]],[11,"eq","","",2,[[["slice",3]]]],[11,"ne","","",2,[[["slice",3]]]],[11,"eq","","",4,[[["sliceorindex",4]]]],[11,"ne","","",4,[[["sliceorindex",4]]]],[11,"eq","","",0,[[["axis",3]]]],[11,"ne","","",0,[[["axis",3]]]],[11,"eq","","",16,[[["dim",3]]]],[11,"ne","","",16,[[["dim",3]]]],[11,"eq","","",16,[[]]],[11,"eq","","",30,[[["ixdynimpl",3]]]],[11,"ne","","",30,[[["ixdynimpl",3]]]],[11,"partial_cmp","","",0,[[["axis",3]],[["ordering",4],["option",4]]]],[11,"lt","","",0,[[["axis",3]]]],[11,"le","","",0,[[["axis",3]]]],[11,"gt","","",0,[[["axis",3]]]],[11,"ge","","",0,[[["axis",3]]]],[11,"deref","","",14,[[]]],[11,"deref","","",30,[[]]],[11,"deref_mut","","",30,[[]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","ndarray::iter","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","ndarray","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","ndarray::iter","",36,[[["formatter",3]],["result",6]]],[11,"fmt","ndarray","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"div","","",17,[[["arraybase",3]],["arraybase",3]]],[11,"div","","",17,[[["arraybase",3]],["arraybase",3]]],[11,"div","","",17,[[],["arraybase",3]]],[11,"rem","","",17,[[["arraybase",3]],["arraybase",3]]],[11,"rem","","",17,[[["arraybase",3]],["arraybase",3]]],[11,"rem","","",17,[[],["arraybase",3]]],[11,"sub","","",16,[[]]],[11,"sub","","",16,[[["ix",6]]]],[11,"sub","","",17,[[["arraybase",3]],["arraybase",3]]],[11,"sub","","",17,[[["arraybase",3]],["arraybase",3]]],[11,"sub","","",17,[[],["arraybase",3]]],[11,"add","","",16,[[]]],[11,"add","","",16,[[["ix",6]]]],[11,"add","","",17,[[["arraybase",3]],["arraybase",3]]],[11,"add","","",17,[[["arraybase",3]],["arraybase",3]]],[11,"add","","",17,[[],["arraybase",3]]],[11,"mul","","",16,[[]]],[11,"mul","","",16,[[["ix",6]]]],[11,"mul","","",17,[[["arraybase",3]],["arraybase",3]]],[11,"mul","","",17,[[["arraybase",3]],["arraybase",3]]],[11,"mul","","",17,[[],["arraybase",3]]],[11,"neg","","Perform an elementwise negation of `self` and return the…",17,[[]]],[11,"add_assign","","",16,[[]]],[11,"add_assign","","",16,[[]]],[11,"add_assign","","",16,[[["ix",6]]]],[11,"add_assign","","",17,[[["arraybase",3]]]],[11,"add_assign","","",17,[[]]],[11,"sub_assign","","",16,[[]]],[11,"sub_assign","","",16,[[]]],[11,"sub_assign","","",16,[[["ix",6]]]],[11,"sub_assign","","",17,[[["arraybase",3]]]],[11,"sub_assign","","",17,[[]]],[11,"mul_assign","","",16,[[]]],[11,"mul_assign","","",16,[[]]],[11,"mul_assign","","",16,[[["ix",6]]]],[11,"mul_assign","","",17,[[["arraybase",3]]]],[11,"mul_assign","","",17,[[]]],[11,"div_assign","","",17,[[["arraybase",3]]]],[11,"div_assign","","",17,[[]]],[11,"rem_assign","","",17,[[["arraybase",3]]]],[11,"rem_assign","","",17,[[]]],[11,"not","","Perform an elementwise unary not of `self` and return the…",17,[[]]],[11,"bitand","","",17,[[["arraybase",3]],["arraybase",3]]],[11,"bitand","","",17,[[["arraybase",3]],["arraybase",3]]],[11,"bitand","","",17,[[],["arraybase",3]]],[11,"bitor","","",17,[[["arraybase",3]],["arraybase",3]]],[11,"bitor","","",17,[[["arraybase",3]],["arraybase",3]]],[11,"bitor","","",17,[[],["arraybase",3]]],[11,"bitxor","","",17,[[["arraybase",3]],["arraybase",3]]],[11,"bitxor","","",17,[[["arraybase",3]],["arraybase",3]]],[11,"bitxor","","",17,[[],["arraybase",3]]],[11,"shl","","",17,[[["arraybase",3]],["arraybase",3]]],[11,"shl","","",17,[[["arraybase",3]],["arraybase",3]]],[11,"shl","","",17,[[],["arraybase",3]]],[11,"shr","","",17,[[["arraybase",3]],["arraybase",3]]],[11,"shr","","",17,[[["arraybase",3]],["arraybase",3]]],[11,"shr","","",17,[[],["arraybase",3]]],[11,"bitand_assign","","",17,[[["arraybase",3]]]],[11,"bitand_assign","","",17,[[]]],[11,"bitor_assign","","",17,[[["arraybase",3]]]],[11,"bitor_assign","","",17,[[]]],[11,"bitxor_assign","","",17,[[["arraybase",3]]]],[11,"bitxor_assign","","",17,[[]]],[11,"shl_assign","","",17,[[["arraybase",3]]]],[11,"shl_assign","","",17,[[]]],[11,"shr_assign","","",17,[[["arraybase",3]]]],[11,"shr_assign","","",17,[[]]],[11,"index","","",17,[[]]],[11,"index","","",16,[[]]],[11,"index","","",16,[[]]],[11,"index","","",16,[[]]],[11,"index","","",16,[[]]],[11,"index","","",16,[[]]],[11,"index","","",16,[[]]],[11,"index","","",16,[[]]],[11,"index","","",16,[[]]],[11,"index","","",30,[[]]],[11,"index_mut","","",17,[[]]],[11,"index_mut","","",16,[[]]],[11,"index_mut","","",16,[[]]],[11,"index_mut","","",16,[[]]],[11,"index_mut","","",16,[[]]],[11,"index_mut","","",16,[[]]],[11,"index_mut","","",16,[[]]],[11,"index_mut","","",16,[[]]],[11,"index_mut","","",16,[[]]],[11,"index_mut","","",30,[[]]],[11,"hash","","",17,[[]]],[11,"hash","","",2,[[]]],[11,"hash","","",4,[[]]],[11,"hash","","",0,[[]]],[11,"hash","","",16,[[]]],[11,"hash","","",30,[[]]],[11,"from_iter","","Create a one-dimensional array from an iterable.",17,[[],[["ix1",6],["arraybase",3]]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"default_epsilon","","",17,[[]]],[11,"abs_diff_eq","","",17,[[["arraybase",3]]]],[11,"default_max_relative","","",17,[[]]],[11,"relative_eq","","",17,[[["arraybase",3]]]],[11,"default_max_ulps","","",17,[[]]],[11,"ulps_eq","","",17,[[["arraybase",3]]]],[11,"zero","","",16,[[]]],[11,"is_zero","","",16,[[]]],[11,"zero","","",16,[[]]],[11,"is_zero","","",16,[[]]],[11,"zero","","",16,[[]]],[11,"is_zero","","",16,[[]]],[11,"zero","","",16,[[]]],[11,"is_zero","","",16,[[]]],[11,"zero","","",16,[[]]],[11,"is_zero","","",16,[[]]],[11,"zero","","",16,[[]]],[11,"is_zero","","",16,[[]]],[11,"zero","","",16,[[]]],[11,"is_zero","","",16,[[]]],[18,"NDIM","","For fixed-size dimension representations (e.g. `Ix2`),…",19,null],[11,"size","","Compute the size of the dimension (number of elements)",19,[[]]],[11,"size_checked","","Compute the size while checking for overflow.",19,[[],["option",4]]],[11,"as_array_view","","Borrow as a read-only array view.",19,[[],[["arrayview1",6],["ix",6]]]],[11,"as_array_view_mut","","Borrow as a read-write array view.",19,[[],[["arrayviewmut1",6],["ix",6]]]],[11,"into_dyn","","Convert the dimensional into a dynamic dimensional (IxDyn).",19,[[],["ixdyn",6]]],[11,"zeros","","Create a new dimension value with `n` axes, all zeros",57,[[],["ixdyn",6]]],[11,"into_scalar","","Returns the single element in the array without cloning it.",61,[[]]],[11,"into_raw_vec","","Return a vector of the elements in the array, in the way…",61,[[],["vec",3]]],[11,"from_shape","","Create a read-only array view borrowing its data from a…",52,[[],[["shapeerror",3],["result",4]]]],[11,"from_shape_ptr","","Create an `ArrayView<A, D>` from shape information and a…",52,[[]]],[11,"from_shape","","Create a read-write array view borrowing its data from a…",53,[[],[["shapeerror",3],["result",4]]]],[11,"from_shape_ptr","","Create an `ArrayViewMut<A, D>` from shape information and…",53,[[]]],[11,"reborrow","","Convert the view into an `ArrayViewMut<\'b, A, D>` where…",53,[[],["arrayviewmut",6]]],[11,"reborrow","","Convert the view into an `ArrayView<\'b, A, D>` where `\'b`…",52,[[],["arrayview",6]]],[11,"into_slice","","Return the array’s data as a slice, if it is contiguous…",52,[[],["option",4]]],[11,"to_slice","","Return the array’s data as a slice, if it is contiguous…",52,[[],["option",4]]],[11,"into_scalar","","Consume the view and return a reference to the single…",52,[[]]],[11,"into_scalar","","Consume the mutable view and return a mutable reference to…",53,[[]]],[11,"into_slice","","Return the array’s data as a slice, if it is contiguous…",53,[[],["option",4]]],[11,"split_at","","Split the array view along `axis` and return one view…",52,[[["axis",3],["ix",6]]]],[11,"split_at","","Split the array view along `axis` and return one mutable…",53,[[["axis",3],["ix",6]]]],[11,"multi_slice_move","","Split the view into multiple disjoint slices.",53,[[]]],[11,"from_shape_ptr","","Create an `RawArrayView<A, D>` from shape information and…",54,[[]]],[11,"deref_into_view","","Converts to a read-only view of the array.",54,[[],["arrayview",6]]],[11,"split_at","","Split the array view along `axis` and return one array…",54,[[["axis",3],["ix",6]]]],[11,"cast","","Cast the raw pointer of the raw array view to a different…",54,[[],["rawarrayview",6]]],[11,"from_shape_ptr","","Create an `RawArrayViewMut<A, D>` from shape information…",55,[[]]],[11,"deref_into_view","","Converts to a read-only view of the array.",55,[[],["arrayview",6]]],[11,"deref_into_view_mut","","Converts to a mutable view of the array.",55,[[],["arrayviewmut",6]]],[11,"split_at","","Split the array view along `axis` and return one array…",55,[[["axis",3],["ix",6]]]],[11,"cast","","Cast the raw pointer of the raw array view to a different…",55,[[],["rawarrayviewmut",6]]],[11,"is_view","","Returns `true` iff the array is the view (borrowed) variant.",60,[[]]],[11,"is_owned","","Returns `true` iff the array is the owned variant.",60,[[]]]],"p":[[3,"Axis"],[3,"AxisDescription"],[3,"Slice"],[4,"ErrorKind"],[4,"SliceOrIndex"],[13,"Slice"],[4,"FoldWhile"],[4,"CowRepr"],[3,"ShapeError"],[3,"AxisIter"],[3,"AxisIterMut"],[3,"AxisChunksIter"],[3,"AxisChunksIterMut"],[3,"Shape"],[3,"SliceInfo"],[3,"Zip"],[3,"Dim"],[3,"ArrayBase"],[8,"Dot"],[8,"Dimension"],[8,"IntoDimension"],[8,"RemoveAxis"],[8,"IndexLonger"],[8,"ShapeBuilder"],[8,"AssignElem"],[8,"RawData"],[8,"RawDataSubst"],[8,"FixedInitializer"],[8,"IntoNdProducer"],[8,"NdProducer"],[3,"IxDynImpl"],[3,"OwnedRepr"],[3,"OwnedArcRepr"],[3,"RawViewRepr"],[3,"ViewRepr"],[3,"StrideShape"],[3,"Axes"],[3,"Indices"],[3,"IndicesIter"],[3,"ExactChunks"],[3,"ExactChunksIter"],[3,"ExactChunksIterMut"],[3,"ExactChunksMut"],[3,"IndexedIter"],[3,"IndexedIterMut"],[3,"Iter"],[3,"IterMut"],[3,"Lanes"],[3,"LanesIter"],[3,"LanesIterMut"],[3,"LanesMut"],[3,"Windows"],[6,"ArrayView"],[6,"ArrayViewMut"],[6,"RawArrayView"],[6,"RawArrayViewMut"],[6,"Ix"],[6,"IxDyn"],[6,"Array2"],[6,"Array3"],[6,"CowArray"],[6,"Array"]]},\
"ndarray_npy":{"doc":"This crate provides methods to read/write `ndarray`\'s…","i":[[3,"NpzReader","ndarray_npy","Reader for `.npz` files.",null,null],[3,"NpzWriter","","Writer for `.npz` files.",null,null],[4,"ReadDataError","","An error reading array data.",null,null],[13,"Io","","An error caused by I/O.",0,null],[13,"WrongDescriptor","","The type descriptor does not match the element type.",0,null],[13,"MissingData","","The file does not contain all the data described in the…",0,null],[13,"ExtraBytes","","Extra bytes are present between the end of the data and…",0,null],[13,"ParseData","","An error parsing the data.",0,null],[4,"ReadNpyError","","An error reading a `.npy` file.",null,null],[13,"Io","","An error caused by I/O.",1,null],[13,"ParseHeader","","An error parsing the file header.",1,null],[13,"ParseData","","An error parsing the data.",1,null],[13,"LengthOverflow","","Overflow while computing the length of the array from the…",1,null],[13,"WrongNdim","","An error caused by incorrect `Dimension` type.",1,null],[13,"WrongDescriptor","","The type descriptor does not match the element type.",1,null],[13,"MissingData","","The file does not contain all the data described in the…",1,null],[13,"ExtraBytes","","Extra bytes are present between the end of the data and…",1,null],[4,"WriteDataError","","An error writing array data.",null,null],[13,"Io","","An error caused by I/O.",2,null],[13,"FormatData","","An error formatting the data.",2,null],[4,"WriteNpyError","","An error writing a `.npy` file.",null,null],[13,"Io","","An error caused by I/O.",3,null],[13,"FormatHeader","","An error formatting the header.",3,null],[13,"FormatData","","An error formatting the data.",3,null],[4,"ReadNpzError","","An error reading a `.npz` file.",null,null],[13,"Zip","","An error caused by the zip archive.",4,null],[13,"Npy","","An error caused by reading an inner `.npy` file.",4,null],[4,"WriteNpzError","","An error writing a `.npz` file.",null,null],[13,"Zip","","An error caused by the zip file.",5,null],[13,"Npy","","An error caused by writing an inner `.npy` file.",5,null],[5,"read_npy","","Read an `.npy` file located at the specified path.",null,[[],[["result",4],["readnpyerror",4]]]],[5,"write_npy","","Writes an array to an `.npy` file at the specified path.",null,[[],[["writenpyerror",4],["result",4]]]],[11,"new","","Create a new `.npz` file without compression. See…",6,[[],["npzwriter",3]]],[11,"new_compressed","","Creates a new `.npz` file with compression. See…",6,[[],["npzwriter",3]]],[11,"add_array","","Adds an array with the specified `name` to the `.npz` file.",6,[[["arraybase",3]],[["result",4],["writenpzerror",4]]]],[11,"new","","Creates a new `.npz` file reader.",7,[[],[["result",4],["npzreader",3],["readnpzerror",4]]]],[11,"is_empty","","Returns `true` iff the `.npz` file doesn\'t contain any…",7,[[]]],[11,"len","","Returns the number of arrays in the `.npz` file.",7,[[]]],[11,"names","","Returns the names of all of the arrays in the file.",7,[[],[["result",4],["vec",3],["readnpzerror",4]]]],[11,"by_name","","Reads an array by name.",7,[[],[["result",4],["arraybase",3],["readnpzerror",4]]]],[11,"by_index","","Reads an array by index in the `.npz` file.",7,[[],[["result",4],["arraybase",3],["readnpzerror",4]]]],[8,"ReadNpyExt","","Extension trait for reading `Array` from `.npy` files.",null,null],[10,"read_npy","","Reads the array from `reader` in `.npy` format.",8,[[["read",8]],[["result",4],["readnpyerror",4]]]],[8,"ReadableElement","","An array element type that can be read from an `.npy` or…",null,null],[10,"read_to_end_exact_vec","","Reads to the end of the `reader`, creating a `Vec` of…",9,[[["read",8],["pyvalue",4]],[["vec",3],["readdataerror",4],["result",4]]]],[8,"WritableElement","","An array element type that can be written to an `.npy` or…",null,null],[10,"type_descriptor","","Returns a descriptor of the type that can be used in the…",10,[[],["pyvalue",4]]],[10,"write","","Writes a single instance of `Self` to the writer.",10,[[["write",8]],[["writedataerror",4],["result",4]]]],[10,"write_slice","","Writes a slice of `Self` to the writer.",10,[[["write",8]],[["writedataerror",4],["result",4]]]],[8,"WriteNpyExt","","Extension trait for writing `ArrayBase` to `.npy` files.",null,null],[10,"write_npy","","Writes the array to `writer` in `.npy` format.",11,[[["write",8]],[["writenpyerror",4],["result",4]]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",2,[[["error",3]],["writedataerror",4]]],[11,"from","","",3,[[["error",3]],["writenpyerror",4]]],[11,"from","","",3,[[["writedataerror",4]],["writenpyerror",4]]],[11,"from","","Performs the conversion.",0,[[["error",3]],["readdataerror",4]]],[11,"from","","",1,[[["error",3]],["readnpyerror",4]]],[11,"from","","",1,[[["readdataerror",4]],["readnpyerror",4]]],[11,"from","","",5,[[["ziperror",4]],["writenpzerror",4]]],[11,"from","","",5,[[["writenpyerror",4]],["writenpzerror",4]]],[11,"from","","",4,[[["ziperror",4]],["readnpzerror",4]]],[11,"from","","",4,[[["readnpyerror",4]],["readnpzerror",4]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"source","","",2,[[],[["option",4],["error",8]]]],[11,"source","","",3,[[],[["option",4],["error",8]]]],[11,"source","","",0,[[],[["option",4],["error",8]]]],[11,"source","","",1,[[],[["option",4],["error",8]]]],[11,"source","","",5,[[],[["option",4],["error",8]]]],[11,"source","","",4,[[],[["option",4],["error",8]]]]],"p":[[4,"ReadDataError"],[4,"ReadNpyError"],[4,"WriteDataError"],[4,"WriteNpyError"],[4,"ReadNpzError"],[4,"WriteNpzError"],[3,"NpzWriter"],[3,"NpzReader"],[8,"ReadNpyExt"],[8,"ReadableElement"],[8,"WritableElement"],[8,"WriteNpyExt"]]},\
"ndarray_rand":{"doc":"Constructors for randomized arrays: `rand` integration for…","i":[[3,"F32","ndarray_rand","A wrapper type that allows casting f64 distributions to f32",null,null],[12,"0","","",0,null],[0,"rand","","`rand`, re-exported for convenience and…",null,null],[0,"distributions","ndarray_rand::rand","Generating random samples from probability distributions",null,null],[0,"uniform","ndarray_rand::rand::distributions","A distribution uniformly sampling numbers within a given…",null,null],[3,"Uniform","ndarray_rand::rand::distributions::uniform","Sample values uniformly between two bounds.",null,null],[8,"SampleUniform","","Helper trait for creating objects using the correct…",null,null],[16,"Sampler","","The `UniformSampler` implementation supporting type `X`.",1,null],[8,"UniformSampler","","Helper trait handling actual uniform sampling.",null,null],[16,"X","","The type sampled by this implementation.",2,null],[10,"new","","Construct self, with inclusive lower bound and exclusive…",2,[[]]],[10,"new_inclusive","","Construct self, with inclusive bounds `[low, high]`.",2,[[]]],[10,"sample","","Sample a value.",2,[[]]],[11,"sample_single","","Sample a single value uniformly from a range with…",2,[[]]],[8,"SampleBorrow","","Helper trait similar to `Borrow` but implemented only for…",null,null],[10,"borrow","","Immutably borrows from an owned value. See `Borrow::borrow`",3,[[]]],[3,"UniformInt","","The back-end implementing [`UniformSampler`] for integer…",null,null],[3,"UniformFloat","","The back-end implementing [`UniformSampler`] for…",null,null],[3,"UniformDuration","","The back-end implementing [`UniformSampler`] for `Duration`.",null,null],[0,"weighted","ndarray_rand::rand::distributions","Weighted index sampling",null,null],[0,"alias_method","ndarray_rand::rand::distributions::weighted","This module contains an implementation of alias method for…",null,null],[3,"WeightedIndex","ndarray_rand::rand::distributions::weighted::alias_method","A distribution using weighted sampling to pick a…",null,null],[8,"Weight","","Trait that must be implemented for weights, that are used…",null,null],[18,"MAX","","Maximum number representable by `Self`.",4,null],[18,"ZERO","","Element of `Self` equivalent to 0.",4,null],[10,"try_from_u32_lossy","","Produce an instance of `Self` from a `u32` value, or…",4,[[],["option",4]]],[11,"sum","","Sums all values in slice `values`.",4,[[]]],[3,"WeightedIndex","ndarray_rand::rand::distributions::weighted","A distribution using weighted sampling to pick a…",null,null],[4,"WeightedError","","Error type returned from `WeightedIndex::new`.",null,null],[13,"NoItem","","The provided weight collection contains no items.",5,null],[13,"InvalidWeight","","A weight is either less than zero, greater than the…",5,null],[13,"AllWeightsZero","","All items in the provided weight collection are zero.",5,null],[13,"TooMany","","Too many weights are provided (length greater than…",5,null],[8,"Distribution","ndarray_rand::rand::distributions","Types (distributions) that can be used to create a random…",null,null],[10,"sample","","Generate a random value of `T`, using `rng` as the source…",6,[[]]],[11,"sample_iter","","Create an iterator that generates random values of `T`,…",6,[[],["distiter",3]]],[3,"DistIter","","An iterator that generates random values of `T` with…",null,null],[3,"Standard","","A generic random value distribution, implemented for many…",null,null],[3,"Bernoulli","","The Bernoulli distribution.",null,null],[4,"BernoulliError","","Error type returned from `Bernoulli::new`.",null,null],[13,"InvalidProbability","","`p < 0` or `p > 1`.",7,null],[3,"Open01","","A distribution to sample floating point numbers uniformly…",null,null],[3,"OpenClosed01","","A distribution to sample floating point numbers uniformly…",null,null],[3,"Alphanumeric","","Sample a `char`, uniformly distributed over ASCII letters…",null,null],[3,"Uniform","","Sample values uniformly between two bounds.",null,null],[4,"WeightedError","","Error type returned from `WeightedIndex::new`.",null,null],[13,"NoItem","","The provided weight collection contains no items.",5,null],[13,"InvalidWeight","","A weight is either less than zero, greater than the…",5,null],[13,"AllWeightsZero","","All items in the provided weight collection are zero.",5,null],[13,"TooMany","","Too many weights are provided (length greater than…",5,null],[3,"WeightedIndex","","A distribution using weighted sampling to pick a…",null,null],[3,"Binomial","","The binomial distribution `Binomial(n, p)`.",null,null],[3,"Cauchy","","The Cauchy distribution `Cauchy(median, scale)`.",null,null],[3,"Dirichlet","","The dirichelet distribution `Dirichlet(alpha)`.",null,null],[3,"Exp","","The exponential distribution `Exp(lambda)`.",null,null],[3,"Exp1","","Samples floating-point numbers according to the…",null,null],[3,"Beta","","The Beta distribution with shape parameters `alpha` and…",null,null],[3,"ChiSquared","","The chi-squared distribution `χ²(k)`, where `k` is the…",null,null],[3,"FisherF","","The Fisher F distribution `F(m, n)`.",null,null],[3,"Gamma","","The Gamma distribution `Gamma(shape, scale)` distribution.",null,null],[3,"StudentT","","The Student t distribution, `t(nu)`, where `nu` is the…",null,null],[3,"LogNormal","","The log-normal distribution `ln N(mean, std_dev**2)`.",null,null],[3,"Normal","","The normal distribution `N(mean, std_dev**2)`.",null,null],[3,"StandardNormal","","Samples floating-point numbers according to the normal…",null,null],[3,"Pareto","","Samples floating-point numbers according to the Pareto…",null,null],[3,"Poisson","","The Poisson distribution `Poisson(lambda)`.",null,null],[3,"Triangular","","The triangular distribution.",null,null],[3,"UnitCircle","","Samples uniformly from the edge of the unit circle in two…",null,null],[3,"UnitSphereSurface","","Samples uniformly from the surface of the unit sphere in…",null,null],[3,"Weibull","","Samples floating-point numbers according to the Weibull…",null,null],[0,"prelude","ndarray_rand::rand","Convenience re-export of common members",null,null],[8,"Distribution","ndarray_rand::rand::prelude","Types (distributions) that can be used to create a random…",null,null],[10,"sample","","Generate a random value of `T`, using `rng` as the source…",6,[[]]],[11,"sample_iter","","Create an iterator that generates random values of `T`,…",6,[[],["distiter",3]]],[3,"SmallRng","","A small-state, fast non-crypto PRNG",null,null],[3,"StdRng","","The standard RNG. The PRNG algorithm in `StdRng` is chosen…",null,null],[3,"ThreadRng","","The type returned by [`thread_rng`], essentially just a…",null,null],[8,"IteratorRandom","","Extension trait on iterators, providing random sampling…",null,null],[11,"choose","","Choose one element at random from the iterator.",8,[[],["option",4]]],[11,"choose_multiple_fill","","Collects values at random from the iterator into a…",8,[[]]],[11,"choose_multiple","","Collects `amount` values at random from the iterator into…",8,[[],["vec",3]]],[8,"SliceRandom","","Extension trait on slices, providing random mutation and…",null,null],[16,"Item","","The element type.",9,null],[10,"choose","","Returns a reference to one random element of the slice, or…",9,[[],["option",4]]],[10,"choose_mut","","Returns a mutable reference to one random element of the…",9,[[],["option",4]]],[10,"choose_multiple","","Chooses `amount` elements from the slice at random,…",9,[[],["slicechooseiter",3]]],[10,"choose_weighted","","Similar to `choose`, but where the likelihood of each…",9,[[],[["result",4],["weightederror",4]]]],[10,"choose_weighted_mut","","Similar to `choose_mut`, but where the likelihood of each…",9,[[],[["result",4],["weightederror",4]]]],[10,"shuffle","","Shuffle a mutable slice in place.",9,[[]]],[10,"partial_shuffle","","Shuffle a slice in place, but exit early.",9,[[]]],[5,"random","","Generates a random value using the thread-local random…",null,[[]]],[5,"thread_rng","","Retrieve the lazily-initialized thread-local random number…",null,[[],["threadrng",3]]],[8,"CryptoRng","","A marker trait used to indicate that an [`RngCore`] or…",null,null],[8,"Rng","","An automatically-implemented extension trait on…",null,null],[11,"gen","","Return a random value supporting the `Standard`…",10,[[]]],[11,"gen_range","","Generate a random value in the range [`low`, `high`), i.e.…",10,[[]]],[11,"sample","","Sample a new value, using the given distribution.",10,[[]]],[11,"sample_iter","","Create an iterator that generates values using the given…",10,[[],["distiter",3]]],[11,"fill","","Fill `dest` entirely with random bytes (uniform value…",10,[[]]],[11,"try_fill","","Fill `dest` entirely with random bytes (uniform value…",10,[[],[["result",4],["error",3]]]],[11,"gen_bool","","Return a bool with a probability `p` of being true.",10,[[]]],[11,"gen_ratio","","Return a bool with a probability of…",10,[[]]],[8,"RngCore","","The core of a random number generator.",null,null],[10,"next_u32","","Return the next random `u32`.",11,[[]]],[10,"next_u64","","Return the next random `u64`.",11,[[]]],[10,"fill_bytes","","Fill `dest` with random data.",11,[[]]],[10,"try_fill_bytes","","Fill `dest` entirely with random data.",11,[[],[["result",4],["error",3]]]],[8,"SeedableRng","","A random number generator that can be explicitly seeded.",null,null],[16,"Seed","","Seed type, which is restricted to types…",12,null],[10,"from_seed","","Create a new PRNG using the given seed.",12,[[]]],[11,"seed_from_u64","","Create a new PRNG using a `u64` seed.",12,[[]]],[11,"from_rng","","Create a new PRNG seeded from another `Rng`.",12,[[],[["result",4],["error",3]]]],[11,"from_entropy","","Creates a new instance of the RNG seeded via `getrandom`.",12,[[]]],[0,"rngs","ndarray_rand::rand","Random number generators and adapters",null,null],[0,"adapter","ndarray_rand::rand::rngs","Wrappers / adapters forming RNGs",null,null],[3,"ReadError","ndarray_rand::rand::rngs::adapter","`ReadRng` error type",null,null],[3,"ReadRng","","An RNG that reads random bytes straight from any type…",null,null],[3,"ReseedingRng","","A wrapper around any PRNG that implements `BlockRngCore`,…",null,null],[0,"mock","ndarray_rand::rand::rngs","Mock random number generator",null,null],[3,"StepRng","ndarray_rand::rand::rngs::mock","A simple implementation of `RngCore` for testing purposes.",null,null],[3,"EntropyRng","ndarray_rand::rand::rngs","An interface returning random data from external…",null,null],[3,"SmallRng","","A small-state, fast non-crypto PRNG",null,null],[3,"StdRng","","The standard RNG. The PRNG algorithm in `StdRng` is chosen…",null,null],[3,"ThreadRng","","The type returned by [`thread_rng`], essentially just a…",null,null],[3,"OsRng","","A random number generator that retrieves randomness from…",null,null],[0,"seq","ndarray_rand::rand","Sequence-related functionality",null,null],[0,"index","ndarray_rand::rand::seq","Low-level API for sampling indices",null,null],[4,"IndexVec","ndarray_rand::rand::seq::index","A vector of indices.",null,null],[4,"IndexVecIter","","Return type of `IndexVec::iter`.",null,null],[4,"IndexVecIntoIter","","Return type of `IndexVec::into_iter`.",null,null],[5,"sample","","Randomly sample exactly `amount` distinct indices from…",null,[[],["indexvec",4]]],[8,"SliceRandom","ndarray_rand::rand::seq","Extension trait on slices, providing random mutation and…",null,null],[16,"Item","","The element type.",9,null],[10,"choose","","Returns a reference to one random element of the slice, or…",9,[[],["option",4]]],[10,"choose_mut","","Returns a mutable reference to one random element of the…",9,[[],["option",4]]],[10,"choose_multiple","","Chooses `amount` elements from the slice at random,…",9,[[],["slicechooseiter",3]]],[10,"choose_weighted","","Similar to `choose`, but where the likelihood of each…",9,[[],[["result",4],["weightederror",4]]]],[10,"choose_weighted_mut","","Similar to `choose_mut`, but where the likelihood of each…",9,[[],[["result",4],["weightederror",4]]]],[10,"shuffle","","Shuffle a mutable slice in place.",9,[[]]],[10,"partial_shuffle","","Shuffle a slice in place, but exit early.",9,[[]]],[8,"IteratorRandom","","Extension trait on iterators, providing random sampling…",null,null],[11,"choose","","Choose one element at random from the iterator.",8,[[],["option",4]]],[11,"choose_multiple_fill","","Collects values at random from the iterator into a…",8,[[]]],[11,"choose_multiple","","Collects `amount` values at random from the iterator into…",8,[[],["vec",3]]],[3,"SliceChooseIter","","An iterator over multiple slice elements.",null,null],[8,"Rng","ndarray_rand::rand","An automatically-implemented extension trait on…",null,null],[11,"gen","","Return a random value supporting the `Standard`…",10,[[]]],[11,"gen_range","","Generate a random value in the range [`low`, `high`), i.e.…",10,[[]]],[11,"sample","","Sample a new value, using the given distribution.",10,[[]]],[11,"sample_iter","","Create an iterator that generates values using the given…",10,[[],["distiter",3]]],[11,"fill","","Fill `dest` entirely with random bytes (uniform value…",10,[[]]],[11,"try_fill","","Fill `dest` entirely with random bytes (uniform value…",10,[[],[["result",4],["error",3]]]],[11,"gen_bool","","Return a bool with a probability `p` of being true.",10,[[]]],[11,"gen_ratio","","Return a bool with a probability of…",10,[[]]],[8,"AsByteSliceMut","","Trait for casting types to byte slices",null,null],[10,"as_byte_slice_mut","","Return a mutable reference to self as a byte slice",13,[[]]],[10,"to_le","","Call `to_le` on each element (i.e. byte-swap on Big Endian…",13,[[]]],[5,"random","","Generates a random value using the thread-local random…",null,[[]]],[8,"CryptoRng","","A marker trait used to indicate that an [`RngCore`] or…",null,null],[3,"Error","","Error type of random number generators",null,null],[8,"RngCore","","The core of a random number generator.",null,null],[10,"next_u32","","Return the next random `u32`.",11,[[]]],[10,"next_u64","","Return the next random `u64`.",11,[[]]],[10,"fill_bytes","","Fill `dest` with random data.",11,[[]]],[10,"try_fill_bytes","","Fill `dest` entirely with random data.",11,[[],[["result",4],["error",3]]]],[8,"SeedableRng","","A random number generator that can be explicitly seeded.",null,null],[16,"Seed","","Seed type, which is restricted to types…",12,null],[10,"from_seed","","Create a new PRNG using the given seed.",12,[[]]],[11,"seed_from_u64","","Create a new PRNG using a `u64` seed.",12,[[]]],[11,"from_rng","","Create a new PRNG seeded from another `Rng`.",12,[[],[["result",4],["error",3]]]],[11,"from_entropy","","Creates a new instance of the RNG seeded via `getrandom`.",12,[[]]],[5,"thread_rng","","Retrieve the lazily-initialized thread-local random number…",null,[[],["threadrng",3]]],[0,"rand_distr","ndarray_rand","`rand-distr`, re-exported for convenience and…",null,null],[8,"Distribution","ndarray_rand::rand_distr","Types (distributions) that can be used to create a random…",null,null],[10,"sample","","Generate a random value of `T`, using `rng` as the source…",6,[[]]],[11,"sample_iter","","Create an iterator that generates random values of `T`,…",6,[[],["distiter",3]]],[3,"DistIter","","An iterator that generates random values of `T` with…",null,null],[3,"Standard","","A generic random value distribution, implemented for many…",null,null],[3,"Alphanumeric","","Sample a `char`, uniformly distributed over ASCII letters…",null,null],[3,"Uniform","","Sample values uniformly between two bounds.",null,null],[3,"OpenClosed01","","A distribution to sample floating point numbers uniformly…",null,null],[3,"Open01","","A distribution to sample floating point numbers uniformly…",null,null],[3,"Bernoulli","","The Bernoulli distribution.",null,null],[0,"uniform","","A distribution uniformly sampling numbers within a given…",null,null],[3,"Uniform","ndarray_rand::rand_distr::uniform","Sample values uniformly between two bounds.",null,null],[8,"SampleUniform","","Helper trait for creating objects using the correct…",null,null],[16,"Sampler","","The `UniformSampler` implementation supporting type `X`.",1,null],[8,"UniformSampler","","Helper trait handling actual uniform sampling.",null,null],[16,"X","","The type sampled by this implementation.",2,null],[10,"new","","Construct self, with inclusive lower bound and exclusive…",2,[[]]],[10,"new_inclusive","","Construct self, with inclusive bounds `[low, high]`.",2,[[]]],[10,"sample","","Sample a value.",2,[[]]],[11,"sample_single","","Sample a single value uniformly from a range with…",2,[[]]],[8,"SampleBorrow","","Helper trait similar to `Borrow` but implemented only for…",null,null],[10,"borrow","","Immutably borrows from an owned value. See `Borrow::borrow`",3,[[]]],[3,"UniformInt","","The back-end implementing [`UniformSampler`] for integer…",null,null],[3,"UniformFloat","","The back-end implementing [`UniformSampler`] for…",null,null],[3,"UniformDuration","","The back-end implementing [`UniformSampler`] for `Duration`.",null,null],[0,"weighted","ndarray_rand::rand_distr","Weighted index sampling",null,null],[0,"alias_method","ndarray_rand::rand_distr::weighted","This module contains an implementation of alias method for…",null,null],[3,"WeightedIndex","ndarray_rand::rand_distr::weighted::alias_method","A distribution using weighted sampling to pick a…",null,null],[8,"Weight","","Trait that must be implemented for weights, that are used…",null,null],[18,"MAX","","Maximum number representable by `Self`.",4,null],[18,"ZERO","","Element of `Self` equivalent to 0.",4,null],[10,"try_from_u32_lossy","","Produce an instance of `Self` from a `u32` value, or…",4,[[],["option",4]]],[11,"sum","","Sums all values in slice `values`.",4,[[]]],[3,"WeightedIndex","ndarray_rand::rand_distr::weighted","A distribution using weighted sampling to pick a…",null,null],[4,"WeightedError","","Error type returned from `WeightedIndex::new`.",null,null],[13,"NoItem","","The provided weight collection contains no items.",5,null],[13,"InvalidWeight","","A weight is either less than zero, greater than the…",5,null],[13,"AllWeightsZero","","All items in the provided weight collection are zero.",5,null],[13,"TooMany","","Too many weights are provided (length greater than…",5,null],[3,"UnitSphere","ndarray_rand::rand_distr","Samples uniformly from the surface of the unit sphere in…",null,null],[3,"UnitBall","","Samples uniformly from the unit ball (surface and…",null,null],[3,"UnitCircle","","Samples uniformly from the edge of the unit circle in two…",null,null],[3,"UnitDisc","","Samples uniformly from the unit disc in two dimensions.",null,null],[3,"Gamma","","The Gamma distribution `Gamma(shape, scale)` distribution.",null,null],[4,"GammaError","","Error type returned from `Gamma::new`.",null,null],[13,"ShapeTooSmall","","`shape <= 0` or `nan`.",14,null],[13,"ScaleTooSmall","","`scale <= 0` or `nan`.",14,null],[13,"ScaleTooLarge","","`1 / scale == 0`.",14,null],[3,"ChiSquared","","The chi-squared distribution `χ²(k)`, where `k` is the…",null,null],[4,"ChiSquaredError","","Error type returned from `ChiSquared::new` and…",null,null],[13,"DoFTooSmall","","`0.5 * k <= 0` or `nan`.",15,null],[3,"FisherF","","The Fisher F distribution `F(m, n)`.",null,null],[4,"FisherFError","","Error type returned from `FisherF::new`.",null,null],[13,"MTooSmall","","`m <= 0` or `nan`.",16,null],[13,"NTooSmall","","`n <= 0` or `nan`.",16,null],[3,"StudentT","","The Student t distribution, `t(nu)`, where `nu` is the…",null,null],[3,"Beta","","The Beta distribution with shape parameters `alpha` and…",null,null],[4,"BetaError","","Error type returned from `Beta::new`.",null,null],[13,"AlphaTooSmall","","`alpha <= 0` or `nan`.",17,null],[13,"BetaTooSmall","","`beta <= 0` or `nan`.",17,null],[3,"Normal","","The normal distribution `N(mean, std_dev**2)`.",null,null],[4,"NormalError","","Error type returned from `Normal::new` and `LogNormal::new`.",null,null],[13,"StdDevTooSmall","","`std_dev < 0` or `nan`.",18,null],[3,"LogNormal","","The log-normal distribution `ln N(mean, std_dev**2)`.",null,null],[3,"StandardNormal","","Samples floating-point numbers according to the normal…",null,null],[3,"Exp","","The exponential distribution `Exp(lambda)`.",null,null],[4,"ExpError","","Error type returned from `Exp::new`.",null,null],[13,"LambdaTooSmall","","`lambda <= 0` or `nan`.",19,null],[3,"Exp1","","Samples floating-point numbers according to the…",null,null],[3,"Pareto","","Samples floating-point numbers according to the Pareto…",null,null],[4,"ParetoError","","Error type returned from `Pareto::new`.",null,null],[13,"ScaleTooSmall","","`scale <= 0` or `nan`.",20,null],[13,"ShapeTooSmall","","`shape <= 0` or `nan`.",20,null],[3,"Pert","","The PERT distribution.",null,null],[4,"PertError","","Error type returned from [`Pert`] constructors.",null,null],[13,"RangeTooSmall","","`max < min` or `min` or `max` is NaN.",21,null],[13,"ModeRange","","`mode < min` or `mode > max` or `mode` is NaN.",21,null],[13,"ShapeTooSmall","","`shape < 0` or `shape` is NaN",21,null],[3,"Poisson","","The Poisson distribution `Poisson(lambda)`.",null,null],[4,"PoissonError","","Error type returned from `Poisson::new`.",null,null],[13,"ShapeTooSmall","","`lambda <= 0` or `nan`.",22,null],[3,"Binomial","","The binomial distribution `Binomial(n, p)`.",null,null],[4,"BinomialError","","Error type returned from `Binomial::new`.",null,null],[13,"ProbabilityTooSmall","","`p < 0` or `nan`.",23,null],[13,"ProbabilityTooLarge","","`p > 1`.",23,null],[3,"Cauchy","","The Cauchy distribution `Cauchy(median, scale)`.",null,null],[4,"CauchyError","","Error type returned from `Cauchy::new`.",null,null],[13,"ScaleTooSmall","","`scale <= 0` or `nan`.",24,null],[3,"Dirichlet","","The dirichelet distribution `Dirichlet(alpha)`.",null,null],[4,"DirichletError","","Error type returned from `Dirchlet::new`.",null,null],[13,"AlphaTooShort","","`alpha.len() < 2`.",25,null],[13,"AlphaTooSmall","","`alpha <= 0.0` or `nan`.",25,null],[13,"SizeTooSmall","","`size < 2`.",25,null],[3,"Triangular","","The triangular distribution.",null,null],[4,"TriangularError","","Error type returned from [`Triangular::new`].",null,null],[13,"RangeTooSmall","","`max < min` or `min` or `max` is NaN.",26,null],[13,"ModeRange","","`mode < min` or `mode > max` or `mode` is NaN.",26,null],[3,"Weibull","","Samples floating-point numbers according to the Weibull…",null,null],[4,"WeibullError","","Error type returned from `Weibull::new`.",null,null],[13,"ScaleTooSmall","","`scale <= 0` or `nan`.",27,null],[13,"ShapeTooSmall","","`shape <= 0` or `nan`.",27,null],[8,"Float","","Trait for floating-point scalar types",null,null],[10,"pi","","The constant π",28,[[]]],[10,"from","","Support approximate representation of a f64 value",28,[[]]],[10,"to_u64","","Support converting to an unsigned integer.",28,[[],["option",4]]],[10,"abs","","Take the absolute value of self",28,[[]]],[10,"floor","","Take the largest integer less than or equal to self",28,[[]]],[10,"exp","","Take the exponential of self",28,[[]]],[10,"ln","","Take the natural logarithm of self",28,[[]]],[10,"sqrt","","Take square root of self",28,[[]]],[10,"powf","","Take self to a floating-point power",28,[[]]],[10,"tan","","Take the tangent of self",28,[[]]],[10,"log_gamma","","Take the logarithm of the gamma function of self",28,[[]]],[8,"RandomExt","ndarray_rand","Constructors for n-dimensional arrays with random elements.",null,null],[10,"random","","Create an array with shape `dim` with elements drawn from…",29,[[],["arraybase",3]]],[10,"random_using","","Create an array with shape `dim` with elements drawn from…",29,[[],["arraybase",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","ndarray_rand::rand_distr::uniform","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"vzip","","",31,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"vzip","","",32,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"from","ndarray_rand::rand_distr::weighted::alias_method","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"from","ndarray_rand::rand_distr::weighted","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"vzip","","",35,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","ndarray_rand::rand_distr","",36,[[]]],[11,"into","","",36,[[]]],[11,"into_iter","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"vzip","","",37,[[]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"vzip","","",38,[[]]],[11,"from","ndarray_rand::rand::distributions","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","ndarray_rand::rand_distr","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"vzip","","",39,[[]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"vzip","","",40,[[]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"vzip","","",41,[[]]],[11,"from","ndarray_rand::rand::distributions","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"vzip","","",42,[[]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"vzip","","",43,[[]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"vzip","","",44,[[]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"vzip","","",45,[[]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"vzip","","",46,[[]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"vzip","","",47,[[]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"vzip","","",48,[[]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"vzip","","",49,[[]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"vzip","","",50,[[]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"vzip","","",51,[[]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"vzip","","",52,[[]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"vzip","","",53,[[]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"vzip","","",54,[[]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"vzip","","",55,[[]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"vzip","","",56,[[]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"vzip","","",57,[[]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"vzip","","",58,[[]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"vzip","","",59,[[]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"vzip","","",60,[[]]],[11,"from","ndarray_rand::rand::rngs","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"vzip","","",61,[[]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"vzip","","",62,[[]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"vzip","","",63,[[]]],[11,"from","ndarray_rand::rand::rngs::adapter","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_string","","",64,[[],["string",3]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"vzip","","",64,[[]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"vzip","","",65,[[]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"vzip","","",66,[[]]],[11,"from","ndarray_rand::rand::rngs::mock","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"vzip","","",67,[[]]],[11,"from","ndarray_rand::rand::rngs","",68,[[]]],[11,"into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"vzip","","",68,[[]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"vzip","","",69,[[]]],[11,"from","ndarray_rand::rand::seq::index","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"vzip","","",70,[[]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"into_iter","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"vzip","","",71,[[]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"into_iter","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"vzip","","",72,[[]]],[11,"from","ndarray_rand::rand::seq","",73,[[]]],[11,"into","","",73,[[]]],[11,"into_iter","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"vzip","","",73,[[]]],[11,"from","ndarray_rand::rand","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_string","","",74,[[],["string",3]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"vzip","","",74,[[]]],[11,"from","ndarray_rand::rand_distr","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"vzip","","",75,[[]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"vzip","","",76,[[]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"vzip","","",77,[[]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"vzip","","",78,[[]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"vzip","","",79,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"vzip","","",80,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"vzip","","",81,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"vzip","","",82,[[]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"vzip","","",83,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"vzip","","",84,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"to_owned","","",85,[[]]],[11,"clone_into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"vzip","","",85,[[]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"vzip","","",86,[[]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"vzip","","",87,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"to_owned","","",88,[[]]],[11,"clone_into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"vzip","","",88,[[]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"vzip","","",89,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"vzip","","",90,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"vzip","","",91,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"to_owned","","",92,[[]]],[11,"clone_into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"vzip","","",92,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"to_owned","","",93,[[]]],[11,"clone_into","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"vzip","","",93,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"to_owned","","",94,[[]]],[11,"clone_into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"vzip","","",94,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"to_owned","","",95,[[]]],[11,"clone_into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"vzip","","",95,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"to_owned","","",96,[[]]],[11,"clone_into","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"vzip","","",96,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"fmt","ndarray_rand::rand::rngs::adapter","",66,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","ndarray_rand::rand::distributions","",47,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",45,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","ndarray_rand::rand_distr::uniform","",30,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","ndarray_rand::rand::distributions","",57,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","ndarray_rand::rand::rngs::adapter","",64,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","ndarray_rand::rand::distributions","",60,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","ndarray_rand::rand::rngs","",63,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","ndarray_rand::rand::distributions","",44,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",59,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","ndarray_rand::rand::rngs::mock","",67,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","ndarray_rand::rand::distributions","",53,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","ndarray_rand::rand_distr","",41,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","ndarray_rand::rand::distributions","",42,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","ndarray_rand::rand_distr::weighted","",5,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","ndarray_rand::rand::distributions","",54,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","ndarray_rand::rand_distr","",37,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","ndarray_rand::rand::distributions","",46,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","ndarray_rand::rand::rngs","",62,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","ndarray_rand::rand_distr","",39,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","ndarray_rand::rand_distr::weighted","",35,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","ndarray_rand::rand::rngs","",68,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","ndarray_rand::rand_distr","",36,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","ndarray_rand::rand::distributions","",49,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","ndarray_rand::rand::seq::index","",70,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","ndarray_rand::rand::rngs::adapter","",65,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","ndarray_rand::rand::distributions","",7,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","ndarray_rand::rand_distr","",38,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","ndarray_rand::rand_distr::uniform","",33,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","ndarray_rand::rand_distr","",40,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","ndarray_rand::rand::distributions","",43,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",48,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",58,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",56,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","ndarray_rand::rand::rngs","",61,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","ndarray_rand::rand::distributions","",55,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","ndarray_rand::rand_distr::uniform","",31,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","ndarray_rand::rand::seq::index","",72,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","ndarray_rand::rand::distributions","",50,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","ndarray_rand::rand::seq::index","",71,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","ndarray_rand::rand_distr::uniform","",32,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","ndarray_rand::rand::seq","",73,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","ndarray_rand::rand::distributions","",52,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",51,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","ndarray_rand::rand_distr::weighted::alias_method","",34,[[["formatter",3]],[["error",3],["result",4]]]],[11,"new","ndarray_rand::rand_distr::uniform","",31,[[],["uniformint",3]]],[11,"new_inclusive","","",31,[[],["uniformint",3]]],[11,"sample","","",31,[[]]],[11,"sample_single","","",31,[[]]],[11,"new","","",31,[[],["uniformint",3]]],[11,"new_inclusive","","",31,[[],["uniformint",3]]],[11,"sample","","",31,[[]]],[11,"sample_single","","",31,[[]]],[11,"new","","",32,[[],["uniformfloat",3]]],[11,"new_inclusive","","",32,[[],["uniformfloat",3]]],[11,"sample","","",32,[[]]],[11,"sample_single","","",32,[[]]],[11,"new","","",31,[[],["uniformint",3]]],[11,"new_inclusive","","",31,[[],["uniformint",3]]],[11,"sample","","",31,[[]]],[11,"sample_single","","",31,[[]]],[11,"new","","",31,[[],["uniformint",3]]],[11,"new_inclusive","","",31,[[],["uniformint",3]]],[11,"sample","","",31,[[]]],[11,"sample_single","","",31,[[]]],[11,"new","","",33,[[],["uniformduration",3]]],[11,"new_inclusive","","",33,[[],["uniformduration",3]]],[11,"sample","","",33,[[],["duration",3]]],[11,"new","","",31,[[],["uniformint",3]]],[11,"new_inclusive","","",31,[[],["uniformint",3]]],[11,"sample","","",31,[[]]],[11,"sample_single","","",31,[[]]],[11,"new","","",32,[[],["uniformfloat",3]]],[11,"new_inclusive","","",32,[[],["uniformfloat",3]]],[11,"sample","","",32,[[]]],[11,"sample_single","","",32,[[]]],[11,"new","","",31,[[],["uniformint",3]]],[11,"new_inclusive","","",31,[[],["uniformint",3]]],[11,"sample","","",31,[[]]],[11,"sample_single","","",31,[[]]],[11,"new","","",31,[[],["uniformint",3]]],[11,"new_inclusive","","",31,[[],["uniformint",3]]],[11,"sample","","",31,[[]]],[11,"sample_single","","",31,[[]]],[11,"new","","",31,[[],["uniformint",3]]],[11,"new_inclusive","","",31,[[],["uniformint",3]]],[11,"sample","","",31,[[]]],[11,"sample_single","","",31,[[]]],[11,"new","","",31,[[],["uniformint",3]]],[11,"new_inclusive","","",31,[[],["uniformint",3]]],[11,"sample","","",31,[[]]],[11,"sample_single","","",31,[[]]],[11,"new","","",31,[[],["uniformint",3]]],[11,"new_inclusive","","",31,[[],["uniformint",3]]],[11,"sample","","",31,[[]]],[11,"sample_single","","",31,[[]]],[11,"new","","",31,[[],["uniformint",3]]],[11,"new_inclusive","","",31,[[],["uniformint",3]]],[11,"sample","","",31,[[]]],[11,"sample_single","","",31,[[]]],[11,"new","","",31,[[],["uniformint",3]]],[11,"new_inclusive","","",31,[[],["uniformint",3]]],[11,"sample","","",31,[[]]],[11,"sample_single","","",31,[[]]],[11,"next","ndarray_rand::rand_distr","",36,[[],["option",4]]],[11,"size_hint","","",36,[[]]],[11,"next","ndarray_rand::rand::seq::index","",72,[[],["option",4]]],[11,"size_hint","","",72,[[]]],[11,"next","","",71,[[],["option",4]]],[11,"size_hint","","",71,[[]]],[11,"next","ndarray_rand::rand::seq","",73,[[],["option",4]]],[11,"size_hint","","",73,[[]]],[11,"clone","ndarray_rand::rand::rngs","",61,[[],["smallrng",3]]],[11,"clone","ndarray_rand::rand_distr::weighted","",35,[[],["weightedindex",3]]],[11,"clone","ndarray_rand::rand_distr","",39,[[],["open01",3]]],[11,"clone","ndarray_rand::rand::distributions","",45,[[],["exp",3]]],[11,"clone","ndarray_rand::rand::rngs","",62,[[],["stdrng",3]]],[11,"clone","ndarray_rand::rand::distributions","",55,[[],["pareto",3]]],[11,"clone","","",52,[[],["lognormal",3]]],[11,"clone","","",43,[[],["cauchy",3]]],[11,"clone","ndarray_rand::rand_distr","",38,[[],["bernoulli",3]]],[11,"clone","ndarray_rand::rand::distributions","",44,[[],["dirichlet",3]]],[11,"clone","","",57,[[],["triangular",3]]],[11,"clone","ndarray_rand::rand_distr::uniform","",32,[[],["uniformfloat",3]]],[11,"clone","ndarray_rand::rand::seq::index","",70,[[],["indexvec",4]]],[11,"clone","ndarray_rand::rand::distributions","",50,[[],["gamma",3]]],[11,"clone","","",56,[[],["poisson",3]]],[11,"clone","","",59,[[],["unitspheresurface",3]]],[11,"clone","","",7,[[],["bernoullierror",4]]],[11,"clone","","",46,[[],["exp1",3]]],[11,"clone","","",47,[[],["beta",3]]],[11,"clone","ndarray_rand::rand_distr::weighted::alias_method","",34,[[],["weightedindex",3]]],[11,"clone","ndarray_rand::rand::distributions","",60,[[],["weibull",3]]],[11,"clone","ndarray_rand::rand::seq::index","",72,[[],["indexvecintoiter",4]]],[11,"clone","ndarray_rand::rand::distributions","",48,[[],["chisquared",3]]],[11,"clone","","",49,[[],["fisherf",3]]],[11,"clone","ndarray_rand::rand::rngs","",63,[[],["threadrng",3]]],[11,"clone","ndarray_rand::rand::distributions","",58,[[],["unitcircle",3]]],[11,"clone","ndarray_rand::rand_distr","",40,[[],["openclosed01",3]]],[11,"clone","","",37,[[],["standard",3]]],[11,"clone","ndarray_rand::rand::rngs::adapter","",66,[[],["reseedingrng",3]]],[11,"clone","ndarray_rand::rand::distributions","",42,[[],["binomial",3]]],[11,"clone","ndarray_rand::rand_distr::uniform","",31,[[],["uniformint",3]]],[11,"clone","ndarray_rand::rand::distributions","",51,[[],["studentt",3]]],[11,"clone","ndarray_rand::rand_distr::uniform","",33,[[],["uniformduration",3]]],[11,"clone","ndarray_rand::rand::distributions","",53,[[],["normal",3]]],[11,"clone","ndarray_rand::rand_distr::weighted","",5,[[],["weightederror",4]]],[11,"clone","ndarray_rand::rand_distr::uniform","",30,[[],["uniform",3]]],[11,"clone","ndarray_rand::rand::rngs::mock","",67,[[],["steprng",3]]],[11,"clone","ndarray_rand::rand::distributions","",54,[[],["standardnormal",3]]],[11,"sample","ndarray_rand::rand_distr","",37,[[]]],[11,"sample","ndarray_rand::rand::distributions","",54,[[]]],[11,"sample","ndarray_rand::rand_distr","",37,[[]]],[11,"sample","","",37,[[]]],[11,"sample","","",37,[[]]],[11,"sample","","",37,[[]]],[11,"sample","","",40,[[]]],[11,"sample","","",37,[[]]],[11,"sample","","",37,[[],["nonzerou64",3]]],[11,"sample","","",37,[[]]],[11,"sample","","",37,[[]]],[11,"sample","","",37,[[]]],[11,"sample","","",37,[[]]],[11,"sample","","",37,[[]]],[11,"sample","","",37,[[]]],[11,"sample","","",37,[[],["nonzerou8",3]]],[11,"sample","","",37,[[]]],[11,"sample","","",37,[[]]],[11,"sample","","",37,[[],["nonzerousize",3]]],[11,"sample","","",37,[[]]],[11,"sample","","",37,[[],["option",4]]],[11,"sample","","",37,[[]]],[11,"sample","","",37,[[]]],[11,"sample","ndarray_rand::rand::distributions","",45,[[]]],[11,"sample","ndarray_rand::rand_distr","",41,[[]]],[11,"sample","ndarray_rand::rand::distributions","",51,[[]]],[11,"sample","","",48,[[]]],[11,"sample","ndarray_rand::rand_distr","",37,[[]]],[11,"sample","ndarray_rand::rand::distributions","",47,[[]]],[11,"sample","ndarray_rand::rand_distr","",37,[[]]],[11,"sample","","",37,[[]]],[11,"sample","","",37,[[]]],[11,"sample","","",37,[[]]],[11,"sample","","",37,[[]]],[11,"sample","ndarray_rand::rand_distr::weighted::alias_method","",34,[[]]],[11,"sample","ndarray_rand::rand_distr","",40,[[]]],[11,"sample","","",39,[[]]],[11,"sample","","",37,[[]]],[11,"sample","","",37,[[],["wrapping",3]]],[11,"sample","","",37,[[]]],[11,"sample","ndarray_rand::rand::distributions","",58,[[]]],[11,"sample","ndarray_rand::rand_distr","",37,[[]]],[11,"sample","","",37,[[]]],[11,"sample","","",37,[[]]],[11,"sample","ndarray_rand::rand::distributions","",57,[[]]],[11,"sample","ndarray_rand::rand_distr","",37,[[]]],[11,"sample","ndarray_rand::rand::distributions","",59,[[]]],[11,"sample","ndarray_rand::rand_distr","",37,[[]]],[11,"sample","","",37,[[]]],[11,"sample","","",37,[[]]],[11,"sample","","",37,[[],["nonzerou128",3]]],[11,"sample","","",37,[[]]],[11,"sample","ndarray_rand::rand::distributions","",52,[[]]],[11,"sample","ndarray_rand::rand_distr","",37,[[]]],[11,"sample","ndarray_rand::rand::distributions","",50,[[]]],[11,"sample","","",60,[[]]],[11,"sample","ndarray_rand::rand_distr","",37,[[]]],[11,"sample","","",37,[[],["nonzerou16",3]]],[11,"sample","","",37,[[]]],[11,"sample","","",37,[[]]],[11,"sample","","",37,[[]]],[11,"sample","","",39,[[]]],[11,"sample","","",37,[[]]],[11,"sample","","",37,[[]]],[11,"sample","","",37,[[]]],[11,"sample","ndarray_rand::rand_distr::weighted","",35,[[]]],[11,"sample","ndarray_rand::rand::distributions","",43,[[]]],[11,"sample","ndarray_rand::rand_distr","",37,[[]]],[11,"sample","","",37,[[]]],[11,"sample","","",37,[[]]],[11,"sample","ndarray_rand::rand::distributions","",42,[[]]],[11,"sample","ndarray_rand::rand_distr::uniform","",30,[[]]],[11,"sample","ndarray_rand::rand_distr","",37,[[]]],[11,"sample","","",37,[[]]],[11,"sample","","",37,[[]]],[11,"sample","","",37,[[]]],[11,"sample","","",37,[[]]],[11,"sample","","",37,[[]]],[11,"sample","ndarray_rand::rand::distributions","",55,[[]]],[11,"sample","ndarray_rand::rand_distr","",37,[[]]],[11,"sample","ndarray_rand::rand::distributions","",46,[[]]],[11,"sample","ndarray_rand::rand_distr","",37,[[]]],[11,"sample","","",37,[[]]],[11,"sample","","",37,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",37,[[]]],[11,"sample","","",37,[[]]],[11,"sample","","",37,[[]]],[11,"sample","","",37,[[]]],[11,"sample","ndarray_rand::rand::distributions","",56,[[]]],[11,"sample","ndarray_rand::rand_distr","",37,[[]]],[11,"sample","","",37,[[],["nonzerou32",3]]],[11,"sample","ndarray_rand::rand::distributions","",49,[[]]],[11,"sample","","",44,[[],["vec",3]]],[11,"sample","ndarray_rand::rand_distr","",37,[[]]],[11,"sample","","",37,[[]]],[11,"sample","","",37,[[]]],[11,"sample","ndarray_rand::rand::distributions","",53,[[]]],[11,"from_seed","ndarray_rand::rand::rngs","",61,[[],["smallrng",3]]],[11,"from_rng","","",61,[[],[["result",4],["smallrng",3],["error",3]]]],[11,"from_seed","","",62,[[],["stdrng",3]]],[11,"from_rng","","",62,[[],[["error",3],["result",4],["stdrng",3]]]],[11,"default","","",63,[[],["threadrng",3]]],[11,"default","","",68,[[],["entropyrng",3]]],[11,"next_u32","ndarray_rand::rand::rngs::mock","",67,[[]]],[11,"next_u64","","",67,[[]]],[11,"fill_bytes","","",67,[[]]],[11,"try_fill_bytes","","",67,[[],[["result",4],["error",3]]]],[11,"next_u32","ndarray_rand::rand::rngs","",61,[[]]],[11,"next_u64","","",61,[[]]],[11,"fill_bytes","","",61,[[]]],[11,"try_fill_bytes","","",61,[[],[["result",4],["error",3]]]],[11,"next_u32","","",62,[[]]],[11,"next_u64","","",62,[[]]],[11,"fill_bytes","","",62,[[]]],[11,"try_fill_bytes","","",62,[[],[["result",4],["error",3]]]],[11,"next_u32","","",63,[[]]],[11,"next_u64","","",63,[[]]],[11,"fill_bytes","","",63,[[]]],[11,"try_fill_bytes","","",63,[[],[["result",4],["error",3]]]],[11,"next_u32","ndarray_rand::rand::rngs::adapter","",66,[[]]],[11,"next_u64","","",66,[[]]],[11,"fill_bytes","","",66,[[]]],[11,"try_fill_bytes","","",66,[[],[["result",4],["error",3]]]],[11,"next_u32","","",65,[[]]],[11,"next_u64","","",65,[[]]],[11,"fill_bytes","","",65,[[]]],[11,"try_fill_bytes","","",65,[[],[["result",4],["error",3]]]],[11,"next_u32","ndarray_rand::rand::rngs","",68,[[]]],[11,"next_u64","","",68,[[]]],[11,"fill_bytes","","",68,[[]]],[11,"try_fill_bytes","","",68,[[],[["result",4],["error",3]]]],[11,"fmt","ndarray_rand::rand_distr::weighted","",5,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","ndarray_rand::rand::distributions","",7,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","ndarray_rand::rand::rngs::adapter","",64,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","ndarray_rand::rand_distr::uniform","",30,[[["range",3]],["uniform",3]]],[11,"from","","",30,[[["rangeinclusive",3]],["uniform",3]]],[11,"from","ndarray_rand::rand::seq::index","",70,[[["vec",3]],["indexvec",4]]],[11,"from","","",70,[[["vec",3]],["indexvec",4]]],[11,"len","ndarray_rand::rand::seq","",73,[[]]],[11,"eq","ndarray_rand::rand::distributions","",7,[[["bernoullierror",4]]]],[11,"eq","ndarray_rand::rand_distr::weighted","",5,[[["weightederror",4]]]],[11,"eq","ndarray_rand::rand::seq::index","",70,[[["indexvec",4]]]],[11,"source","ndarray_rand::rand::rngs::adapter","",64,[[],[["option",4],["error",8]]]],[11,"from","ndarray_rand::rand","",74,[[["error",3]],["error",3]]],[11,"from","","",74,[[["nonzerou32",3]],["error",3]]],[11,"read","","",11,[[],[["error",3],["result",4]]]],[11,"next_u32","ndarray_rand::rand::rngs","",69,[[]]],[11,"next_u64","","",69,[[]]],[11,"fill_bytes","","",69,[[]]],[11,"try_fill_bytes","","",69,[[],[["result",4],["error",3]]]],[11,"fmt","","",69,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","ndarray_rand::rand","",74,[[["formatter",3]],[["error",3],["result",4]]]],[11,"default","ndarray_rand::rand::rngs","",69,[[],["osrng",3]]],[11,"source","ndarray_rand::rand","",74,[[],[["option",4],["error",8]]]],[11,"clone","ndarray_rand::rand::rngs","",69,[[],["osrng",3]]],[11,"fmt","ndarray_rand::rand","",74,[[["formatter",3]],[["error",3],["result",4]]]],[11,"eq","ndarray_rand::rand_distr","",21,[[["perterror",4]]]],[11,"eq","","",18,[[["error",4]]]],[11,"eq","","",23,[[["error",4]]]],[11,"eq","","",15,[[["chisquarederror",4]]]],[11,"eq","","",27,[[["error",4]]]],[11,"eq","","",19,[[["error",4]]]],[11,"eq","","",20,[[["error",4]]]],[11,"eq","","",16,[[["fisherferror",4]]]],[11,"eq","","",22,[[["error",4]]]],[11,"eq","","",17,[[["betaerror",4]]]],[11,"eq","","",25,[[["error",4]]]],[11,"eq","","",14,[[["error",4]]]],[11,"eq","","",24,[[["error",4]]]],[11,"eq","","",26,[[["triangularerror",4]]]],[11,"fmt","","",22,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",91,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",79,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",75,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",81,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",95,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",17,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",26,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",15,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",20,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",93,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",92,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",24,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",90,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",14,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",88,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",86,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",85,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",77,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",84,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",89,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",16,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",87,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",19,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",18,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",78,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",21,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",27,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",25,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",82,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",83,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",23,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",96,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",80,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",94,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",76,[[["formatter",3]],[["error",3],["result",4]]]],[11,"sample","","",84,[[]]],[11,"sample","","",88,[[]]],[11,"sample","","",94,[[],["vec",3]]],[11,"sample","","",90,[[]]],[11,"sample","","",76,[[]]],[11,"sample","","",86,[[]]],[11,"sample","","",75,[[]]],[11,"sample","","",91,[[]]],[11,"sample","","",95,[[]]],[11,"sample","","",80,[[]]],[11,"sample","","",86,[[]]],[11,"sample","","",92,[[]]],[11,"sample","","",79,[[]]],[11,"sample","","",78,[[]]],[11,"sample","","",83,[[]]],[11,"sample","","",96,[[]]],[11,"sample","","",88,[[]]],[11,"sample","","",93,[[]]],[11,"sample","","",89,[[]]],[11,"sample","","",77,[[]]],[11,"sample","","",85,[[]]],[11,"sample","","",82,[[]]],[11,"sample","","",87,[[]]],[11,"sample","","",81,[[]]],[11,"sample","","",91,[[]]],[11,"clone","","",78,[[],["unitdisc",3]]],[11,"clone","","",19,[[],["error",4]]],[11,"clone","","",16,[[],["fisherferror",4]]],[11,"clone","","",80,[[],["chisquared",3]]],[11,"clone","","",86,[[],["standardnormal",3]]],[11,"clone","","",18,[[],["error",4]]],[11,"clone","","",24,[[],["error",4]]],[11,"clone","","",89,[[],["pareto",3]]],[11,"clone","","",25,[[],["error",4]]],[11,"clone","","",81,[[],["fisherf",3]]],[11,"clone","","",83,[[],["beta",3]]],[11,"clone","","",93,[[],["cauchy",3]]],[11,"clone","","",94,[[],["dirichlet",3]]],[11,"clone","","",22,[[],["error",4]]],[11,"clone","","",75,[[],["unitsphere",3]]],[11,"clone","","",77,[[],["unitcircle",3]]],[11,"clone","","",90,[[],["pert",3]]],[11,"clone","","",96,[[],["weibull",3]]],[11,"clone","","",20,[[],["error",4]]],[11,"clone","","",79,[[],["gamma",3]]],[11,"clone","","",88,[[],["exp1",3]]],[11,"clone","","",84,[[],["normal",3]]],[11,"clone","","",95,[[],["triangular",3]]],[11,"clone","","",27,[[],["error",4]]],[11,"clone","","",85,[[],["lognormal",3]]],[11,"clone","","",91,[[],["poisson",3]]],[11,"clone","","",14,[[],["error",4]]],[11,"clone","","",17,[[],["betaerror",4]]],[11,"clone","","",92,[[],["binomial",3]]],[11,"clone","","",21,[[],["perterror",4]]],[11,"clone","","",76,[[],["unitball",3]]],[11,"clone","","",87,[[],["exp",3]]],[11,"clone","","",15,[[],["chisquarederror",4]]],[11,"clone","","",26,[[],["triangularerror",4]]],[11,"clone","","",82,[[],["studentt",3]]],[11,"clone","","",23,[[],["error",4]]],[11,"clone","ndarray_rand","",0,[[],["f32",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"sample","","",0,[[]]],[11,"new","ndarray_rand::rand_distr::uniform","Create a new `Uniform` instance which samples uniformly…",30,[[],["uniform",3]]],[11,"new_inclusive","","Create a new `Uniform` instance which samples uniformly…",30,[[],["uniform",3]]],[11,"new","ndarray_rand::rand_distr::weighted::alias_method","Creates a new [`WeightedIndex`].",34,[[["vec",3]],[["weightedindex",3],["result",4],["weightederror",4]]]],[11,"new","ndarray_rand::rand_distr::weighted","Creates a new a `WeightedIndex` [`Distribution`] using the…",35,[[],[["weightederror",4],["weightedindex",3],["result",4]]]],[11,"update_weights","","Update a subset of weights, without changing the number of…",35,[[],[["result",4],["weightederror",4]]]],[11,"new","ndarray_rand::rand_distr","Construct a new `Bernoulli` with the given probability of…",38,[[],[["bernoullierror",4],["bernoulli",3],["result",4]]]],[11,"from_ratio","","Construct a new `Bernoulli` with the probability of…",38,[[],[["bernoullierror",4],["bernoulli",3],["result",4]]]],[11,"new","ndarray_rand::rand::distributions","Construct a new `Binomial` with the given shape parameters…",42,[[],["binomial",3]]],[11,"new","","Construct a new `Cauchy` with the given shape parameters…",43,[[],["cauchy",3]]],[11,"new","","Construct a new `Dirichlet` with the given alpha parameter…",44,[[],["dirichlet",3]]],[11,"new_with_param","","Construct a new `Dirichlet` with the given shape parameter…",44,[[],["dirichlet",3]]],[11,"new","","Construct a new `Exp` with the given shape parameter…",45,[[],["exp",3]]],[11,"new","","Construct an object representing the `Beta(alpha, beta)`…",47,[[],["beta",3]]],[11,"new","","Create a new chi-squared distribution with…",48,[[],["chisquared",3]]],[11,"new","","Create a new `FisherF` distribution, with the given…",49,[[],["fisherf",3]]],[11,"new","","Construct an object representing the `Gamma(shape, scale)`…",50,[[],["gamma",3]]],[11,"new","","Create a new Student t distribution with `n` degrees of…",51,[[],["studentt",3]]],[11,"new","","Construct a new `LogNormal` distribution with the given…",52,[[],["lognormal",3]]],[11,"new","","Construct a new `Normal` distribution with the given mean…",53,[[],["normal",3]]],[11,"new","","Construct a new Pareto distribution with given `scale` and…",55,[[],["pareto",3]]],[11,"new","","Construct a new `Poisson` with the given shape parameter…",56,[[],["poisson",3]]],[11,"new","","Construct a new `Triangular` with minimum `min`, maximum…",57,[[],["triangular",3]]],[11,"new","","Construct a new `UnitCircle` distribution.",58,[[],["unitcircle",3]]],[11,"new","","Construct a new `UnitSphereSurface` distribution.",59,[[],["unitspheresurface",3]]],[11,"new","","Construct a new `Weibull` distribution with given `scale`…",60,[[],["weibull",3]]],[11,"new","ndarray_rand::rand::rngs::adapter","Create a new `ReadRng` from a `Read`.",65,[[],["readrng",3]]],[11,"new","","Create a new `ReseedingRng` from an existing PRNG,…",66,[[],["reseedingrng",3]]],[11,"reseed","","Reseed the internal PRNG.",66,[[],[["result",4],["error",3]]]],[11,"new","ndarray_rand::rand::rngs::mock","Create a `StepRng`, yielding an arithmetic sequence…",67,[[],["steprng",3]]],[11,"new","ndarray_rand::rand::rngs","Create a new `EntropyRng`.",68,[[],["entropyrng",3]]],[11,"len","ndarray_rand::rand::seq::index","Returns the number of indices",70,[[]]],[11,"is_empty","","Returns `true` if the length is 0.",70,[[]]],[11,"index","","Return the value at the given `index`.",70,[[]]],[11,"into_vec","","Return result as a `Vec<usize>`. Conversion may or may not…",70,[[],["vec",3]]],[11,"iter","","Iterate over the indices as a sequence of `usize` values",70,[[],["indexveciter",4]]],[11,"into_iter","","Convert into an iterator over the indices as a sequence of…",70,[[],["indexvecintoiter",4]]],[11,"new","ndarray_rand::rand","Construct from any type supporting `std::error::Error`",74,[[],["error",3]]],[11,"inner","","Reference the inner error (`std` only)",74,[[],["error",8]]],[11,"take_inner","","Unwrap the inner error (`std` only)",74,[[],[["error",8],["box",3]]]],[18,"INTERNAL_START","","Codes below this point represent OS Errors (i.e. positive…",74,null],[18,"CUSTOM_START","","Codes at or above this point can be used by users to…",74,null],[11,"raw_os_error","","Extract the raw OS error code (if this error came from the…",74,[[],["option",4]]],[11,"code","","Retrieve the error code, if any.",74,[[],[["option",4],["nonzerou32",3]]]],[11,"new","ndarray_rand::rand_distr","Construct an object representing the `Gamma(shape, scale)`…",79,[[],[["error",4],["gamma",3],["result",4]]]],[11,"new","","Create a new chi-squared distribution with…",80,[[],[["chisquarederror",4],["result",4],["chisquared",3]]]],[11,"new","","Create a new `FisherF` distribution, with the given…",81,[[],[["fisherf",3],["fisherferror",4],["result",4]]]],[11,"new","","Create a new Student t distribution with `n` degrees of…",82,[[],[["chisquarederror",4],["result",4],["studentt",3]]]],[11,"new","","Construct an object representing the `Beta(alpha, beta)`…",83,[[],[["betaerror",4],["result",4],["beta",3]]]],[11,"new","","Construct a new `Normal` distribution with the given mean…",84,[[],[["result",4],["normal",3],["error",4]]]],[11,"new","","Construct a new `LogNormal` distribution with the given…",85,[[],[["lognormal",3],["result",4],["error",4]]]],[11,"new","","Construct a new `Exp` with the given shape parameter…",87,[[],[["result",4],["error",4],["exp",3]]]],[11,"new","","Construct a new Pareto distribution with given `scale` and…",89,[[],[["error",4],["pareto",3],["result",4]]]],[11,"new","","Set up the PERT distribution with defined `min`, `max` and…",90,[[],[["pert",3],["perterror",4],["result",4]]]],[11,"new_with_shape","","Set up the PERT distribution with defined `min`, `max`,…",90,[[],[["pert",3],["perterror",4],["result",4]]]],[11,"new","","Construct a new `Poisson` with the given shape parameter…",91,[[],[["result",4],["poisson",3],["error",4]]]],[11,"new","","Construct a new `Binomial` with the given shape parameters…",92,[[],[["binomial",3],["error",4],["result",4]]]],[11,"new","","Construct a new `Cauchy` with the given shape parameters…",93,[[],[["error",4],["cauchy",3],["result",4]]]],[11,"new","","Construct a new `Dirichlet` with the given alpha parameter…",94,[[],[["result",4],["dirichlet",3],["error",4]]]],[11,"new_with_size","","Construct a new `Dirichlet` with the given shape parameter…",94,[[],[["result",4],["dirichlet",3],["error",4]]]],[11,"new","","Set up the Triangular distribution with defined `min`,…",95,[[],[["triangular",3],["triangularerror",4],["result",4]]]],[11,"new","","Construct a new `Weibull` distribution with given `scale`…",96,[[],[["error",4],["weibull",3],["result",4]]]]],"p":[[3,"F32"],[8,"SampleUniform"],[8,"UniformSampler"],[8,"SampleBorrow"],[8,"Weight"],[4,"WeightedError"],[8,"Distribution"],[4,"BernoulliError"],[8,"IteratorRandom"],[8,"SliceRandom"],[8,"Rng"],[8,"RngCore"],[8,"SeedableRng"],[8,"AsByteSliceMut"],[4,"GammaError"],[4,"ChiSquaredError"],[4,"FisherFError"],[4,"BetaError"],[4,"NormalError"],[4,"ExpError"],[4,"ParetoError"],[4,"PertError"],[4,"PoissonError"],[4,"BinomialError"],[4,"CauchyError"],[4,"DirichletError"],[4,"TriangularError"],[4,"WeibullError"],[8,"Float"],[8,"RandomExt"],[3,"Uniform"],[3,"UniformInt"],[3,"UniformFloat"],[3,"UniformDuration"],[3,"WeightedIndex"],[3,"WeightedIndex"],[3,"DistIter"],[3,"Standard"],[3,"Bernoulli"],[3,"Open01"],[3,"OpenClosed01"],[3,"Alphanumeric"],[3,"Binomial"],[3,"Cauchy"],[3,"Dirichlet"],[3,"Exp"],[3,"Exp1"],[3,"Beta"],[3,"ChiSquared"],[3,"FisherF"],[3,"Gamma"],[3,"StudentT"],[3,"LogNormal"],[3,"Normal"],[3,"StandardNormal"],[3,"Pareto"],[3,"Poisson"],[3,"Triangular"],[3,"UnitCircle"],[3,"UnitSphereSurface"],[3,"Weibull"],[3,"SmallRng"],[3,"StdRng"],[3,"ThreadRng"],[3,"ReadError"],[3,"ReadRng"],[3,"ReseedingRng"],[3,"StepRng"],[3,"EntropyRng"],[3,"OsRng"],[4,"IndexVec"],[4,"IndexVecIter"],[4,"IndexVecIntoIter"],[3,"SliceChooseIter"],[3,"Error"],[3,"UnitSphere"],[3,"UnitBall"],[3,"UnitCircle"],[3,"UnitDisc"],[3,"Gamma"],[3,"ChiSquared"],[3,"FisherF"],[3,"StudentT"],[3,"Beta"],[3,"Normal"],[3,"LogNormal"],[3,"StandardNormal"],[3,"Exp"],[3,"Exp1"],[3,"Pareto"],[3,"Pert"],[3,"Poisson"],[3,"Binomial"],[3,"Cauchy"],[3,"Dirichlet"],[3,"Triangular"],[3,"Weibull"]]},\
"num_bigint":{"doc":"A Big integer (signed version: `BigInt`, unsigned version:…","i":[[3,"ParseBigIntError","num_bigint","",null,null],[3,"BigUint","","A big unsigned integer type.",null,null],[3,"BigInt","","A big signed integer type.",null,null],[4,"Sign","","A Sign is a `BigInt`\'s composing element.",null,null],[13,"Minus","","",0,null],[13,"NoSign","","",0,null],[13,"Plus","","",0,null],[11,"new","","Creates and initializes a BigInt.",1,[[["vec",3],["sign",4]],["bigint",3]]],[11,"from_biguint","","Creates and initializes a `BigInt`.",1,[[["sign",4],["biguint",3]],["bigint",3]]],[11,"from_slice","","Creates and initializes a `BigInt`.",1,[[["sign",4]],["bigint",3]]],[11,"assign_from_slice","","Reinitializes a `BigInt`.",1,[[["sign",4]]]],[11,"from_bytes_be","","Creates and initializes a `BigInt`.",1,[[["sign",4]],["bigint",3]]],[11,"from_bytes_le","","Creates and initializes a `BigInt`.",1,[[["sign",4]],["bigint",3]]],[11,"from_signed_bytes_be","","Creates and initializes a `BigInt` from an array of bytes…",1,[[],["bigint",3]]],[11,"from_signed_bytes_le","","Creates and initializes a `BigInt` from an array of bytes…",1,[[],["bigint",3]]],[11,"parse_bytes","","Creates and initializes a `BigInt`.",1,[[],[["option",4],["bigint",3]]]],[11,"from_radix_be","","Creates and initializes a `BigInt`. Each u8 of the input…",1,[[["sign",4]],[["option",4],["bigint",3]]]],[11,"from_radix_le","","Creates and initializes a `BigInt`. Each u8 of the input…",1,[[["sign",4]],[["option",4],["bigint",3]]]],[11,"to_bytes_be","","Returns the sign and the byte representation of the…",1,[[]]],[11,"to_bytes_le","","Returns the sign and the byte representation of the…",1,[[]]],[11,"to_u32_digits","","Returns the sign and the `u32` digits representation of…",1,[[]]],[11,"to_signed_bytes_be","","Returns the two\'s-complement byte representation of the…",1,[[],["vec",3]]],[11,"to_signed_bytes_le","","Returns the two\'s-complement byte representation of the…",1,[[],["vec",3]]],[11,"to_str_radix","","Returns the integer formatted as a string in the given…",1,[[],["string",3]]],[11,"to_radix_be","","Returns the integer in the requested base in big-endian…",1,[[]]],[11,"to_radix_le","","Returns the integer in the requested base in little-endian…",1,[[]]],[11,"sign","","Returns the sign of the `BigInt` as a `Sign`.",1,[[],["sign",4]]],[11,"bits","","Determines the fewest bits necessary to express the…",1,[[]]],[11,"to_biguint","","Converts this `BigInt` into a `BigUint`, if it\'s not…",1,[[],[["biguint",3],["option",4]]]],[11,"checked_add","","",1,[[["bigint",3]],[["option",4],["bigint",3]]]],[11,"checked_sub","","",1,[[["bigint",3]],[["option",4],["bigint",3]]]],[11,"checked_mul","","",1,[[["bigint",3]],[["option",4],["bigint",3]]]],[11,"checked_div","","",1,[[["bigint",3]],[["option",4],["bigint",3]]]],[11,"modpow","","Returns `(self ^ exponent) mod modulus`",1,[[]]],[11,"sqrt","","Returns the truncated principal square root of `self` --…",1,[[]]],[11,"cbrt","","Returns the truncated principal cube root of `self` -- see…",1,[[]]],[11,"nth_root","","Returns the truncated principal `n`th root of `self` --…",1,[[]]],[11,"new","","Creates and initializes a `BigUint`.",2,[[["vec",3]],["biguint",3]]],[11,"from_slice","","Creates and initializes a `BigUint`.",2,[[],["biguint",3]]],[11,"assign_from_slice","","Assign a value to a `BigUint`.",2,[[]]],[11,"from_bytes_be","","Creates and initializes a `BigUint`.",2,[[],["biguint",3]]],[11,"from_bytes_le","","Creates and initializes a `BigUint`.",2,[[],["biguint",3]]],[11,"parse_bytes","","Creates and initializes a `BigUint`. The input slice must…",2,[[],[["biguint",3],["option",4]]]],[11,"from_radix_be","","Creates and initializes a `BigUint`. Each u8 of the input…",2,[[],[["biguint",3],["option",4]]]],[11,"from_radix_le","","Creates and initializes a `BigUint`. Each u8 of the input…",2,[[],[["biguint",3],["option",4]]]],[11,"to_bytes_be","","Returns the byte representation of the `BigUint` in…",2,[[],["vec",3]]],[11,"to_bytes_le","","Returns the byte representation of the `BigUint` in…",2,[[],["vec",3]]],[11,"to_u32_digits","","Returns the `u32` digits representation of the `BigUint`…",2,[[],["vec",3]]],[11,"to_str_radix","","Returns the integer formatted as a string in the given…",2,[[],["string",3]]],[11,"to_radix_be","","Returns the integer in the requested base in big-endian…",2,[[],["vec",3]]],[11,"to_radix_le","","Returns the integer in the requested base in little-endian…",2,[[],["vec",3]]],[11,"bits","","Determines the fewest bits necessary to express the…",2,[[]]],[11,"modpow","","Returns `(self ^ exponent) % modulus`.",2,[[]]],[11,"sqrt","","Returns the truncated principal square root of `self` --…",2,[[]]],[11,"cbrt","","Returns the truncated principal cube root of `self` -- see…",2,[[]]],[11,"nth_root","","Returns the truncated principal `n`th root of `self` --…",2,[[]]],[8,"ToBigUint","","A generic trait for converting a value to a `BigUint`.",null,null],[10,"to_biguint","","Converts the value of `self` to a `BigUint`.",3,[[],[["biguint",3],["option",4]]]],[8,"ToBigInt","","A generic trait for converting a value to a `BigInt`. This…",null,null],[10,"to_bigint","","Converts the value of `self` to a `BigInt`.",4,[[],[["option",4],["bigint",3]]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"average_floor","","Returns the floor value of the average of `self` and…",2,[[]]],[11,"average_ceil","","Returns the ceil value of the average of `self` and `other`.",2,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"average_floor","","Returns the floor value of the average of `self` and…",1,[[]]],[11,"average_ceil","","Returns the ceil value of the average of `self` and `other`.",1,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_bigint","","",1,[[],[["option",4],["bigint",3]]]],[11,"to_bigint","","",2,[[],[["option",4],["bigint",3]]]],[11,"to_biguint","","",1,[[],[["biguint",3],["option",4]]]],[11,"to_biguint","","",2,[[],[["biguint",3],["option",4]]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[["biguint",3]]]],[11,"from","","",2,[[]]],[11,"from","","",2,[[]]],[11,"from","","",2,[[]]],[11,"from","","",2,[[]]],[11,"from","","",2,[[]]],[11,"from","","",2,[[]]],[11,"clone","","",0,[[],["sign",4]]],[11,"clone","","",1,[[],["bigint",3]]],[11,"clone","","",2,[[],["biguint",3]]],[11,"clone","","",5,[[],["parsebiginterror",3]]],[11,"default","","",1,[[],["bigint",3]]],[11,"default","","",2,[[],["biguint",3]]],[11,"cmp","","",0,[[["sign",4]],["ordering",4]]],[11,"cmp","","",1,[[["bigint",3]],["ordering",4]]],[11,"cmp","","",2,[[["biguint",3]],["ordering",4]]],[11,"eq","","",0,[[["sign",4]]]],[11,"eq","","",1,[[["bigint",3]]]],[11,"eq","","",2,[[["biguint",3]]]],[11,"eq","","",5,[[["parsebiginterror",3]]]],[11,"ne","","",5,[[["parsebiginterror",3]]]],[11,"partial_cmp","","",0,[[["sign",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",1,[[["bigint",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",2,[[["biguint",3]],[["option",4],["ordering",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"div","","",1,[[["bigint",3]],["bigint",3]]],[11,"div","","",1,[[["bigint",3]],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",2,[[["biguint",3]],["biguint",3]]],[11,"div","","",2,[[["biguint",3]],["biguint",3]]],[11,"div","","",2,[[],["biguint",3]]],[11,"div","","",2,[[],["biguint",3]]],[11,"div","","",2,[[],["biguint",3]]],[11,"div","","",2,[[],["biguint",3]]],[11,"div","","",2,[[],["biguint",3]]],[11,"div","","",2,[[],["biguint",3]]],[11,"div","","",2,[[],["biguint",3]]],[11,"div","","",2,[[],["biguint",3]]],[11,"div","","",2,[[],["biguint",3]]],[11,"div","","",2,[[],["biguint",3]]],[11,"div","","",2,[[],["biguint",3]]],[11,"div","","",2,[[],["biguint",3]]],[11,"rem","","",1,[[["bigint",3]],["bigint",3]]],[11,"rem","","",1,[[["bigint",3]],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",2,[[["biguint",3]],["biguint",3]]],[11,"rem","","",2,[[["biguint",3]],["biguint",3]]],[11,"rem","","",2,[[],["biguint",3]]],[11,"rem","","",2,[[],["biguint",3]]],[11,"rem","","",2,[[],["biguint",3]]],[11,"rem","","",2,[[],["biguint",3]]],[11,"rem","","",2,[[],["biguint",3]]],[11,"rem","","",2,[[],["biguint",3]]],[11,"rem","","",2,[[],["biguint",3]]],[11,"rem","","",2,[[],["biguint",3]]],[11,"rem","","",2,[[],["biguint",3]]],[11,"rem","","",2,[[],["biguint",3]]],[11,"rem","","",2,[[],["biguint",3]]],[11,"rem","","",2,[[],["biguint",3]]],[11,"sub","","",1,[[["bigint",3]],["bigint",3]]],[11,"sub","","",1,[[["bigint",3]],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",2,[[["biguint",3]],["biguint",3]]],[11,"sub","","",2,[[["biguint",3]],["biguint",3]]],[11,"sub","","",2,[[],["biguint",3]]],[11,"sub","","",2,[[],["biguint",3]]],[11,"sub","","",2,[[],["biguint",3]]],[11,"sub","","",2,[[],["biguint",3]]],[11,"sub","","",2,[[],["biguint",3]]],[11,"sub","","",2,[[],["biguint",3]]],[11,"sub","","",2,[[],["biguint",3]]],[11,"sub","","",2,[[],["biguint",3]]],[11,"sub","","",2,[[],["biguint",3]]],[11,"sub","","",2,[[],["biguint",3]]],[11,"sub","","",2,[[],["biguint",3]]],[11,"sub","","",2,[[],["biguint",3]]],[11,"add","","",1,[[["bigint",3]],["bigint",3]]],[11,"add","","",1,[[["bigint",3]],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",2,[[["biguint",3]],["biguint",3]]],[11,"add","","",2,[[["biguint",3]],["biguint",3]]],[11,"add","","",2,[[],["biguint",3]]],[11,"add","","",2,[[],["biguint",3]]],[11,"add","","",2,[[],["biguint",3]]],[11,"add","","",2,[[],["biguint",3]]],[11,"add","","",2,[[],["biguint",3]]],[11,"add","","",2,[[],["biguint",3]]],[11,"add","","",2,[[],["biguint",3]]],[11,"add","","",2,[[],["biguint",3]]],[11,"add","","",2,[[],["biguint",3]]],[11,"add","","",2,[[],["biguint",3]]],[11,"add","","",2,[[],["biguint",3]]],[11,"add","","",2,[[],["biguint",3]]],[11,"mul","","",0,[[["sign",4]],["sign",4]]],[11,"mul","","",1,[[["bigint",3]],["bigint",3]]],[11,"mul","","",1,[[["bigint",3]],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",2,[[["biguint",3]],["biguint",3]]],[11,"mul","","",2,[[["biguint",3]],["biguint",3]]],[11,"mul","","",2,[[],["biguint",3]]],[11,"mul","","",2,[[],["biguint",3]]],[11,"mul","","",2,[[],["biguint",3]]],[11,"mul","","",2,[[],["biguint",3]]],[11,"mul","","",2,[[],["biguint",3]]],[11,"mul","","",2,[[],["biguint",3]]],[11,"mul","","",2,[[],["biguint",3]]],[11,"mul","","",2,[[],["biguint",3]]],[11,"mul","","",2,[[],["biguint",3]]],[11,"mul","","",2,[[],["biguint",3]]],[11,"mul","","",2,[[],["biguint",3]]],[11,"mul","","",2,[[],["biguint",3]]],[11,"neg","","Negate Sign value.",0,[[],["sign",4]]],[11,"neg","","",1,[[],["bigint",3]]],[11,"neg","","",2,[[],["biguint",3]]],[11,"add_assign","","",1,[[["bigint",3]]]],[11,"add_assign","","",1,[[["bigint",3]]]],[11,"add_assign","","",1,[[]]],[11,"add_assign","","",1,[[]]],[11,"add_assign","","",1,[[]]],[11,"add_assign","","",1,[[]]],[11,"add_assign","","",1,[[]]],[11,"add_assign","","",1,[[]]],[11,"add_assign","","",1,[[]]],[11,"add_assign","","",1,[[]]],[11,"add_assign","","",1,[[]]],[11,"add_assign","","",1,[[]]],[11,"add_assign","","",1,[[]]],[11,"add_assign","","",1,[[]]],[11,"add_assign","","",2,[[["biguint",3]]]],[11,"add_assign","","",2,[[["biguint",3]]]],[11,"add_assign","","",2,[[]]],[11,"add_assign","","",2,[[]]],[11,"add_assign","","",2,[[]]],[11,"add_assign","","",2,[[]]],[11,"add_assign","","",2,[[]]],[11,"add_assign","","",2,[[]]],[11,"sub_assign","","",1,[[["bigint",3]]]],[11,"sub_assign","","",1,[[["bigint",3]]]],[11,"sub_assign","","",1,[[]]],[11,"sub_assign","","",1,[[]]],[11,"sub_assign","","",1,[[]]],[11,"sub_assign","","",1,[[]]],[11,"sub_assign","","",1,[[]]],[11,"sub_assign","","",1,[[]]],[11,"sub_assign","","",1,[[]]],[11,"sub_assign","","",1,[[]]],[11,"sub_assign","","",1,[[]]],[11,"sub_assign","","",1,[[]]],[11,"sub_assign","","",1,[[]]],[11,"sub_assign","","",1,[[]]],[11,"sub_assign","","",2,[[["biguint",3]]]],[11,"sub_assign","","",2,[[["biguint",3]]]],[11,"sub_assign","","",2,[[]]],[11,"sub_assign","","",2,[[]]],[11,"sub_assign","","",2,[[]]],[11,"sub_assign","","",2,[[]]],[11,"sub_assign","","",2,[[]]],[11,"sub_assign","","",2,[[]]],[11,"mul_assign","","",1,[[["bigint",3]]]],[11,"mul_assign","","",1,[[["bigint",3]]]],[11,"mul_assign","","",1,[[]]],[11,"mul_assign","","",1,[[]]],[11,"mul_assign","","",1,[[]]],[11,"mul_assign","","",1,[[]]],[11,"mul_assign","","",1,[[]]],[11,"mul_assign","","",1,[[]]],[11,"mul_assign","","",1,[[]]],[11,"mul_assign","","",1,[[]]],[11,"mul_assign","","",1,[[]]],[11,"mul_assign","","",1,[[]]],[11,"mul_assign","","",1,[[]]],[11,"mul_assign","","",1,[[]]],[11,"mul_assign","","",2,[[["biguint",3]]]],[11,"mul_assign","","",2,[[["biguint",3]]]],[11,"mul_assign","","",2,[[]]],[11,"mul_assign","","",2,[[]]],[11,"mul_assign","","",2,[[]]],[11,"mul_assign","","",2,[[]]],[11,"mul_assign","","",2,[[]]],[11,"mul_assign","","",2,[[]]],[11,"div_assign","","",1,[[["bigint",3]]]],[11,"div_assign","","",1,[[["bigint",3]]]],[11,"div_assign","","",1,[[]]],[11,"div_assign","","",1,[[]]],[11,"div_assign","","",1,[[]]],[11,"div_assign","","",1,[[]]],[11,"div_assign","","",1,[[]]],[11,"div_assign","","",1,[[]]],[11,"div_assign","","",1,[[]]],[11,"div_assign","","",1,[[]]],[11,"div_assign","","",1,[[]]],[11,"div_assign","","",1,[[]]],[11,"div_assign","","",1,[[]]],[11,"div_assign","","",1,[[]]],[11,"div_assign","","",2,[[["biguint",3]]]],[11,"div_assign","","",2,[[["biguint",3]]]],[11,"div_assign","","",2,[[]]],[11,"div_assign","","",2,[[]]],[11,"div_assign","","",2,[[]]],[11,"div_assign","","",2,[[]]],[11,"div_assign","","",2,[[]]],[11,"div_assign","","",2,[[]]],[11,"rem_assign","","",1,[[["bigint",3]]]],[11,"rem_assign","","",1,[[["bigint",3]]]],[11,"rem_assign","","",1,[[]]],[11,"rem_assign","","",1,[[]]],[11,"rem_assign","","",1,[[]]],[11,"rem_assign","","",1,[[]]],[11,"rem_assign","","",1,[[]]],[11,"rem_assign","","",1,[[]]],[11,"rem_assign","","",1,[[]]],[11,"rem_assign","","",1,[[]]],[11,"rem_assign","","",1,[[]]],[11,"rem_assign","","",1,[[]]],[11,"rem_assign","","",1,[[]]],[11,"rem_assign","","",1,[[]]],[11,"rem_assign","","",2,[[["biguint",3]]]],[11,"rem_assign","","",2,[[["biguint",3]]]],[11,"rem_assign","","",2,[[]]],[11,"rem_assign","","",2,[[]]],[11,"rem_assign","","",2,[[]]],[11,"rem_assign","","",2,[[]]],[11,"rem_assign","","",2,[[]]],[11,"rem_assign","","",2,[[]]],[11,"not","","",1,[[],["bigint",3]]],[11,"bitand","","",1,[[["bigint",3]],["bigint",3]]],[11,"bitand","","",1,[[["bigint",3]],["bigint",3]]],[11,"bitand","","",2,[[["biguint",3]],["biguint",3]]],[11,"bitand","","",2,[[["biguint",3]],["biguint",3]]],[11,"bitor","","",1,[[["bigint",3]],["bigint",3]]],[11,"bitor","","",1,[[["bigint",3]],["bigint",3]]],[11,"bitor","","",2,[[["biguint",3]],["biguint",3]]],[11,"bitor","","",2,[[["biguint",3]],["biguint",3]]],[11,"bitxor","","",1,[[["bigint",3]],["bigint",3]]],[11,"bitxor","","",1,[[["bigint",3]],["bigint",3]]],[11,"bitxor","","",2,[[["biguint",3]],["biguint",3]]],[11,"bitxor","","",2,[[["biguint",3]],["biguint",3]]],[11,"shl","","",1,[[],["bigint",3]]],[11,"shl","","",2,[[],["biguint",3]]],[11,"shr","","",1,[[],["bigint",3]]],[11,"shr","","",2,[[],["biguint",3]]],[11,"bitand_assign","","",1,[[["bigint",3]]]],[11,"bitand_assign","","",1,[[["bigint",3]]]],[11,"bitand_assign","","",2,[[["biguint",3]]]],[11,"bitand_assign","","",2,[[["biguint",3]]]],[11,"bitor_assign","","",1,[[["bigint",3]]]],[11,"bitor_assign","","",1,[[["bigint",3]]]],[11,"bitor_assign","","",2,[[["biguint",3]]]],[11,"bitor_assign","","",2,[[["biguint",3]]]],[11,"bitxor_assign","","",1,[[["bigint",3]]]],[11,"bitxor_assign","","",1,[[["bigint",3]]]],[11,"bitxor_assign","","",2,[[["biguint",3]]]],[11,"bitxor_assign","","",2,[[["biguint",3]]]],[11,"shl_assign","","",1,[[]]],[11,"shl_assign","","",2,[[]]],[11,"shr_assign","","",1,[[]]],[11,"shr_assign","","",2,[[]]],[11,"hash","","",0,[[]]],[11,"hash","","",1,[[]]],[11,"hash","","",2,[[]]],[11,"from_str","","",1,[[],[["parsebiginterror",3],["result",4],["bigint",3]]]],[11,"from_str","","",2,[[],[["result",4],["parsebiginterror",3],["biguint",3]]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"sum","","",1,[[]]],[11,"sum","","",2,[[]]],[11,"product","","",1,[[]]],[11,"product","","",2,[[]]],[11,"description","","",5,[[]]],[11,"nth_root","","",1,[[]]],[11,"sqrt","","",1,[[]]],[11,"cbrt","","",1,[[]]],[11,"nth_root","","",2,[[]]],[11,"sqrt","","",2,[[]]],[11,"cbrt","","",2,[[]]],[11,"div_rem","","",1,[[["bigint",3]]]],[11,"div_floor","","",1,[[["bigint",3]],["bigint",3]]],[11,"mod_floor","","",1,[[["bigint",3]],["bigint",3]]],[11,"div_mod_floor","","",1,[[["bigint",3]]]],[11,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number…",1,[[["bigint",3]],["bigint",3]]],[11,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number…",1,[[["bigint",3]],["bigint",3]]],[11,"divides","","Deprecated, use `is_multiple_of` instead.",1,[[["bigint",3]]]],[11,"is_multiple_of","","Returns `true` if the number is a multiple of `other`.",1,[[["bigint",3]]]],[11,"is_even","","Returns `true` if the number is divisible by `2`.",1,[[]]],[11,"is_odd","","Returns `true` if the number is not divisible by `2`.",1,[[]]],[11,"div_rem","","",2,[[["biguint",3]]]],[11,"div_floor","","",2,[[["biguint",3]],["biguint",3]]],[11,"mod_floor","","",2,[[["biguint",3]],["biguint",3]]],[11,"div_mod_floor","","",2,[[["biguint",3]]]],[11,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number…",2,[[]]],[11,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number…",2,[[["biguint",3]],["biguint",3]]],[11,"divides","","Deprecated, use `is_multiple_of` instead.",2,[[["biguint",3]]]],[11,"is_multiple_of","","Returns `true` if the number is a multiple of `other`.",2,[[["biguint",3]]]],[11,"is_even","","Returns `true` if the number is divisible by `2`.",2,[[]]],[11,"is_odd","","Returns `true` if the number is not divisible by `2`.",2,[[]]],[11,"to_i64","","",1,[[],["option",4]]],[11,"to_i128","","",1,[[],["option",4]]],[11,"to_u64","","",1,[[],["option",4]]],[11,"to_u128","","",1,[[],["option",4]]],[11,"to_f32","","",1,[[],["option",4]]],[11,"to_f64","","",1,[[],["option",4]]],[11,"to_i64","","",2,[[],["option",4]]],[11,"to_i128","","",2,[[],["option",4]]],[11,"to_u64","","",2,[[],["option",4]]],[11,"to_u128","","",2,[[],["option",4]]],[11,"to_f32","","",2,[[],["option",4]]],[11,"to_f64","","",2,[[],["option",4]]],[11,"from_i64","","",1,[[],[["option",4],["bigint",3]]]],[11,"from_i128","","",1,[[],[["option",4],["bigint",3]]]],[11,"from_u64","","",1,[[],[["option",4],["bigint",3]]]],[11,"from_u128","","",1,[[],[["option",4],["bigint",3]]]],[11,"from_f64","","",1,[[],[["option",4],["bigint",3]]]],[11,"from_i64","","",2,[[],[["biguint",3],["option",4]]]],[11,"from_i128","","",2,[[],[["biguint",3],["option",4]]]],[11,"from_u64","","",2,[[],[["biguint",3],["option",4]]]],[11,"from_u128","","",2,[[],[["biguint",3],["option",4]]]],[11,"from_f64","","",2,[[],[["biguint",3],["option",4]]]],[11,"from_str_radix","","Creates and initializes a BigInt.",1,[[],[["parsebiginterror",3],["result",4],["bigint",3]]]],[11,"from_str_radix","","Creates and initializes a `BigUint`.",2,[[],[["result",4],["parsebiginterror",3],["biguint",3]]]],[11,"zero","","",1,[[],["bigint",3]]],[11,"set_zero","","",1,[[]]],[11,"is_zero","","",1,[[]]],[11,"zero","","",2,[[],["biguint",3]]],[11,"set_zero","","",2,[[]]],[11,"is_zero","","",2,[[]]],[11,"one","","",1,[[],["bigint",3]]],[11,"set_one","","",1,[[]]],[11,"is_one","","",1,[[]]],[11,"one","","",2,[[],["biguint",3]]],[11,"set_one","","",2,[[]]],[11,"is_one","","",2,[[]]],[11,"checked_add","","",1,[[["bigint",3]],[["option",4],["bigint",3]]]],[11,"checked_add","","",2,[[["biguint",3]],[["biguint",3],["option",4]]]],[11,"checked_sub","","",1,[[["bigint",3]],[["option",4],["bigint",3]]]],[11,"checked_sub","","",2,[[["biguint",3]],[["biguint",3],["option",4]]]],[11,"checked_mul","","",1,[[["bigint",3]],[["option",4],["bigint",3]]]],[11,"checked_mul","","",2,[[["biguint",3]],[["biguint",3],["option",4]]]],[11,"checked_div","","",1,[[["bigint",3]],[["option",4],["bigint",3]]]],[11,"checked_div","","",2,[[["biguint",3]],[["biguint",3],["option",4]]]],[11,"abs","","",1,[[],["bigint",3]]],[11,"abs_sub","","",1,[[["bigint",3]],["bigint",3]]],[11,"signum","","",1,[[],["bigint",3]]],[11,"is_positive","","",1,[[]]],[11,"is_negative","","",1,[[]]]],"p":[[4,"Sign"],[3,"BigInt"],[3,"BigUint"],[8,"ToBigUint"],[8,"ToBigInt"],[3,"ParseBigIntError"]]},\
"num_complex":{"doc":"Complex numbers.","i":[[3,"Complex","num_complex","A complex number in Cartesian form.",null,null],[12,"re","","Real portion of the complex number",0,null],[12,"im","","Imaginary portion of the complex number",0,null],[3,"ParseComplexError","","",null,null],[6,"Complex32","","",null,null],[6,"Complex64","","",null,null],[11,"new","","Create a new Complex",0,[[]]],[11,"i","","Returns imaginary unit",0,[[]]],[11,"norm_sqr","","Returns the square of the norm (since `T` doesn\'t…",0,[[]]],[11,"scale","","Multiplies `self` by the scalar `t`.",0,[[]]],[11,"unscale","","Divides `self` by the scalar `t`.",0,[[]]],[11,"powu","","Raises `self` to an unsigned integer power.",0,[[]]],[11,"conj","","Returns the complex conjugate. i.e. `re - i im`",0,[[]]],[11,"inv","","Returns `1/self`",0,[[]]],[11,"powi","","Raises `self` to a signed integer power.",0,[[]]],[11,"l1_norm","","Returns the L1 norm `|re| + |im|` -- the Manhattan…",0,[[]]],[11,"norm","","Calculate |self|",0,[[]]],[11,"arg","","Calculate the principal Arg of self.",0,[[]]],[11,"to_polar","","Convert to polar form (r, theta), such that `self = r *…",0,[[]]],[11,"from_polar","","Convert a polar representation into a complex number.",0,[[]]],[11,"exp","","Computes `e^(self)`, where `e` is the base of the natural…",0,[[]]],[11,"ln","","Computes the principal value of natural logarithm of `self`.",0,[[]]],[11,"sqrt","","Computes the principal value of the square root of `self`.",0,[[]]],[11,"cbrt","","Computes the principal value of the cube root of `self`.",0,[[]]],[11,"powf","","Raises `self` to a floating point power.",0,[[]]],[11,"log","","Returns the logarithm of `self` with respect to an…",0,[[]]],[11,"powc","","Raises `self` to a complex power.",0,[[]]],[11,"expf","","Raises a floating point number to the complex power `self`.",0,[[]]],[11,"sin","","Computes the sine of `self`.",0,[[]]],[11,"cos","","Computes the cosine of `self`.",0,[[]]],[11,"tan","","Computes the tangent of `self`.",0,[[]]],[11,"asin","","Computes the principal value of the inverse sine of `self`.",0,[[]]],[11,"acos","","Computes the principal value of the inverse cosine of…",0,[[]]],[11,"atan","","Computes the principal value of the inverse tangent of…",0,[[]]],[11,"sinh","","Computes the hyperbolic sine of `self`.",0,[[]]],[11,"cosh","","Computes the hyperbolic cosine of `self`.",0,[[]]],[11,"tanh","","Computes the hyperbolic tangent of `self`.",0,[[]]],[11,"asinh","","Computes the principal value of inverse hyperbolic sine of…",0,[[]]],[11,"acosh","","Computes the principal value of inverse hyperbolic cosine…",0,[[]]],[11,"atanh","","Computes the principal value of inverse hyperbolic tangent…",0,[[]]],[11,"finv","","Returns `1/self` using floating-point operations.",0,[[],["complex",3]]],[11,"fdiv","","Returns `self/other` using floating-point operations.",0,[[["complex",3]],["complex",3]]],[11,"is_nan","","Checks if the given complex number is NaN",0,[[]]],[11,"is_infinite","","Checks if the given complex number is infinite",0,[[]]],[11,"is_finite","","Checks if the given complex number is finite",0,[[]]],[11,"is_normal","","Checks if the given complex number is normal",0,[[]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"to_string","","",1,[[],["string",3]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"div","","",0,[[["complex",3]]]],[11,"div","","",0,[[]]],[11,"div","","",0,[[]]],[11,"div","","",0,[[]]],[11,"rem","","",0,[[["complex",3]]]],[11,"rem","","",0,[[]]],[11,"rem","","",0,[[]]],[11,"rem","","",0,[[]]],[11,"sub","","",0,[[["complex",3]]]],[11,"sub","","",0,[[]]],[11,"sub","","",0,[[]]],[11,"sub","","",0,[[]]],[11,"eq","","",0,[[["complex",3]]]],[11,"ne","","",0,[[["complex",3]]]],[11,"eq","","",1,[[["parsecomplexerror",3]]]],[11,"ne","","",1,[[["parsecomplexerror",3]]]],[11,"add","","",0,[[["complex",3]]]],[11,"add","","",0,[[]]],[11,"add","","",0,[[]]],[11,"add","","",0,[[]]],[11,"mul","","",0,[[["complex",3]]]],[11,"mul","","",0,[[]]],[11,"mul","","",0,[[]]],[11,"mul","","",0,[[]]],[11,"neg","","",0,[[]]],[11,"add_assign","","",0,[[]]],[11,"add_assign","","",0,[[]]],[11,"add_assign","","",0,[[]]],[11,"add_assign","","",0,[[]]],[11,"sub_assign","","",0,[[]]],[11,"sub_assign","","",0,[[]]],[11,"sub_assign","","",0,[[]]],[11,"sub_assign","","",0,[[]]],[11,"mul_assign","","",0,[[]]],[11,"mul_assign","","",0,[[]]],[11,"mul_assign","","",0,[[]]],[11,"mul_assign","","",0,[[]]],[11,"div_assign","","",0,[[]]],[11,"div_assign","","",0,[[]]],[11,"div_assign","","",0,[[]]],[11,"div_assign","","",0,[[]]],[11,"rem_assign","","",0,[[]]],[11,"rem_assign","","",0,[[]]],[11,"rem_assign","","",0,[[]]],[11,"rem_assign","","",0,[[]]],[11,"hash","","",0,[[]]],[11,"from_str","","Parses `a +/- bi`; `ai +/- b`; `a`; or `bi` where `a` and…",0,[[],["result",4]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"sum","","",0,[[]]],[11,"sum","","",0,[[]]],[11,"product","","",0,[[]]],[11,"product","","",0,[[]]],[11,"clone","","",0,[[],["complex",3]]],[11,"default","","",0,[[],["complex",3]]],[11,"description","","",1,[[]]],[11,"to_usize","","",0,[[],["option",4]]],[11,"to_isize","","",0,[[],["option",4]]],[11,"to_u8","","",0,[[],["option",4]]],[11,"to_u16","","",0,[[],["option",4]]],[11,"to_u32","","",0,[[],["option",4]]],[11,"to_u64","","",0,[[],["option",4]]],[11,"to_i8","","",0,[[],["option",4]]],[11,"to_i16","","",0,[[],["option",4]]],[11,"to_i32","","",0,[[],["option",4]]],[11,"to_i64","","",0,[[],["option",4]]],[11,"to_u128","","",0,[[],["option",4]]],[11,"to_i128","","",0,[[],["option",4]]],[11,"to_f32","","",0,[[],["option",4]]],[11,"to_f64","","",0,[[],["option",4]]],[11,"from_usize","","",0,[[],["option",4]]],[11,"from_isize","","",0,[[],["option",4]]],[11,"from_u8","","",0,[[],["option",4]]],[11,"from_u16","","",0,[[],["option",4]]],[11,"from_u32","","",0,[[],["option",4]]],[11,"from_u64","","",0,[[],["option",4]]],[11,"from_i8","","",0,[[],["option",4]]],[11,"from_i16","","",0,[[],["option",4]]],[11,"from_i32","","",0,[[],["option",4]]],[11,"from_i64","","",0,[[],["option",4]]],[11,"from_u128","","",0,[[],["option",4]]],[11,"from_i128","","",0,[[],["option",4]]],[11,"from_f32","","",0,[[],["option",4]]],[11,"from_f64","","",0,[[],["option",4]]],[11,"from","","",0,[[["toprimitive",8]],["option",4]]],[11,"as_","","",0,[[]]],[11,"from_str_radix","","Parses `a +/- bi`; `ai +/- b`; `a`; or `bi` where `a` and…",0,[[],["result",4]]],[11,"zero","","",0,[[]]],[11,"is_zero","","",0,[[]]],[11,"set_zero","","",0,[[]]],[11,"one","","",0,[[]]],[11,"is_one","","",0,[[]]],[11,"set_one","","",0,[[]]],[11,"inv","","",0,[[]]],[11,"mul_add","","",0,[[["complex",3]],["complex",3]]],[11,"mul_add_assign","","",0,[[["complex",3]]]],[11,"mul_add_assign","","",0,[[["complex",3]]]],[11,"pow","","",0,[[]]],[11,"pow","","",0,[[]]],[11,"pow","","",0,[[]]],[11,"pow","","",0,[[]]],[11,"pow","","",0,[[["complex",3]]]],[11,"pow","","",0,[[["complex",3]]]]],"p":[[3,"Complex"],[3,"ParseComplexError"]]},\
"num_integer":{"doc":"Integer trait and functions.","i":[[3,"ExtendedGcd","num_integer","Greatest common divisor and Bézout coefficients",null,null],[12,"gcd","","",0,null],[12,"x","","",0,null],[12,"y","","",0,null],[3,"IterBinomial","","An iterator over binomial coefficients.",null,null],[5,"cbrt","","Returns the truncated principal cube root of an integer --…",null,[[["roots",8]],["roots",8]]],[5,"nth_root","","Returns the truncated principal `n`th root of an integer…",null,[[["roots",8]],["roots",8]]],[5,"sqrt","","Returns the truncated principal square root of an integer…",null,[[["roots",8]],["roots",8]]],[5,"average_ceil","","Returns the ceiling value of the average of `x` and `y` --…",null,[[["average",8]],["average",8]]],[5,"average_floor","","Returns the floor value of the average of `x` and `y` --…",null,[[["average",8]],["average",8]]],[5,"div_rem","","Simultaneous integer division and modulus",null,[[["integer",8]]]],[5,"div_floor","","Floored integer division",null,[[["integer",8]],["integer",8]]],[5,"mod_floor","","Floored integer modulus",null,[[["integer",8]],["integer",8]]],[5,"div_mod_floor","","Simultaneous floored integer division and modulus",null,[[["integer",8]]]],[5,"div_ceil","","Ceiled integer division",null,[[["integer",8]],["integer",8]]],[5,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number…",null,[[["integer",8]],["integer",8]]],[5,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number…",null,[[["integer",8]],["integer",8]]],[5,"gcd_lcm","","Calculates the Greatest Common Divisor (GCD) and Lowest…",null,[[["integer",8]]]],[5,"binomial","","Calculate the binomial coefficient.",null,[[["integer",8],["clone",8]],[["integer",8],["clone",8]]]],[5,"multinomial","","Calculate the multinomial coefficient.",null,[[],[["integer",8],["clone",8]]]],[8,"Roots","","Provides methods to compute an integer\'s square root, cube…",null,null],[10,"nth_root","","Returns the truncated principal `n`th root of an integer…",1,[[]]],[11,"sqrt","","Returns the truncated principal square root of an integer…",1,[[]]],[11,"cbrt","","Returns the truncated principal cube root of an integer --…",1,[[]]],[8,"Average","","Provides methods to compute the average of two integers,…",null,null],[10,"average_ceil","","Returns the ceiling value of the average of `self` and…",2,[[]]],[10,"average_floor","","Returns the floor value of the average of `self` and…",2,[[]]],[8,"Integer","","",null,null],[10,"div_floor","","Floored integer division.",3,[[]]],[10,"mod_floor","","Floored integer modulo, satisfying:",3,[[]]],[11,"div_ceil","","Ceiled integer division.",3,[[]]],[10,"gcd","","Greatest Common Divisor (GCD).",3,[[]]],[10,"lcm","","Lowest Common Multiple (LCM).",3,[[]]],[11,"gcd_lcm","","Greatest Common Divisor (GCD) and Lowest Common Multiple…",3,[[]]],[11,"extended_gcd","","Greatest common divisor and Bézout coefficients.",3,[[],["extendedgcd",3]]],[11,"extended_gcd_lcm","","Greatest common divisor, least common multiple, and Bézout…",3,[[]]],[10,"divides","","Deprecated, use `is_multiple_of` instead.",3,[[]]],[10,"is_multiple_of","","Returns `true` if `self` is a multiple of `other`.",3,[[]]],[10,"is_even","","Returns `true` if the number is even.",3,[[]]],[10,"is_odd","","Returns `true` if the number is odd.",3,[[]]],[10,"div_rem","","Simultaneous truncated integer division and modulus.…",3,[[]]],[11,"div_mod_floor","","Simultaneous floored integer division and modulus. Returns…",3,[[]]],[11,"next_multiple_of","","Rounds up to nearest multiple of argument.",3,[[]]],[11,"prev_multiple_of","","Rounds down to nearest multiple of argument.",3,[[]]],[11,"new","","For a given n, iterate over all binomial coefficients…",4,[[],["iterbinomial",3]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"into_iter","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"eq","","",0,[[["extendedgcd",3]]]],[11,"ne","","",0,[[["extendedgcd",3]]]],[11,"next","","",4,[[],["option",4]]],[11,"clone","","",0,[[],["extendedgcd",3]]],[11,"sqrt","","Returns the truncated principal square root of an integer…",1,[[]]],[11,"cbrt","","Returns the truncated principal cube root of an integer --…",1,[[]]]],"p":[[3,"ExtendedGcd"],[8,"Roots"],[8,"Average"],[8,"Integer"],[3,"IterBinomial"]]},\
"num_traits":{"doc":"Numeric traits for generic mathematics","i":[[3,"ParseFloatError","num_traits","",null,null],[12,"kind","","",0,null],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",1,null],[13,"Invalid","","",1,null],[5,"clamp","","A value bounded by a minimum and a maximum",null,[[["partialord",8]],["partialord",8]]],[5,"clamp_min","","A value bounded by a minimum value",null,[[["partialord",8]],["partialord",8]]],[5,"clamp_max","","A value bounded by a maximum value",null,[[["partialord",8]],["partialord",8]]],[0,"bounds","","",null,null],[8,"Bounded","num_traits::bounds","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",2,[[]]],[10,"max_value","","returns the largest finite number this type can represent",2,[[]]],[0,"cast","num_traits","",null,null],[5,"cast","num_traits::cast","Cast from one machine scalar to another.",null,[[["numcast",8]],[["option",4],["numcast",8]]]],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`. If the value…",3,[[],["option",4]]],[11,"to_i8","","Converts the value of `self` to an `i8`. If the value…",3,[[],["option",4]]],[11,"to_i16","","Converts the value of `self` to an `i16`. If the value…",3,[[],["option",4]]],[11,"to_i32","","Converts the value of `self` to an `i32`. If the value…",3,[[],["option",4]]],[10,"to_i64","","Converts the value of `self` to an `i64`. If the value…",3,[[],["option",4]]],[11,"to_i128","","Converts the value of `self` to an `i128`. If the value…",3,[[],["option",4]]],[11,"to_usize","","Converts the value of `self` to a `usize`. If the value…",3,[[],["option",4]]],[11,"to_u8","","Converts the value of `self` to a `u8`. If the value…",3,[[],["option",4]]],[11,"to_u16","","Converts the value of `self` to a `u16`. If the value…",3,[[],["option",4]]],[11,"to_u32","","Converts the value of `self` to a `u32`. If the value…",3,[[],["option",4]]],[10,"to_u64","","Converts the value of `self` to a `u64`. If the value…",3,[[],["option",4]]],[11,"to_u128","","Converts the value of `self` to a `u128`. If the value…",3,[[],["option",4]]],[11,"to_f32","","Converts the value of `self` to an `f32`. If the value…",3,[[],["option",4]]],[11,"to_f64","","Converts the value of `self` to an `f64`. If the value…",3,[[],["option",4]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an `isize` to return an optional value of this…",4,[[],["option",4]]],[11,"from_i8","","Converts an `i8` to return an optional value of this type.…",4,[[],["option",4]]],[11,"from_i16","","Converts an `i16` to return an optional value of this…",4,[[],["option",4]]],[11,"from_i32","","Converts an `i32` to return an optional value of this…",4,[[],["option",4]]],[10,"from_i64","","Converts an `i64` to return an optional value of this…",4,[[],["option",4]]],[11,"from_i128","","Converts an `i128` to return an optional value of this…",4,[[],["option",4]]],[11,"from_usize","","Converts a `usize` to return an optional value of this…",4,[[],["option",4]]],[11,"from_u8","","Converts an `u8` to return an optional value of this type.…",4,[[],["option",4]]],[11,"from_u16","","Converts an `u16` to return an optional value of this…",4,[[],["option",4]]],[11,"from_u32","","Converts an `u32` to return an optional value of this…",4,[[],["option",4]]],[10,"from_u64","","Converts an `u64` to return an optional value of this…",4,[[],["option",4]]],[11,"from_u128","","Converts an `u128` to return an optional value of this…",4,[[],["option",4]]],[11,"from_f32","","Converts a `f32` to return an optional value of this type.…",4,[[],["option",4]]],[11,"from_f64","","Converts a `f64` to return an optional value of this type.…",4,[[],["option",4]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted…",5,[[["toprimitive",8]],["option",4]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars…",null,null],[10,"as_","","Convert a value to another, using the `as` operator.",6,[[]]],[0,"float","num_traits","",null,null],[8,"FloatCore","num_traits::float","Generic trait for floating point numbers that works with…",null,null],[10,"infinity","","Returns positive infinity.",7,[[]]],[10,"neg_infinity","","Returns negative infinity.",7,[[]]],[10,"nan","","Returns NaN.",7,[[]]],[10,"neg_zero","","Returns `-0.0`.",7,[[]]],[10,"min_value","","Returns the smallest finite value that this type can…",7,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",7,[[]]],[10,"epsilon","","Returns epsilon, a small positive value.",7,[[]]],[10,"max_value","","Returns the largest finite value that this type can…",7,[[]]],[11,"is_nan","","Returns `true` if the number is NaN.",7,[[]]],[11,"is_infinite","","Returns `true` if the number is infinite.",7,[[]]],[11,"is_finite","","Returns `true` if the number is neither infinite or NaN.",7,[[]]],[11,"is_normal","","Returns `true` if the number is neither zero, infinite,…",7,[[]]],[10,"classify","","Returns the floating point category of the number. If only…",7,[[],["fpcategory",4]]],[11,"floor","","Returns the largest integer less than or equal to a number.",7,[[]]],[11,"ceil","","Returns the smallest integer greater than or equal to a…",7,[[]]],[11,"round","","Returns the nearest integer to a number. Round half-way…",7,[[]]],[11,"trunc","","Return the integer part of a number.",7,[[]]],[11,"fract","","Returns the fractional part of a number.",7,[[]]],[11,"abs","","Computes the absolute value of `self`. Returns…",7,[[]]],[11,"signum","","Returns a number that represents the sign of `self`.",7,[[]]],[11,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and…",7,[[]]],[11,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and…",7,[[]]],[11,"min","","Returns the minimum of the two numbers.",7,[[]]],[11,"max","","Returns the maximum of the two numbers.",7,[[]]],[11,"recip","","Returns the reciprocal (multiplicative inverse) of the…",7,[[]]],[11,"powi","","Raise a number to an integer power.",7,[[]]],[10,"to_degrees","","Converts to degrees, assuming the number is in radians.",7,[[]]],[10,"to_radians","","Converts to radians, assuming the number is in degrees.",7,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",7,[[]]],[8,"Float","","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the `NaN` value.",8,[[]]],[10,"infinity","","Returns the infinite value.",8,[[]]],[10,"neg_infinity","","Returns the negative infinite value.",8,[[]]],[10,"neg_zero","","Returns `-0.0`.",8,[[]]],[10,"min_value","","Returns the smallest finite value that this type can…",8,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",8,[[]]],[11,"epsilon","","Returns epsilon, a small positive value.",8,[[]]],[10,"max_value","","Returns the largest finite value that this type can…",8,[[]]],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",8,[[]]],[10,"is_infinite","","Returns `true` if this value is positive infinity or…",8,[[]]],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",8,[[]]],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,…",8,[[]]],[10,"classify","","Returns the floating point category of the number. If only…",8,[[],["fpcategory",4]]],[10,"floor","","Returns the largest integer less than or equal to a number.",8,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a…",8,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way…",8,[[]]],[10,"trunc","","Return the integer part of a number.",8,[[]]],[10,"fract","","Returns the fractional part of a number.",8,[[]]],[10,"abs","","Computes the absolute value of `self`. Returns…",8,[[]]],[10,"signum","","Returns a number that represents the sign of `self`.",8,[[]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`,…",8,[[]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`,…",8,[[]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only…",8,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",8,[[]]],[10,"powi","","Raise a number to an integer power.",8,[[]]],[10,"powf","","Raise a number to a floating point power.",8,[[]]],[10,"sqrt","","Take the square root of a number.",8,[[]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",8,[[]]],[10,"exp2","","Returns `2^(self)`.",8,[[]]],[10,"ln","","Returns the natural logarithm of the number.",8,[[]]],[10,"log","","Returns the logarithm of the number with respect to an…",8,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",8,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",8,[[]]],[11,"to_degrees","","Converts radians to degrees.",8,[[]]],[11,"to_radians","","Converts degrees to radians.",8,[[]]],[10,"max","","Returns the maximum of the two numbers.",8,[[]]],[10,"min","","Returns the minimum of the two numbers.",8,[[]]],[10,"abs_sub","","The positive difference of two numbers.",8,[[]]],[10,"cbrt","","Take the cubic root of a number.",8,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle…",8,[[]]],[10,"sin","","Computes the sine of a number (in radians).",8,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",8,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",8,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in…",8,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in…",8,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in…",8,[[]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and…",8,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number,…",8,[[]]],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if…",8,[[]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than…",8,[[]]],[10,"sinh","","Hyperbolic sine function.",8,[[]]],[10,"cosh","","Hyperbolic cosine function.",8,[[]]],[10,"tanh","","Hyperbolic tangent function.",8,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",8,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",8,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",8,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",8,[[]]],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",9,[[]]],[10,"FRAC_1_PI","","Return `1.0 / π`.",9,[[]]],[10,"FRAC_1_SQRT_2","","Return `1.0 / sqrt(2.0)`.",9,[[]]],[10,"FRAC_2_PI","","Return `2.0 / π`.",9,[[]]],[10,"FRAC_2_SQRT_PI","","Return `2.0 / sqrt(π)`.",9,[[]]],[10,"FRAC_PI_2","","Return `π / 2.0`.",9,[[]]],[10,"FRAC_PI_3","","Return `π / 3.0`.",9,[[]]],[10,"FRAC_PI_4","","Return `π / 4.0`.",9,[[]]],[10,"FRAC_PI_6","","Return `π / 6.0`.",9,[[]]],[10,"FRAC_PI_8","","Return `π / 8.0`.",9,[[]]],[10,"LN_10","","Return `ln(10.0)`.",9,[[]]],[10,"LN_2","","Return `ln(2.0)`.",9,[[]]],[10,"LOG10_E","","Return `log10(e)`.",9,[[]]],[10,"LOG2_E","","Return `log2(e)`.",9,[[]]],[10,"PI","","Return Archimedes’ constant `π`.",9,[[]]],[10,"SQRT_2","","Return `sqrt(2.0)`.",9,[[]]],[11,"TAU","","Return the full circle constant `τ`.",9,[[]]],[11,"LOG10_2","","Return `log10(2.0)`.",9,[[]]],[11,"LOG2_10","","Return `log2(10.0)`.",9,[[]]],[0,"identities","num_traits","",null,null],[5,"zero","num_traits::identities","Returns the additive identity, `0`.",null,[[],["zero",8]]],[5,"one","","Returns the multiplicative identity, `1`.",null,[[],["one",8]]],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`.",10,[[]]],[11,"set_zero","","Sets `self` to the additive identity element of `Self`, `0`.",10,[[]]],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",10,[[]]],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",11,[[]]],[11,"set_one","","Sets `self` to the multiplicative identity element of…",11,[[]]],[11,"is_one","","Returns `true` if `self` is equal to the multiplicative…",11,[[]]],[0,"int","num_traits","",null,null],[8,"PrimInt","num_traits::int","Generic trait for primitive integers.",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of…",12,[[]]],[10,"count_zeros","","Returns the number of zeros in the binary representation…",12,[[]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary…",12,[[]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary…",12,[[]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount, `n`,…",12,[[]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount, `n`,…",12,[[]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount, `n`,…",12,[[]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount, `n`,…",12,[[]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount, `n`,…",12,[[]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount, `n`,…",12,[[]]],[10,"swap_bytes","","Reverses the byte order of the integer.",12,[[]]],[10,"from_be","","Convert an integer from big endian to the target\'s…",12,[[]]],[10,"from_le","","Convert an integer from little endian to the target\'s…",12,[[]]],[10,"to_be","","Convert `self` to big endian from the target\'s endianness.",12,[[]]],[10,"to_le","","Convert `self` to little endian from the target\'s…",12,[[]]],[10,"pow","","Raises self to the power of `exp`, using exponentiation by…",12,[[]]],[0,"ops","num_traits","",null,null],[0,"checked","num_traits::ops","",null,null],[8,"CheckedAdd","num_traits::ops::checked","Performs addition that returns `None` instead of wrapping…",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow…",13,[[],["option",4]]],[8,"CheckedSub","","Performs subtraction that returns `None` instead of…",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If…",14,[[],["option",4]]],[8,"CheckedMul","","Performs multiplication that returns `None` instead of…",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or…",15,[[],["option",4]]],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking…",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and…",16,[[],["option",4]]],[8,"CheckedRem","","Performs an integral remainder that returns `None` instead…",null,null],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for…",17,[[],["option",4]]],[8,"CheckedNeg","","Performs negation that returns `None` if the result can\'t…",null,null],[10,"checked_neg","","Negates a number, returning `None` for results that can\'t…",18,[[],["option",4]]],[8,"CheckedShl","","Performs a left shift that returns `None` on shifts larger…",null,null],[10,"checked_shl","","Checked shift left. Computes `self << rhs`, returning…",19,[[],["option",4]]],[8,"CheckedShr","","Performs a right shift that returns `None` on shifts…",null,null],[10,"checked_shr","","Checked shift right. Computes `self >> rhs`, returning…",20,[[],["option",4]]],[0,"inv","num_traits::ops","",null,null],[8,"Inv","num_traits::ops::inv","Unary operator for retrieving the multiplicative inverse,…",null,null],[16,"Output","","The result after applying the operator.",21,null],[10,"inv","","Returns the multiplicative inverse of `self`.",21,[[]]],[0,"mul_add","num_traits::ops","",null,null],[8,"MulAdd","num_traits::ops::mul_add","Fused multiply-add. Computes `(self * a) + b` with only…",null,null],[16,"Output","","The resulting type after applying the fused multiply-add.",22,null],[10,"mul_add","","Performs the fused multiply-add operation.",22,[[]]],[8,"MulAddAssign","","The fused multiply-add assignment operation.",null,null],[10,"mul_add_assign","","Performs the fused multiply-add operation.",23,[[]]],[0,"saturating","num_traits::ops","",null,null],[8,"Saturating","num_traits::ops::saturating","Saturating math operations. Deprecated, use…",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at…",24,[[]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating…",24,[[]]],[8,"SaturatingAdd","","Performs addition that saturates at the numeric bounds…",null,null],[10,"saturating_add","","Saturating addition. Computes `self + other`, saturating…",25,[[]]],[8,"SaturatingSub","","Performs subtraction that saturates at the numeric bounds…",null,null],[10,"saturating_sub","","Saturating subtraction. Computes `self - other`,…",26,[[]]],[8,"SaturatingMul","","Performs multiplication that saturates at the numeric…",null,null],[10,"saturating_mul","","Saturating multiplication. Computes `self * other`,…",27,[[]]],[0,"wrapping","num_traits::ops","",null,null],[8,"WrappingAdd","num_traits::ops::wrapping","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes `self + other`,…",28,[[]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes `self - other`,…",29,[[]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes `self *…",30,[[]]],[8,"WrappingNeg","","Performs a negation that does not panic.",null,null],[10,"wrapping_neg","","Wrapping (modular) negation. Computes `-self`, wrapping…",31,[[]]],[8,"WrappingShl","","Performs a left shift that does not panic.",null,null],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields `self << mask(rhs)`,…",32,[[]]],[8,"WrappingShr","","Performs a right shift that does not panic.",null,null],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields `self >>…",33,[[]]],[0,"pow","num_traits","",null,null],[5,"pow","num_traits::pow","Raises a value to the power of exp, using exponentiation…",null,[[["mul",8],["one",8],["clone",8]],[["one",8],["mul",8],["clone",8]]]],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an…",null,[[["one",8],["checkedmul",8],["clone",8]],[["option",4],["one",8],["checkedmul",8],["clone",8]]]],[8,"Pow","","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",34,null],[10,"pow","","Returns `self` to the power `rhs`.",34,[[]]],[0,"real","num_traits","",null,null],[8,"Real","num_traits::real","A trait for real number types that do not necessarily have…",null,null],[10,"min_value","","Returns the smallest finite value that this type can…",35,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",35,[[]]],[10,"epsilon","","Returns epsilon, a small positive value.",35,[[]]],[10,"max_value","","Returns the largest finite value that this type can…",35,[[]]],[10,"floor","","Returns the largest integer less than or equal to a number.",35,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a…",35,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way…",35,[[]]],[10,"trunc","","Return the integer part of a number.",35,[[]]],[10,"fract","","Returns the fractional part of a number.",35,[[]]],[10,"abs","","Computes the absolute value of `self`. Returns…",35,[[]]],[10,"signum","","Returns a number that represents the sign of `self`.",35,[[]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`,…",35,[[]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`,…",35,[[]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only…",35,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",35,[[]]],[10,"powi","","Raise a number to an integer power.",35,[[]]],[10,"powf","","Raise a number to a real number power.",35,[[]]],[10,"sqrt","","Take the square root of a number.",35,[[]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",35,[[]]],[10,"exp2","","Returns `2^(self)`.",35,[[]]],[10,"ln","","Returns the natural logarithm of the number.",35,[[]]],[10,"log","","Returns the logarithm of the number with respect to an…",35,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",35,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",35,[[]]],[10,"to_degrees","","Converts radians to degrees.",35,[[]]],[10,"to_radians","","Converts degrees to radians.",35,[[]]],[10,"max","","Returns the maximum of the two numbers.",35,[[]]],[10,"min","","Returns the minimum of the two numbers.",35,[[]]],[10,"abs_sub","","The positive difference of two numbers.",35,[[]]],[10,"cbrt","","Take the cubic root of a number.",35,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle…",35,[[]]],[10,"sin","","Computes the sine of a number (in radians).",35,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",35,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",35,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in…",35,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in…",35,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in…",35,[[]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and…",35,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number,…",35,[[]]],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if…",35,[[]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than…",35,[[]]],[10,"sinh","","Hyperbolic sine function.",35,[[]]],[10,"cosh","","Hyperbolic cosine function.",35,[[]]],[10,"tanh","","Hyperbolic tangent function.",35,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",35,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",35,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",35,[[]]],[0,"sign","num_traits","",null,null],[5,"abs","num_traits::sign","Computes the absolute value.",null,[[["signed",8]],["signed",8]]],[5,"abs_sub","","The positive difference of two numbers.",null,[[["signed",8]],["signed",8]]],[5,"signum","","Returns the sign of the number.",null,[[["signed",8]],["signed",8]]],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can…",null,null],[10,"abs","","Computes the absolute value.",36,[[]]],[10,"abs_sub","","The positive difference of two numbers.",36,[[]]],[10,"signum","","Returns the sign of the number.",36,[[]]],[10,"is_positive","","Returns true if the number is positive and false if the…",36,[[]]],[10,"is_negative","","Returns true if the number is negative and false if the…",36,[[]]],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Num","num_traits","The base trait for numeric types, covering `0` and `1`…",null,null],[16,"FromStrRadixErr","","",37,null],[10,"from_str_radix","","Convert from a string and radix <= 36.",37,[[],["result",4]]],[8,"NumOps","","The trait for types implementing basic numeric operations",null,null],[8,"NumRef","","The trait for `Num` types which also implement numeric…",null,null],[8,"RefNum","","The trait for references which implement numeric…",null,null],[8,"NumAssignOps","","The trait for types implementing numeric assignment…",null,null],[8,"NumAssign","","The trait for `Num` types which also implement assignment…",null,null],[8,"NumAssignRef","","The trait for `NumAssign` types which also implement…",null,null],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_string","","",0,[[],["string",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]]],"p":[[3,"ParseFloatError"],[4,"FloatErrorKind"],[8,"Bounded"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"AsPrimitive"],[8,"FloatCore"],[8,"Float"],[8,"FloatConst"],[8,"Zero"],[8,"One"],[8,"PrimInt"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"CheckedRem"],[8,"CheckedNeg"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"Inv"],[8,"MulAdd"],[8,"MulAddAssign"],[8,"Saturating"],[8,"SaturatingAdd"],[8,"SaturatingSub"],[8,"SaturatingMul"],[8,"WrappingAdd"],[8,"WrappingSub"],[8,"WrappingMul"],[8,"WrappingNeg"],[8,"WrappingShl"],[8,"WrappingShr"],[8,"Pow"],[8,"Real"],[8,"Signed"],[8,"Num"]]},\
"once_cell":{"doc":"Overview`once_cell` provides two new cell-like types,…","i":[[0,"unsync","once_cell","",null,null],[3,"OnceCell","once_cell::unsync","A cell which can be written to only once. It is not thread…",null,null],[3,"Lazy","","A value which is initialized on the first access.",null,null],[11,"new","","Creates a new empty cell.",0,[[],["oncecell",3]]],[11,"get","","Gets a reference to the underlying value.",0,[[],["option",4]]],[11,"get_mut","","Gets a mutable reference to the underlying value.",0,[[],["option",4]]],[11,"set","","Sets the contents of this cell to `value`.",0,[[],["result",4]]],[11,"get_or_init","","Gets the contents of the cell, initializing it with `f` if…",0,[[]]],[11,"get_or_try_init","","Gets the contents of the cell, initializing it with `f` if…",0,[[],["result",4]]],[11,"take","","Takes the value out of this `OnceCell`, moving it back to…",0,[[],["option",4]]],[11,"into_inner","","Consumes the `OnceCell`, returning the wrapped value.",0,[[],["option",4]]],[11,"new","","Creates a new lazy value with the given initializing…",1,[[],["lazy",3]]],[11,"force","","Forces the evaluation of this lazy value and returns a…",1,[[["lazy",3]]]],[0,"sync","once_cell","",null,null],[3,"OnceCell","once_cell::sync","A thread-safe cell which can be written to only once.",null,null],[3,"Lazy","","A value which is initialized on the first access.",null,null],[11,"new","","Creates a new empty cell.",2,[[],["oncecell",3]]],[11,"get","","Gets the reference to the underlying value.",2,[[],["option",4]]],[11,"get_mut","","Gets the mutable reference to the underlying value.",2,[[],["option",4]]],[11,"get_unchecked","","Get the reference to the underlying value, without…",2,[[]]],[11,"set","","Sets the contents of this cell to `value`.",2,[[],["result",4]]],[11,"get_or_init","","Gets the contents of the cell, initializing it with `f` if…",2,[[]]],[11,"get_or_try_init","","Gets the contents of the cell, initializing it with `f` if…",2,[[],["result",4]]],[11,"take","","Takes the value out of this `OnceCell`, moving it back to…",2,[[],["option",4]]],[11,"into_inner","","Consumes the `OnceCell`, returning the wrapped value.…",2,[[],["option",4]]],[11,"new","","Creates a new lazy value with the given initializing…",3,[[],["lazy",3]]],[11,"force","","Forces the evaluation of this lazy value and returns a…",3,[[["lazy",3]]]],[11,"from","once_cell::unsync","",0,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","once_cell::sync","",2,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","once_cell::unsync","",0,[[]]],[11,"from","once_cell::sync","",2,[[]]],[11,"clone","once_cell::unsync","",0,[[],["oncecell",3]]],[11,"clone","once_cell::sync","",2,[[],["oncecell",3]]],[11,"default","once_cell::unsync","",0,[[]]],[11,"default","","Creates a new lazy value using `Default` as the…",1,[[],["lazy",3]]],[11,"default","once_cell::sync","",2,[[],["oncecell",3]]],[11,"default","","Creates a new lazy value using `Default` as the…",3,[[],["lazy",3]]],[11,"eq","once_cell::unsync","",0,[[]]],[11,"eq","once_cell::sync","",2,[[["oncecell",3]]]],[11,"deref","once_cell::unsync","",1,[[]]],[11,"deref","once_cell::sync","",3,[[]]],[11,"deref_mut","once_cell::unsync","",1,[[]]],[11,"deref_mut","once_cell::sync","",3,[[]]],[11,"fmt","once_cell::unsync","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","once_cell::sync","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]]],"p":[[3,"OnceCell"],[3,"Lazy"],[3,"OnceCell"],[3,"Lazy"]]},\
"ordered_float":{"doc":"Wrappers for total order on Floats.","i":[[3,"OrderedFloat","ordered_float","A wrapper around Floats providing an implementation of Ord…",null,null],[12,"0","","",0,null],[3,"NotNan","","A wrapper around Floats providing an implementation of Ord…",null,null],[3,"FloatIsNan","","An error indicating an attempt to construct NotNan from a…",null,null],[4,"ParseNotNanError","","An error indicating a parse error from a string for…",null,null],[13,"ParseFloatError","","A plain parse error from the underlying float type.",1,null],[13,"IsNaN","","The parsed float value resulted in a NaN.",1,null],[11,"into_inner","","Get the value out.",0,[[]]],[11,"unchecked_new","","Create a NotNan value from a value that is guaranteed to…",2,[[]]],[11,"new","","Create a NotNan value.",2,[[],[["result",4],["floatisnan",3]]]],[11,"into_inner","","Get the value out.",2,[[]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"deref","","",0,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",2,[[["notnan",3]],["notnan",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"div","","",0,[[]]],[11,"div","","",2,[[]]],[11,"div","","",2,[[]]],[11,"rem","","",2,[[]]],[11,"rem","","",2,[[]]],[11,"sub","","",0,[[]]],[11,"sub","","",2,[[]]],[11,"sub","","",2,[[]]],[11,"eq","","",0,[[["orderedfloat",3]]]],[11,"eq","","",0,[[]]],[11,"eq","","",2,[[["notnan",3]]]],[11,"ne","","",2,[[["notnan",3]]]],[11,"eq","","",2,[[]]],[11,"eq","","",3,[[["floatisnan",3]]]],[11,"eq","","",1,[[["parsenotnanerror",4]]]],[11,"ne","","",1,[[["parsenotnanerror",4]]]],[11,"cmp","","",0,[[],["ordering",4]]],[11,"cmp","","",2,[[["notnan",3]],["ordering",4]]],[11,"partial_cmp","","",0,[[],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",2,[[["notnan",3]],[["option",4],["ordering",4]]]],[11,"lt","","",2,[[["notnan",3]]]],[11,"le","","",2,[[["notnan",3]]]],[11,"gt","","",2,[[["notnan",3]]]],[11,"ge","","",2,[[["notnan",3]]]],[11,"add","","",0,[[]]],[11,"add","","",2,[[]]],[11,"add","","",2,[[]]],[11,"mul","","",0,[[]]],[11,"mul","","",2,[[]]],[11,"mul","","",2,[[]]],[11,"neg","","",0,[[]]],[11,"neg","","",2,[[]]],[11,"add_assign","","",2,[[]]],[11,"add_assign","","",2,[[]]],[11,"sub_assign","","",2,[[]]],[11,"sub_assign","","",2,[[]]],[11,"mul_assign","","",2,[[]]],[11,"mul_assign","","",2,[[]]],[11,"div_assign","","",2,[[]]],[11,"div_assign","","",2,[[]]],[11,"rem_assign","","",2,[[]]],[11,"rem_assign","","",2,[[]]],[11,"hash","","",0,[[]]],[11,"hash","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_from","","",2,[[],["result",4]]],[11,"from_str","","Convert a &str to `OrderedFloat`. Returns an error if the…",0,[[],["result",4]]],[11,"from_str","","Convert a &str to `NotNan`. Returns an error if the string…",2,[[],["result",4]]],[11,"as_ref","","",0,[[]]],[11,"as_ref","","",2,[[]]],[11,"as_mut","","",0,[[]]],[11,"into","","",0,[[]]],[11,"into","","",0,[[]]],[11,"into","","",3,[[],["error",3]]],[11,"sum","","",2,[[["iterator",8]]]],[11,"sum","","",2,[[["iterator",8]]]],[11,"product","","",2,[[["iterator",8]]]],[11,"product","","",2,[[["iterator",8]]]],[11,"clone","","",0,[[],["orderedfloat",3]]],[11,"clone","","",2,[[],["notnan",3]]],[11,"clone","","",3,[[],["floatisnan",3]]],[11,"clone","","",1,[[],["parsenotnanerror",4]]],[11,"default","","",0,[[],["orderedfloat",3]]],[11,"default","","",2,[[],["notnan",3]]],[11,"min_value","","",0,[[]]],[11,"max_value","","",0,[[]]],[11,"min_value","","",2,[[]]],[11,"max_value","","",2,[[]]],[11,"to_i64","","",2,[[],["option",4]]],[11,"to_u64","","",2,[[],["option",4]]],[11,"to_isize","","",2,[[],["option",4]]],[11,"to_i8","","",2,[[],["option",4]]],[11,"to_i16","","",2,[[],["option",4]]],[11,"to_i32","","",2,[[],["option",4]]],[11,"to_usize","","",2,[[],["option",4]]],[11,"to_u8","","",2,[[],["option",4]]],[11,"to_u16","","",2,[[],["option",4]]],[11,"to_u32","","",2,[[],["option",4]]],[11,"to_f32","","",2,[[],["option",4]]],[11,"to_f64","","",2,[[],["option",4]]],[11,"from_i64","","",2,[[],["option",4]]],[11,"from_u64","","",2,[[],["option",4]]],[11,"from_isize","","",2,[[],["option",4]]],[11,"from_i8","","",2,[[],["option",4]]],[11,"from_i16","","",2,[[],["option",4]]],[11,"from_i32","","",2,[[],["option",4]]],[11,"from_usize","","",2,[[],["option",4]]],[11,"from_u8","","",2,[[],["option",4]]],[11,"from_u16","","",2,[[],["option",4]]],[11,"from_u32","","",2,[[],["option",4]]],[11,"from_f32","","",2,[[],["option",4]]],[11,"from_f64","","",2,[[],["option",4]]],[11,"from","","",2,[[["toprimitive",8]],["option",4]]],[11,"from_str_radix","","",2,[[],["result",4]]],[11,"zero","","",0,[[]]],[11,"is_zero","","",0,[[]]],[11,"zero","","",2,[[]]],[11,"is_zero","","",2,[[]]],[11,"one","","",2,[[]]],[11,"abs","","",2,[[]]],[11,"abs_sub","","",2,[[]]],[11,"signum","","",2,[[]]],[11,"is_positive","","",2,[[]]],[11,"is_negative","","",2,[[]]],[11,"description","","",3,[[]]],[11,"description","","",1,[[]]],[11,"source","","",1,[[],[["error",8],["option",4]]]]],"p":[[3,"OrderedFloat"],[4,"ParseNotNanError"],[3,"NotNan"],[3,"FloatIsNan"]]},\
"parking_lot":{"doc":"This library provides implementations of `Mutex`,…","i":[[3,"Condvar","parking_lot","A Condition Variable",null,null],[3,"WaitTimeoutResult","","A type indicating whether a timed wait on a condition…",null,null],[3,"Once","","A synchronization primitive which can be used to run a…",null,null],[3,"RawFairMutex","","Raw fair mutex type backed by the parking lot.",null,null],[3,"RawMutex","","Raw mutex type backed by the parking lot.",null,null],[3,"RawRwLock","","Raw reader-writer lock type backed by the parking lot.",null,null],[3,"RawThreadId","","Implementation of the `GetThreadId` trait for…",null,null],[4,"OnceState","","Current state of a `Once`.",null,null],[13,"New","","A closure has not been executed yet",0,null],[13,"Poisoned","","A closure was executed but panicked.",0,null],[13,"InProgress","","A thread is currently executing a closure.",0,null],[13,"Done","","A closure has completed successfully.",0,null],[5,"const_fair_mutex","","Creates a new fair mutex in an unlocked state ready for use.",null,[[],["fairmutex",6]]],[5,"const_mutex","","Creates a new mutex in an unlocked state ready for use.",null,[[],["mutex",6]]],[5,"const_reentrant_mutex","","Creates a new reentrant mutex in an unlocked state ready…",null,[[],["reentrantmutex",6]]],[5,"const_rwlock","","Creates a new instance of an `RwLock<T>` which is unlocked.",null,[[],["rwlock",6]]],[11,"timed_out","","Returns whether the wait was known to have timed out.",1,[[]]],[11,"new","","Creates a new condition variable which is ready to be…",2,[[],["condvar",3]]],[11,"notify_one","","Wakes up one blocked thread on this condvar.",2,[[]]],[11,"notify_all","","Wakes up all blocked threads on this condvar.",2,[[]]],[11,"wait","","Blocks the current thread until this condition variable…",2,[[["mutexguard",6]]]],[11,"wait_until","","Waits on this condition variable for a notification,…",2,[[["instant",6],["mutexguard",6]],["waittimeoutresult",3]]],[11,"wait_for","","Waits on this condition variable for a notification,…",2,[[["duration",3],["mutexguard",6]],["waittimeoutresult",3]]],[11,"poisoned","","Returns whether the associated `Once` has been poisoned.",0,[[]]],[11,"done","","Returns whether the associated `Once` has successfully…",0,[[]]],[11,"new","","Creates a new `Once` value.",3,[[],["once",3]]],[11,"state","","Returns the current state of this `Once`.",3,[[],["oncestate",4]]],[11,"call_once","","Performs an initialization routine once and only once. The…",3,[[]]],[11,"call_once_force","","Performs the same function as `call_once` except ignores…",3,[[]]],[6,"FairMutex","","A mutual exclusive primitive that is always fair, useful…",null,null],[6,"FairMutexGuard","","An RAII implementation of a \\\"scoped lock\\\" of a mutex. When…",null,null],[6,"MappedFairMutexGuard","","An RAII mutex guard returned by `FairMutexGuard::map`,…",null,null],[6,"MappedMutexGuard","","An RAII mutex guard returned by `MutexGuard::map`, which…",null,null],[6,"Mutex","","A mutual exclusion primitive useful for protecting shared…",null,null],[6,"MutexGuard","","An RAII implementation of a \\\"scoped lock\\\" of a mutex. When…",null,null],[6,"MappedReentrantMutexGuard","","An RAII mutex guard returned by…",null,null],[6,"ReentrantMutex","","A mutex which can be recursively locked by a single thread.",null,null],[6,"ReentrantMutexGuard","","An RAII implementation of a \\\"scoped lock\\\" of a reentrant…",null,null],[6,"MappedRwLockReadGuard","","An RAII read lock guard returned by…",null,null],[6,"MappedRwLockWriteGuard","","An RAII write lock guard returned by…",null,null],[6,"RwLock","","A reader-writer lock",null,null],[6,"RwLockReadGuard","","RAII structure used to release the shared read access of a…",null,null],[6,"RwLockUpgradableReadGuard","","RAII structure used to release the upgradable read access…",null,null],[6,"RwLockWriteGuard","","RAII structure used to release the exclusive write access…",null,null],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"clone","","",1,[[],["waittimeoutresult",3]]],[11,"clone","","",0,[[],["oncestate",4]]],[11,"default","","",2,[[],["condvar",3]]],[11,"default","","",3,[[],["once",3]]],[11,"eq","","",1,[[["waittimeoutresult",3]]]],[11,"ne","","",1,[[["waittimeoutresult",3]]]],[11,"eq","","",0,[[["oncestate",4]]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"lock","","",4,[[]]],[11,"try_lock","","",4,[[]]],[11,"unlock","","",4,[[]]],[11,"is_locked","","",4,[[]]],[11,"lock","","",5,[[]]],[11,"try_lock","","",5,[[]]],[11,"unlock","","",5,[[]]],[11,"is_locked","","",5,[[]]],[11,"unlock_fair","","",4,[[]]],[11,"bump","","",4,[[]]],[11,"unlock_fair","","",5,[[]]],[11,"bump","","",5,[[]]],[11,"try_lock_until","","",4,[[]]],[11,"try_lock_for","","",4,[[]]],[11,"try_lock_until","","",5,[[["instant",6]]]],[11,"try_lock_for","","",5,[[["duration",3]]]],[11,"nonzero_thread_id","","",7,[[],["nonzerousize",3]]],[11,"lock_exclusive","","",6,[[]]],[11,"try_lock_exclusive","","",6,[[]]],[11,"unlock_exclusive","","",6,[[]]],[11,"lock_shared","","",6,[[]]],[11,"try_lock_shared","","",6,[[]]],[11,"unlock_shared","","",6,[[]]],[11,"is_locked","","",6,[[]]],[11,"unlock_shared_fair","","",6,[[]]],[11,"unlock_exclusive_fair","","",6,[[]]],[11,"bump_shared","","",6,[[]]],[11,"bump_exclusive","","",6,[[]]],[11,"downgrade","","",6,[[]]],[11,"try_lock_shared_for","","",6,[[]]],[11,"try_lock_shared_until","","",6,[[]]],[11,"try_lock_exclusive_for","","",6,[[["duration",3]]]],[11,"try_lock_exclusive_until","","",6,[[["instant",6]]]],[11,"lock_shared_recursive","","",6,[[]]],[11,"try_lock_shared_recursive","","",6,[[]]],[11,"try_lock_shared_recursive_for","","",6,[[]]],[11,"try_lock_shared_recursive_until","","",6,[[]]],[11,"lock_upgradable","","",6,[[]]],[11,"try_lock_upgradable","","",6,[[]]],[11,"unlock_upgradable","","",6,[[]]],[11,"upgrade","","",6,[[]]],[11,"try_upgrade","","",6,[[]]],[11,"unlock_upgradable_fair","","",6,[[]]],[11,"bump_upgradable","","",6,[[]]],[11,"downgrade_upgradable","","",6,[[]]],[11,"downgrade_to_upgradable","","",6,[[]]],[11,"try_lock_upgradable_until","","",6,[[["instant",6]]]],[11,"try_lock_upgradable_for","","",6,[[["duration",3]]]],[11,"try_upgrade_until","","",6,[[["instant",6]]]],[11,"try_upgrade_for","","",6,[[["duration",3]]]]],"p":[[4,"OnceState"],[3,"WaitTimeoutResult"],[3,"Condvar"],[3,"Once"],[3,"RawFairMutex"],[3,"RawMutex"],[3,"RawRwLock"],[3,"RawThreadId"]]},\
"parking_lot_core":{"doc":"This library exposes a low-level API for creating your own…","i":[[3,"ParkToken","parking_lot_core","A value associated with a parked thread which can be used…",null,null],[12,"0","","",0,null],[3,"UnparkResult","","Result of an unpark operation.",null,null],[12,"unparked_threads","","The number of threads that were unparked.",1,null],[12,"requeued_threads","","The number of threads that were requeued.",1,null],[12,"have_more_threads","","Whether there are any threads remaining in the queue. This…",1,null],[12,"be_fair","","This is set to true on average once every 0.5ms for any…",1,null],[3,"UnparkToken","","A value which is passed from an unparker to a parked thread.",null,null],[12,"0","","",2,null],[3,"SpinWait","","A counter used to perform exponential backoff in spin loops.",null,null],[4,"FilterOp","","Operation that `unpark_filter` should perform for each…",null,null],[13,"Unpark","","Unpark the thread and continue scanning the list of parked…",3,null],[13,"Skip","","Don\'t unpark the thread and continue scanning the list of…",3,null],[13,"Stop","","Don\'t unpark the thread and stop scanning the list of…",3,null],[4,"ParkResult","","Result of a park operation.",null,null],[13,"Unparked","","We were unparked by another thread with the given token.",4,null],[13,"Invalid","","The validation callback returned false.",4,null],[13,"TimedOut","","The timeout expired.",4,null],[4,"RequeueOp","","Operation that `unpark_requeue` should perform.",null,null],[13,"Abort","","Abort the operation without doing anything.",5,null],[13,"UnparkOneRequeueRest","","Unpark one thread and requeue the rest onto the target…",5,null],[13,"RequeueAll","","Requeue all threads onto the target queue.",5,null],[13,"UnparkOne","","Unpark one thread and leave the rest parked. No requeuing…",5,null],[13,"RequeueOne","","Requeue one thread and leave the rest parked on the…",5,null],[5,"park","","Parks the current thread in the queue associated with the…",null,[[["option",4],["instant",6],["parktoken",3]],["parkresult",4]]],[5,"unpark_all","","Unparks all threads in the queue associated with the given…",null,[[["unparktoken",3]]]],[5,"unpark_filter","","Unparks a number of threads from the front of the queue…",null,[[],["unparkresult",3]]],[5,"unpark_one","","Unparks one thread from the queue associated with the…",null,[[],["unparkresult",3]]],[5,"unpark_requeue","","Removes all threads from the queue associated with…",null,[[],["unparkresult",3]]],[11,"is_unparked","","Returns true if we were unparked by another thread.",4,[[]]],[11,"new","","Creates a new `SpinWait`.",6,[[]]],[11,"reset","","Resets a `SpinWait` to its initial state.",6,[[]]],[11,"spin","","Spins until the sleep threshold has been reached.",6,[[]]],[11,"spin_no_yield","","Spins without yielding the thread to the OS.",6,[[]]],[0,"deadlock","","[Experimental] Deadlock detection",null,null],[5,"acquire_resource","parking_lot_core::deadlock","Acquire a resource identified by key in the deadlock…",null,[[]]],[5,"release_resource","","Release a resource identified by key in the deadlock…",null,[[]]],[17,"DEFAULT_PARK_TOKEN","parking_lot_core","A default park token to use.",null,null],[17,"DEFAULT_UNPARK_TOKEN","","A default unpark token to use.",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"clone","","",4,[[],["parkresult",4]]],[11,"clone","","",1,[[],["unparkresult",3]]],[11,"clone","","",5,[[],["requeueop",4]]],[11,"clone","","",3,[[],["filterop",4]]],[11,"clone","","",2,[[],["unparktoken",3]]],[11,"clone","","",0,[[],["parktoken",3]]],[11,"default","","",1,[[],["unparkresult",3]]],[11,"default","","",6,[[],["spinwait",3]]],[11,"eq","","",4,[[["parkresult",4]]]],[11,"ne","","",4,[[["parkresult",4]]]],[11,"eq","","",1,[[["unparkresult",3]]]],[11,"ne","","",1,[[["unparkresult",3]]]],[11,"eq","","",5,[[["requeueop",4]]]],[11,"eq","","",3,[[["filterop",4]]]],[11,"eq","","",2,[[["unparktoken",3]]]],[11,"ne","","",2,[[["unparktoken",3]]]],[11,"eq","","",0,[[["parktoken",3]]]],[11,"ne","","",0,[[["parktoken",3]]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]]],"p":[[3,"ParkToken"],[3,"UnparkResult"],[3,"UnparkToken"],[4,"FilterOp"],[4,"ParkResult"],[4,"RequeueOp"],[3,"SpinWait"]]},\
"paste":{"doc":"github crates-io docs-rs","i":[[14,"item","paste","Paste identifiers within a macro invocation that expands…",null,null],[14,"item_with_macros","","Paste identifiers within a macro invocation that expands…",null,null],[14,"expr","","Paste identifiers within a macro invocation that expands…",null,null]],"p":[]},\
"paste_impl":{"doc":"","i":[[14,"item","paste_impl","",null,null],[14,"item_with_macros","","",null,null],[24,"proc_macro_hack_expr","","",null,null]],"p":[]},\
"pest":{"doc":"pest. The Elegant Parserpest is a general purpose parser…","i":[[3,"ParserState","pest","The complete state of a `Parser`.",null,null],[3,"Position","","A cursor position in a `&str` which provides useful…",null,null],[3,"Lines","","Line iterator for Spans, created by `Span::lines()`.",null,null],[3,"Span","","A span over a `&str`. It is created from either two…",null,null],[4,"Atomicity","","The current atomicity of a `ParserState`.",null,null],[13,"Atomic","","",0,null],[13,"CompoundAtomic","","",0,null],[13,"NonAtomic","","",0,null],[4,"Lookahead","","The current lookahead status of a `ParserState`.",null,null],[13,"Positive","","",1,null],[13,"Negative","","",1,null],[13,"None","","",1,null],[4,"MatchDir","","Match direction for the stack. Used in…",null,null],[13,"BottomToTop","","",2,null],[13,"TopToBottom","","",2,null],[4,"Token","","A token generated by a `Parser`.",null,null],[13,"Start","","The starting `Position` of a matched `Rule`",3,null],[12,"rule","pest::Token","",4,null],[12,"pos","","",4,null],[13,"End","pest","The ending `Position` of a matched `Rule`",3,null],[12,"rule","pest::Token","",5,null],[12,"pos","","",5,null],[5,"state","pest","Creates a `ParserState` from a `&str`, supplying it to a…",null,[[],[["error",3],["result",4],["pairs",3]]]],[0,"error","","Types for different kinds of parsing failures.",null,null],[3,"Error","pest::error","Parse-related error type.",null,null],[12,"variant","","Variant of the error",6,null],[12,"location","","Location within the input string",6,null],[12,"line_col","","Line/column within the input string",6,null],[4,"ErrorVariant","","Different kinds of parsing errors.",null,null],[13,"ParsingError","","Generated parsing error with expected and unexpected `Rule`s",7,null],[12,"positives","pest::error::ErrorVariant","Positive attempts",8,null],[12,"negatives","","Negative attempts",8,null],[13,"CustomError","pest::error","Custom error with a message",7,null],[12,"message","pest::error::ErrorVariant","Short explanation",9,null],[4,"InputLocation","pest::error","Where an `Error` has occurred.",null,null],[13,"Pos","","`Error` was created by `Error::new_from_pos`",10,null],[13,"Span","","`Error` was created by `Error::new_from_span`",10,null],[4,"LineColLocation","","Line/column where an `Error` has occurred.",null,null],[13,"Pos","","Line/column pair if `Error` was created by…",11,null],[13,"Span","","Line/column pairs if `Error` was created by…",11,null],[11,"new_from_pos","","Creates `Error` from `ErrorVariant` and `Position`.",6,[[["errorvariant",4],["position",3]],["error",3]]],[11,"new_from_span","","Creates `Error` from `ErrorVariant` and `Span`.",6,[[["span",3],["errorvariant",4]],["error",3]]],[11,"with_path","","Returns `Error` variant with `path` which is shown when…",6,[[],["error",3]]],[11,"renamed_rules","","Renames all `Rule`s if this is a `ParsingError`. It does…",6,[[],["error",3]]],[0,"iterators","pest","Types and iterators for parser output.",null,null],[3,"FlatPairs","pest::iterators","An iterator over `Pair`s. It is created by `Pairs::flatten`.",null,null],[3,"Pair","","A matching pair of `Token`s and everything between them.",null,null],[3,"Pairs","","An iterator over `Pair`s. It is created by `pest::state`…",null,null],[3,"Tokens","","An iterator over `Token`s. It is created by `Pair::tokens`…",null,null],[11,"tokens","","Returns the `Tokens` for these pairs.",12,[[],["tokens",3]]],[11,"as_rule","","Returns the `Rule` of the `Pair`.",13,[[]]],[11,"as_str","","Captures a slice from the `&str` defined by the token…",13,[[]]],[11,"into_span","","Returns the `Span` defined by the `Pair`, consuming it.",13,[[],["span",3]]],[11,"as_span","","Returns the `Span` defined by the `Pair`, without…",13,[[],["span",3]]],[11,"into_inner","","Returns the inner `Pairs` between the `Pair`, consuming it.",13,[[],["pairs",3]]],[11,"tokens","","Returns the `Tokens` for the `Pair`.",13,[[],["tokens",3]]],[11,"single","","Create a new `Pairs` iterator containing just the single…",14,[[["pair",3]]]],[11,"as_str","","Captures a slice from the `&str` defined by the starting…",14,[[]]],[11,"concat","","Captures inner token `Pair`s and concatenates resulting…",14,[[],["string",3]]],[11,"flatten","","Flattens the `Pairs`.",14,[[],["flatpairs",3]]],[11,"tokens","","Returns the `Tokens` for the `Pairs`.",14,[[],["tokens",3]]],[11,"peek","","Peek at the first inner `Pair` without changing the…",14,[[],[["pair",3],["option",4]]]],[11,"new","pest","Allocates a fresh `ParserState` object to the heap and…",15,[[],["box",3]]],[11,"position","","Returns a reference to the current `Position` of the…",15,[[],["position",3]]],[11,"atomicity","","Returns the current atomicity of the `ParserState`.",15,[[],["atomicity",4]]],[11,"rule","","Wrapper needed to generate tokens. This will associate the…",15,[[["box",3]],[["parseresult",6],["box",3]]]],[11,"sequence","","Starts a sequence of transformations provided by `f` from…",15,[[["box",3]],[["parseresult",6],["box",3]]]],[11,"repeat","","Repeatedly applies the transformation provided by `f` from…",15,[[["box",3]],[["parseresult",6],["box",3]]]],[11,"optional","","Optionally applies the transformation provided by `f` from…",15,[[["box",3]],[["parseresult",6],["box",3]]]],[11,"match_char_by","","Attempts to match a single character based on a filter…",15,[[["box",3]],[["parseresult",6],["box",3]]]],[11,"match_string","","Attempts to match the given string. Returns `Ok` with the…",15,[[["box",3]],[["parseresult",6],["box",3]]]],[11,"match_insensitive","","Attempts to case-insensitively match the given string.…",15,[[["box",3]],[["parseresult",6],["box",3]]]],[11,"match_range","","Attempts to match a single character from the given range.…",15,[[["range",3],["box",3]],[["parseresult",6],["box",3]]]],[11,"skip","","Attempts to skip `n` characters forward. Returns `Ok` with…",15,[[["box",3]],[["parseresult",6],["box",3]]]],[11,"skip_until","","Attempts to skip forward until one of the given strings is…",15,[[["box",3]],[["parseresult",6],["box",3]]]],[11,"start_of_input","","Attempts to match the start of the input. Returns `Ok`…",15,[[["box",3]],[["parseresult",6],["box",3]]]],[11,"end_of_input","","Attempts to match the end of the input. Returns `Ok` with…",15,[[["box",3]],[["parseresult",6],["box",3]]]],[11,"lookahead","","Starts a lookahead transformation provided by `f` from the…",15,[[["box",3]],[["parseresult",6],["box",3]]]],[11,"atomic","","Transformation which stops `Token`s from being generated…",15,[[["atomicity",4],["box",3]],[["parseresult",6],["box",3]]]],[11,"stack_push","","Evaluates the result of closure `f` and pushes the span of…",15,[[["box",3]],[["parseresult",6],["box",3]]]],[11,"stack_peek","","Peeks the top of the stack and attempts to match the…",15,[[["box",3]],[["parseresult",6],["box",3]]]],[11,"stack_pop","","Pops the top of the stack and attempts to match the…",15,[[["box",3]],[["parseresult",6],["box",3]]]],[11,"stack_match_peek_slice","","Matches part of the state of the stack.",15,[[["option",4],["matchdir",4],["box",3]],[["parseresult",6],["box",3]]]],[11,"stack_match_peek","","Matches the full state of the stack.",15,[[["box",3]],[["parseresult",6],["box",3]]]],[11,"stack_match_pop","","Matches the full state of the stack. This method will…",15,[[["box",3]],[["parseresult",6],["box",3]]]],[11,"stack_drop","","Drops the top of the stack. Returns `Ok(Box<ParserState>)`…",15,[[["box",3]],[["parseresult",6],["box",3]]]],[11,"restore_on_err","","Restores the original state of the `ParserState` when `f`…",15,[[["box",3]],[["parseresult",6],["box",3]]]],[11,"new","","Attempts to create a new `Position` at the given position.…",16,[[],[["position",3],["option",4]]]],[11,"from_start","","Creates a `Position` at the start of a `&str`.",16,[[],["position",3]]],[11,"pos","","Returns the byte position of this `Position` as a `usize`.",16,[[]]],[11,"span","","Creates a `Span` from two `Position`s.",16,[[["position",3]],["span",3]]],[11,"line_col","","Returns the line and column number of this `Position`.",16,[[]]],[11,"line_of","","Returns the entire line of the input that contains this…",16,[[]]],[0,"prec_climber","","Constructs useful in infix operator parsing with the…",null,null],[3,"Operator","pest::prec_climber","Infix operator used in `PrecClimber`.",null,null],[3,"PrecClimber","","List of operators and precedences, which can perform…",null,null],[4,"Assoc","","Associativity of an `Operator`.",null,null],[13,"Left","","Left `Operator` associativity",17,null],[13,"Right","","Right `Operator` associativity",17,null],[11,"new","","Creates a new `Operator` from a `Rule` and `Assoc`.",18,[[["assoc",4]],["operator",3]]],[11,"new","","Creates a new `PrecClimber` from the `Operator`s contained…",19,[[["operator",3],["vec",3]],["precclimber",3]]],[11,"climb","","Performs the precedence climbing algorithm on the `pairs`…",19,[[]]],[11,"new","pest","Attempts to create a new span. Will return `None` if…",20,[[],[["span",3],["option",4]]]],[11,"start","","Returns the `Span`\'s start byte position as a `usize`.",20,[[]]],[11,"end","","Returns the `Span`\'s end byte position as a `usize`.",20,[[]]],[11,"start_pos","","Returns the `Span`\'s start `Position`.",20,[[],["position",3]]],[11,"end_pos","","Returns the `Span`\'s end `Position`.",20,[[],["position",3]]],[11,"split","","Splits the `Span` into a pair of `Position`s.",20,[[]]],[11,"as_str","","Captures a slice from the `&str` defined by the `Span`.",20,[[]]],[11,"lines","","Iterates over all lines (partially) covered by this span.",20,[[],["lines",3]]],[6,"ParseResult","","Type alias to simplify specifying the return value of…",null,null],[8,"Parser","","A trait with a single method that parses strings.",null,null],[10,"parse","","Parses a `&str` starting from `rule`.",21,[[],[["result",4],["error",3],["pairs",3]]]],[8,"RuleType","","A trait which parser rules must implement.",null,null],[14,"parses_to","","Testing tool that compares produced tokens.",null,null],[14,"fails_with","","Testing tool that compares produced errors.",null,null],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"into_iter","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","pest::error","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","pest::iterators","",12,[[]]],[11,"into","","",12,[[]]],[11,"into_iter","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"to_string","","",13,[[],["string",3]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"into_iter","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"to_string","","",14,[[],["string",3]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"into_iter","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","pest::prec_climber","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"next_back","pest::iterators","",12,[[],["option",4]]],[11,"next_back","","",14,[[],["option",4]]],[11,"next_back","","",23,[[],["option",4]]],[11,"next","","",12,[[],["option",4]]],[11,"next","","",14,[[],["option",4]]],[11,"next","","",23,[[],["option",4]]],[11,"next","pest","",22,[[],["option",4]]],[11,"clone","pest::error","",6,[[],["error",3]]],[11,"clone","","",7,[[],["errorvariant",4]]],[11,"clone","","",10,[[],["inputlocation",4]]],[11,"clone","","",11,[[],["linecollocation",4]]],[11,"clone","pest::iterators","",12,[[],["flatpairs",3]]],[11,"clone","","",13,[[],["pair",3]]],[11,"clone","","",14,[[],["pairs",3]]],[11,"clone","","",23,[[],["tokens",3]]],[11,"clone","pest","",1,[[],["lookahead",4]]],[11,"clone","","",0,[[],["atomicity",4]]],[11,"clone","","",2,[[],["matchdir",4]]],[11,"clone","","",16,[[],["position",3]]],[11,"clone","pest::prec_climber","",17,[[],["assoc",4]]],[11,"clone","pest","",20,[[],["span",3]]],[11,"clone","","",3,[[],["token",4]]],[11,"cmp","","",16,[[["position",3]],["ordering",4]]],[11,"eq","pest::error","",6,[[["error",3]]]],[11,"ne","","",6,[[["error",3]]]],[11,"eq","","",7,[[["errorvariant",4]]]],[11,"ne","","",7,[[["errorvariant",4]]]],[11,"eq","","",10,[[["inputlocation",4]]]],[11,"ne","","",10,[[["inputlocation",4]]]],[11,"eq","","",11,[[["linecollocation",4]]]],[11,"ne","","",11,[[["linecollocation",4]]]],[11,"eq","pest::iterators","",13,[[["pair",3]]]],[11,"eq","","",14,[[["pairs",3]]]],[11,"eq","pest","",1,[[["lookahead",4]]]],[11,"eq","","",0,[[["atomicity",4]]]],[11,"eq","","",2,[[["matchdir",4]]]],[11,"eq","","",16,[[["position",3]]]],[11,"eq","pest::prec_climber","",17,[[["assoc",4]]]],[11,"eq","pest","",20,[[["span",3]]]],[11,"eq","","",3,[[["token",4]]]],[11,"ne","","",3,[[["token",4]]]],[11,"partial_cmp","","",16,[[["position",3]],[["option",4],["ordering",4]]]],[11,"fmt","pest::error","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","pest::iterators","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","pest","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","pest::prec_climber","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","pest","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","pest::error","",6,[[["formatter",3]],["result",6]]],[11,"fmt","pest::iterators","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"bitor","pest::prec_climber","",18,[[]]],[11,"hash","pest::error","",6,[[]]],[11,"hash","","",7,[[]]],[11,"hash","","",10,[[]]],[11,"hash","","",11,[[]]],[11,"hash","pest::iterators","",13,[[]]],[11,"hash","","",14,[[]]],[11,"hash","pest","",16,[[]]],[11,"hash","","",20,[[]]],[11,"hash","","",3,[[]]],[11,"description","pest::error","",6,[[]]]],"p":[[4,"Atomicity"],[4,"Lookahead"],[4,"MatchDir"],[4,"Token"],[13,"Start"],[13,"End"],[3,"Error"],[4,"ErrorVariant"],[13,"ParsingError"],[13,"CustomError"],[4,"InputLocation"],[4,"LineColLocation"],[3,"FlatPairs"],[3,"Pair"],[3,"Pairs"],[3,"ParserState"],[3,"Position"],[4,"Assoc"],[3,"Operator"],[3,"PrecClimber"],[3,"Span"],[8,"Parser"],[3,"Lines"],[3,"Tokens"]]},\
"pest_derive":{"doc":"pest. The Elegant Parserpest is a general purpose parser…","i":[[24,"Parser","pest_derive","",null,null]],"p":[]},\
"pest_generator":{"doc":"","i":[[5,"derive_parser","pest_generator","",null,[[["tokenstream",3]],["tokenstream",3]]]],"p":[]},\
"pest_meta":{"doc":"","i":[[5,"unwrap_or_report","pest_meta","",null,[[["result",4]]]],[0,"ast","","",null,null],[3,"Rule","pest_meta::ast","",null,null],[12,"name","","",0,null],[12,"ty","","",0,null],[12,"expr","","",0,null],[3,"ExprTopDownIterator","","",null,null],[4,"RuleType","","",null,null],[13,"Normal","","",1,null],[13,"Silent","","",1,null],[13,"Atomic","","",1,null],[13,"CompoundAtomic","","",1,null],[13,"NonAtomic","","",1,null],[4,"Expr","","",null,null],[13,"Str","","Matches an exact string, e.g. `\\\"a\\\"`",2,null],[13,"Insens","","Matches an exact string, case insensitively (ASCII only),…",2,null],[13,"Range","","Matches one character in the range, e.g. `\'a\'..\'z\'`",2,null],[13,"Ident","","Matches the rule with the given name, e.g. `a`",2,null],[13,"PeekSlice","","Matches a custom part of the stack, e.g. `PEEK[..]`",2,null],[13,"PosPred","","Positive lookahead; matches expression without making…",2,null],[13,"NegPred","","Negative lookahead; matches if expression doesn\'t match,…",2,null],[13,"Seq","","Matches a sequence of two expressions, e.g. `e1 ~ e2`",2,null],[13,"Choice","","Matches either of two expressions, e.g. `e1 | e2`",2,null],[13,"Opt","","Optionally matches an expression, e.g. `e?`",2,null],[13,"Rep","","Matches an expression zero or more times, e.g. `e*`",2,null],[13,"RepOnce","","Matches an expression one or more times, e.g. `e+`",2,null],[13,"RepExact","","Matches an expression an exact number of times, e.g. `e{n}`",2,null],[13,"RepMin","","Matches an expression at least a number of times, e.g.…",2,null],[13,"RepMax","","Matches an expression at most a number of times, e.g.…",2,null],[13,"RepMinMax","","Matches an expression a number of times within a range,…",2,null],[13,"Skip","","Continues to match expressions until one of the strings in…",2,null],[13,"Push","","Matches an expression and pushes it to the stack, e.g.…",2,null],[11,"iter_top_down","","",2,[[],["exprtopdowniterator",3]]],[11,"map_top_down","","",2,[[],["expr",4]]],[11,"map_bottom_up","","",2,[[],["expr",4]]],[11,"new","","",3,[[["expr",4]]]],[0,"optimizer","pest_meta","",null,null],[3,"OptimizedRule","pest_meta::optimizer","",null,null],[12,"name","","",4,null],[12,"ty","","",4,null],[12,"expr","","",4,null],[3,"OptimizedExprTopDownIterator","","",null,null],[4,"OptimizedExpr","","",null,null],[13,"Str","","",5,null],[13,"Insens","","",5,null],[13,"Range","","",5,null],[13,"Ident","","",5,null],[13,"PeekSlice","","",5,null],[13,"PosPred","","",5,null],[13,"NegPred","","",5,null],[13,"Seq","","",5,null],[13,"Choice","","",5,null],[13,"Opt","","",5,null],[13,"Rep","","",5,null],[13,"Skip","","",5,null],[13,"Push","","",5,null],[13,"RestoreOnErr","","",5,null],[5,"optimize","","",null,[[["rule",3],["vec",3]],[["vec",3],["optimizedrule",3]]]],[11,"iter_top_down","","",5,[[],["optimizedexprtopdowniterator",3]]],[11,"map_top_down","","",5,[[],["optimizedexpr",4]]],[11,"map_bottom_up","","",5,[[],["optimizedexpr",4]]],[11,"new","","",6,[[["optimizedexpr",4]]]],[0,"parser","pest_meta","",null,null],[3,"PestParser","pest_meta::parser","",null,null],[3,"ParserRule","","",null,null],[12,"name","","",7,null],[12,"span","","",7,null],[12,"ty","","",7,null],[12,"node","","",7,null],[3,"ParserNode","","",null,null],[12,"expr","","",8,null],[12,"span","","",8,null],[4,"Rule","","",null,null],[13,"EOI","","",9,null],[13,"grammar_rules","","",9,null],[13,"grammar_rule","","",9,null],[13,"assignment_operator","","",9,null],[13,"opening_brace","","",9,null],[13,"closing_brace","","",9,null],[13,"opening_paren","","",9,null],[13,"closing_paren","","",9,null],[13,"opening_brack","","",9,null],[13,"closing_brack","","",9,null],[13,"modifier","","",9,null],[13,"silent_modifier","","",9,null],[13,"atomic_modifier","","",9,null],[13,"compound_atomic_modifier","","",9,null],[13,"non_atomic_modifier","","",9,null],[13,"expression","","",9,null],[13,"term","","",9,null],[13,"node","","",9,null],[13,"terminal","","",9,null],[13,"prefix_operator","","",9,null],[13,"infix_operator","","",9,null],[13,"postfix_operator","","",9,null],[13,"positive_predicate_operator","","",9,null],[13,"negative_predicate_operator","","",9,null],[13,"sequence_operator","","",9,null],[13,"choice_operator","","",9,null],[13,"optional_operator","","",9,null],[13,"repeat_operator","","",9,null],[13,"repeat_once_operator","","",9,null],[13,"repeat_exact","","",9,null],[13,"repeat_min","","",9,null],[13,"repeat_max","","",9,null],[13,"repeat_min_max","","",9,null],[13,"number","","",9,null],[13,"integer","","",9,null],[13,"comma","","",9,null],[13,"_push","","",9,null],[13,"peek_slice","","",9,null],[13,"identifier","","",9,null],[13,"alpha","","",9,null],[13,"alpha_num","","",9,null],[13,"string","","",9,null],[13,"insensitive_string","","",9,null],[13,"range","","",9,null],[13,"character","","",9,null],[13,"inner_str","","",9,null],[13,"inner_chr","","",9,null],[13,"escape","","",9,null],[13,"code","","",9,null],[13,"unicode","","",9,null],[13,"hex_digit","","",9,null],[13,"quote","","",9,null],[13,"single_quote","","",9,null],[13,"range_operator","","",9,null],[13,"newline","","",9,null],[13,"WHITESPACE","","",9,null],[13,"block_comment","","",9,null],[13,"COMMENT","","",9,null],[4,"ParserExpr","","",null,null],[13,"Str","","",10,null],[13,"Insens","","",10,null],[13,"Range","","",10,null],[13,"Ident","","",10,null],[13,"PeekSlice","","",10,null],[13,"PosPred","","",10,null],[13,"NegPred","","",10,null],[13,"Seq","","",10,null],[13,"Choice","","",10,null],[13,"Opt","","",10,null],[13,"Rep","","",10,null],[13,"RepOnce","","",10,null],[13,"RepExact","","",10,null],[13,"RepMin","","",10,null],[13,"RepMax","","",10,null],[13,"RepMinMax","","",10,null],[13,"Push","","",10,null],[5,"parse","","",null,[[["rule",4]],[["pairs",3],["result",4],["error",3]]]],[5,"consume_rules","","",null,[[["rule",4],["pairs",3]],[["vec",3],["vec",3],["result",4]]]],[11,"filter_map_top_down","","",8,[[],["vec",3]]],[0,"validator","pest_meta","",null,null],[5,"validate_pairs","pest_meta::validator","",null,[[["pairs",3],["rule",4]],[["result",4],["vec",3],["vec",3]]]],[5,"validate_rust_keywords","","",null,[[["vec",3],["hashset",3]],[["vec",3],["error",3]]]],[5,"validate_pest_keywords","","",null,[[["vec",3],["hashset",3]],[["vec",3],["error",3]]]],[5,"validate_already_defined","","",null,[[["vec",3]],[["vec",3],["error",3]]]],[5,"validate_undefined","","",null,[[["vec",3],["hashset",3]],[["vec",3],["error",3]]]],[5,"validate_ast","","",null,[[["vec",3]],[["vec",3],["error",3]]]],[11,"from","pest_meta::ast","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"into_iter","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","pest_meta::optimizer","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"into_iter","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","pest_meta::parser","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"next","pest_meta::ast","",3,[[],["option",4]]],[11,"next","pest_meta::optimizer","",6,[[],["option",4]]],[11,"clone","pest_meta::ast","",0,[[],["rule",3]]],[11,"clone","","",1,[[],["ruletype",4]]],[11,"clone","","",2,[[],["expr",4]]],[11,"clone","pest_meta::optimizer","",4,[[],["optimizedrule",3]]],[11,"clone","","",5,[[],["optimizedexpr",4]]],[11,"clone","pest_meta::parser","",9,[[],["rule",4]]],[11,"clone","","",7,[[],["parserrule",3]]],[11,"clone","","",8,[[],["parsernode",3]]],[11,"clone","","",10,[[],["parserexpr",4]]],[11,"cmp","","",9,[[["rule",4]],["ordering",4]]],[11,"eq","pest_meta::ast","",0,[[["rule",3]]]],[11,"ne","","",0,[[["rule",3]]]],[11,"eq","","",1,[[["ruletype",4]]]],[11,"eq","","",2,[[["expr",4]]]],[11,"ne","","",2,[[["expr",4]]]],[11,"eq","pest_meta::optimizer","",4,[[["optimizedrule",3]]]],[11,"ne","","",4,[[["optimizedrule",3]]]],[11,"eq","","",5,[[["optimizedexpr",4]]]],[11,"ne","","",5,[[["optimizedexpr",4]]]],[11,"eq","pest_meta::parser","",9,[[["rule",4]]]],[11,"eq","","",7,[[["parserrule",3]]]],[11,"ne","","",7,[[["parserrule",3]]]],[11,"eq","","",8,[[["parsernode",3]]]],[11,"ne","","",8,[[["parsernode",3]]]],[11,"eq","","",10,[[["parserexpr",4]]]],[11,"ne","","",10,[[["parserexpr",4]]]],[11,"partial_cmp","","",9,[[["rule",4]],[["ordering",4],["option",4]]]],[11,"fmt","pest_meta::ast","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","pest_meta::optimizer","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","pest_meta::parser","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"hash","","",9,[[]]],[11,"parse","","",11,[[["rule",4]],[["result",4],["pairs",3],["error",3]]]]],"p":[[3,"Rule"],[4,"RuleType"],[4,"Expr"],[3,"ExprTopDownIterator"],[3,"OptimizedRule"],[4,"OptimizedExpr"],[3,"OptimizedExprTopDownIterator"],[3,"ParserRule"],[3,"ParserNode"],[4,"Rule"],[4,"ParserExpr"],[3,"PestParser"]]},\
"plain":{"doc":"A small Rust library that allows users to interpret arrays…","i":[[4,"Error","plain","",null,null],[13,"TooShort","","",0,null],[13,"BadAlignment","","",0,null],[5,"as_bytes","","Interpret data as bytes. Not safe for data with padding.",null,[[]]],[5,"as_mut_bytes","","Interpret data as mutable bytes. Reading is not safe for…",null,[[]]],[5,"copy_from_bytes","","Copies data from a byte slice into existing memory.…",null,[[],[["result",4],["error",4]]]],[5,"from_bytes","","Safely converts a byte slice to a reference.",null,[[],[["result",4],["error",4]]]],[5,"from_mut_bytes","","See `from_bytes()`.",null,[[],[["error",4],["result",4]]]],[5,"is_aligned","","Check if a byte slice is aligned suitably for type T.",null,[[]]],[5,"slice_from_bytes","","Similar to `from_bytes()`, except that the output is a…",null,[[],[["result",4],["error",4]]]],[5,"slice_from_bytes_len","","Same as `slice_from_bytes()`, except that it takes…",null,[[],[["result",4],["error",4]]]],[5,"slice_from_mut_bytes","","See `slice_from_bytes()`.",null,[[],[["result",4],["error",4]]]],[5,"slice_from_mut_bytes_len","","See `slice_from_bytes_len()`.",null,[[],[["result",4],["error",4]]]],[8,"Plain","","A trait for plain data types that can be safely read from…",null,null],[11,"from_bytes","","",1,[[],[["error",4],["result",4]]]],[11,"slice_from_bytes","","",1,[[],[["result",4],["error",4]]]],[11,"slice_from_bytes_len","","",1,[[],[["result",4],["error",4]]]],[11,"from_mut_bytes","","",1,[[],[["error",4],["result",4]]]],[11,"slice_from_mut_bytes","","",1,[[],[["result",4],["error",4]]]],[11,"slice_from_mut_bytes_len","","",1,[[],[["result",4],["error",4]]]],[11,"copy_from_bytes","","",1,[[],[["result",4],["error",4]]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"eq","","",0,[[["error",4]]]],[11,"clone","","",0,[[],["error",4]]],[11,"from_bytes","","",1,[[],[["error",4],["result",4]]]],[11,"slice_from_bytes","","",1,[[],[["result",4],["error",4]]]],[11,"slice_from_bytes_len","","",1,[[],[["result",4],["error",4]]]],[11,"from_mut_bytes","","",1,[[],[["error",4],["result",4]]]],[11,"slice_from_mut_bytes","","",1,[[],[["result",4],["error",4]]]],[11,"slice_from_mut_bytes_len","","",1,[[],[["result",4],["error",4]]]],[11,"copy_from_bytes","","",1,[[],[["result",4],["error",4]]]]],"p":[[4,"Error"],[8,"Plain"]]},\
"ppv_lite86":{"doc":"","i":[[0,"x86_64","ppv_lite86","",null,null],[3,"YesS3","ppv_lite86::x86_64","",null,null],[3,"NoS3","","",null,null],[3,"YesS4","","",null,null],[3,"NoS4","","",null,null],[3,"YesA1","","",null,null],[3,"NoA1","","",null,null],[3,"YesA2","","",null,null],[3,"NoA2","","",null,null],[3,"YesNI","","",null,null],[3,"NoNI","","",null,null],[3,"SseMachine","","",null,null],[3,"Avx2Machine","","",null,null],[19,"vec128_storage","","Generic wrapper for unparameterized storage of any of the…",null,null],[19,"vec256_storage","","",null,null],[19,"vec512_storage","","",null,null],[6,"SSE2","","",null,null],[6,"SSSE3","","",null,null],[6,"SSE41","","",null,null],[6,"AVX","","AVX but not AVX2: only 128-bit integer operations, but use…",null,null],[6,"AVX2","","",null,null],[11,"new128","","",0,[[]]],[11,"split128","","",0,[[]]],[11,"new128","","",1,[[]]],[11,"split128","","",1,[[]]],[8,"AndNot","ppv_lite86","",null,null],[16,"Output","","",2,null],[10,"andnot","","",2,[[]]],[8,"BSwap","","",null,null],[10,"bswap","","",3,[[]]],[8,"ArithOps","","Ops that depend on word size",null,null],[8,"BitOps0","","Ops that are independent of word size and endian",null,null],[8,"BitOps32","","",null,null],[8,"BitOps64","","",null,null],[8,"BitOps128","","",null,null],[8,"RotateEachWord32","","",null,null],[10,"rotate_each_word_right7","","",4,[[]]],[10,"rotate_each_word_right8","","",4,[[]]],[10,"rotate_each_word_right11","","",4,[[]]],[10,"rotate_each_word_right12","","",4,[[]]],[10,"rotate_each_word_right16","","",4,[[]]],[10,"rotate_each_word_right20","","",4,[[]]],[10,"rotate_each_word_right24","","",4,[[]]],[10,"rotate_each_word_right25","","",4,[[]]],[8,"RotateEachWord64","","",null,null],[10,"rotate_each_word_right32","","",5,[[]]],[8,"RotateEachWord128","","",null,null],[8,"UnsafeFrom","","",null,null],[10,"unsafe_from","","",6,[[]]],[8,"Vec2","","A vector composed of two elements, which may be words or…",null,null],[10,"extract","","",7,[[]]],[10,"insert","","",7,[[]]],[8,"Vec4","","A vector composed of four elements, which may be words or…",null,null],[10,"extract","","",8,[[]]],[10,"insert","","",8,[[]]],[8,"Words4","","A vector composed of four words; depending on their size,…",null,null],[10,"shuffle1230","","",9,[[]]],[10,"shuffle2301","","",9,[[]]],[10,"shuffle3012","","",9,[[]]],[8,"LaneWords4","","A vector composed one or more lanes each composed of four…",null,null],[10,"shuffle_lane_words1230","","",10,[[]]],[10,"shuffle_lane_words2301","","",10,[[]]],[10,"shuffle_lane_words3012","","",10,[[]]],[8,"Swap64","","Exchange neigboring ranges of bits of the specified size",null,null],[10,"swap1","","",11,[[]]],[10,"swap2","","",11,[[]]],[10,"swap4","","",11,[[]]],[10,"swap8","","",11,[[]]],[10,"swap16","","",11,[[]]],[10,"swap32","","",11,[[]]],[10,"swap64","","",11,[[]]],[8,"u32x4","","",null,null],[8,"u64x2","","",null,null],[8,"u128x1","","",null,null],[8,"u32x4x2","","",null,null],[8,"u64x2x2","","",null,null],[8,"u64x4","","",null,null],[8,"u128x2","","",null,null],[8,"u32x4x4","","",null,null],[8,"u64x2x4","","",null,null],[8,"u128x4","","",null,null],[8,"MultiLane","","A vector composed of multiple 128-bit lanes.",null,null],[10,"to_lanes","","Split a multi-lane vector into single-lane vectors.",12,[[]]],[10,"from_lanes","","Build a multi-lane vector from individual lanes.",12,[[]]],[8,"VZip","","Combine single vectors into a multi-lane vector.",null,null],[10,"vzip","","",13,[[]]],[8,"Machine","","",null,null],[16,"u32x4","","",14,null],[16,"u64x2","","",14,null],[16,"u128x1","","",14,null],[16,"u32x4x2","","",14,null],[16,"u64x2x2","","",14,null],[16,"u64x4","","",14,null],[16,"u128x2","","",14,null],[16,"u32x4x4","","",14,null],[16,"u64x2x4","","",14,null],[16,"u128x4","","",14,null],[11,"unpack","","",14,[[],["store",8]]],[11,"vec","","",14,[[]]],[11,"read_le","","",14,[[]]],[11,"read_be","","",14,[[]]],[10,"instance","","",14,[[]]],[8,"Store","","",null,null],[10,"unpack","","",15,[[]]],[8,"StoreBytes","","",null,null],[10,"unsafe_read_le","","",16,[[]]],[10,"unsafe_read_be","","",16,[[]]],[10,"write_le","","",16,[[]]],[10,"write_be","","",16,[[]]],[14,"dispatch","","Generate the full set of optimized implementations to take…",null,null],[14,"dispatch_light128","","Generate only the basic implementations necessary to be…",null,null],[14,"dispatch_light256","","Generate only the basic implementations necessary to be…",null,null],[11,"from","ppv_lite86::x86_64","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"instance","","",27,[[]]],[11,"instance","","",28,[[]]],[11,"unpack","","",29,[[["vec128_storage",19]]]],[11,"eq","","",29,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",1,[[]]],[11,"into","","",29,[[]]],[11,"into","","",29,[[]]],[11,"into","","",29,[[]]],[11,"into","","",0,[[]]],[11,"into","","",0,[[]]],[11,"into","","",0,[[]]],[11,"into","","",1,[[]]],[11,"into","","",1,[[]]],[11,"into","","",1,[[]]],[11,"clone","","",17,[[],["yess3",3]]],[11,"clone","","",18,[[],["nos3",3]]],[11,"clone","","",19,[[],["yess4",3]]],[11,"clone","","",20,[[],["nos4",3]]],[11,"clone","","",21,[[],["yesa1",3]]],[11,"clone","","",22,[[],["noa1",3]]],[11,"clone","","",23,[[],["yesa2",3]]],[11,"clone","","",24,[[],["noa2",3]]],[11,"clone","","",25,[[],["yesni",3]]],[11,"clone","","",26,[[],["noni",3]]],[11,"clone","","",27,[[],["ssemachine",3]]],[11,"clone","","",28,[[],["avx2machine",3]]],[11,"clone","","",29,[[],["vec128_storage",19]]],[11,"clone","","",0,[[],["vec256_storage",19]]],[11,"clone","","",1,[[],["vec512_storage",19]]],[11,"default","","",29,[[]]],[11,"default","","",0,[[]]],[11,"default","","",1,[[]]],[11,"unpack","ppv_lite86","",14,[[],["store",8]]],[11,"vec","","",14,[[]]],[11,"read_le","","",14,[[]]],[11,"read_be","","",14,[[]]]],"p":[[19,"vec256_storage"],[19,"vec512_storage"],[8,"AndNot"],[8,"BSwap"],[8,"RotateEachWord32"],[8,"RotateEachWord64"],[8,"UnsafeFrom"],[8,"Vec2"],[8,"Vec4"],[8,"Words4"],[8,"LaneWords4"],[8,"Swap64"],[8,"MultiLane"],[8,"VZip"],[8,"Machine"],[8,"Store"],[8,"StoreBytes"],[3,"YesS3"],[3,"NoS3"],[3,"YesS4"],[3,"NoS4"],[3,"YesA1"],[3,"NoA1"],[3,"YesA2"],[3,"NoA2"],[3,"YesNI"],[3,"NoNI"],[3,"SseMachine"],[3,"Avx2Machine"],[19,"vec128_storage"]]},\
"proc_macro2":{"doc":"A wrapper around the procedural macro API of the…","i":[[3,"TokenStream","proc_macro2","An abstract stream of tokens, or more concretely a…",null,null],[3,"LexError","","Error returned from `TokenStream::from_str`.",null,null],[3,"Span","","A region of source code, along with macro expansion…",null,null],[3,"Group","","A delimited token stream.",null,null],[3,"Punct","","An `Punct` is an single punctuation character like `+`,…",null,null],[3,"Ident","","A word of Rust code, which may be a keyword or legal…",null,null],[3,"Literal","","A literal string (`\\\"hello\\\"`), byte string (`b\\\"hello\\\"`),…",null,null],[4,"TokenTree","","A single token or a delimited sequence of token trees…",null,null],[13,"Group","","A token stream surrounded by bracket delimiters.",0,null],[13,"Ident","","An identifier.",0,null],[13,"Punct","","A single punctuation character (`+`, `,`, `$`, etc.).",0,null],[13,"Literal","","A literal character (`\'a\'`), string (`\\\"hello\\\"`), number…",0,null],[4,"Delimiter","","Describes how a sequence of token trees is delimited.",null,null],[13,"Parenthesis","","`( ... )`",1,null],[13,"Brace","","`{ ... }`",1,null],[13,"Bracket","","`[ ... ]`",1,null],[13,"None","","`Ø ... Ø`",1,null],[4,"Spacing","","Whether an `Punct` is followed immediately by another…",null,null],[13,"Alone","","E.g. `+` is `Alone` in `+ =`, `+ident` or `+()`.",2,null],[13,"Joint","","E.g. `+` is `Joint` in `+=` or `\'#`.",2,null],[0,"token_stream","","Public implementation details for the `TokenStream` type,…",null,null],[3,"IntoIter","proc_macro2::token_stream","An iterator over `TokenStream`\'s `TokenTree`s.",null,null],[11,"new","proc_macro2","Returns an empty `TokenStream` containing no token trees.",3,[[],["tokenstream",3]]],[11,"empty","","",3,[[],["tokenstream",3]]],[11,"is_empty","","Checks if this `TokenStream` is empty.",3,[[]]],[11,"call_site","","The span of the invocation of the current procedural macro.",4,[[],["span",3]]],[11,"unwrap","","Convert `proc_macro2::Span` to `proc_macro::Span`.",4,[[],["span",3]]],[11,"span","","Returns the span of this tree, delegating to the `span`…",0,[[],["span",3]]],[11,"set_span","","Configures the span for only this token.",0,[[["span",3]]]],[11,"new","","Creates a new `Group` with the given delimiter and token…",5,[[["tokenstream",3],["delimiter",4]],["group",3]]],[11,"delimiter","","Returns the delimiter of this `Group`",5,[[],["delimiter",4]]],[11,"stream","","Returns the `TokenStream` of tokens that are delimited in…",5,[[],["tokenstream",3]]],[11,"span","","Returns the span for the delimiters of this token stream,…",5,[[],["span",3]]],[11,"set_span","","Configures the span for this `Group`\'s delimiters, but not…",5,[[["span",3]]]],[11,"new","","Creates a new `Punct` from the given character and spacing.",6,[[["spacing",4]],["punct",3]]],[11,"as_char","","Returns the value of this punctuation character as `char`.",6,[[]]],[11,"spacing","","Returns the spacing of this punctuation character,…",6,[[],["spacing",4]]],[11,"span","","Returns the span for this punctuation character.",6,[[],["span",3]]],[11,"set_span","","Configure the span for this punctuation character.",6,[[["span",3]]]],[11,"new","","Creates a new `Ident` with the given `string` as well as…",7,[[["span",3]],["ident",3]]],[11,"span","","Returns the span of this `Ident`.",7,[[],["span",3]]],[11,"set_span","","Configures the span of this `Ident`, possibly changing its…",7,[[["span",3]]]],[11,"u8_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[],["literal",3]]],[11,"u16_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[],["literal",3]]],[11,"u32_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[],["literal",3]]],[11,"u64_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[],["literal",3]]],[11,"usize_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[],["literal",3]]],[11,"i8_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[],["literal",3]]],[11,"i16_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[],["literal",3]]],[11,"i32_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[],["literal",3]]],[11,"i64_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[],["literal",3]]],[11,"isize_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[],["literal",3]]],[11,"u128_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[],["literal",3]]],[11,"i128_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[],["literal",3]]],[11,"u8_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[],["literal",3]]],[11,"u16_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[],["literal",3]]],[11,"u32_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[],["literal",3]]],[11,"u64_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[],["literal",3]]],[11,"usize_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[],["literal",3]]],[11,"i8_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[],["literal",3]]],[11,"i16_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[],["literal",3]]],[11,"i32_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[],["literal",3]]],[11,"i64_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[],["literal",3]]],[11,"isize_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[],["literal",3]]],[11,"u128_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[],["literal",3]]],[11,"i128_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[],["literal",3]]],[11,"f64_unsuffixed","","",8,[[],["literal",3]]],[11,"f64_suffixed","","",8,[[],["literal",3]]],[11,"f32_unsuffixed","","Creates a new unsuffixed floating-point literal.",8,[[],["literal",3]]],[11,"f32_suffixed","","",8,[[],["literal",3]]],[11,"string","","",8,[[],["literal",3]]],[11,"character","","",8,[[],["literal",3]]],[11,"byte_string","","",8,[[],["literal",3]]],[11,"span","","",8,[[],["span",3]]],[11,"set_span","","",8,[[["span",3]]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"into_iter","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","proc_macro2::token_stream","",10,[[]]],[11,"into","","",10,[[]]],[11,"into_iter","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","proc_macro2","",4,[[["span",3]],["span",3]]],[11,"from","","",3,[[["tokenstream",3]],["tokenstream",3]]],[11,"from","","",0,[[["group",3]],["tokentree",4]]],[11,"from","","",0,[[["ident",3]],["tokentree",4]]],[11,"from","","",0,[[["punct",3]],["tokentree",4]]],[11,"from","","",0,[[["literal",3]],["tokentree",4]]],[11,"extend","","",3,[[["intoiterator",8]]]],[11,"extend","","",3,[[["intoiterator",8]]]],[11,"into_iter","","",3,[[],["intoiter",3]]],[11,"next","proc_macro2::token_stream","",10,[[],[["option",4],["tokentree",4]]]],[11,"clone","proc_macro2","",3,[[],["tokenstream",3]]],[11,"clone","","",4,[[],["span",3]]],[11,"clone","","",0,[[],["tokentree",4]]],[11,"clone","","",5,[[],["group",3]]],[11,"clone","","",1,[[],["delimiter",4]]],[11,"clone","","",6,[[],["punct",3]]],[11,"clone","","",2,[[],["spacing",4]]],[11,"clone","","",7,[[],["ident",3]]],[11,"clone","","",8,[[],["literal",3]]],[11,"clone","proc_macro2::token_stream","",10,[[],["intoiter",3]]],[11,"default","proc_macro2","",3,[[]]],[11,"cmp","","",7,[[["ident",3]],["ordering",4]]],[11,"eq","","",1,[[["delimiter",4]]]],[11,"eq","","",2,[[["spacing",4]]]],[11,"eq","","",7,[[["ident",3]]]],[11,"eq","","",7,[[]]],[11,"partial_cmp","","",7,[[["ident",3]],[["option",4],["ordering",4]]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","proc_macro2::token_stream","",10,[[["formatter",3]],["result",6]]],[11,"fmt","proc_macro2","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"hash","","",7,[[]]],[11,"from_str","","",3,[[],[["tokenstream",3],["lexerror",3],["result",4]]]],[11,"from_iter","","",3,[[["intoiterator",8]]]],[11,"from_iter","","",3,[[["intoiterator",8]]]]],"p":[[4,"TokenTree"],[4,"Delimiter"],[4,"Spacing"],[3,"TokenStream"],[3,"Span"],[3,"Group"],[3,"Punct"],[3,"Ident"],[3,"Literal"],[3,"LexError"],[3,"IntoIter"]]},\
"proc_macro_hack":{"doc":"Defining procedural macrosTwo crates are required to…","i":[[14,"proc_macro_expr_decl","proc_macro_hack","Declare a hacky procedural macro that expands to an…",null,null],[14,"proc_macro_item_decl","","Declare a hacky procedural macro that expands to items.",null,null],[14,"proc_macro_expr_impl","","Implement a hacky procedural macro that expands to an…",null,null],[14,"proc_macro_item_impl","","Implement a hacky procedural macro that expands to items.",null,null]],"p":[]},\
"proc_macro_hack_impl":{"doc":"","i":[[24,"ProcMacroHackExpr","proc_macro_hack_impl","",null,null],[24,"ProcMacroHackItem","","",null,null]],"p":[]},\
"py_literal":{"doc":"This crate provides a type `Value` that represents a…","i":[[4,"FormatError","py_literal","Error formatting a Python literal.",null,null],[13,"Io","","An error caused by the writer.",0,null],[13,"EmptySet","","The literal contained an empty set.",0,null],[4,"ParseError","","Error parsing a Python literal.",null,null],[13,"Syntax","","A syntax error.",1,null],[13,"IllegalEscapeSequence","","An illegal escape sequence in a string or bytes literal.",1,null],[13,"ParseFloat","","An error parsing a float. This might happen if the…",1,null],[13,"NumericCast","","An error in a numeric cast. For example, this might occur…",1,null],[4,"Value","","Python literal.",null,null],[13,"String","","Python string (`str`). When parsing, backslash escapes are…",2,null],[13,"Bytes","","Python byte sequence (`bytes`). When parsing, backslash…",2,null],[13,"Integer","","Python integer (`int`). Python integers have unlimited…",2,null],[13,"Float","","Python floating-point number (`float`). The representation…",2,null],[13,"Complex","","Python complex number (`complex`). The Python `complex`…",2,null],[13,"Tuple","","Python tuple (`tuple`).",2,null],[13,"List","","Python list (`list`).",2,null],[13,"Dict","","Python dictionary (`dict`).",2,null],[13,"Set","","Python set (`set`).",2,null],[13,"Boolean","","Python boolean (`bool`).",2,null],[13,"None","","Python `None`.",2,null],[11,"format_ascii","","Formats the value as an ASCII string.",2,[[],[["formaterror",4],["result",4],["string",3]]]],[11,"write_ascii","","Writes the value as ASCII.",2,[[],[["result",4],["formaterror",4]]]],[11,"is_string","","Returns `true` if `self` is `Value::String`. Returns…",2,[[]]],[11,"as_string","","If `self` is `Value::String`, returns the associated…",2,[[],[["option",4],["string",3]]]],[11,"is_bytes","","Returns `true` if `self` is `Value::Bytes`. Returns…",2,[[]]],[11,"as_bytes","","If `self` is `Value::Bytes`, returns the associated bytes.…",2,[[],[["option",4],["vec",3]]]],[11,"is_integer","","Returns `true` if `self` is `Value::Integer`. Returns…",2,[[]]],[11,"as_integer","","If `self` is `Value::Integer`, returns the associated…",2,[[],[["option",4],["bigint",3]]]],[11,"is_float","","Returns `true` if `self` is `Value::Float`. Returns…",2,[[]]],[11,"as_float","","If `self` is `Value::Float`, returns the associated float.…",2,[[],["option",4]]],[11,"is_complex","","Returns `true` if `self` is `Value::Complex`. Returns…",2,[[]]],[11,"as_complex","","If `self` is `Value::Complex`, returns the associated…",2,[[],[["option",4],["complex",3]]]],[11,"is_tuple","","Returns `true` if `self` is `Value::Tuple`. Returns…",2,[[]]],[11,"as_tuple","","If `self` is `Value::Tuple`, returns the associated data.…",2,[[],[["option",4],["vec",3]]]],[11,"is_list","","Returns `true` if `self` is `Value::List`. Returns `false`…",2,[[]]],[11,"as_list","","If `self` is `Value::List`, returns the associated data.…",2,[[],[["option",4],["vec",3]]]],[11,"is_dict","","Returns `true` if `self` is `Value::Dict`. Returns `false`…",2,[[]]],[11,"as_dict","","If `self` is `Value::Dict`, returns the associated data.…",2,[[],[["option",4],["vec",3]]]],[11,"is_set","","Returns `true` if `self` is `Value::Set`. Returns `false`…",2,[[]]],[11,"as_set","","If `self` is `Value::Set`, returns the associated data.…",2,[[],[["option",4],["vec",3]]]],[11,"is_boolean","","Returns `true` if `self` is `Value::Boolean`. Returns…",2,[[]]],[11,"as_boolean","","If `self` is `Value::Boolean`, returns the associated…",2,[[],["option",4]]],[11,"is_none","","Returns `true` if `self` is `Value::None`. Returns `false`…",2,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",0,[[["error",3]],["formaterror",4]]],[11,"from","","",1,[[["parsefloaterror",3]],["parseerror",4]]],[11,"clone","","",2,[[],["value",4]]],[11,"eq","","",2,[[["value",4]]]],[11,"ne","","",2,[[["value",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","Formats the value as a Python literal.",2,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from_str","","Parses a `Value` from a Python literal. The goal is for…",2,[[],[["parseerror",4],["result",4]]]],[11,"source","","",0,[[],[["option",4],["error",8]]]],[11,"source","","",1,[[],[["option",4],["error",8]]]]],"p":[[4,"FormatError"],[4,"ParseError"],[4,"Value"]]},\
"pyo3":{"doc":"Rust bindings to the Python interpreter.","i":[[3,"PyDowncastError","pyo3","Marker type that indicates an error while downcasting",null,null],[3,"PyErr","","Represents a Python exception that was raised.",null,null],[12,"ptype","","The type of the exception. This should be either a…",0,null],[12,"pvalue","","The value of the exception.",0,null],[12,"ptraceback","","The `PyTraceBack` object associated with the error.",0,null],[3,"GILGuard","","RAII type that represents the Global Interpreter Lock…",null,null],[3,"GILPool","","A RAII pool which PyO3 uses to store owned Python…",null,null],[3,"Py","","A Python object of known type.",null,null],[3,"PyObject","","A Python object of any type.",null,null],[3,"Python","","Marker type that indicates that the GIL is currently held.",null,null],[3,"PyAny","","A Python object with GIL lifetime",null,null],[4,"PyErrValue","","Represents a `PyErr` value.",null,null],[13,"None","","",1,null],[13,"Value","","",1,null],[13,"ToArgs","","",1,null],[13,"ToObject","","",1,null],[5,"prepare_freethreaded_python","","Prepares the use of Python in a free-threaded context.",null,[[]]],[0,"buffer","","`PyBuffer` implementation",null,null],[3,"PyBuffer","pyo3::buffer","Allows access to the underlying buffer used by a python…",null,null],[3,"ReadOnlyCell","","Like `std::mem::cell`, but only provides read-only access…",null,null],[4,"ElementType","","",null,null],[13,"SignedInteger","","",2,null],[12,"bytes","pyo3::buffer::ElementType","",3,null],[13,"UnsignedInteger","pyo3::buffer","",2,null],[12,"bytes","pyo3::buffer::ElementType","",4,null],[13,"Bool","pyo3::buffer","",2,null],[13,"Float","","",2,null],[12,"bytes","pyo3::buffer::ElementType","",5,null],[13,"Unknown","pyo3::buffer","",2,null],[8,"Element","","Trait implemented for possible element types of `PyBuffer`.",null,null],[10,"is_compatible_format","","Gets whether the element specified in the format string is…",6,[[["cstr",3]]]],[11,"from_format","","",2,[[["cstr",3]],["elementtype",4]]],[11,"get","","Get the underlying buffer from the specified python object.",7,[[["pyany",3]],[["pybuffer",3],["pyresult",6]]]],[11,"buf_ptr","","Gets the pointer to the start of the buffer memory.",7,[[]]],[11,"get_ptr","","Gets a pointer to the specified item.",7,[[]]],[11,"readonly","","Gets whether the underlying buffer is read-only.",7,[[]]],[11,"item_size","","Gets the size of a single element, in bytes. Important…",7,[[]]],[11,"item_count","","Gets the total number of items.",7,[[]]],[11,"len_bytes","","`item_size() * item_count()`. For contiguous arrays, this…",7,[[]]],[11,"dimensions","","Gets the number of dimensions.",7,[[]]],[11,"shape","","Returns an array of length `dimensions`. `shape()[i]` is…",7,[[]]],[11,"strides","","Returns an array that holds, for each dimension, the…",7,[[]]],[11,"suboffsets","","An array of length ndim. If `suboffsets[n] >= 0`, the…",7,[[],["option",4]]],[11,"format","","A NUL terminated string in struct module style syntax…",7,[[],["cstr",3]]],[11,"is_c_contiguous","","Gets whether the buffer is contiguous in C-style order…",7,[[]]],[11,"is_fortran_contiguous","","Gets whether the buffer is contiguous in Fortran-style…",7,[[]]],[11,"as_slice","","Gets the buffer memory as a slice.",7,[[["python",3]],["option",4]]],[11,"as_mut_slice","","Gets the buffer memory as a slice.",7,[[["python",3]],["option",4]]],[11,"as_fortran_slice","","Gets the buffer memory as a slice.",7,[[["python",3]],["option",4]]],[11,"as_fortran_mut_slice","","Gets the buffer memory as a slice.",7,[[["python",3]],["option",4]]],[11,"copy_to_slice","","Copies the buffer elements to the specified slice. If the…",7,[[["python",3]],["pyresult",6]]],[11,"copy_to_fortran_slice","","Copies the buffer elements to the specified slice. If the…",7,[[["python",3]],["pyresult",6]]],[11,"to_vec","","Copies the buffer elements to a newly allocated vector. If…",7,[[["python",3]],[["pyresult",6],["vec",3]]]],[11,"to_fortran_vec","","Copies the buffer elements to a newly allocated vector. If…",7,[[["python",3]],[["pyresult",6],["vec",3]]]],[11,"copy_from_slice","","Copies the specified slice into the buffer. If the buffer…",7,[[["python",3]],["pyresult",6]]],[11,"copy_from_fortran_slice","","Copies the specified slice into the buffer. If the buffer…",7,[[["python",3]],["pyresult",6]]],[11,"release","","",7,[[["python",3]]]],[11,"get","","",8,[[]]],[11,"as_ptr","","",8,[[]]],[0,"class","pyo3","Python object protocols",null,null],[0,"basic","pyo3::class","Basic Python Object customization",null,null],[3,"PyObjectMethods","pyo3::class::basic","All FFI functions for basic protocols.",null,null],[12,"tp_str","","",9,null],[12,"tp_repr","","",9,null],[12,"tp_hash","","",9,null],[12,"tp_getattro","","",9,null],[12,"tp_richcompare","","",9,null],[12,"tp_setattro","","",9,null],[12,"nb_bool","","",9,null],[4,"CompareOp","","Operators for the richcmp method",null,null],[13,"Lt","","",10,null],[13,"Le","","",10,null],[13,"Eq","","",10,null],[13,"Ne","","",10,null],[13,"Gt","","",10,null],[13,"Ge","","",10,null],[8,"PyObjectProtocol","","Basic Python class customization",null,null],[11,"__getattr__","","",11,[[]]],[11,"__setattr__","","",11,[[]]],[11,"__delattr__","","",11,[[]]],[11,"__str__","","",11,[[]]],[11,"__repr__","","",11,[[]]],[11,"__format__","","",11,[[]]],[11,"__hash__","","",11,[[]]],[11,"__bytes__","","",11,[[]]],[11,"__richcmp__","","",11,[[["compareop",4]]]],[11,"__bool__","","",11,[[]]],[8,"PyObjectGetAttrProtocol","","",null,null],[16,"Name","","",12,null],[16,"Result","","",12,null],[8,"PyObjectSetAttrProtocol","","",null,null],[16,"Name","","",13,null],[16,"Value","","",13,null],[16,"Result","","",13,null],[8,"PyObjectDelAttrProtocol","","",null,null],[16,"Name","","",14,null],[16,"Result","","",14,null],[8,"PyObjectStrProtocol","","",null,null],[16,"Result","","",15,null],[8,"PyObjectReprProtocol","","",null,null],[16,"Result","","",16,null],[8,"PyObjectFormatProtocol","","",null,null],[16,"Format","","",17,null],[16,"Result","","",17,null],[8,"PyObjectHashProtocol","","",null,null],[16,"Result","","",18,null],[8,"PyObjectBoolProtocol","","",null,null],[16,"Result","","",19,null],[8,"PyObjectBytesProtocol","","",null,null],[16,"Result","","",20,null],[8,"PyObjectRichcmpProtocol","","",null,null],[16,"Other","","",21,null],[16,"Result","","",21,null],[0,"buffer","pyo3::class","Represent Python Buffer protocol implementation",null,null],[8,"PyBufferProtocol","pyo3::class::buffer","Buffer protocol interface",null,null],[11,"bf_getbuffer","","",22,[[["c_int",6],["pyrefmut",3]]]],[11,"bf_releasebuffer","","",22,[[["pyrefmut",3]]]],[8,"PyBufferGetBufferProtocol","","",null,null],[16,"Result","","",23,null],[8,"PyBufferReleaseBufferProtocol","","",null,null],[16,"Result","","",24,null],[0,"context","pyo3::class","Context manager api Trait and support implementation for…",null,null],[8,"PyContextProtocol","pyo3::class::context","Context manager interface",null,null],[11,"__enter__","","",25,[[]]],[11,"__exit__","","",25,[[["option",4],["option",4],["option",4]]]],[8,"PyContextEnterProtocol","","",null,null],[16,"Result","","",26,null],[8,"PyContextExitProtocol","","",null,null],[16,"ExcType","","",27,null],[16,"ExcValue","","",27,null],[16,"Traceback","","",27,null],[16,"Result","","",27,null],[0,"descr","pyo3::class","Python Description Interface",null,null],[3,"PyDescrMethods","pyo3::class::descr","All FFI functions for description protocols.",null,null],[12,"tp_descr_get","","",28,null],[12,"tp_descr_set","","",28,null],[8,"PyDescrProtocol","","Descriptor interface",null,null],[11,"__get__","","",29,[[["option",4]]]],[11,"__set__","","",29,[[]]],[11,"__delete__","","",29,[[["pyany",3]]]],[11,"__set_name__","","",29,[[["pyany",3]]]],[8,"PyDescrGetProtocol","","",null,null],[16,"Receiver","","",30,null],[16,"Inst","","",30,null],[16,"Owner","","",30,null],[16,"Result","","",30,null],[8,"PyDescrSetProtocol","","",null,null],[16,"Receiver","","",31,null],[16,"Inst","","",31,null],[16,"Value","","",31,null],[16,"Result","","",31,null],[8,"PyDescrDeleteProtocol","","",null,null],[16,"Inst","","",32,null],[16,"Result","","",32,null],[8,"PyDescrSetNameProtocol","","",null,null],[16,"Inst","","",33,null],[16,"Result","","",33,null],[0,"gc","pyo3::class","Python GC support",null,null],[3,"PyTraverseError","pyo3::class::gc","",null,null],[3,"PyGCMethods","","All FFI functions for gc protocols.",null,null],[12,"tp_traverse","","",34,null],[12,"tp_clear","","",34,null],[3,"PyVisit","","Object visitor for GC.",null,null],[8,"PyGCProtocol","","GC support",null,null],[10,"__traverse__","","",35,[[["pyvisit",3]],[["pytraverseerror",3],["result",4]]]],[10,"__clear__","","",35,[[]]],[8,"PyGCTraverseProtocol","","",null,null],[8,"PyGCClearProtocol","","",null,null],[11,"call","","Visit `obj`.",36,[[],[["pytraverseerror",3],["result",4]]]],[0,"iter","pyo3::class","Python Iterator Interface. Trait and support…",null,null],[3,"PyIterMethods","pyo3::class::iter","",null,null],[12,"tp_iter","","",37,null],[12,"tp_iternext","","",37,null],[4,"IterNextOutput","","Output of `__next__` which can either `yield` the next…",null,null],[13,"Yield","","",38,null],[13,"Return","","",38,null],[6,"PyIterNextOutput","","",null,null],[8,"PyIterProtocol","","Python Iterator Interface.",null,null],[11,"__iter__","","",39,[[]]],[11,"__next__","","",39,[[]]],[8,"PyIterIterProtocol","","",null,null],[16,"Receiver","","",40,null],[16,"Result","","",40,null],[8,"PyIterNextProtocol","","",null,null],[16,"Receiver","","",41,null],[16,"Result","","",41,null],[0,"mapping","pyo3::class","Python Mapping Interface Trait and support implementation…",null,null],[8,"PyMappingProtocol","pyo3::class::mapping","Mapping interface",null,null],[11,"__len__","","",42,[[]]],[11,"__getitem__","","",42,[[]]],[11,"__setitem__","","",42,[[]]],[11,"__delitem__","","",42,[[]]],[11,"__reversed__","","",42,[[]]],[8,"PyMappingLenProtocol","","",null,null],[16,"Result","","",43,null],[8,"PyMappingGetItemProtocol","","",null,null],[16,"Key","","",44,null],[16,"Result","","",44,null],[8,"PyMappingSetItemProtocol","","",null,null],[16,"Key","","",45,null],[16,"Value","","",45,null],[16,"Result","","",45,null],[8,"PyMappingDelItemProtocol","","",null,null],[16,"Key","","",46,null],[16,"Result","","",46,null],[8,"PyMappingReversedProtocol","","",null,null],[16,"Result","","",47,null],[0,"methods","pyo3::class","",null,null],[3,"PyMethodDef","pyo3::class::methods","",null,null],[12,"ml_name","","",48,null],[12,"ml_meth","","",48,null],[12,"ml_flags","","",48,null],[12,"ml_doc","","",48,null],[3,"PyClassAttributeDef","","",null,null],[12,"name","","",49,null],[12,"meth","","",49,null],[3,"PyGetterDef","","",null,null],[12,"name","","",50,null],[12,"meth","","",50,null],[12,"doc","","",50,null],[3,"PySetterDef","","",null,null],[12,"name","","",51,null],[12,"meth","","",51,null],[12,"doc","","",51,null],[4,"PyMethodDefType","","`PyMethodDefType` represents different types of Python…",null,null],[13,"New","","Represents class `__new__` method",52,null],[13,"Call","","Represents class `__call__` method",52,null],[13,"Class","","Represents class method",52,null],[13,"Static","","Represents static method",52,null],[13,"Method","","Represents normal method",52,null],[13,"ClassAttribute","","Represents class attribute, used by `#[attribute]`",52,null],[13,"Getter","","Represents getter descriptor, used by `#[getter]`",52,null],[13,"Setter","","Represents setter descriptor, used by `#[setter]`",52,null],[4,"PyMethodType","","",null,null],[13,"PyCFunction","","",53,null],[13,"PyCFunctionWithKeywords","","",53,null],[13,"PyNewFunc","","",53,null],[13,"PyInitFunc","","",53,null],[8,"PyMethods","","Indicates that the type `T` has some Python methods.",null,null],[11,"py_methods","","Returns all methods that are defined for a class.",54,[[],[["pymethoddeftype",4],["vec",3]]]],[11,"as_method_def","","Convert `PyMethodDef` to Python method definition struct…",48,[[],["pymethoddef",3]]],[11,"copy_to","","Copy descriptor information to `ffi::PyGetSetDef`",50,[[["pygetsetdef",3]]]],[11,"copy_to","","Copy descriptor information to `ffi::PyGetSetDef`",51,[[["pygetsetdef",3]]]],[0,"number","pyo3::class","Python Number Interface Trait and support implementation…",null,null],[8,"PyNumberProtocol","pyo3::class::number","Number interface",null,null],[11,"__add__","","",55,[[]]],[11,"__sub__","","",55,[[]]],[11,"__mul__","","",55,[[]]],[11,"__matmul__","","",55,[[]]],[11,"__truediv__","","",55,[[]]],[11,"__floordiv__","","",55,[[]]],[11,"__mod__","","",55,[[]]],[11,"__divmod__","","",55,[[]]],[11,"__pow__","","",55,[[["option",4]]]],[11,"__lshift__","","",55,[[]]],[11,"__rshift__","","",55,[[]]],[11,"__and__","","",55,[[]]],[11,"__xor__","","",55,[[]]],[11,"__or__","","",55,[[]]],[11,"__radd__","","",55,[[]]],[11,"__rsub__","","",55,[[]]],[11,"__rmul__","","",55,[[]]],[11,"__rmatmul__","","",55,[[]]],[11,"__rtruediv__","","",55,[[]]],[11,"__rfloordiv__","","",55,[[]]],[11,"__rmod__","","",55,[[]]],[11,"__rdivmod__","","",55,[[]]],[11,"__rpow__","","",55,[[["option",4]]]],[11,"__rlshift__","","",55,[[]]],[11,"__rrshift__","","",55,[[]]],[11,"__rand__","","",55,[[]]],[11,"__rxor__","","",55,[[]]],[11,"__ror__","","",55,[[]]],[11,"__iadd__","","",55,[[]]],[11,"__isub__","","",55,[[]]],[11,"__imul__","","",55,[[]]],[11,"__imatmul__","","",55,[[]]],[11,"__itruediv__","","",55,[[]]],[11,"__ifloordiv__","","",55,[[]]],[11,"__imod__","","",55,[[]]],[11,"__ipow__","","",55,[[]]],[11,"__ilshift__","","",55,[[]]],[11,"__irshift__","","",55,[[]]],[11,"__iand__","","",55,[[]]],[11,"__ixor__","","",55,[[]]],[11,"__ior__","","",55,[[]]],[11,"__neg__","","",55,[[]]],[11,"__pos__","","",55,[[]]],[11,"__abs__","","",55,[[]]],[11,"__invert__","","",55,[[]]],[11,"__complex__","","",55,[[]]],[11,"__int__","","",55,[[]]],[11,"__float__","","",55,[[]]],[11,"__index__","","",55,[[]]],[11,"__round__","","",55,[[["option",4]]]],[8,"PyNumberAddProtocol","","",null,null],[16,"Left","","",56,null],[16,"Right","","",56,null],[16,"Result","","",56,null],[8,"PyNumberSubProtocol","","",null,null],[16,"Left","","",57,null],[16,"Right","","",57,null],[16,"Result","","",57,null],[8,"PyNumberMulProtocol","","",null,null],[16,"Left","","",58,null],[16,"Right","","",58,null],[16,"Result","","",58,null],[8,"PyNumberMatmulProtocol","","",null,null],[16,"Left","","",59,null],[16,"Right","","",59,null],[16,"Result","","",59,null],[8,"PyNumberTruedivProtocol","","",null,null],[16,"Left","","",60,null],[16,"Right","","",60,null],[16,"Result","","",60,null],[8,"PyNumberFloordivProtocol","","",null,null],[16,"Left","","",61,null],[16,"Right","","",61,null],[16,"Result","","",61,null],[8,"PyNumberModProtocol","","",null,null],[16,"Left","","",62,null],[16,"Right","","",62,null],[16,"Result","","",62,null],[8,"PyNumberDivmodProtocol","","",null,null],[16,"Left","","",63,null],[16,"Right","","",63,null],[16,"Result","","",63,null],[8,"PyNumberPowProtocol","","",null,null],[16,"Left","","",64,null],[16,"Right","","",64,null],[16,"Modulo","","",64,null],[16,"Result","","",64,null],[8,"PyNumberLShiftProtocol","","",null,null],[16,"Left","","",65,null],[16,"Right","","",65,null],[16,"Result","","",65,null],[8,"PyNumberRShiftProtocol","","",null,null],[16,"Left","","",66,null],[16,"Right","","",66,null],[16,"Result","","",66,null],[8,"PyNumberAndProtocol","","",null,null],[16,"Left","","",67,null],[16,"Right","","",67,null],[16,"Result","","",67,null],[8,"PyNumberXorProtocol","","",null,null],[16,"Left","","",68,null],[16,"Right","","",68,null],[16,"Result","","",68,null],[8,"PyNumberOrProtocol","","",null,null],[16,"Left","","",69,null],[16,"Right","","",69,null],[16,"Result","","",69,null],[8,"PyNumberRAddProtocol","","",null,null],[16,"Other","","",70,null],[16,"Result","","",70,null],[8,"PyNumberRSubProtocol","","",null,null],[16,"Other","","",71,null],[16,"Result","","",71,null],[8,"PyNumberRMulProtocol","","",null,null],[16,"Other","","",72,null],[16,"Result","","",72,null],[8,"PyNumberRMatmulProtocol","","",null,null],[16,"Other","","",73,null],[16,"Result","","",73,null],[8,"PyNumberRTruedivProtocol","","",null,null],[16,"Other","","",74,null],[16,"Result","","",74,null],[8,"PyNumberRFloordivProtocol","","",null,null],[16,"Other","","",75,null],[16,"Result","","",75,null],[8,"PyNumberRModProtocol","","",null,null],[16,"Other","","",76,null],[16,"Result","","",76,null],[8,"PyNumberRDivmodProtocol","","",null,null],[16,"Other","","",77,null],[16,"Result","","",77,null],[8,"PyNumberRPowProtocol","","",null,null],[16,"Other","","",78,null],[16,"Modulo","","",78,null],[16,"Result","","",78,null],[8,"PyNumberRLShiftProtocol","","",null,null],[16,"Other","","",79,null],[16,"Result","","",79,null],[8,"PyNumberRRShiftProtocol","","",null,null],[16,"Other","","",80,null],[16,"Result","","",80,null],[8,"PyNumberRAndProtocol","","",null,null],[16,"Other","","",81,null],[16,"Result","","",81,null],[8,"PyNumberRXorProtocol","","",null,null],[16,"Other","","",82,null],[16,"Result","","",82,null],[8,"PyNumberROrProtocol","","",null,null],[16,"Other","","",83,null],[16,"Result","","",83,null],[8,"PyNumberIAddProtocol","","",null,null],[16,"Other","","",84,null],[16,"Result","","",84,null],[8,"PyNumberISubProtocol","","",null,null],[16,"Other","","",85,null],[16,"Result","","",85,null],[8,"PyNumberIMulProtocol","","",null,null],[16,"Other","","",86,null],[16,"Result","","",86,null],[8,"PyNumberIMatmulProtocol","","",null,null],[16,"Other","","",87,null],[16,"Result","","",87,null],[8,"PyNumberITruedivProtocol","","",null,null],[16,"Other","","",88,null],[16,"Result","","",88,null],[8,"PyNumberIFloordivProtocol","","",null,null],[16,"Other","","",89,null],[16,"Result","","",89,null],[8,"PyNumberIModProtocol","","",null,null],[16,"Other","","",90,null],[16,"Result","","",90,null],[8,"PyNumberIDivmodProtocol","","",null,null],[16,"Other","","",91,null],[16,"Result","","",91,null],[8,"PyNumberIPowProtocol","","",null,null],[16,"Other","","",92,null],[16,"Result","","",92,null],[8,"PyNumberILShiftProtocol","","",null,null],[16,"Other","","",93,null],[16,"Result","","",93,null],[8,"PyNumberIRShiftProtocol","","",null,null],[16,"Other","","",94,null],[16,"Result","","",94,null],[8,"PyNumberIAndProtocol","","",null,null],[16,"Other","","",95,null],[16,"Result","","",95,null],[8,"PyNumberIXorProtocol","","",null,null],[16,"Other","","",96,null],[16,"Result","","",96,null],[8,"PyNumberIOrProtocol","","",null,null],[16,"Other","","",97,null],[16,"Result","","",97,null],[8,"PyNumberNegProtocol","","",null,null],[16,"Result","","",98,null],[8,"PyNumberPosProtocol","","",null,null],[16,"Result","","",99,null],[8,"PyNumberAbsProtocol","","",null,null],[16,"Result","","",100,null],[8,"PyNumberInvertProtocol","","",null,null],[16,"Result","","",101,null],[8,"PyNumberComplexProtocol","","",null,null],[16,"Result","","",102,null],[8,"PyNumberIntProtocol","","",null,null],[16,"Result","","",103,null],[8,"PyNumberFloatProtocol","","",null,null],[16,"Result","","",104,null],[8,"PyNumberRoundProtocol","","",null,null],[16,"NDigits","","",105,null],[16,"Result","","",105,null],[8,"PyNumberIndexProtocol","","",null,null],[16,"Result","","",106,null],[0,"proto_methods","pyo3::class","",null,null],[8,"PyProtoMethods","pyo3::class::proto_methods","Defines all method tables we need for object protocols.",null,null],[11,"async_methods","","",107,[[],[["option",4],["nonnull",3]]]],[11,"basic_methods","","",107,[[],[["option",4],["nonnull",3]]]],[11,"buffer_methods","","",107,[[],[["nonnull",3],["option",4]]]],[11,"descr_methods","","",107,[[],[["option",4],["nonnull",3]]]],[11,"gc_methods","","",107,[[],[["nonnull",3],["option",4]]]],[11,"mapping_methods","","",107,[[],[["option",4],["nonnull",3]]]],[11,"number_methods","","",107,[[],[["option",4],["nonnull",3]]]],[11,"iter_methods","","",107,[[],[["option",4],["nonnull",3]]]],[11,"sequence_methods","","",107,[[],[["nonnull",3],["option",4]]]],[0,"pyasync","pyo3::class","Python Async/Await Interface.",null,null],[4,"IterANextOutput","pyo3::class::pyasync","",null,null],[13,"Yield","","",108,null],[13,"Return","","",108,null],[6,"PyIterANextOutput","","",null,null],[8,"PyAsyncProtocol","","Python Async/Await support interface.",null,null],[11,"__await__","","",109,[[]]],[11,"__aiter__","","",109,[[]]],[11,"__anext__","","",109,[[]]],[11,"__aenter__","","",109,[[]]],[11,"__aexit__","","",109,[[["option",4],["option",4],["option",4]]]],[8,"PyAsyncAwaitProtocol","","",null,null],[16,"Receiver","","",110,null],[16,"Result","","",110,null],[8,"PyAsyncAiterProtocol","","",null,null],[16,"Receiver","","",111,null],[16,"Result","","",111,null],[8,"PyAsyncAnextProtocol","","",null,null],[16,"Receiver","","",112,null],[16,"Result","","",112,null],[8,"PyAsyncAenterProtocol","","",null,null],[16,"Result","","",113,null],[8,"PyAsyncAexitProtocol","","",null,null],[16,"ExcType","","",114,null],[16,"ExcValue","","",114,null],[16,"Traceback","","",114,null],[16,"Result","","",114,null],[0,"sequence","pyo3::class","Python Sequence Interface Trait and support implementation…",null,null],[8,"PySequenceProtocol","pyo3::class::sequence","Sequence interface",null,null],[11,"__len__","","",115,[[]]],[11,"__getitem__","","",115,[[]]],[11,"__setitem__","","",115,[[]]],[11,"__delitem__","","",115,[[]]],[11,"__contains__","","",115,[[]]],[11,"__concat__","","",115,[[]]],[11,"__repeat__","","",115,[[]]],[11,"__inplace_concat__","","",115,[[]]],[11,"__inplace_repeat__","","",115,[[]]],[8,"PySequenceLenProtocol","","",null,null],[16,"Result","","",116,null],[8,"PySequenceGetItemProtocol","","",null,null],[16,"Index","","",117,null],[16,"Result","","",117,null],[8,"PySequenceSetItemProtocol","","",null,null],[16,"Index","","",118,null],[16,"Value","","",118,null],[16,"Result","","",118,null],[8,"PySequenceDelItemProtocol","","",null,null],[16,"Index","","",119,null],[16,"Result","","",119,null],[8,"PySequenceContainsProtocol","","",null,null],[16,"Item","","",120,null],[16,"Result","","",120,null],[8,"PySequenceConcatProtocol","","",null,null],[16,"Other","","",121,null],[16,"Result","","",121,null],[8,"PySequenceRepeatProtocol","","",null,null],[16,"Index","","",122,null],[16,"Result","","",122,null],[8,"PySequenceInplaceConcatProtocol","","",null,null],[16,"Other","","",123,null],[16,"Result","","",123,null],[8,"PySequenceInplaceRepeatProtocol","","",null,null],[16,"Index","","",124,null],[16,"Result","","",124,null],[0,"conversion","pyo3","Conversions between various states of Rust and Python…",null,null],[8,"AsPyPointer","pyo3::conversion","This trait represents that we can do zero-cost conversion…",null,null],[10,"as_ptr","","Retrieves the underlying FFI pointer (as a borrowed…",125,[[]]],[8,"IntoPyPointer","","This trait allows retrieving the underlying FFI pointer…",null,null],[10,"into_ptr","","Retrieves the underlying FFI pointer. Whether pointer…",126,[[]]],[8,"ToPyObject","","Conversion trait that allows various objects to be…",null,null],[10,"to_object","","Converts self into a Python object.",127,[[["python",3]],["pyobject",3]]],[8,"ToBorrowedObject","","This trait has two implementations: The slow one is…",null,null],[11,"with_borrowed_ptr","","Converts self into a Python object and calls the specified…",128,[[["python",3]]]],[8,"FromPy","","Similar to [std::convert::From], just that it requires a…",null,null],[10,"from_py","","Performs the conversion.",129,[[["python",3]]]],[8,"IntoPy","","Similar to [std::convert::Into], just that it requires a…",null,null],[10,"into_py","","Performs the conversion.",130,[[["python",3]]]],[8,"FromPyObject","","`FromPyObject` is implemented by various types that can be…",null,null],[10,"extract","","Extracts `Self` from the source `PyObject`.",131,[[["pyany",3]],["pyresult",6]]],[8,"PyTryFrom","","Trait implemented by Python object types that allow a…",null,null],[10,"try_from","","Cast from a concrete Python object type to PyObject.",132,[[["pyany",3],["into",8]],[["result",4],["pydowncasterror",3]]]],[10,"try_from_exact","","Cast from a concrete Python object type to PyObject. With…",132,[[["pyany",3],["into",8]],[["result",4],["pydowncasterror",3]]]],[10,"try_from_unchecked","","Cast a PyAny to a specific type of PyObject. The caller…",132,[[["pyany",3],["into",8]]]],[8,"PyTryInto","","Trait implemented by Python object types that allow a…",null,null],[10,"try_into","","Cast from PyObject to a concrete Python object type.",133,[[],[["pydowncasterror",3],["result",4]]]],[10,"try_into_exact","","Cast from PyObject to a concrete Python object type. With…",133,[[],[["pydowncasterror",3],["result",4]]]],[8,"FromPyPointer","","Raw level conversion between `*mut ffi::PyObject` and PyO3…",null,null],[10,"from_owned_ptr_or_opt","","",134,[[["python",3]],["option",4]]],[11,"from_owned_ptr_or_panic","","",134,[[["python",3]]]],[11,"from_owned_ptr","","",134,[[["python",3]]]],[11,"from_owned_ptr_or_err","","",134,[[["python",3]],["pyresult",6]]],[10,"from_borrowed_ptr_or_opt","","",134,[[["python",3]],["option",4]]],[11,"from_borrowed_ptr_or_panic","","",134,[[["python",3]]]],[11,"from_borrowed_ptr","","",134,[[["python",3]]]],[11,"from_borrowed_ptr_or_err","","",134,[[["python",3]],["pyresult",6]]],[11,"from_err_args","pyo3","",1,[[["pyerrarguments",8]]]],[11,"new","","Creates a new PyErr of type `T`.",0,[[],["pyerr",3]]],[11,"from_type","","Constructs a new error, with the usual lazy initialization…",0,[[["pytype",3]],["pyerr",3]]],[11,"from_value","","Creates a new PyErr of type `T`.",0,[[["pyerrvalue",4]],["pyerr",3]]],[11,"from_instance","","Creates a new PyErr.",0,[[["pyany",3]],["pyerr",3]]],[11,"occurred","","Gets whether an error is present in the Python…",0,[[["python",3]]]],[11,"fetch","","Retrieves the current error from the Python interpreter\'s…",0,[[["python",3]],["pyerr",3]]],[11,"new_type","","Creates a new exception type with the given name, which…",0,[[["option",4],["python",3],["option",4],["pyobject",3],["pytype",3]],[["pytypeobject",3],["nonnull",3]]]],[11,"print","","Prints a standard traceback to `sys.stderr`.",0,[[["python",3]]]],[11,"print_and_set_sys_last_vars","","Prints a standard traceback to `sys.stderr`, and sets…",0,[[["python",3]]]],[11,"matches","","Returns true if the current exception matches the…",0,[[["python",3]]]],[11,"is_instance","","Returns true if the current exception is instance of `T`.",0,[[["python",3]]]],[11,"normalize","","Normalizes the error. This ensures that the exception…",0,[[["python",3]]]],[11,"restore","","Writes the error back to the Python interpreter\'s global…",0,[[["python",3]]]],[11,"warn","","Issues a warning message. May return a `PyErr` if…",0,[[["python",3],["pyany",3]],["pyresult",6]]],[11,"clone_ref","","",0,[[["python",3]],["pyerr",3]]],[0,"exceptions","","Exception types defined by Python.",null,null],[3,"BaseException","pyo3::exceptions","",null,null],[3,"Exception","","",null,null],[3,"StopAsyncIteration","","",null,null],[3,"StopIteration","","",null,null],[3,"GeneratorExit","","",null,null],[3,"ArithmeticError","","",null,null],[3,"LookupError","","",null,null],[3,"AssertionError","","",null,null],[3,"AttributeError","","",null,null],[3,"BufferError","","",null,null],[3,"EOFError","","",null,null],[3,"FloatingPointError","","",null,null],[3,"OSError","","",null,null],[3,"ImportError","","",null,null],[3,"ModuleNotFoundError","","",null,null],[3,"IndexError","","",null,null],[3,"KeyError","","",null,null],[3,"KeyboardInterrupt","","",null,null],[3,"MemoryError","","",null,null],[3,"NameError","","",null,null],[3,"OverflowError","","",null,null],[3,"RuntimeError","","",null,null],[3,"RecursionError","","",null,null],[3,"NotImplementedError","","",null,null],[3,"SyntaxError","","",null,null],[3,"ReferenceError","","",null,null],[3,"SystemError","","",null,null],[3,"SystemExit","","",null,null],[3,"TypeError","","",null,null],[3,"UnboundLocalError","","",null,null],[3,"UnicodeError","","",null,null],[3,"UnicodeDecodeError","","",null,null],[3,"UnicodeEncodeError","","",null,null],[3,"UnicodeTranslateError","","",null,null],[3,"ValueError","","",null,null],[3,"ZeroDivisionError","","",null,null],[3,"BlockingIOError","","",null,null],[3,"BrokenPipeError","","",null,null],[3,"ChildProcessError","","",null,null],[3,"ConnectionError","","",null,null],[3,"ConnectionAbortedError","","",null,null],[3,"ConnectionRefusedError","","",null,null],[3,"ConnectionResetError","","",null,null],[3,"FileExistsError","","",null,null],[3,"FileNotFoundError","","",null,null],[3,"InterruptedError","","",null,null],[3,"IsADirectoryError","","",null,null],[3,"NotADirectoryError","","",null,null],[3,"PermissionError","","",null,null],[3,"ProcessLookupError","","",null,null],[3,"TimeoutError","","",null,null],[3,"EnvironmentError","","",null,null],[3,"IOError","","",null,null],[0,"asyncio","","Exceptions defined in `asyncio` module",null,null],[3,"CancelledError","pyo3::exceptions::asyncio","",null,null],[3,"InvalidStateError","","",null,null],[3,"TimeoutError","","",null,null],[3,"IncompleteReadError","","",null,null],[3,"LimitOverrunError","","",null,null],[3,"QueueEmpty","","",null,null],[3,"QueueFull","","",null,null],[11,"py_err","","",135,[[["topyobject",8]],["pyerr",3]]],[11,"into","","",135,[[["topyobject",8]],["pyresult",6]]],[11,"py_err","","",136,[[["topyobject",8]],["pyerr",3]]],[11,"into","","",136,[[["topyobject",8]],["pyresult",6]]],[11,"py_err","","",137,[[["topyobject",8]],["pyerr",3]]],[11,"into","","",137,[[["topyobject",8]],["pyresult",6]]],[11,"py_err","","",138,[[["topyobject",8]],["pyerr",3]]],[11,"into","","",138,[[["topyobject",8]],["pyresult",6]]],[11,"py_err","","",139,[[["topyobject",8]],["pyerr",3]]],[11,"into","","",139,[[["topyobject",8]],["pyresult",6]]],[11,"py_err","","",140,[[["topyobject",8]],["pyerr",3]]],[11,"into","","",140,[[["topyobject",8]],["pyresult",6]]],[11,"py_err","","",141,[[["topyobject",8]],["pyerr",3]]],[11,"into","","",141,[[["topyobject",8]],["pyresult",6]]],[0,"socket","pyo3::exceptions","Exceptions defined in `socket` module",null,null],[3,"herror","pyo3::exceptions::socket","",null,null],[3,"gaierror","","",null,null],[3,"timeout","","",null,null],[11,"py_err","","",142,[[["topyobject",8]],["pyerr",3]]],[11,"into","","",142,[[["topyobject",8]],["pyresult",6]]],[11,"py_err","","",143,[[["topyobject",8]],["pyerr",3]]],[11,"into","","",143,[[["topyobject",8]],["pyresult",6]]],[11,"py_err","","",144,[[["topyobject",8]],["pyerr",3]]],[11,"into","","",144,[[["topyobject",8]],["pyresult",6]]],[11,"py_err","pyo3::exceptions","",145,[[["topyobject",8]],["pyerr",3]]],[11,"into","","",145,[[["topyobject",8]],["pyresult",6]]],[11,"py_err","","",146,[[["topyobject",8]],["pyerr",3]]],[11,"into","","",146,[[["topyobject",8]],["pyresult",6]]],[11,"py_err","","",147,[[["topyobject",8]],["pyerr",3]]],[11,"into","","",147,[[["topyobject",8]],["pyresult",6]]],[11,"py_err","","",148,[[["topyobject",8]],["pyerr",3]]],[11,"into","","",148,[[["topyobject",8]],["pyresult",6]]],[11,"py_err","","",149,[[["topyobject",8]],["pyerr",3]]],[11,"into","","",149,[[["topyobject",8]],["pyresult",6]]],[11,"py_err","","",150,[[["topyobject",8]],["pyerr",3]]],[11,"into","","",150,[[["topyobject",8]],["pyresult",6]]],[11,"py_err","","",151,[[["topyobject",8]],["pyerr",3]]],[11,"into","","",151,[[["topyobject",8]],["pyresult",6]]],[11,"py_err","","",152,[[["topyobject",8]],["pyerr",3]]],[11,"into","","",152,[[["topyobject",8]],["pyresult",6]]],[11,"py_err","","",153,[[["topyobject",8]],["pyerr",3]]],[11,"into","","",153,[[["topyobject",8]],["pyresult",6]]],[11,"py_err","","",154,[[["topyobject",8]],["pyerr",3]]],[11,"into","","",154,[[["topyobject",8]],["pyresult",6]]],[11,"py_err","","",155,[[["topyobject",8]],["pyerr",3]]],[11,"into","","",155,[[["topyobject",8]],["pyresult",6]]],[11,"py_err","","",156,[[["topyobject",8]],["pyerr",3]]],[11,"into","","",156,[[["topyobject",8]],["pyresult",6]]],[11,"py_err","","",157,[[["topyobject",8]],["pyerr",3]]],[11,"into","","",157,[[["topyobject",8]],["pyresult",6]]],[11,"py_err","","",158,[[["topyobject",8]],["pyerr",3]]],[11,"into","","",158,[[["topyobject",8]],["pyresult",6]]],[11,"py_err","","",159,[[["topyobject",8]],["pyerr",3]]],[11,"into","","",159,[[["topyobject",8]],["pyresult",6]]],[11,"py_err","","",160,[[["topyobject",8]],["pyerr",3]]],[11,"into","","",160,[[["topyobject",8]],["pyresult",6]]],[11,"py_err","","",161,[[["topyobject",8]],["pyerr",3]]],[11,"into","","",161,[[["topyobject",8]],["pyresult",6]]],[11,"py_err","","",162,[[["topyobject",8]],["pyerr",3]]],[11,"into","","",162,[[["topyobject",8]],["pyresult",6]]],[11,"py_err","","",163,[[["topyobject",8]],["pyerr",3]]],[11,"into","","",163,[[["topyobject",8]],["pyresult",6]]],[11,"py_err","","",164,[[["topyobject",8]],["pyerr",3]]],[11,"into","","",164,[[["topyobject",8]],["pyresult",6]]],[11,"py_err","","",165,[[["topyobject",8]],["pyerr",3]]],[11,"into","","",165,[[["topyobject",8]],["pyresult",6]]],[11,"py_err","","",166,[[["topyobject",8]],["pyerr",3]]],[11,"into","","",166,[[["topyobject",8]],["pyresult",6]]],[11,"py_err","","",167,[[["topyobject",8]],["pyerr",3]]],[11,"into","","",167,[[["topyobject",8]],["pyresult",6]]],[11,"py_err","","",168,[[["topyobject",8]],["pyerr",3]]],[11,"into","","",168,[[["topyobject",8]],["pyresult",6]]],[11,"py_err","","",169,[[["topyobject",8]],["pyerr",3]]],[11,"into","","",169,[[["topyobject",8]],["pyresult",6]]],[11,"py_err","","",170,[[["topyobject",8]],["pyerr",3]]],[11,"into","","",170,[[["topyobject",8]],["pyresult",6]]],[11,"py_err","","",171,[[["topyobject",8]],["pyerr",3]]],[11,"into","","",171,[[["topyobject",8]],["pyresult",6]]],[11,"py_err","","",172,[[["topyobject",8]],["pyerr",3]]],[11,"into","","",172,[[["topyobject",8]],["pyresult",6]]],[11,"py_err","","",173,[[["topyobject",8]],["pyerr",3]]],[11,"into","","",173,[[["topyobject",8]],["pyresult",6]]],[11,"py_err","","",174,[[["topyobject",8]],["pyerr",3]]],[11,"into","","",174,[[["topyobject",8]],["pyresult",6]]],[11,"py_err","","",175,[[["topyobject",8]],["pyerr",3]]],[11,"into","","",175,[[["topyobject",8]],["pyresult",6]]],[11,"py_err","","",176,[[["topyobject",8]],["pyerr",3]]],[11,"into","","",176,[[["topyobject",8]],["pyresult",6]]],[11,"py_err","","",177,[[["topyobject",8]],["pyerr",3]]],[11,"into","","",177,[[["topyobject",8]],["pyresult",6]]],[11,"py_err","","",178,[[["topyobject",8]],["pyerr",3]]],[11,"into","","",178,[[["topyobject",8]],["pyresult",6]]],[11,"py_err","","",179,[[["topyobject",8]],["pyerr",3]]],[11,"into","","",179,[[["topyobject",8]],["pyresult",6]]],[11,"py_err","","",180,[[["topyobject",8]],["pyerr",3]]],[11,"into","","",180,[[["topyobject",8]],["pyresult",6]]],[11,"py_err","","",181,[[["topyobject",8]],["pyerr",3]]],[11,"into","","",181,[[["topyobject",8]],["pyresult",6]]],[11,"py_err","","",182,[[["topyobject",8]],["pyerr",3]]],[11,"into","","",182,[[["topyobject",8]],["pyresult",6]]],[11,"py_err","","",183,[[["topyobject",8]],["pyerr",3]]],[11,"into","","",183,[[["topyobject",8]],["pyresult",6]]],[11,"py_err","","",184,[[["topyobject",8]],["pyerr",3]]],[11,"into","","",184,[[["topyobject",8]],["pyresult",6]]],[11,"py_err","","",185,[[["topyobject",8]],["pyerr",3]]],[11,"into","","",185,[[["topyobject",8]],["pyresult",6]]],[11,"py_err","","",186,[[["topyobject",8]],["pyerr",3]]],[11,"into","","",186,[[["topyobject",8]],["pyresult",6]]],[11,"py_err","","",187,[[["topyobject",8]],["pyerr",3]]],[11,"into","","",187,[[["topyobject",8]],["pyresult",6]]],[11,"py_err","","",188,[[["topyobject",8]],["pyerr",3]]],[11,"into","","",188,[[["topyobject",8]],["pyresult",6]]],[11,"py_err","","",189,[[["topyobject",8]],["pyerr",3]]],[11,"into","","",189,[[["topyobject",8]],["pyresult",6]]],[11,"py_err","","",190,[[["topyobject",8]],["pyerr",3]]],[11,"into","","",190,[[["topyobject",8]],["pyresult",6]]],[11,"py_err","","",191,[[["topyobject",8]],["pyerr",3]]],[11,"into","","",191,[[["topyobject",8]],["pyresult",6]]],[11,"py_err","","",192,[[["topyobject",8]],["pyerr",3]]],[11,"into","","",192,[[["topyobject",8]],["pyresult",6]]],[11,"py_err","","",193,[[["topyobject",8]],["pyerr",3]]],[11,"into","","",193,[[["topyobject",8]],["pyresult",6]]],[11,"py_err","","",194,[[["topyobject",8]],["pyerr",3]]],[11,"into","","",194,[[["topyobject",8]],["pyresult",6]]],[11,"py_err","","",195,[[["topyobject",8]],["pyerr",3]]],[11,"into","","",195,[[["topyobject",8]],["pyresult",6]]],[11,"py_err","","",196,[[["topyobject",8]],["pyerr",3]]],[11,"into","","",196,[[["topyobject",8]],["pyresult",6]]],[11,"py_err","","",197,[[["topyobject",8]],["pyerr",3]]],[11,"into","","",197,[[["topyobject",8]],["pyresult",6]]],[11,"new_err","","",176,[[["cstr",3],["python",3],["range",3]],[["pyresult",6],["pyany",3]]]],[11,"new_utf8","","",176,[[["python",3],["utf8error",3]],[["pyresult",6],["pyany",3]]]],[11,"stop_iteration","","",148,[[["python",3],["pytuple",3]]]],[0,"ffi","pyo3","Raw ffi declarations for the c interface of python",null,null],[3,"PyCodeObject","pyo3::ffi","",null,null],[12,"ob_base","","",198,null],[12,"co_argcount","","",198,null],[12,"co_kwonlyargcount","","",198,null],[12,"co_nlocals","","",198,null],[12,"co_stacksize","","",198,null],[12,"co_flags","","",198,null],[12,"co_firstlineno","","",198,null],[12,"co_code","","",198,null],[12,"co_consts","","",198,null],[12,"co_names","","",198,null],[12,"co_varnames","","",198,null],[12,"co_freevars","","",198,null],[12,"co_cellvars","","",198,null],[12,"co_cell2arg","","",198,null],[12,"co_filename","","",198,null],[12,"co_name","","",198,null],[12,"co_lnotab","","",198,null],[12,"co_zombieframe","","",198,null],[12,"co_weakreflist","","",198,null],[12,"co_extra","","",198,null],[3,"PyFutureFeatures","","",null,null],[12,"ff_features","","",199,null],[12,"ff_lineno","","",199,null],[3,"Py_complex","","",null,null],[12,"real","","",200,null],[12,"imag","","",200,null],[3,"PyComplexObject","","",null,null],[12,"ob_base","","",201,null],[12,"cval","","",201,null],[3,"PyDateTime_CAPI","","",null,null],[12,"DateType","","",202,null],[12,"DateTimeType","","",202,null],[12,"TimeType","","",202,null],[12,"DeltaType","","",202,null],[12,"TZInfoType","","",202,null],[12,"Date_FromDate","","",202,null],[12,"DateTime_FromDateAndTime","","",202,null],[12,"Time_FromTime","","",202,null],[12,"Delta_FromDelta","","",202,null],[12,"DateTime_FromTimestamp","","",202,null],[12,"Date_FromTimestamp","","",202,null],[12,"DateTime_FromDateAndTimeAndFold","","",202,null],[12,"Time_FromTimeAndFold","","",202,null],[3,"PyDateTime_Date","","Structure representing a `datetime.date`",null,null],[12,"ob_base","","",203,null],[12,"hashcode","","",203,null],[12,"hastzinfo","","",203,null],[12,"data","","",203,null],[3,"PyDateTime_Time","","Structure representing a `datetime.time`",null,null],[12,"ob_base","","",204,null],[12,"hashcode","","",204,null],[12,"hastzinfo","","",204,null],[12,"data","","",204,null],[12,"fold","","",204,null],[12,"tzinfo","","",204,null],[3,"PyDateTime_DateTime","","Structure representing a `datetime.datetime`",null,null],[12,"ob_base","","",205,null],[12,"hashcode","","",205,null],[12,"hastzinfo","","",205,null],[12,"data","","",205,null],[12,"fold","","",205,null],[12,"tzinfo","","",205,null],[3,"PyDateTime_Delta","","Structure representing a `datetime.timedelta`",null,null],[12,"ob_base","","",206,null],[12,"hashcode","","",206,null],[12,"days","","",206,null],[12,"seconds","","",206,null],[12,"microseconds","","",206,null],[3,"PyDateTimeAPI","","",null,null],[3,"PyGetSetDef","","",null,null],[12,"name","","",207,null],[12,"get","","",207,null],[12,"set","","",207,null],[12,"doc","","",207,null],[12,"closure","","",207,null],[3,"PyDictKeysObject","","",null,null],[3,"PyDictObject","","",null,null],[12,"ob_base","","",208,null],[12,"ma_used","","",208,null],[12,"ma_version_tag","","",208,null],[12,"ma_keys","","",208,null],[12,"ma_values","","",208,null],[3,"PyFloatObject","","",null,null],[12,"ob_base","","",209,null],[12,"ob_fval","","",209,null],[3,"PyGenObject","","",null,null],[12,"ob_refcnt","","",210,null],[12,"ob_type","","",210,null],[12,"gi_frame","","",210,null],[12,"gi_running","","",210,null],[12,"gi_code","","",210,null],[12,"gi_weakreflist","","",210,null],[3,"PyListObject","","",null,null],[12,"ob_base","","",211,null],[12,"ob_item","","",211,null],[12,"allocated","","",211,null],[3,"PyLongObject","","This is an opaque type in the python c api",null,null],[3,"PyMethodDef","","",null,null],[12,"ml_name","","",212,null],[12,"ml_meth","","",212,null],[12,"ml_flags","","",212,null],[12,"ml_doc","","",212,null],[3,"PyModuleDef_Base","","",null,null],[12,"ob_base","","",213,null],[12,"m_init","","",213,null],[12,"m_index","","",213,null],[12,"m_copy","","",213,null],[3,"PyModuleDef_Slot","","",null,null],[12,"slot","","",214,null],[12,"value","","",214,null],[3,"PyModuleDef","","",null,null],[12,"m_base","","",215,null],[12,"m_name","","",215,null],[12,"m_doc","","",215,null],[12,"m_size","","",215,null],[12,"m_methods","","",215,null],[12,"m_slots","","",215,null],[12,"m_traverse","","",215,null],[12,"m_clear","","",215,null],[12,"m_free","","",215,null],[3,"PyObject","","",null,null],[12,"ob_refcnt","","",216,null],[12,"ob_type","","",216,null],[3,"PyVarObject","","",null,null],[12,"ob_base","","",217,null],[12,"ob_size","","",217,null],[3,"Py_buffer","","",null,null],[12,"buf","","",218,null],[12,"obj","","",218,null],[12,"len","","",218,null],[12,"itemsize","","",218,null],[12,"readonly","","",218,null],[12,"ndim","","",218,null],[12,"format","","",218,null],[12,"shape","","",218,null],[12,"strides","","",218,null],[12,"suboffsets","","",218,null],[12,"internal","","",218,null],[3,"PyNumberMethods","","",null,null],[12,"nb_add","","",219,null],[12,"nb_subtract","","",219,null],[12,"nb_multiply","","",219,null],[12,"nb_remainder","","",219,null],[12,"nb_divmod","","",219,null],[12,"nb_power","","",219,null],[12,"nb_negative","","",219,null],[12,"nb_positive","","",219,null],[12,"nb_absolute","","",219,null],[12,"nb_bool","","",219,null],[12,"nb_invert","","",219,null],[12,"nb_lshift","","",219,null],[12,"nb_rshift","","",219,null],[12,"nb_and","","",219,null],[12,"nb_xor","","",219,null],[12,"nb_or","","",219,null],[12,"nb_int","","",219,null],[12,"nb_reserved","","",219,null],[12,"nb_float","","",219,null],[12,"nb_inplace_add","","",219,null],[12,"nb_inplace_subtract","","",219,null],[12,"nb_inplace_multiply","","",219,null],[12,"nb_inplace_remainder","","",219,null],[12,"nb_inplace_power","","",219,null],[12,"nb_inplace_lshift","","",219,null],[12,"nb_inplace_rshift","","",219,null],[12,"nb_inplace_and","","",219,null],[12,"nb_inplace_xor","","",219,null],[12,"nb_inplace_or","","",219,null],[12,"nb_floor_divide","","",219,null],[12,"nb_true_divide","","",219,null],[12,"nb_inplace_floor_divide","","",219,null],[12,"nb_inplace_true_divide","","",219,null],[12,"nb_index","","",219,null],[12,"nb_matrix_multiply","","",219,null],[12,"nb_inplace_matrix_multiply","","",219,null],[3,"PySequenceMethods","","",null,null],[12,"sq_length","","",220,null],[12,"sq_concat","","",220,null],[12,"sq_repeat","","",220,null],[12,"sq_item","","",220,null],[12,"was_sq_slice","","",220,null],[12,"sq_ass_item","","",220,null],[12,"was_sq_ass_slice","","",220,null],[12,"sq_contains","","",220,null],[12,"sq_inplace_concat","","",220,null],[12,"sq_inplace_repeat","","",220,null],[3,"PyMappingMethods","","",null,null],[12,"mp_length","","",221,null],[12,"mp_subscript","","",221,null],[12,"mp_ass_subscript","","",221,null],[3,"PyAsyncMethods","","",null,null],[12,"am_await","","",222,null],[12,"am_aiter","","",222,null],[12,"am_anext","","",222,null],[3,"PyBufferProcs","","",null,null],[12,"bf_getbuffer","","",223,null],[12,"bf_releasebuffer","","",223,null],[3,"PyTypeObject","","",null,null],[12,"ob_base","","",224,null],[12,"tp_name","","",224,null],[12,"tp_basicsize","","",224,null],[12,"tp_itemsize","","",224,null],[12,"tp_dealloc","","",224,null],[12,"tp_print","","",224,null],[12,"tp_getattr","","",224,null],[12,"tp_setattr","","",224,null],[12,"tp_as_async","","",224,null],[12,"tp_repr","","",224,null],[12,"tp_as_number","","",224,null],[12,"tp_as_sequence","","",224,null],[12,"tp_as_mapping","","",224,null],[12,"tp_hash","","",224,null],[12,"tp_call","","",224,null],[12,"tp_str","","",224,null],[12,"tp_getattro","","",224,null],[12,"tp_setattro","","",224,null],[12,"tp_as_buffer","","",224,null],[12,"tp_flags","","",224,null],[12,"tp_doc","","",224,null],[12,"tp_traverse","","",224,null],[12,"tp_clear","","",224,null],[12,"tp_richcompare","","",224,null],[12,"tp_weaklistoffset","","",224,null],[12,"tp_iter","","",224,null],[12,"tp_iternext","","",224,null],[12,"tp_methods","","",224,null],[12,"tp_members","","",224,null],[12,"tp_getset","","",224,null],[12,"tp_base","","",224,null],[12,"tp_dict","","",224,null],[12,"tp_descr_get","","",224,null],[12,"tp_descr_set","","",224,null],[12,"tp_dictoffset","","",224,null],[12,"tp_init","","",224,null],[12,"tp_alloc","","",224,null],[12,"tp_new","","",224,null],[12,"tp_free","","",224,null],[12,"tp_is_gc","","",224,null],[12,"tp_bases","","",224,null],[12,"tp_mro","","",224,null],[12,"tp_cache","","",224,null],[12,"tp_subclasses","","",224,null],[12,"tp_weaklist","","",224,null],[12,"tp_del","","",224,null],[12,"tp_version_tag","","",224,null],[12,"tp_finalize","","",224,null],[3,"PyHeapTypeObject","","",null,null],[12,"ht_type","","",225,null],[12,"as_async","","",225,null],[12,"as_number","","",225,null],[12,"as_mapping","","",225,null],[12,"as_sequence","","",225,null],[12,"as_buffer","","",225,null],[12,"ht_name","","",225,null],[12,"ht_slots","","",225,null],[12,"ht_qualname","","",225,null],[12,"ht_cached_keys","","",225,null],[3,"PyType_Slot","","",null,null],[12,"slot","","",226,null],[12,"pfunc","","",226,null],[3,"PyType_Spec","","",null,null],[12,"name","","",227,null],[12,"basicsize","","",227,null],[12,"itemsize","","",227,null],[12,"flags","","",227,null],[12,"slots","","",227,null],[3,"PyObjectArenaAllocator","","",null,null],[12,"ctx","","",228,null],[12,"alloc","","",228,null],[12,"free","","",228,null],[3,"PyHash_FuncDef","","",null,null],[12,"hash","","",229,null],[12,"name","","",229,null],[12,"hash_bits","","",229,null],[12,"seed_bits","","",229,null],[3,"PyMemAllocatorEx","","",null,null],[12,"ctx","","",230,null],[12,"malloc","","",230,null],[12,"calloc","","",230,null],[12,"realloc","","",230,null],[12,"free","","",230,null],[3,"PyInterpreterState","","",null,null],[12,"ob_base","","",231,null],[12,"eval_frame","","",231,null],[3,"PyThreadState","","",null,null],[12,"ob_base","","",232,null],[12,"interp","","",232,null],[3,"PyCompilerFlags","","",null,null],[12,"cf_flags","","",233,null],[3,"setentry","","",null,null],[12,"key","","",234,null],[12,"hash","","",234,null],[3,"PySetObject","","",null,null],[12,"ob_base","","",235,null],[12,"fill","","",235,null],[12,"used","","",235,null],[12,"mask","","",235,null],[12,"table","","",235,null],[12,"hash","","",235,null],[12,"finger","","",235,null],[12,"smalltable","","",235,null],[12,"weakreflist","","",235,null],[3,"PySliceObject","","",null,null],[12,"ob_base","","",236,null],[12,"start","","",236,null],[12,"stop","","",236,null],[12,"step","","",236,null],[3,"PyStructSequence_Field","","",null,null],[12,"name","","",237,null],[12,"doc","","",237,null],[3,"PyStructSequence_Desc","","",null,null],[12,"name","","",238,null],[12,"doc","","",238,null],[12,"fields","","",238,null],[12,"n_in_sequence","","",238,null],[3,"PyTupleObject","","",null,null],[12,"ob_base","","",239,null],[12,"ob_item","","",239,null],[4,"PyArena","","",null,null],[4,"PyMemAllocatorDomain","","",null,null],[13,"PYMEM_DOMAIN_RAW","","",240,null],[13,"PYMEM_DOMAIN_MEM","","",240,null],[13,"PYMEM_DOMAIN_OBJ","","",240,null],[4,"PyGILState_STATE","","",null,null],[13,"PyGILState_LOCKED","","",241,null],[13,"PyGILState_UNLOCKED","","",241,null],[4,"_mod","","",null,null],[4,"symtable","","",null,null],[4,"_node","","",null,null],[4,"PyWeakReference","","",null,null],[5,"PyBool_Check","","",null,[[],["c_int",6]]],[5,"Py_False","","",null,[[]]],[5,"Py_True","","",null,[[]]],[5,"PyByteArray_Check","","",null,[[],["c_int",6]]],[5,"PyByteArray_CheckExact","","",null,[[],["c_int",6]]],[5,"PyBytes_Check","","",null,[[],["c_int",6]]],[5,"PyBytes_CheckExact","","",null,[[],["c_int",6]]],[5,"PyEval_CallObject","","",null,[[]]],[5,"PyCode_Check","","",null,[[],["c_int",6]]],[5,"PyCode_GetNumFree","","",null,[[],["py_ssize_t",6]]],[5,"PyComplex_Check","","",null,[[],["c_int",6]]],[5,"PyComplex_CheckExact","","",null,[[],["c_int",6]]],[5,"PyDateTime_IMPORT","","Populates the `PyDateTimeAPI` object",null,[[],["pydatetime_capi",3]]],[5,"PyDate_Check","","Type Check macros",null,[[],["c_int",6]]],[5,"PyDate_CheckExact","","Check if `op`\'s type is exactly `PyDateTimeAPI.DateType`.",null,[[],["c_int",6]]],[5,"PyDateTime_Check","","Check if `op` is a `PyDateTimeAPI.DateTimeType` or subtype.",null,[[],["c_int",6]]],[5,"PyDateTime_CheckExact","","Check if `op`\'s type is exactly…",null,[[],["c_int",6]]],[5,"PyTime_Check","","Check if `op` is a `PyDateTimeAPI.TimeType` or subtype.",null,[[],["c_int",6]]],[5,"PyTime_CheckExact","","Check if `op`\'s type is exactly `PyDateTimeAPI.TimeType`.",null,[[],["c_int",6]]],[5,"PyDelta_Check","","Check if `op` is a `PyDateTimeAPI.DetaType` or subtype.",null,[[],["c_int",6]]],[5,"PyDelta_CheckExact","","Check if `op`\'s type is exactly `PyDateTimeAPI.DeltaType`.",null,[[],["c_int",6]]],[5,"PyTZInfo_Check","","Check if `op` is a `PyDateTimeAPI.TZInfoType` or subtype.",null,[[],["c_int",6]]],[5,"PyTZInfo_CheckExact","","Check if `op`\'s type is exactly `PyDateTimeAPI.TZInfoType`.",null,[[],["c_int",6]]],[5,"PyDateTime_GET_YEAR","","Retrieve the year component of a `PyDateTime_Date` or…",null,[[],["c_int",6]]],[5,"PyDateTime_GET_MONTH","","Retrieve the month component of a `PyDateTime_Date` or…",null,[[],["c_int",6]]],[5,"PyDateTime_GET_DAY","","Retrieve the day component of a `PyDateTime_Date` or…",null,[[],["c_int",6]]],[5,"PyDateTime_DATE_GET_HOUR","","Retrieve the hour component of a `PyDateTime_DateTime`.…",null,[[],["c_int",6]]],[5,"PyDateTime_DATE_GET_MINUTE","","Retrieve the minute component of a `PyDateTime_DateTime`.…",null,[[],["c_int",6]]],[5,"PyDateTime_DATE_GET_SECOND","","Retrieve the second component of a `PyDateTime_DateTime`.…",null,[[],["c_int",6]]],[5,"PyDateTime_DATE_GET_MICROSECOND","","Retrieve the microsecond component of a…",null,[[],["c_int",6]]],[5,"PyDateTime_DATE_GET_FOLD","","Retrieve the fold component of a `PyDateTime_DateTime`.…",null,[[],["c_uchar",6]]],[5,"PyDateTime_DATE_GET_TZINFO","","Retrieve the tzinfo component of a `PyDateTime_DateTime`.…",null,[[]]],[5,"PyDateTime_TIME_GET_HOUR","","Retrieve the hour component of a `PyDateTime_Time`.…",null,[[],["c_int",6]]],[5,"PyDateTime_TIME_GET_MINUTE","","Retrieve the minute component of a `PyDateTime_Time`.…",null,[[],["c_int",6]]],[5,"PyDateTime_TIME_GET_SECOND","","Retrieve the second component of a `PyDateTime_DateTime`.…",null,[[],["c_int",6]]],[5,"PyDateTime_TIME_GET_MICROSECOND","","Retrieve the microsecond component of a…",null,[[],["c_int",6]]],[5,"PyDateTime_TIME_GET_FOLD","","Retrieve the fold component of a `PyDateTime_Time`.…",null,[[],["c_uchar",6]]],[5,"PyDateTime_TIME_GET_TZINFO","","Retrieve the tzinfo component of a `PyDateTime_Time`.…",null,[[]]],[5,"PyDateTime_DELTA_GET_DAYS","","Retrieve the days component of a `PyDateTime_Delta`.",null,[[],["c_int",6]]],[5,"PyDateTime_DELTA_GET_SECONDS","","Retrieve the seconds component of a `PyDateTime_Delta`.",null,[[],["c_int",6]]],[5,"PyDateTime_DELTA_GET_MICROSECONDS","","Retrieve the seconds component of a `PyDateTime_Delta`.",null,[[],["c_int",6]]],[5,"PyDict_Check","","",null,[[],["c_int",6]]],[5,"PyDict_CheckExact","","",null,[[],["c_int",6]]],[5,"PyDictKeys_Check","","",null,[[],["c_int",6]]],[5,"PyDictItems_Check","","",null,[[],["c_int",6]]],[5,"PyDictValues_Check","","",null,[[],["c_int",6]]],[5,"PyDictViewSet_Check","","",null,[[],["c_int",6]]],[5,"PyFloat_Check","","",null,[[],["c_int",6]]],[5,"PyFloat_CheckExact","","",null,[[],["c_int",6]]],[5,"PyFloat_AS_DOUBLE","","",null,[[],["c_double",6]]],[5,"PyGen_Check","","",null,[[],["c_int",6]]],[5,"PyGen_CheckExact","","",null,[[],["c_int",6]]],[5,"PyCoro_Check","","",null,[[],["c_int",6]]],[5,"PyCoroWrapper_Check","","",null,[[],["c_int",6]]],[5,"PyAsyncGen_Check","","",null,[[],["c_int",6]]],[5,"PyImport_ImportModuleEx","","",null,[[]]],[5,"PySeqIter_Check","","",null,[[],["c_int",6]]],[5,"PyCallIter_Check","","",null,[[],["c_int",6]]],[5,"PyList_Check","","",null,[[],["c_int",6]]],[5,"PyList_CheckExact","","",null,[[],["c_int",6]]],[5,"PyList_GET_ITEM","","Macro, trading safety for speed",null,[[["py_ssize_t",6]]]],[5,"PyList_GET_SIZE","","",null,[[],["py_ssize_t",6]]],[5,"PyList_SET_ITEM","","Macro, only to be used to fill in brand new lists",null,[[["py_ssize_t",6]]]],[5,"PyLong_Check","","",null,[[],["c_int",6]]],[5,"PyLong_CheckExact","","",null,[[],["c_int",6]]],[5,"PyMemoryView_Check","","",null,[[],["c_int",6]]],[5,"PyCFunction_Check","","",null,[[],["c_int",6]]],[5,"PyCFunction_New","","",null,[[]]],[5,"PyModule_Create","","",null,[[]]],[5,"PyModule_FromDefAndSpec","","",null,[[]]],[5,"PyModule_Check","","",null,[[],["c_int",6]]],[5,"PyModule_CheckExact","","",null,[[],["c_int",6]]],[5,"Py_REFCNT","","",null,[[],["py_ssize_t",6]]],[5,"Py_TYPE","","",null,[[]]],[5,"Py_SIZE","","",null,[[],["py_ssize_t",6]]],[5,"PyHeapType_GET_MEMBERS","","",null,[[]]],[5,"PyObject_TypeCheck","","",null,[[],["c_int",6]]],[5,"PyType_Check","","",null,[[],["c_int",6]]],[5,"PyType_CheckExact","","",null,[[],["c_int",6]]],[5,"PyType_HasFeature","","",null,[[["c_ulong",6]],["c_int",6]]],[5,"PyType_FastSubclass","","",null,[[["c_ulong",6]],["c_int",6]]],[5,"Py_INCREF","","",null,[[]]],[5,"Py_DECREF","","",null,[[]]],[5,"Py_CLEAR","","",null,[[]]],[5,"Py_XINCREF","","",null,[[]]],[5,"Py_XDECREF","","",null,[[]]],[5,"Py_None","","",null,[[]]],[5,"Py_NotImplemented","","",null,[[]]],[5,"PyObject_Check","","",null,[[],["c_int",6]]],[5,"PySuper_Check","","",null,[[],["c_int",6]]],[5,"PyObject_DelAttrString","","",null,[[],["c_int",6]]],[5,"PyObject_DelAttr","","",null,[[],["c_int",6]]],[5,"PyObject_Length","","",null,[[],["py_ssize_t",6]]],[5,"PyObject_CheckBuffer","","",null,[[],["c_int",6]]],[5,"PyIter_Check","","",null,[[],["c_int",6]]],[5,"PyIndex_Check","","",null,[[],["c_int",6]]],[5,"PySequence_Length","","",null,[[],["py_ssize_t",6]]],[5,"PySequence_In","","",null,[[],["c_int",6]]],[5,"PyMapping_Length","","",null,[[],["py_ssize_t",6]]],[5,"PyMapping_DelItemString","","",null,[[],["c_int",6]]],[5,"PyMapping_DelItem","","",null,[[],["c_int",6]]],[5,"PyType_IS_GC","","Test if a type has a GC head",null,[[],["c_int",6]]],[5,"PyObject_IS_GC","","Test if an object has a GC head",null,[[],["c_int",6]]],[5,"PyType_SUPPORTS_WEAKREFS","","Test if a type supports weak references",null,[[],["c_int",6]]],[5,"PyObject_GET_WEAKREFS_LISTPTR","","",null,[[]]],[5,"PyCapsule_CheckExact","","",null,[[],["c_int",6]]],[5,"PyExceptionClass_Check","","",null,[[],["c_int",6]]],[5,"PyExceptionInstance_Check","","",null,[[],["c_int",6]]],[5,"PyExceptionInstance_Class","","",null,[[]]],[5,"PyThreadState_GET","","",null,[[]]],[5,"PyParser_SimpleParseString","","",null,[[["c_int",6]]]],[5,"PyParser_SimpleParseFile","","",null,[[["c_int",6]]]],[5,"Py_CompileString","","",null,[[["c_int",6]]]],[5,"PyRange_Check","","",null,[[],["c_int",6]]],[5,"PyFrozenSet_CheckExact","","",null,[[],["c_int",6]]],[5,"PyAnySet_CheckExact","","",null,[[],["c_int",6]]],[5,"PyAnySet_Check","","",null,[[],["c_int",6]]],[5,"PySet_Check","","",null,[[],["c_int",6]]],[5,"PyFrozenSet_Check","","",null,[[],["c_int",6]]],[5,"Py_Ellipsis","","",null,[[]]],[5,"PySlice_Check","","",null,[[],["c_int",6]]],[5,"PyTraceBack_Check","","",null,[[],["c_int",6]]],[5,"PyTuple_Check","","",null,[[],["c_int",6]]],[5,"PyTuple_CheckExact","","",null,[[],["c_int",6]]],[5,"PyTuple_GET_ITEM","","Macro, trading safety for speed",null,[[["py_ssize_t",6]]]],[5,"PyTuple_GET_SIZE","","",null,[[],["py_ssize_t",6]]],[5,"PyTuple_SET_ITEM","","Macro, only to be used to fill in brand new tuples",null,[[["py_ssize_t",6]]]],[5,"PyUnicode_Check","","",null,[[],["c_int",6]]],[5,"PyUnicode_CheckExact","","",null,[[],["c_int",6]]],[5,"PyWeakref_CheckRef","","",null,[[],["c_int",6]]],[5,"PyWeakref_CheckRefExact","","",null,[[],["c_int",6]]],[5,"PyWeakref_CheckProxy","","",null,[[],["c_int",6]]],[5,"PyWeakref_Check","","",null,[[],["c_int",6]]],[7,"PyFilter_Type","","",null,null],[7,"PyMap_Type","","",null,null],[7,"PyZip_Type","","",null,null],[7,"PyBool_Type","","",null,null],[5,"PyBool_FromLong","","",null,null],[7,"PyByteArray_Type","","",null,null],[7,"PyByteArrayIter_Type","","",null,null],[5,"PyByteArray_FromObject","","",null,null],[5,"PyByteArray_Concat","","",null,null],[5,"PyByteArray_FromStringAndSize","","",null,null],[5,"PyByteArray_Size","","",null,null],[5,"PyByteArray_AsString","","",null,null],[5,"PyByteArray_Resize","","",null,null],[7,"PyBytes_Type","","",null,null],[7,"PyBytesIter_Type","","",null,null],[5,"PyBytes_FromStringAndSize","","",null,null],[5,"PyBytes_FromString","","",null,null],[5,"PyBytes_FromObject","","",null,null],[5,"PyBytes_FromFormat","","",null,null],[5,"PyBytes_Size","","",null,null],[5,"PyBytes_AsString","","",null,null],[5,"PyBytes_Repr","","",null,null],[5,"PyBytes_Concat","","",null,null],[5,"PyBytes_ConcatAndDel","","",null,null],[5,"PyBytes_DecodeEscape","","",null,null],[5,"PyBytes_AsStringAndSize","","",null,null],[5,"_PyBytes_Resize","","",null,null],[5,"PyEval_CallObjectWithKeywords","","",null,null],[5,"PyEval_CallFunction","","",null,null],[5,"PyEval_CallMethod","","",null,null],[5,"PyEval_GetBuiltins","","",null,null],[5,"PyEval_GetGlobals","","",null,null],[5,"PyEval_GetLocals","","",null,null],[5,"PyEval_GetFrame","","",null,null],[5,"Py_AddPendingCall","","",null,null],[5,"Py_MakePendingCalls","","",null,null],[5,"Py_SetRecursionLimit","","",null,null],[5,"Py_GetRecursionLimit","","",null,null],[5,"PyEval_GetFuncName","","",null,null],[5,"PyEval_GetFuncDesc","","",null,null],[5,"PyEval_GetCallStats","","",null,null],[5,"PyEval_EvalFrame","","",null,null],[5,"_PyEval_EvalFrameDefault","","",null,null],[5,"_PyEval_RequestCodeExtraIndex","","",null,null],[5,"PyEval_EvalFrameEx","","",null,null],[5,"PyEval_SaveThread","","",null,null],[5,"PyEval_RestoreThread","","",null,null],[5,"PyEval_ThreadsInitialized","","",null,null],[5,"PyEval_InitThreads","","",null,null],[5,"PyEval_AcquireLock","","",null,null],[5,"PyEval_ReleaseLock","","",null,null],[5,"PyEval_AcquireThread","","",null,null],[5,"PyEval_ReleaseThread","","",null,null],[5,"PyEval_ReInitThreads","","",null,null],[7,"PyCode_Type","","",null,null],[5,"_PyCode_GetExtra","","",null,null],[5,"_PyCode_SetExtra","","",null,null],[5,"PyCode_New","","",null,null],[5,"PyCode_NewEmpty","","",null,null],[5,"PyCode_Addr2Line","","",null,null],[5,"PyCode_Optimize","","",null,null],[5,"PyCodec_Register","","",null,null],[5,"PyCodec_KnownEncoding","","",null,null],[5,"PyCodec_Encode","","",null,null],[5,"PyCodec_Decode","","",null,null],[5,"PyCodec_Encoder","","",null,null],[5,"PyCodec_Decoder","","",null,null],[5,"PyCodec_IncrementalEncoder","","",null,null],[5,"PyCodec_IncrementalDecoder","","",null,null],[5,"PyCodec_StreamReader","","",null,null],[5,"PyCodec_StreamWriter","","",null,null],[5,"PyCodec_RegisterError","","",null,null],[5,"PyCodec_LookupError","","",null,null],[5,"PyCodec_StrictErrors","","",null,null],[5,"PyCodec_IgnoreErrors","","",null,null],[5,"PyCodec_ReplaceErrors","","",null,null],[5,"PyCodec_XMLCharRefReplaceErrors","","",null,null],[5,"PyCodec_BackslashReplaceErrors","","",null,null],[5,"PyNode_Compile","","",null,null],[5,"PyAST_CompileEx","","",null,null],[5,"PyAST_CompileObject","","",null,null],[5,"PyFuture_FromAST","","",null,null],[5,"PyFuture_FromASTObject","","",null,null],[5,"PyCompile_OpcodeStackEffect","","",null,null],[7,"PyComplex_Type","","",null,null],[5,"PyComplex_FromDoubles","","",null,null],[5,"PyComplex_RealAsDouble","","",null,null],[5,"PyComplex_ImagAsDouble","","",null,null],[5,"_Py_c_sum","","",null,null],[5,"_Py_c_diff","","",null,null],[5,"_Py_c_neg","","",null,null],[5,"_Py_c_prod","","",null,null],[5,"_Py_c_quot","","",null,null],[5,"_Py_c_pow","","",null,null],[5,"_Py_c_abs","","",null,null],[5,"PyComplex_FromCComplex","","",null,null],[5,"PyComplex_AsCComplex","","",null,null],[7,"PyClassMethodDescr_Type","","",null,null],[7,"PyGetSetDescr_Type","","",null,null],[7,"PyMemberDescr_Type","","",null,null],[7,"PyMethodDescr_Type","","",null,null],[7,"PyWrapperDescr_Type","","",null,null],[7,"PyDictProxy_Type","","",null,null],[5,"PyDescr_NewMethod","","",null,null],[5,"PyDescr_NewClassMethod","","",null,null],[5,"PyDescr_NewMember","","",null,null],[5,"PyDescr_NewGetSet","","",null,null],[5,"PyDictProxy_New","","",null,null],[5,"PyWrapper_New","","",null,null],[7,"PyProperty_Type","","",null,null],[7,"PyDict_Type","","",null,null],[7,"PyDictIterKey_Type","","",null,null],[7,"PyDictIterValue_Type","","",null,null],[7,"PyDictIterItem_Type","","",null,null],[7,"PyDictKeys_Type","","",null,null],[7,"PyDictItems_Type","","",null,null],[7,"PyDictValues_Type","","",null,null],[5,"PyDict_New","","",null,null],[5,"_PyDict_NewPresized","","",null,null],[5,"PyDict_GetItem","","",null,null],[5,"PyDict_GetItemWithError","","",null,null],[5,"PyDict_SetItem","","",null,null],[5,"_PyDict_SetItem_KnownHash","","",null,null],[5,"PyDict_DelItem","","",null,null],[5,"PyDict_Clear","","",null,null],[5,"PyDict_Next","","",null,null],[5,"_PyDict_Next","","",null,null],[5,"PyDict_Keys","","",null,null],[5,"PyDict_Values","","",null,null],[5,"PyDict_Items","","",null,null],[5,"PyDict_Size","","",null,null],[5,"PyDict_Copy","","",null,null],[5,"PyDict_Contains","","",null,null],[5,"_PyDict_Contains","","",null,null],[5,"PyDict_Update","","",null,null],[5,"PyDict_Merge","","",null,null],[5,"PyDict_MergeFromSeq2","","",null,null],[5,"PyDict_GetItemString","","",null,null],[5,"PyDict_SetItemString","","",null,null],[5,"PyDict_DelItemString","","",null,null],[5,"_PyObject_GetDictPtr","","",null,null],[7,"PyEnum_Type","","",null,null],[7,"PyReversed_Type","","",null,null],[5,"PyEval_EvalCode","","",null,null],[5,"PyEval_EvalCodeEx","","",null,null],[5,"PyFile_FromFd","","",null,null],[5,"PyObject_AsFileDescriptor","","",null,null],[5,"PyFile_GetLine","","",null,null],[5,"PyFile_WriteObject","","",null,null],[5,"PyFile_WriteString","","",null,null],[7,"Py_FileSystemDefaultEncoding","","",null,null],[7,"Py_FileSystemDefaultEncodeErrors","","",null,null],[7,"Py_HasFileSystemDefaultEncoding","","",null,null],[7,"PyFloat_Type","","",null,null],[5,"PyFloat_GetMax","","",null,null],[5,"PyFloat_GetMin","","",null,null],[5,"PyFloat_GetInfo","","",null,null],[5,"PyFloat_FromString","","",null,null],[5,"PyFloat_FromDouble","","",null,null],[5,"PyFloat_AsDouble","","",null,null],[7,"PyGen_Type","","",null,null],[5,"PyGen_New","","",null,null],[5,"PyGen_NeedsFinalizing","","",null,null],[7,"PyCoro_Type","","",null,null],[7,"_PyCoroWrapper_Type","","",null,null],[7,"PyAsyncGen_Type","","",null,null],[5,"PyImport_GetMagicNumber","","",null,null],[5,"PyImport_GetMagicTag","","",null,null],[5,"PyImport_ExecCodeModule","","",null,null],[5,"PyImport_ExecCodeModuleEx","","",null,null],[5,"PyImport_ExecCodeModuleWithPathnames","","",null,null],[5,"PyImport_ExecCodeModuleObject","","",null,null],[5,"PyImport_GetModuleDict","","",null,null],[5,"PyImport_AddModuleObject","","",null,null],[5,"PyImport_AddModule","","",null,null],[5,"PyImport_ImportModule","","",null,null],[5,"PyImport_ImportModuleNoBlock","","",null,null],[5,"PyImport_ImportModuleLevel","","",null,null],[5,"PyImport_ImportModuleLevelObject","","",null,null],[5,"PyImport_GetImporter","","",null,null],[5,"PyImport_Import","","",null,null],[5,"PyImport_ReloadModule","","",null,null],[5,"PyImport_Cleanup","","",null,null],[5,"PyImport_ImportFrozenModuleObject","","",null,null],[5,"PyImport_ImportFrozenModule","","",null,null],[5,"PyImport_AppendInittab","","",null,null],[5,"PyOS_InterruptOccurred","","",null,null],[5,"PyOS_InitInterrupts","","",null,null],[5,"PyOS_AfterFork","","",null,null],[7,"PySeqIter_Type","","",null,null],[7,"PyCallIter_Type","","",null,null],[5,"PySeqIter_New","","",null,null],[5,"PyCallIter_New","","",null,null],[7,"PyList_Type","","",null,null],[7,"PyListIter_Type","","",null,null],[7,"PyListRevIter_Type","","",null,null],[5,"PyList_New","","",null,null],[5,"PyList_Size","","",null,null],[5,"PyList_GetItem","","",null,null],[5,"PyList_SetItem","","",null,null],[5,"PyList_Insert","","",null,null],[5,"PyList_Append","","",null,null],[5,"PyList_GetSlice","","",null,null],[5,"PyList_SetSlice","","",null,null],[5,"PyList_Sort","","",null,null],[5,"PyList_Reverse","","",null,null],[5,"PyList_AsTuple","","",null,null],[7,"PyLong_Type","","",null,null],[5,"PyLong_FromLong","","",null,null],[5,"PyLong_FromUnsignedLong","","",null,null],[5,"PyLong_FromSize_t","","",null,null],[5,"PyLong_FromSsize_t","","",null,null],[5,"PyLong_FromDouble","","",null,null],[5,"PyLong_AsLong","","",null,null],[5,"PyLong_AsLongAndOverflow","","",null,null],[5,"PyLong_AsSsize_t","","",null,null],[5,"PyLong_AsSize_t","","",null,null],[5,"PyLong_AsUnsignedLong","","",null,null],[5,"PyLong_AsUnsignedLongMask","","",null,null],[5,"PyLong_GetInfo","","",null,null],[5,"PyLong_AsDouble","","",null,null],[5,"PyLong_FromVoidPtr","","",null,null],[5,"PyLong_AsVoidPtr","","",null,null],[5,"PyLong_FromLongLong","","",null,null],[5,"PyLong_FromUnsignedLongLong","","",null,null],[5,"PyLong_AsLongLong","","",null,null],[5,"PyLong_AsUnsignedLongLong","","",null,null],[5,"PyLong_AsUnsignedLongLongMask","","",null,null],[5,"PyLong_AsLongLongAndOverflow","","",null,null],[5,"PyLong_FromString","","",null,null],[5,"PyOS_strtoul","","",null,null],[5,"PyOS_strtol","","",null,null],[5,"_PyLong_NumBits","","",null,null],[5,"_PyLong_FromByteArray","","",null,null],[5,"_PyLong_AsByteArray","","",null,null],[5,"PyMarshal_WriteObjectToString","","",null,null],[5,"PyMarshal_ReadObjectFromString","","",null,null],[7,"PyMemoryView_Type","","",null,null],[5,"PyMemoryView_FromObject","","",null,null],[5,"PyMemoryView_FromMemory","","",null,null],[5,"PyMemoryView_GetContiguous","","",null,null],[7,"PyCFunction_Type","","",null,null],[5,"PyCFunction_GetFunction","","",null,null],[5,"PyCFunction_GetSelf","","",null,null],[5,"PyCFunction_GetFlags","","",null,null],[5,"PyCFunction_Call","","",null,null],[5,"PyCFunction_NewEx","","",null,null],[5,"PyCFunction_ClearFreeList","","",null,null],[5,"PyArg_Parse","","",null,null],[5,"PyArg_ParseTuple","","",null,null],[5,"PyArg_ParseTupleAndKeywords","","",null,null],[5,"PyArg_ValidateKeywordArguments","","",null,null],[5,"PyArg_UnpackTuple","","",null,null],[5,"Py_BuildValue","","",null,null],[5,"PyModule_AddObject","","",null,null],[5,"PyModule_AddIntConstant","","",null,null],[5,"PyModule_AddStringConstant","","",null,null],[5,"PyModule_SetDocString","","",null,null],[5,"PyModule_AddFunctions","","",null,null],[5,"PyModule_ExecDef","","",null,null],[5,"PyModule_Create2","","",null,null],[5,"PyModule_FromDefAndSpec2","","",null,null],[7,"PyModule_Type","","",null,null],[5,"PyModule_NewObject","","",null,null],[5,"PyModule_New","","",null,null],[5,"PyModule_GetDict","","",null,null],[5,"PyModule_GetNameObject","","",null,null],[5,"PyModule_GetName","","",null,null],[5,"PyModule_GetFilename","","",null,null],[5,"PyModule_GetFilenameObject","","",null,null],[5,"PyModule_GetDef","","",null,null],[5,"PyModule_GetState","","",null,null],[5,"PyModuleDef_Init","","",null,null],[7,"PyModuleDef_Type","","",null,null],[5,"PyType_FromSpec","","",null,null],[5,"PyType_FromSpecWithBases","","",null,null],[5,"PyType_GetSlot","","",null,null],[5,"PyType_IsSubtype","","",null,null],[7,"PyType_Type","","built-in \'type\'",null,null],[7,"PyBaseObject_Type","","built-in \'object\'",null,null],[7,"PySuper_Type","","built-in \'super\'",null,null],[5,"PyType_GetFlags","","",null,null],[5,"PyType_Ready","","",null,null],[5,"PyType_GenericAlloc","","",null,null],[5,"PyType_GenericNew","","",null,null],[5,"PyType_ClearCache","","",null,null],[5,"PyType_Modified","","",null,null],[5,"PyObject_Print","","",null,null],[5,"PyObject_Repr","","",null,null],[5,"PyObject_Str","","",null,null],[5,"PyObject_ASCII","","",null,null],[5,"PyObject_Bytes","","",null,null],[5,"PyObject_RichCompare","","",null,null],[5,"PyObject_RichCompareBool","","",null,null],[5,"PyObject_GetAttrString","","",null,null],[5,"PyObject_SetAttrString","","",null,null],[5,"PyObject_HasAttrString","","",null,null],[5,"PyObject_GetAttr","","",null,null],[5,"PyObject_SetAttr","","",null,null],[5,"PyObject_HasAttr","","",null,null],[5,"PyObject_SelfIter","","",null,null],[5,"_PyObject_NextNotImplemented","","",null,null],[5,"PyObject_GenericGetAttr","","",null,null],[5,"PyObject_GenericSetAttr","","",null,null],[5,"PyObject_GenericGetDict","","",null,null],[5,"PyObject_GenericSetDict","","",null,null],[5,"PyObject_Hash","","",null,null],[5,"PyObject_HashNotImplemented","","",null,null],[5,"PyObject_IsTrue","","",null,null],[5,"PyObject_Not","","",null,null],[5,"PyCallable_Check","","",null,null],[5,"PyObject_ClearWeakRefs","","",null,null],[5,"PyObject_CallFinalizer","","",null,null],[5,"PyObject_CallFinalizerFromDealloc","","",null,null],[5,"PyObject_Dir","","",null,null],[5,"Py_ReprEnter","","",null,null],[5,"Py_ReprLeave","","",null,null],[5,"_Py_Dealloc","","",null,null],[5,"Py_IncRef","","",null,null],[5,"Py_DecRef","","",null,null],[5,"PyObject_Call","","",null,null],[5,"PyObject_CallObject","","",null,null],[5,"PyObject_CallFunction","","",null,null],[5,"PyObject_CallMethod","","",null,null],[5,"PyObject_CallFunctionObjArgs","","",null,null],[5,"PyObject_CallMethodObjArgs","","",null,null],[5,"PyObject_Type","","",null,null],[5,"PyObject_Size","","",null,null],[5,"PyObject_LengthHint","","",null,null],[5,"PyObject_GetItem","","",null,null],[5,"PyObject_SetItem","","",null,null],[5,"PyObject_DelItemString","","",null,null],[5,"PyObject_DelItem","","",null,null],[5,"PyObject_AsCharBuffer","","",null,null],[5,"PyObject_CheckReadBuffer","","",null,null],[5,"PyObject_AsReadBuffer","","",null,null],[5,"PyObject_AsWriteBuffer","","",null,null],[5,"PyObject_GetBuffer","","",null,null],[5,"PyBuffer_GetPointer","","",null,null],[5,"PyBuffer_ToContiguous","","",null,null],[5,"PyBuffer_FromContiguous","","",null,null],[5,"PyObject_CopyData","","",null,null],[5,"PyBuffer_IsContiguous","","",null,null],[5,"PyBuffer_FillContiguousStrides","","",null,null],[5,"PyBuffer_FillInfo","","",null,null],[5,"PyBuffer_Release","","",null,null],[5,"PyObject_Format","","",null,null],[5,"PyObject_GetIter","","",null,null],[5,"PyIter_Next","","",null,null],[5,"PyNumber_Check","","",null,null],[5,"PyNumber_Add","","",null,null],[5,"PyNumber_Subtract","","",null,null],[5,"PyNumber_Multiply","","",null,null],[5,"PyNumber_MatrixMultiply","","",null,null],[5,"PyNumber_FloorDivide","","",null,null],[5,"PyNumber_TrueDivide","","",null,null],[5,"PyNumber_Remainder","","",null,null],[5,"PyNumber_Divmod","","",null,null],[5,"PyNumber_Power","","",null,null],[5,"PyNumber_Negative","","",null,null],[5,"PyNumber_Positive","","",null,null],[5,"PyNumber_Absolute","","",null,null],[5,"PyNumber_Invert","","",null,null],[5,"PyNumber_Lshift","","",null,null],[5,"PyNumber_Rshift","","",null,null],[5,"PyNumber_And","","",null,null],[5,"PyNumber_Xor","","",null,null],[5,"PyNumber_Or","","",null,null],[5,"PyNumber_Index","","",null,null],[5,"PyNumber_AsSsize_t","","",null,null],[5,"PyNumber_Long","","",null,null],[5,"PyNumber_Float","","",null,null],[5,"PyNumber_InPlaceAdd","","",null,null],[5,"PyNumber_InPlaceSubtract","","",null,null],[5,"PyNumber_InPlaceMultiply","","",null,null],[5,"PyNumber_InPlaceMatrixMultiply","","",null,null],[5,"PyNumber_InPlaceFloorDivide","","",null,null],[5,"PyNumber_InPlaceTrueDivide","","",null,null],[5,"PyNumber_InPlaceRemainder","","",null,null],[5,"PyNumber_InPlacePower","","",null,null],[5,"PyNumber_InPlaceLshift","","",null,null],[5,"PyNumber_InPlaceRshift","","",null,null],[5,"PyNumber_InPlaceAnd","","",null,null],[5,"PyNumber_InPlaceXor","","",null,null],[5,"PyNumber_InPlaceOr","","",null,null],[5,"PyNumber_ToBase","","",null,null],[5,"PySequence_Check","","",null,null],[5,"PySequence_Size","","",null,null],[5,"PySequence_Concat","","",null,null],[5,"PySequence_Repeat","","",null,null],[5,"PySequence_GetItem","","",null,null],[5,"PySequence_GetSlice","","",null,null],[5,"PySequence_SetItem","","",null,null],[5,"PySequence_DelItem","","",null,null],[5,"PySequence_SetSlice","","",null,null],[5,"PySequence_DelSlice","","",null,null],[5,"PySequence_Tuple","","",null,null],[5,"PySequence_List","","",null,null],[5,"PySequence_Fast","","",null,null],[5,"PySequence_Count","","",null,null],[5,"PySequence_Contains","","",null,null],[5,"PySequence_Index","","",null,null],[5,"PySequence_InPlaceConcat","","",null,null],[5,"PySequence_InPlaceRepeat","","",null,null],[5,"PyMapping_Check","","",null,null],[5,"PyMapping_Size","","",null,null],[5,"PyMapping_HasKeyString","","",null,null],[5,"PyMapping_HasKey","","",null,null],[5,"PyMapping_Keys","","",null,null],[5,"PyMapping_Values","","",null,null],[5,"PyMapping_Items","","",null,null],[5,"PyMapping_GetItemString","","",null,null],[5,"PyMapping_SetItemString","","",null,null],[5,"PyObject_IsInstance","","",null,null],[5,"PyObject_IsSubclass","","",null,null],[5,"PyObject_Malloc","","",null,null],[5,"PyObject_Calloc","","",null,null],[5,"PyObject_Realloc","","",null,null],[5,"PyObject_Free","","",null,null],[5,"_Py_GetAllocatedBlocks","","",null,null],[5,"PyObject_Init","","",null,null],[5,"PyObject_InitVar","","",null,null],[5,"_PyObject_New","","",null,null],[5,"_PyObject_NewVar","","",null,null],[5,"PyGC_Collect","","",null,null],[5,"PyObject_GetArenaAllocator","","",null,null],[5,"PyObject_SetArenaAllocator","","",null,null],[5,"_PyObject_GC_Resize","","",null,null],[5,"_PyObject_GC_Malloc","","",null,null],[5,"_PyObject_GC_Calloc","","",null,null],[5,"_PyObject_GC_New","","",null,null],[5,"_PyObject_GC_NewVar","","",null,null],[5,"PyObject_GC_Track","","",null,null],[5,"PyObject_GC_UnTrack","","",null,null],[5,"PyObject_GC_Del","","",null,null],[5,"PyOS_FSPath","","",null,null],[7,"PyCapsule_Type","","",null,null],[5,"PyCapsule_New","","",null,null],[5,"PyCapsule_GetPointer","","",null,null],[5,"PyCapsule_GetDestructor","","",null,null],[5,"PyCapsule_GetName","","",null,null],[5,"PyCapsule_GetContext","","",null,null],[5,"PyCapsule_IsValid","","",null,null],[5,"PyCapsule_SetPointer","","",null,null],[5,"PyCapsule_SetDestructor","","",null,null],[5,"PyCapsule_SetName","","",null,null],[5,"PyCapsule_SetContext","","",null,null],[5,"PyCapsule_Import","","",null,null],[7,"Py_DebugFlag","","",null,null],[7,"Py_VerboseFlag","","",null,null],[7,"Py_QuietFlag","","",null,null],[7,"Py_InteractiveFlag","","",null,null],[7,"Py_InspectFlag","","",null,null],[7,"Py_OptimizeFlag","","",null,null],[7,"Py_NoSiteFlag","","",null,null],[7,"Py_BytesWarningFlag","","",null,null],[7,"Py_UseClassExceptionsFlag","","",null,null],[7,"Py_FrozenFlag","","",null,null],[7,"Py_IgnoreEnvironmentFlag","","",null,null],[7,"Py_DontWriteBytecodeFlag","","",null,null],[7,"Py_NoUserSiteDirectory","","",null,null],[7,"Py_UnbufferedStdioFlag","","",null,null],[7,"Py_HashRandomizationFlag","","",null,null],[7,"Py_IsolatedFlag","","",null,null],[5,"PyErr_SetNone","","",null,null],[5,"PyErr_SetObject","","",null,null],[5,"PyErr_SetString","","",null,null],[5,"PyErr_Occurred","","",null,null],[5,"PyErr_Clear","","",null,null],[5,"PyErr_Fetch","","",null,null],[5,"PyErr_Restore","","",null,null],[5,"PyErr_GetExcInfo","","",null,null],[5,"PyErr_SetExcInfo","","",null,null],[5,"Py_FatalError","","",null,null],[5,"PyErr_GivenExceptionMatches","","",null,null],[5,"PyErr_ExceptionMatches","","",null,null],[5,"PyErr_NormalizeException","","",null,null],[5,"PyException_SetTraceback","","",null,null],[5,"PyException_GetTraceback","","",null,null],[5,"PyException_GetCause","","",null,null],[5,"PyException_SetCause","","",null,null],[5,"PyException_GetContext","","",null,null],[5,"PyException_SetContext","","",null,null],[7,"PyExc_BaseException","","",null,null],[7,"PyExc_Exception","","",null,null],[7,"PyExc_StopAsyncIteration","","",null,null],[7,"PyExc_StopIteration","","",null,null],[7,"PyExc_GeneratorExit","","",null,null],[7,"PyExc_ArithmeticError","","",null,null],[7,"PyExc_LookupError","","",null,null],[7,"PyExc_AssertionError","","",null,null],[7,"PyExc_AttributeError","","",null,null],[7,"PyExc_BufferError","","",null,null],[7,"PyExc_EOFError","","",null,null],[7,"PyExc_FloatingPointError","","",null,null],[7,"PyExc_OSError","","",null,null],[7,"PyExc_ImportError","","",null,null],[7,"PyExc_ModuleNotFoundError","","",null,null],[7,"PyExc_IndexError","","",null,null],[7,"PyExc_KeyError","","",null,null],[7,"PyExc_KeyboardInterrupt","","",null,null],[7,"PyExc_MemoryError","","",null,null],[7,"PyExc_NameError","","",null,null],[7,"PyExc_OverflowError","","",null,null],[7,"PyExc_RuntimeError","","",null,null],[7,"PyExc_RecursionError","","",null,null],[7,"PyExc_NotImplementedError","","",null,null],[7,"PyExc_SyntaxError","","",null,null],[7,"PyExc_IndentationError","","",null,null],[7,"PyExc_TabError","","",null,null],[7,"PyExc_ReferenceError","","",null,null],[7,"PyExc_SystemError","","",null,null],[7,"PyExc_SystemExit","","",null,null],[7,"PyExc_TypeError","","",null,null],[7,"PyExc_UnboundLocalError","","",null,null],[7,"PyExc_UnicodeError","","",null,null],[7,"PyExc_UnicodeEncodeError","","",null,null],[7,"PyExc_UnicodeDecodeError","","",null,null],[7,"PyExc_UnicodeTranslateError","","",null,null],[7,"PyExc_ValueError","","",null,null],[7,"PyExc_ZeroDivisionError","","",null,null],[7,"PyExc_BlockingIOError","","",null,null],[7,"PyExc_BrokenPipeError","","",null,null],[7,"PyExc_ChildProcessError","","",null,null],[7,"PyExc_ConnectionError","","",null,null],[7,"PyExc_ConnectionAbortedError","","",null,null],[7,"PyExc_ConnectionRefusedError","","",null,null],[7,"PyExc_ConnectionResetError","","",null,null],[7,"PyExc_FileExistsError","","",null,null],[7,"PyExc_FileNotFoundError","","",null,null],[7,"PyExc_InterruptedError","","",null,null],[7,"PyExc_IsADirectoryError","","",null,null],[7,"PyExc_NotADirectoryError","","",null,null],[7,"PyExc_PermissionError","","",null,null],[7,"PyExc_ProcessLookupError","","",null,null],[7,"PyExc_TimeoutError","","",null,null],[7,"PyExc_EnvironmentError","","",null,null],[7,"PyExc_IOError","","",null,null],[7,"PyExc_RecursionErrorInst","","",null,null],[7,"PyExc_Warning","","",null,null],[7,"PyExc_UserWarning","","",null,null],[7,"PyExc_DeprecationWarning","","",null,null],[7,"PyExc_PendingDeprecationWarning","","",null,null],[7,"PyExc_SyntaxWarning","","",null,null],[7,"PyExc_RuntimeWarning","","",null,null],[7,"PyExc_FutureWarning","","",null,null],[7,"PyExc_ImportWarning","","",null,null],[7,"PyExc_UnicodeWarning","","",null,null],[7,"PyExc_BytesWarning","","",null,null],[7,"PyExc_ResourceWarning","","",null,null],[5,"PyErr_BadArgument","","",null,null],[5,"PyErr_NoMemory","","",null,null],[5,"PyErr_SetFromErrno","","",null,null],[5,"PyErr_SetFromErrnoWithFilenameObject","","",null,null],[5,"PyErr_SetFromErrnoWithFilenameObjects","","",null,null],[5,"PyErr_SetFromErrnoWithFilename","","",null,null],[5,"PyErr_Format","","",null,null],[5,"PyErr_SetImportErrorSubclass","","",null,null],[5,"PyErr_SetImportError","","",null,null],[5,"PyErr_BadInternalCall","","",null,null],[5,"_PyErr_BadInternalCall","","",null,null],[5,"PyErr_NewException","","",null,null],[5,"PyErr_NewExceptionWithDoc","","",null,null],[5,"PyErr_WriteUnraisable","","",null,null],[5,"PyErr_CheckSignals","","",null,null],[5,"PyErr_SetInterrupt","","",null,null],[5,"PyErr_SyntaxLocation","","",null,null],[5,"PyErr_SyntaxLocationEx","","",null,null],[5,"PyErr_ProgramText","","",null,null],[5,"PyUnicodeDecodeError_Create","","",null,null],[5,"PyUnicodeEncodeError_GetEncoding","","",null,null],[5,"PyUnicodeDecodeError_GetEncoding","","",null,null],[5,"PyUnicodeEncodeError_GetObject","","",null,null],[5,"PyUnicodeDecodeError_GetObject","","",null,null],[5,"PyUnicodeTranslateError_GetObject","","",null,null],[5,"PyUnicodeEncodeError_GetStart","","",null,null],[5,"PyUnicodeDecodeError_GetStart","","",null,null],[5,"PyUnicodeTranslateError_GetStart","","",null,null],[5,"PyUnicodeEncodeError_SetStart","","",null,null],[5,"PyUnicodeDecodeError_SetStart","","",null,null],[5,"PyUnicodeTranslateError_SetStart","","",null,null],[5,"PyUnicodeEncodeError_GetEnd","","",null,null],[5,"PyUnicodeDecodeError_GetEnd","","",null,null],[5,"PyUnicodeTranslateError_GetEnd","","",null,null],[5,"PyUnicodeEncodeError_SetEnd","","",null,null],[5,"PyUnicodeDecodeError_SetEnd","","",null,null],[5,"PyUnicodeTranslateError_SetEnd","","",null,null],[5,"PyUnicodeEncodeError_GetReason","","",null,null],[5,"PyUnicodeDecodeError_GetReason","","",null,null],[5,"PyUnicodeTranslateError_GetReason","","",null,null],[5,"PyUnicodeEncodeError_SetReason","","",null,null],[5,"PyUnicodeDecodeError_SetReason","","",null,null],[5,"PyUnicodeTranslateError_SetReason","","",null,null],[5,"PyHash_GetFuncDef","","",null,null],[5,"_Py_HashBytes","","",null,null],[5,"PyMem_RawMalloc","","",null,null],[5,"PyMem_RawCalloc","","",null,null],[5,"PyMem_RawRealloc","","",null,null],[5,"PyMem_RawFree","","",null,null],[5,"PyMem_Malloc","","",null,null],[5,"PyMem_Calloc","","",null,null],[5,"PyMem_Realloc","","",null,null],[5,"PyMem_Free","","",null,null],[5,"PyMem_GetAllocator","","",null,null],[5,"PyMem_SetAllocator","","",null,null],[5,"PyMem_SetupDebugHooks","","",null,null],[5,"PyInterpreterState_New","","",null,null],[5,"PyInterpreterState_Clear","","",null,null],[5,"PyInterpreterState_Delete","","",null,null],[5,"PyState_FindModule","","",null,null],[5,"PyThreadState_New","","",null,null],[5,"PyThreadState_Clear","","",null,null],[5,"PyThreadState_Delete","","",null,null],[5,"PyThreadState_DeleteCurrent","","",null,null],[5,"PyThreadState_Get","","",null,null],[5,"PyThreadState_Swap","","",null,null],[5,"PyThreadState_GetDict","","",null,null],[5,"PyThreadState_SetAsyncExc","","",null,null],[5,"PyGILState_Ensure","","",null,null],[5,"PyGILState_Release","","",null,null],[5,"PyGILState_GetThisThreadState","","",null,null],[5,"PyGILState_Check","","",null,null],[5,"PyOS_string_to_double","","",null,null],[5,"PyOS_double_to_string","","",null,null],[5,"Py_SetProgramName","","",null,null],[5,"Py_GetProgramName","","",null,null],[5,"Py_SetPythonHome","","",null,null],[5,"Py_GetPythonHome","","",null,null],[5,"Py_Initialize","","",null,null],[5,"Py_InitializeEx","","",null,null],[5,"Py_Finalize","","",null,null],[5,"Py_IsInitialized","","",null,null],[5,"Py_NewInterpreter","","",null,null],[5,"Py_EndInterpreter","","",null,null],[5,"PyRun_SimpleStringFlags","","",null,null],[5,"PyRun_AnyFileFlags","","",null,null],[5,"PyRun_AnyFileExFlags","","",null,null],[5,"PyRun_SimpleFileExFlags","","",null,null],[5,"PyRun_InteractiveOneFlags","","",null,null],[5,"PyRun_InteractiveOneObject","","",null,null],[5,"PyRun_InteractiveLoopFlags","","",null,null],[5,"PyParser_ASTFromString","","",null,null],[5,"PyParser_ASTFromStringObject","","",null,null],[5,"PyParser_ASTFromFile","","",null,null],[5,"PyParser_ASTFromFileObject","","",null,null],[5,"PyParser_SimpleParseStringFlags","","",null,null],[5,"PyParser_SimpleParseStringFlagsFilename","","",null,null],[5,"PyParser_SimpleParseFileFlags","","",null,null],[5,"PyRun_StringFlags","","",null,null],[5,"PyRun_FileExFlags","","",null,null],[5,"Py_CompileStringExFlags","","",null,null],[5,"Py_CompileStringObject","","",null,null],[5,"Py_SymtableString","","",null,null],[5,"Py_SymtableStringObject","","",null,null],[5,"PyErr_Print","","",null,null],[5,"PyErr_PrintEx","","",null,null],[5,"PyErr_Display","","",null,null],[5,"Py_AtExit","","",null,null],[5,"Py_Exit","","",null,null],[5,"Py_Main","","",null,null],[5,"Py_GetProgramFullPath","","",null,null],[5,"Py_GetPrefix","","",null,null],[5,"Py_GetExecPrefix","","",null,null],[5,"Py_GetPath","","",null,null],[5,"Py_SetPath","","",null,null],[5,"Py_GetVersion","","",null,null],[5,"Py_GetPlatform","","",null,null],[5,"Py_GetCopyright","","",null,null],[5,"Py_GetCompiler","","",null,null],[5,"Py_GetBuildInfo","","",null,null],[7,"PyRange_Type","","",null,null],[7,"PyRangeIter_Type","","",null,null],[7,"PyLongRangeIter_Type","","",null,null],[7,"PySet_Type","","",null,null],[7,"PyFrozenSet_Type","","",null,null],[7,"PySetIter_Type","","",null,null],[5,"PySet_New","","",null,null],[5,"PyFrozenSet_New","","",null,null],[5,"PySet_Size","","",null,null],[5,"PySet_Clear","","",null,null],[5,"PySet_Contains","","",null,null],[5,"PySet_Discard","","",null,null],[5,"PySet_Add","","",null,null],[5,"PySet_Pop","","",null,null],[5,"_PySet_NextEntry","","",null,null],[7,"PySlice_Type","","",null,null],[7,"PyEllipsis_Type","","",null,null],[5,"PySlice_New","","",null,null],[5,"PySlice_GetIndices","","",null,null],[5,"PySlice_GetIndicesEx","","",null,null],[5,"PyStructSequence_NewType","","",null,null],[5,"PyStructSequence_New","","",null,null],[5,"PyStructSequence_SetItem","","",null,null],[5,"PyStructSequence_GetItem","","",null,null],[5,"Py_DecodeLocale","","",null,null],[5,"PySys_GetObject","","",null,null],[5,"PySys_SetObject","","",null,null],[5,"PySys_SetArgv","","",null,null],[5,"PySys_SetArgvEx","","",null,null],[5,"PySys_SetPath","","",null,null],[5,"PySys_WriteStdout","","",null,null],[5,"PySys_WriteStderr","","",null,null],[5,"PySys_FormatStdout","","",null,null],[5,"PySys_FormatStderr","","",null,null],[5,"PySys_ResetWarnOptions","","",null,null],[5,"PySys_AddWarnOption","","",null,null],[5,"PySys_AddWarnOptionUnicode","","",null,null],[5,"PySys_HasWarnOptions","","",null,null],[5,"PySys_AddXOption","","",null,null],[5,"PySys_GetXOptions","","",null,null],[5,"PyTraceBack_Here","","",null,null],[5,"PyTraceBack_Print","","",null,null],[7,"PyTraceBack_Type","","",null,null],[7,"PyTuple_Type","","",null,null],[7,"PyTupleIter_Type","","",null,null],[5,"PyTuple_New","","",null,null],[5,"PyTuple_Size","","",null,null],[5,"PyTuple_GetItem","","",null,null],[5,"PyTuple_SetItem","","",null,null],[5,"PyTuple_GetSlice","","",null,null],[5,"PyTuple_Pack","","",null,null],[5,"PyTuple_ClearFreeList","","",null,null],[7,"PyUnicode_Type","","",null,null],[7,"PyUnicodeIter_Type","","",null,null],[5,"PyUnicode_New","","",null,null],[5,"PyUnicode_CopyCharacters","","",null,null],[5,"PyUnicode_Fill","","",null,null],[5,"PyUnicode_FromUnicode","","",null,null],[5,"PyUnicode_FromStringAndSize","","",null,null],[5,"PyUnicode_FromString","","",null,null],[5,"PyUnicode_FromKindAndData","","",null,null],[5,"PyUnicode_Substring","","",null,null],[5,"PyUnicode_AsUCS4","","",null,null],[5,"PyUnicode_AsUCS4Copy","","",null,null],[5,"PyUnicode_AsUnicode","","",null,null],[5,"PyUnicode_AsUnicodeAndSize","","",null,null],[5,"PyUnicode_GetLength","","",null,null],[5,"PyUnicode_GetSize","","",null,null],[5,"PyUnicode_ReadChar","","",null,null],[5,"PyUnicode_WriteChar","","",null,null],[5,"PyUnicode_GetMax","","",null,null],[5,"PyUnicode_Resize","","",null,null],[5,"PyUnicode_FromEncodedObject","","",null,null],[5,"PyUnicode_FromObject","","",null,null],[5,"PyUnicode_FromFormat","","",null,null],[5,"PyUnicode_InternInPlace","","",null,null],[5,"PyUnicode_InternImmortal","","",null,null],[5,"PyUnicode_InternFromString","","",null,null],[5,"PyUnicode_FromWideChar","","",null,null],[5,"PyUnicode_AsWideChar","","",null,null],[5,"PyUnicode_AsWideCharString","","",null,null],[5,"PyUnicode_FromOrdinal","","",null,null],[5,"PyUnicode_ClearFreeList","","",null,null],[5,"PyUnicode_AsUTF8AndSize","","",null,null],[5,"PyUnicode_AsUTF8","","",null,null],[5,"PyUnicode_GetDefaultEncoding","","",null,null],[5,"PyUnicode_Decode","","",null,null],[5,"PyUnicode_AsDecodedObject","","",null,null],[5,"PyUnicode_AsDecodedUnicode","","",null,null],[5,"PyUnicode_Encode","","",null,null],[5,"PyUnicode_AsEncodedObject","","",null,null],[5,"PyUnicode_AsEncodedString","","",null,null],[5,"PyUnicode_AsEncodedUnicode","","",null,null],[5,"PyUnicode_BuildEncodingMap","","",null,null],[5,"PyUnicode_DecodeUTF7","","",null,null],[5,"PyUnicode_DecodeUTF7Stateful","","",null,null],[5,"PyUnicode_EncodeUTF7","","",null,null],[5,"PyUnicode_DecodeUTF8","","",null,null],[5,"PyUnicode_DecodeUTF8Stateful","","",null,null],[5,"PyUnicode_AsUTF8String","","",null,null],[5,"PyUnicode_EncodeUTF8","","",null,null],[5,"PyUnicode_DecodeUTF32","","",null,null],[5,"PyUnicode_DecodeUTF32Stateful","","",null,null],[5,"PyUnicode_AsUTF32String","","",null,null],[5,"PyUnicode_EncodeUTF32","","",null,null],[5,"PyUnicode_DecodeUTF16","","",null,null],[5,"PyUnicode_DecodeUTF16Stateful","","",null,null],[5,"PyUnicode_AsUTF16String","","",null,null],[5,"PyUnicode_EncodeUTF16","","",null,null],[5,"PyUnicode_DecodeUnicodeEscape","","",null,null],[5,"PyUnicode_AsUnicodeEscapeString","","",null,null],[5,"PyUnicode_EncodeUnicodeEscape","","",null,null],[5,"PyUnicode_DecodeRawUnicodeEscape","","",null,null],[5,"PyUnicode_AsRawUnicodeEscapeString","","",null,null],[5,"PyUnicode_EncodeRawUnicodeEscape","","",null,null],[5,"PyUnicode_DecodeLatin1","","",null,null],[5,"PyUnicode_AsLatin1String","","",null,null],[5,"PyUnicode_EncodeLatin1","","",null,null],[5,"PyUnicode_DecodeASCII","","",null,null],[5,"PyUnicode_AsASCIIString","","",null,null],[5,"PyUnicode_EncodeASCII","","",null,null],[5,"PyUnicode_DecodeCharmap","","",null,null],[5,"PyUnicode_AsCharmapString","","",null,null],[5,"PyUnicode_EncodeCharmap","","",null,null],[5,"PyUnicode_TranslateCharmap","","",null,null],[5,"PyUnicode_EncodeDecimal","","",null,null],[5,"PyUnicode_TransformDecimalToASCII","","",null,null],[5,"PyUnicode_DecodeLocaleAndSize","","",null,null],[5,"PyUnicode_DecodeLocale","","",null,null],[5,"PyUnicode_EncodeLocale","","",null,null],[5,"PyUnicode_FSConverter","","",null,null],[5,"PyUnicode_FSDecoder","","",null,null],[5,"PyUnicode_DecodeFSDefault","","",null,null],[5,"PyUnicode_DecodeFSDefaultAndSize","","",null,null],[5,"PyUnicode_EncodeFSDefault","","",null,null],[5,"PyUnicode_Concat","","",null,null],[5,"PyUnicode_Append","","",null,null],[5,"PyUnicode_AppendAndDel","","",null,null],[5,"PyUnicode_Split","","",null,null],[5,"PyUnicode_Splitlines","","",null,null],[5,"PyUnicode_Partition","","",null,null],[5,"PyUnicode_RPartition","","",null,null],[5,"PyUnicode_RSplit","","",null,null],[5,"PyUnicode_Translate","","",null,null],[5,"PyUnicode_Join","","",null,null],[5,"PyUnicode_Tailmatch","","",null,null],[5,"PyUnicode_Find","","",null,null],[5,"PyUnicode_FindChar","","",null,null],[5,"PyUnicode_Count","","",null,null],[5,"PyUnicode_Replace","","",null,null],[5,"PyUnicode_Compare","","",null,null],[5,"PyUnicode_CompareWithASCIIString","","",null,null],[5,"PyUnicode_RichCompare","","",null,null],[5,"PyUnicode_Format","","",null,null],[5,"PyUnicode_Contains","","",null,null],[5,"PyUnicode_IsIdentifier","","",null,null],[5,"PyUnicode_AsUnicodeCopy","","",null,null],[5,"PyErr_WarnEx","","",null,null],[5,"PyErr_WarnFormat","","",null,null],[5,"PyErr_ResourceWarning","","",null,null],[5,"PyErr_WarnExplicit","","",null,null],[5,"PyWeakref_NewRef","","",null,null],[5,"PyWeakref_NewProxy","","",null,null],[5,"PyWeakref_GetObject","","",null,null],[11,"new","","",218,[[]]],[0,"structmember","","",null,null],[3,"PyMemberDef","pyo3::ffi::structmember","",null,null],[12,"name","","",242,null],[12,"type_code","","",242,null],[12,"offset","","",242,null],[12,"flags","","",242,null],[12,"doc","","",242,null],[5,"PyMember_GetOne","","",null,null],[5,"PyMember_SetOne","","",null,null],[17,"T_SHORT","","",null,null],[17,"T_INT","","",null,null],[17,"T_LONG","","",null,null],[17,"T_FLOAT","","",null,null],[17,"T_DOUBLE","","",null,null],[17,"T_STRING","","",null,null],[17,"T_OBJECT","","",null,null],[17,"T_CHAR","","",null,null],[17,"T_BYTE","","",null,null],[17,"T_UBYTE","","",null,null],[17,"T_USHORT","","",null,null],[17,"T_UINT","","",null,null],[17,"T_ULONG","","",null,null],[17,"T_STRING_INPLACE","","",null,null],[17,"T_BOOL","","",null,null],[17,"T_OBJECT_EX","","",null,null],[17,"T_LONGLONG","","",null,null],[17,"T_ULONGLONG","","",null,null],[17,"T_PYSSIZET","","",null,null],[17,"T_NONE","","",null,null],[17,"READONLY","","",null,null],[17,"READ_RESTRICTED","","",null,null],[17,"PY_WRITE_RESTRICTED","","",null,null],[17,"RESTRICTED","","",null,null],[0,"frameobject","pyo3::ffi","",null,null],[3,"PyTryBlock","pyo3::ffi::frameobject","",null,null],[12,"b_type","","",243,null],[12,"b_handler","","",243,null],[12,"b_level","","",243,null],[3,"PyFrameObject","","",null,null],[12,"ob_base","","",244,null],[12,"f_back","","",244,null],[12,"f_code","","",244,null],[12,"f_builtins","","",244,null],[12,"f_globals","","",244,null],[12,"f_locals","","",244,null],[12,"f_valuestack","","",244,null],[12,"f_stacktop","","",244,null],[12,"f_trace","","",244,null],[12,"f_exc_type","","",244,null],[12,"f_exc_value","","",244,null],[12,"f_exc_traceback","","",244,null],[12,"f_gen","","",244,null],[12,"f_lasti","","",244,null],[12,"f_lineno","","",244,null],[12,"f_iblock","","",244,null],[12,"f_executing","","",244,null],[12,"f_blockstack","","",244,null],[12,"f_localsplus","","",244,null],[5,"PyFrame_Check","","",null,[[],["c_int",6]]],[7,"PyFrame_Type","","",null,null],[5,"PyFrame_New","","",null,null],[5,"PyFrame_BlockSetup","","",null,null],[5,"PyFrame_BlockPop","","",null,null],[5,"PyFrame_LocalsToFast","","",null,null],[5,"PyFrame_FastToLocalsWithError","","",null,null],[5,"PyFrame_FastToLocals","","",null,null],[5,"PyFrame_ClearFreeList","","",null,null],[5,"PyFrame_GetLineNumber","","",null,null],[6,"_PyFrameEvalFunction","pyo3::ffi","",null,null],[6,"FreeFunc","","",null,null],[6,"getter","","",null,null],[6,"setter","","",null,null],[6,"PyCFunction","","",null,null],[6,"PyCFunctionWithKeywords","","",null,null],[6,"unaryfunc","","",null,null],[6,"binaryfunc","","",null,null],[6,"ternaryfunc","","",null,null],[6,"inquiry","","",null,null],[6,"lenfunc","","",null,null],[6,"ssizeargfunc","","",null,null],[6,"ssizessizeargfunc","","",null,null],[6,"ssizeobjargproc","","",null,null],[6,"ssizessizeobjargproc","","",null,null],[6,"objobjargproc","","",null,null],[6,"getbufferproc","","",null,null],[6,"releasebufferproc","","",null,null],[6,"objobjproc","","",null,null],[6,"visitproc","","",null,null],[6,"traverseproc","","",null,null],[6,"freefunc","","",null,null],[6,"destructor","","",null,null],[6,"printfunc","","",null,null],[6,"getattrfunc","","",null,null],[6,"getattrofunc","","",null,null],[6,"setattrfunc","","",null,null],[6,"setattrofunc","","",null,null],[6,"reprfunc","","",null,null],[6,"hashfunc","","",null,null],[6,"richcmpfunc","","",null,null],[6,"getiterfunc","","",null,null],[6,"iternextfunc","","",null,null],[6,"descrgetfunc","","",null,null],[6,"descrsetfunc","","",null,null],[6,"initproc","","",null,null],[6,"newfunc","","",null,null],[6,"allocfunc","","",null,null],[6,"PyCapsule_Destructor","","",null,null],[6,"Py_uintptr_t","","",null,null],[6,"Py_intptr_t","","",null,null],[6,"Py_ssize_t","","",null,null],[6,"Py_hash_t","","",null,null],[6,"Py_uhash_t","","",null,null],[6,"Py_UNICODE","","",null,null],[6,"Py_UCS4","","",null,null],[6,"Py_UCS2","","",null,null],[6,"Py_UCS1","","",null,null],[7,"PyDateTimeAPI","","",null,null],[17,"CO_OPTIMIZED","","",null,null],[17,"CO_NEWLOCALS","","",null,null],[17,"CO_VARARGS","","",null,null],[17,"CO_VARKEYWORDS","","",null,null],[17,"CO_NESTED","","",null,null],[17,"CO_GENERATOR","","",null,null],[17,"CO_NOFREE","","",null,null],[17,"CO_COROUTINE","","",null,null],[17,"CO_ITERABLE_COROUTINE","","",null,null],[17,"CO_ASYNC_GENERATOR","","",null,null],[17,"CO_FUTURE_DIVISION","","",null,null],[17,"CO_FUTURE_ABSOLUTE_IMPORT","","",null,null],[17,"CO_FUTURE_WITH_STATEMENT","","",null,null],[17,"CO_FUTURE_PRINT_FUNCTION","","",null,null],[17,"CO_FUTURE_UNICODE_LITERALS","","",null,null],[17,"CO_FUTURE_BARRY_AS_BDFL","","",null,null],[17,"CO_FUTURE_GENERATOR_STOP","","",null,null],[17,"CO_MAXBLOCKS","","",null,null],[17,"FUTURE_NESTED_SCOPES","","",null,null],[17,"FUTURE_GENERATORS","","",null,null],[17,"FUTURE_DIVISION","","",null,null],[17,"FUTURE_ABSOLUTE_IMPORT","","",null,null],[17,"FUTURE_WITH_STATEMENT","","",null,null],[17,"FUTURE_PRINT_FUNCTION","","",null,null],[17,"FUTURE_UNICODE_LITERALS","","",null,null],[17,"FUTURE_BARRY_AS_BDFL","","",null,null],[17,"FUTURE_GENERATOR_STOP","","",null,null],[17,"Py_single_input","","",null,null],[17,"Py_file_input","","",null,null],[17,"Py_eval_input","","",null,null],[17,"PyGetSetDef_INIT","","",null,null],[17,"PyGetSetDef_DICT","","",null,null],[17,"PY_STDIOTEXTMODE","","",null,null],[17,"PyMethodDef_INIT","","",null,null],[17,"METH_VARARGS","","",null,null],[17,"METH_KEYWORDS","","",null,null],[17,"METH_NOARGS","","",null,null],[17,"METH_O","","",null,null],[17,"METH_CLASS","","",null,null],[17,"METH_STATIC","","",null,null],[17,"METH_COEXIST","","",null,null],[17,"Py_CLEANUP_SUPPORTED","","",null,null],[17,"PYTHON_API_VERSION","","",null,null],[17,"PYTHON_ABI_VERSION","","",null,null],[17,"PyModuleDef_HEAD_INIT","","",null,null],[17,"Py_mod_create","","",null,null],[17,"Py_mod_exec","","",null,null],[17,"PyModuleDef_INIT","","",null,null],[17,"PyObject_HEAD_INIT","","",null,null],[17,"PyBUF_MAX_NDIM","","Maximum number of dimensions",null,null],[17,"PyBUF_SIMPLE","","",null,null],[17,"PyBUF_WRITABLE","","",null,null],[17,"PyBUF_WRITEABLE","","",null,null],[17,"PyBUF_FORMAT","","",null,null],[17,"PyBUF_ND","","",null,null],[17,"PyBUF_STRIDES","","",null,null],[17,"PyBUF_C_CONTIGUOUS","","",null,null],[17,"PyBUF_F_CONTIGUOUS","","",null,null],[17,"PyBUF_ANY_CONTIGUOUS","","",null,null],[17,"PyBUF_INDIRECT","","",null,null],[17,"PyBUF_CONTIG","","",null,null],[17,"PyBUF_CONTIG_RO","","",null,null],[17,"PyBUF_STRIDED","","",null,null],[17,"PyBUF_STRIDED_RO","","",null,null],[17,"PyBUF_RECORDS","","",null,null],[17,"PyBUF_RECORDS_RO","","",null,null],[17,"PyBUF_FULL","","",null,null],[17,"PyBUF_FULL_RO","","",null,null],[17,"PyBUF_READ","","",null,null],[17,"PyBUF_WRITE","","",null,null],[17,"PyNumberMethods_INIT","","",null,null],[17,"PySequenceMethods_INIT","","",null,null],[17,"PyMappingMethods_INIT","","",null,null],[17,"PyAsyncMethods_INIT","","",null,null],[17,"PyBufferProcs_INIT","","",null,null],[17,"PyTypeObject_INIT","","",null,null],[17,"Py_PRINT_RAW","","",null,null],[17,"Py_TPFLAGS_HEAPTYPE","","Set if the type object is dynamically allocated",null,null],[17,"Py_TPFLAGS_BASETYPE","","Set if the type allows subclassing",null,null],[17,"Py_TPFLAGS_READY","","Set if the type is \'ready\' -- fully initialized",null,null],[17,"Py_TPFLAGS_READYING","","Set while the type is being \'readied\', to prevent…",null,null],[17,"Py_TPFLAGS_HAVE_GC","","Objects support garbage collection (see objimp.h)",null,null],[17,"Py_TPFLAGS_HAVE_VERSION_TAG","","Objects support type attribute cache",null,null],[17,"Py_TPFLAGS_VALID_VERSION_TAG","","",null,null],[17,"Py_TPFLAGS_IS_ABSTRACT","","",null,null],[17,"Py_TPFLAGS_LONG_SUBCLASS","","",null,null],[17,"Py_TPFLAGS_LIST_SUBCLASS","","",null,null],[17,"Py_TPFLAGS_TUPLE_SUBCLASS","","",null,null],[17,"Py_TPFLAGS_BYTES_SUBCLASS","","",null,null],[17,"Py_TPFLAGS_UNICODE_SUBCLASS","","",null,null],[17,"Py_TPFLAGS_DICT_SUBCLASS","","",null,null],[17,"Py_TPFLAGS_BASE_EXC_SUBCLASS","","",null,null],[17,"Py_TPFLAGS_TYPE_SUBCLASS","","",null,null],[17,"Py_TPFLAGS_DEFAULT","","",null,null],[17,"Py_TPFLAGS_HAVE_FINALIZE","","",null,null],[17,"Py_LT","","",null,null],[17,"Py_LE","","",null,null],[17,"Py_EQ","","",null,null],[17,"Py_NE","","",null,null],[17,"Py_GT","","",null,null],[17,"Py_GE","","",null,null],[17,"PY_SSIZE_T_MIN","","",null,null],[17,"PY_SSIZE_T_MAX","","",null,null],[17,"MAX_CO_EXTRA_USERS","","",null,null],[17,"Py_DTSF_SIGN","","",null,null],[17,"Py_DTSF_ADD_DOT_0","","",null,null],[17,"Py_DTSF_ALT","","",null,null],[17,"Py_DTST_FINITE","","",null,null],[17,"Py_DTST_INFINITE","","",null,null],[17,"Py_DTST_NAN","","",null,null],[17,"PySet_MINSIZE","","",null,null],[17,"Py_mp_ass_subscript","","",null,null],[17,"Py_mp_length","","",null,null],[17,"Py_mp_subscript","","",null,null],[17,"Py_nb_absolute","","",null,null],[17,"Py_nb_add","","",null,null],[17,"Py_nb_and","","",null,null],[17,"Py_nb_bool","","",null,null],[17,"Py_nb_divmod","","",null,null],[17,"Py_nb_float","","",null,null],[17,"Py_nb_floor_divide","","",null,null],[17,"Py_nb_index","","",null,null],[17,"Py_nb_inplace_add","","",null,null],[17,"Py_nb_inplace_and","","",null,null],[17,"Py_nb_inplace_floor_divide","","",null,null],[17,"Py_nb_inplace_lshift","","",null,null],[17,"Py_nb_inplace_multiply","","",null,null],[17,"Py_nb_inplace_or","","",null,null],[17,"Py_nb_inplace_power","","",null,null],[17,"Py_nb_inplace_remainder","","",null,null],[17,"Py_nb_inplace_rshift","","",null,null],[17,"Py_nb_inplace_subtract","","",null,null],[17,"Py_nb_inplace_true_divide","","",null,null],[17,"Py_nb_inplace_xor","","",null,null],[17,"Py_nb_int","","",null,null],[17,"Py_nb_invert","","",null,null],[17,"Py_nb_lshift","","",null,null],[17,"Py_nb_multiply","","",null,null],[17,"Py_nb_negative","","",null,null],[17,"Py_nb_or","","",null,null],[17,"Py_nb_positive","","",null,null],[17,"Py_nb_power","","",null,null],[17,"Py_nb_remainder","","",null,null],[17,"Py_nb_rshift","","",null,null],[17,"Py_nb_subtract","","",null,null],[17,"Py_nb_true_divide","","",null,null],[17,"Py_nb_xor","","",null,null],[17,"Py_sq_ass_item","","",null,null],[17,"Py_sq_concat","","",null,null],[17,"Py_sq_contains","","",null,null],[17,"Py_sq_inplace_concat","","",null,null],[17,"Py_sq_inplace_repeat","","",null,null],[17,"Py_sq_item","","",null,null],[17,"Py_sq_length","","",null,null],[17,"Py_sq_repeat","","",null,null],[17,"Py_tp_alloc","","",null,null],[17,"Py_tp_base","","",null,null],[17,"Py_tp_bases","","",null,null],[17,"Py_tp_call","","",null,null],[17,"Py_tp_clear","","",null,null],[17,"Py_tp_dealloc","","",null,null],[17,"Py_tp_del","","",null,null],[17,"Py_tp_descr_get","","",null,null],[17,"Py_tp_descr_set","","",null,null],[17,"Py_tp_doc","","",null,null],[17,"Py_tp_getattr","","",null,null],[17,"Py_tp_getattro","","",null,null],[17,"Py_tp_hash","","",null,null],[17,"Py_tp_init","","",null,null],[17,"Py_tp_is_gc","","",null,null],[17,"Py_tp_iter","","",null,null],[17,"Py_tp_iternext","","",null,null],[17,"Py_tp_methods","","",null,null],[17,"Py_tp_new","","",null,null],[17,"Py_tp_repr","","",null,null],[17,"Py_tp_richcompare","","",null,null],[17,"Py_tp_setattr","","",null,null],[17,"Py_tp_setattro","","",null,null],[17,"Py_tp_str","","",null,null],[17,"Py_tp_traverse","","",null,null],[17,"Py_tp_members","","",null,null],[17,"Py_tp_getset","","",null,null],[17,"Py_tp_free","","",null,null],[17,"Py_nb_matrix_multiply","","",null,null],[17,"Py_nb_inplace_matrix_multiply","","",null,null],[17,"Py_am_await","","",null,null],[17,"Py_am_aiter","","",null,null],[17,"Py_am_anext","","",null,null],[17,"Py_tp_finalize","","",null,null],[17,"Py_UNICODE_REPLACEMENT_CHARACTER","","",null,null],[0,"freelist","pyo3","Free allocation list",null,null],[3,"FreeList","pyo3::freelist","",null,null],[4,"Slot","","",null,null],[13,"Empty","","",245,null],[13,"Filled","","",245,null],[8,"PyClassWithFreeList","","Implementing this trait for custom class adds free…",null,null],[10,"get_free_list","","",246,[[],["freelist",3]]],[11,"with_capacity","","Create new `FreeList` instance with specified capacity",247,[[],["freelist",3]]],[11,"pop","","Pop first non empty item",247,[[],["option",4]]],[11,"insert","","Insert a value into the list",247,[[],["option",4]]],[11,"acquire","pyo3","Acquires the global interpreter lock, which allows access…",248,[[],["gilguard",3]]],[11,"python","","Retrieves the marker type that proves that the GIL was…",248,[[],["python",3]]],[11,"new","","Create a new `GILPool`. This function should only ever be…",249,[[],["gilpool",3]]],[11,"python","","Get the Python token associated with this `GILPool`.",249,[[],["python",3]]],[11,"new","","Create a new instance `Py<T>` of a `#[pyclass]` on the…",250,[[["python",3]],[["pyresult",6],["py",3]]]],[11,"borrow","","Immutably borrows the value `T`. This borrow lasts untill…",250,[[["python",3]],["pyref",3]]],[11,"borrow_mut","","Mutably borrows the value `T`. This borrow lasts untill…",250,[[["python",3]],["pyrefmut",3]]],[11,"try_borrow","","Immutably borrows the value `T`, returning an error if the…",250,[[["python",3]],[["pyref",3],["result",4],["pyborrowerror",3]]]],[11,"try_borrow_mut","","Mutably borrows the value `T`, returning an error if the…",250,[[["python",3]],[["pyrefmut",3],["result",4],["pyborrowmuterror",3]]]],[11,"from_owned_ptr","","Creates a `Py<T>` instance for the given FFI pointer.",250,[[["python",3]],["py",3]]],[11,"from_owned_ptr_or_panic","","Creates a `Py<T>` instance for the given FFI pointer.",250,[[["python",3]],["py",3]]],[11,"from_owned_ptr_or_err","","Construct `Py<T>` from the result of a Python FFI call that",250,[[["python",3]],[["pyresult",6],["py",3]]]],[11,"from_borrowed_ptr","","Creates a `Py<T>` instance for the given Python FFI pointer.",250,[[["python",3]],["py",3]]],[11,"get_refcnt","","Gets the reference count of the `ffi::PyObject` pointer.",250,[[["python",3]]]],[11,"clone_ref","","Clones self by calling `Py_INCREF()` on the ptr.",250,[[["python",3]],["py",3]]],[0,"marshal","","",null,null],[5,"dumps","pyo3::marshal","Serialize an object to bytes using the Python built-in…",null,[[["python",3]],[["pyresult",6],["pybytes",3]]]],[5,"loads","","Deserialize an object from bytes using the Python built-in…",null,[[["python",3]],[["pyresult",6],["pyany",3]]]],[17,"VERSION","","The current version of the marshal binary format.",null,null],[11,"from_owned_ptr","pyo3","Creates a `PyObject` instance for the given FFI pointer.…",251,[[["python",3]],["pyobject",3]]],[11,"from_owned_ptr_or_panic","","Creates a `PyObject` instance for the given FFI pointer.…",251,[[["python",3]],["pyobject",3]]],[11,"from_owned_ptr_or_err","","Constructs a `PyObject` from the result of a Python FFI…",251,[[["python",3]],[["pyresult",6],["pyobject",3]]]],[11,"from_owned_ptr_or_opt","","Constructs a `PyObject` from the result of a Python FFI…",251,[[["python",3]],[["option",4],["pyobject",3]]]],[11,"from_borrowed_ptr","","Creates a `PyObject` instance for the given Python FFI…",251,[[["python",3]],["pyobject",3]]],[11,"from_borrowed_ptr_or_err","","Creates a `PyObject` instance for the given Python FFI…",251,[[["python",3]],[["pyresult",6],["pyobject",3]]]],[11,"from_borrowed_ptr_or_opt","","Creates a `PyObject` instance for the given Python FFI…",251,[[["python",3]],[["option",4],["pyobject",3]]]],[11,"get_refcnt","","Gets the reference count of the ffi::PyObject pointer.",251,[[["python",3]]]],[11,"clone_ref","","Clones self by calling `Py_INCREF()` on the ptr.",251,[[["python",3]]]],[11,"is_none","","Returns whether the object is considered to be None.",251,[[["python",3]]]],[11,"is_true","","Returns whether the object is considered to be true.",251,[[["python",3]],["pyresult",6]]],[11,"cast_as","","Casts the PyObject to a concrete Python object type.",251,[[["python",3]],[["result",4],["pydowncasterror",3]]]],[11,"extract","","Extracts some type from the Python object.",251,[[["python",3]],["pyresult",6]]],[11,"getattr","","Retrieves an attribute value.",251,[[["python",3]],[["pyresult",6],["pyobject",3]]]],[11,"call","","Calls the object.",251,[[["python",3],["pydict",3],["option",4]],[["pyresult",6],["pyobject",3]]]],[11,"call1","","Calls the object with only positional arguments.",251,[[["python",3]],[["pyresult",6],["pyobject",3]]]],[11,"call0","","Calls the object without arguments.",251,[[["python",3]],[["pyresult",6],["pyobject",3]]]],[11,"call_method","","Calls a method on the object.",251,[[["python",3],["pydict",3],["option",4]],[["pyresult",6],["pyobject",3]]]],[11,"call_method1","","Calls a method on the object with only positional arguments.",251,[[["python",3]],[["pyresult",6],["pyobject",3]]]],[11,"call_method0","","Calls a method on the object with no arguments.",251,[[["python",3]],[["pyresult",6],["pyobject",3]]]],[0,"once_cell","","",null,null],[3,"GILOnceCell","pyo3::once_cell","A write-once cell similar to `once_cell::OnceCell`.",null,null],[11,"new","","Create a `GILOnceCell` which does not yet contain a value.",252,[[]]],[11,"get","","Get a reference to the contained value, or `None` if the…",252,[[["python",3]],["option",4]]],[11,"get_or_init","","Get a reference to the contained value, initializing it if…",252,[[["python",3]]]],[11,"get_mut","","Get the contents of the cell mutably. This is only…",252,[[],["option",4]]],[11,"set","","Set the value in the cell.",252,[[["python",3]],["result",4]]],[0,"panic","pyo3","",null,null],[3,"PanicException","pyo3::panic","The exception raised when Rust code called from Python…",null,null],[11,"py_err","","",253,[[["topyobject",8]],["pyerr",3]]],[11,"into","","",253,[[["topyobject",8]],["pyresult",6]]],[0,"prelude","pyo3","A collection of items you most likely want to have in…",null,null],[23,"pyclass","pyo3::prelude","",null,null],[23,"pyfunction","","",null,null],[23,"pymethods","","",null,null],[23,"pymodule","","Internally, this proc macro create a new c function called…",null,null],[23,"pyproto","","",null,null],[3,"PyErr","","Represents a Python exception that was raised.",null,null],[12,"ptype","","The type of the exception. This should be either a…",0,null],[12,"pvalue","","The value of the exception.",0,null],[12,"ptraceback","","The `PyTraceBack` object associated with the error.",0,null],[3,"GILGuard","","RAII type that represents the Global Interpreter Lock…",null,null],[3,"Py","","A Python object of known type.",null,null],[3,"PyObject","","A Python object of any type.",null,null],[3,"Python","","Marker type that indicates that the GIL is currently held.",null,null],[3,"PyAny","","A Python object with GIL lifetime",null,null],[3,"PyModule","","Represents a Python `module` object.",null,null],[6,"PyResult","","Represents the result of a Python call.",null,null],[8,"AsPyRef","","Retrieves `&\'py` types from `Py<T>` or `PyObject`.",null,null],[16,"Target","","",254,null],[10,"as_ref","","Return reference to object.",254,[[["python",3]]]],[0,"pycell","pyo3","Includes `PyCell` implementation.",null,null],[3,"PyCell","pyo3::pycell","`PyCell` is the container type for `PyClass`.",null,null],[3,"PyRef","","Wraps a borrowed reference to a value in a `PyCell<T>`.",null,null],[3,"PyRefMut","","Wraps a mutable borrowed reference to a value in a…",null,null],[3,"PyBorrowError","","An error returned by `PyCell::try_borrow`.",null,null],[3,"PyBorrowMutError","","An error returned by `PyCell::try_borrow_mut`.",null,null],[11,"new","","Make a new `PyCell` on the Python heap and return the…",255,[[["python",3]],["pyresult",6]]],[11,"borrow","","Immutably borrows the value `T`. This borrow lasts untill…",255,[[],["pyref",3]]],[11,"borrow_mut","","Mutably borrows the value `T`. This borrow lasts untill…",255,[[],["pyrefmut",3]]],[11,"try_borrow","","Immutably borrows the value `T`, returning an error if the…",255,[[],[["pyref",3],["result",4],["pyborrowerror",3]]]],[11,"try_borrow_mut","","Mutably borrows the value `T`, returning an error if the…",255,[[],[["pyborrowmuterror",3],["result",4],["pyrefmut",3]]]],[11,"try_borrow_unguarded","","Immutably borrows the value `T`, returning an error if the…",255,[[],[["result",4],["pyborrowerror",3]]]],[11,"replace","","Replaces the wrapped value with a new one, returning the…",255,[[]]],[11,"replace_with","","Replaces the wrapped value with a new one computed from…",255,[[["fnonce",8]]]],[11,"swap","","Swaps the wrapped value of `self` with the wrapped value…",255,[[]]],[11,"py","","Returns `Python` token. This function is safe since PyRef…",256,[[],["python",3]]],[11,"into_super","","Get `PyRef<T::BaseType>`. You can use this method to get…",256,[[],["pyref",3]]],[11,"py","","Returns `Python` token. This function is safe since…",257,[[],["python",3]]],[11,"into_super","","Get `PyRef<T::BaseType>`. See  `PyRef::into_super` for more.",257,[[],["pyrefmut",3]]],[11,"py_err","","",258,[[["topyobject",8]],["pyerr",3]]],[11,"into","","",258,[[["topyobject",8]],["pyresult",6]]],[11,"py_err","","",259,[[["topyobject",8]],["pyerr",3]]],[11,"into","","",259,[[["topyobject",8]],["pyresult",6]]],[0,"pyclass","pyo3","`PyClass` and related traits.",null,null],[8,"PyClassAlloc","pyo3::pyclass","This trait enables custom `tp_new`/`tp_dealloc`…",null,null],[11,"new","","Allocate the actual field for `#[pyclass]`.",260,[[["python",3]]]],[11,"dealloc","","Deallocate `#[pyclass]` on the Python heap.",260,[[["python",3]]]],[8,"PyClass","","If `PyClass` is implemented for `T`, then we can use `T`…",null,null],[16,"Dict","","Specify this class has `#[pyclass(dict)]` or not.",261,null],[16,"WeakRef","","Specify this class has `#[pyclass(weakref)]` or not.",261,null],[16,"BaseNativeType","","The closest native ancestor. This is `PyAny` by default,…",261,null],[8,"PyClassSend","","This trait is implemented for `#[pyclass]` and handles…",null,null],[16,"ThreadChecker","","",262,null],[0,"pyclass_init","pyo3","Initialization utilities for `#[pyclass]`.",null,null],[3,"PyNativeTypeInitializer","pyo3::pyclass_init","Initializer for Python native type, like `PyDict`.",null,null],[3,"PyClassInitializer","","Initializer for our `#[pyclass]` system.",null,null],[8,"PyObjectInit","","Initializer for Python types.",null,null],[10,"init_class","","",263,[[]]],[10,"__private__","","This trait is private to implement; this method exists to…",263,[[],["privatemarker",3]]],[11,"new","","Constract new initialzer from value `T` and base class\'…",264,[[]]],[11,"add_subclass","","Constructs a new initializer from base class\' initializer.",264,[[],["pyclassinitializer",3]]],[0,"pyclass_slots","pyo3","This module contains additional fields for `#[pyclass]`..…",null,null],[3,"PyClassDummySlot","pyo3::pyclass_slots","Zero-sized dummy field.",null,null],[3,"PyClassDictSlot","","Actual dict field, which holds the pointer to `__dict__`.",null,null],[3,"PyClassWeakRefSlot","","Actual weakref field, which holds the pointer to…",null,null],[8,"PyClassDict","","Represents `__dict__` field for `#[pyclass]`.",null,null],[18,"OFFSET","","",265,null],[10,"new","","",265,[[]]],[11,"clear_dict","","",265,[[["python",3]]]],[10,"__private__","","This trait is private to implement; this method exists to…",265,[[],["privatemarker",3]]],[8,"PyClassWeakRef","","Represents `__weakref__` field for `#[pyclass]`.",null,null],[18,"OFFSET","","",266,null],[10,"new","","",266,[[]]],[11,"clear_weakrefs","","",266,[[["python",3]]]],[10,"__private__","","This trait is private to implement; this method exists to…",266,[[],["privatemarker",3]]],[11,"assume_gil_acquired","pyo3","Retrieves a Python instance under the assumption that the…",267,[[],["python",3]]],[11,"acquire_gil","","Acquires the global interpreter lock, which allows access…",267,[[],["gilguard",3]]],[11,"allow_threads","","Temporarily releases the `GIL`, thus allowing other Python…",267,[[]]],[11,"eval","","Evaluates a Python expression in the given context and…",267,[[["pydict",3],["option",4]],[["pyresult",6],["pyany",3]]]],[11,"run","","Executes one or more Python statements in the given context.",267,[[["pydict",3],["option",4]],["pyresult",6]]],[11,"get_type","","Gets the Python type object for type `T`.",267,[[],["pytype",3]]],[11,"import","","Imports the Python module with the specified name.",267,[[],[["pymodule",3],["pyresult",6]]]],[11,"is_instance","","Checks whether `obj` is an instance of type `T`.",267,[[],["pyresult",6]]],[11,"is_subclass","","Checks whether type `T` is subclass of type `U`.",267,[[],["pyresult",6]]],[11,"None","","Gets the Python builtin value `None`.",267,[[],["pyobject",3]]],[11,"NotImplemented","","Gets the Python builtin value `NotImplemented`.",267,[[],["pyobject",3]]],[11,"new_pool","","Create a new pool for managing PyO3\'s owned references.",267,[[],["gilpool",3]]],[11,"checked_cast_as","","Registers the object in the release pool, and tries to…",267,[[["pyobject",3]],[["result",4],["pydowncasterror",3]]]],[11,"cast_as","","Registers the object in the release pool, and does an…",267,[[["pyobject",3]]]],[11,"from_owned_ptr","","Registers the object pointer in the release pool, and does…",267,[[]]],[11,"from_owned_ptr_or_err","","Registers the owned object pointer in the release pool.",267,[[],["pyresult",6]]],[11,"from_owned_ptr_or_opt","","Registers the owned object pointer in release pool.",267,[[],["option",4]]],[11,"from_borrowed_ptr","","Does an unchecked downcast to the specific type.",267,[[]]],[11,"from_borrowed_ptr_or_err","","Does an unchecked downcast to the specific type.",267,[[],["pyresult",6]]],[11,"from_borrowed_ptr_or_opt","","Does an unchecked downcast to the specific type.",267,[[],["option",4]]],[11,"release","","Releases a PyObject reference.",267,[[]]],[11,"xdecref","","Releases a `ffi::PyObject` pointer.",267,[[["intopypointer",8]]]],[0,"type_object","","Python type object information",null,null],[8,"PyLayout","pyo3::type_object","`T: PyLayout<U>` represents that `T` is a concrete…",null,null],[18,"IS_NATIVE_TYPE","","",268,null],[11,"get_super","","",268,[[],["option",4]]],[11,"py_init","","",268,[[]]],[11,"py_drop","","",268,[[["python",3]]]],[8,"PySizedLayout","","`T: PySizedLayout<U>` represents `T` is not a instance of…",null,null],[8,"PyBorrowFlagLayout","","Marker type indicates that `Self` can be a base layout of…",null,null],[8,"PyTypeInfo","","Python type information. All Python native types(e.g.,…",null,null],[16,"Type","","Type of objects to store in PyObject struct",269,null],[18,"NAME","","Class name",269,null],[18,"MODULE","","Module name, if any",269,null],[18,"DESCRIPTION","","Class doc string",269,null],[18,"FLAGS","","Type flags (ie PY_TYPE_FLAG_GC, PY_TYPE_FLAG_WEAKREF)",269,null],[16,"BaseType","","Base class",269,null],[16,"Layout","","Layout",269,null],[16,"BaseLayout","","Layout of Basetype.",269,null],[16,"Initializer","","Initializer for layout",269,null],[16,"AsRefTarget","","Utility type to make AsPyRef work",269,null],[10,"type_object_raw","","PyTypeObject instance for this type.",269,[[["python",3]]]],[11,"is_instance","","Check if `*mut ffi::PyObject` is instance of this type",269,[[["pyany",3]]]],[11,"is_exact_instance","","Check if `*mut ffi::PyObject` is exact instance of this type",269,[[["pyany",3]]]],[8,"PyTypeObject","","Python object types that have a corresponding type object.",null,null],[10,"type_object","","Returns the safe abstraction over the type object.",270,[[["python",3]],["pytype",3]]],[0,"types","pyo3","Various types defined by the Python interpreter such as…",null,null],[3,"PyAny","pyo3::types","A Python object with GIL lifetime",null,null],[3,"PyBool","","Represents a Python `bool`.",null,null],[3,"PyByteArray","","Represents a Python `bytearray`.",null,null],[3,"PyBytes","","Represents a Python `bytes` object.",null,null],[3,"PyComplex","","Represents a Python `complex`.",null,null],[3,"PyDate","","Bindings around `datetime.date`",null,null],[3,"PyDateTime","","Bindings for `datetime.datetime`",null,null],[3,"PyDelta","","Bindings for `datetime.timedelta`",null,null],[3,"PyTime","","Bindings for `datetime.time`",null,null],[3,"PyTzInfo","","Bindings for `datetime.tzinfo`",null,null],[3,"PyDict","","Represents a Python `dict`.",null,null],[3,"PyFloat","","Represents a Python `float` object.",null,null],[3,"PyIterator","","A Python iterator object.",null,null],[3,"PyList","","Represents a Python `list`.",null,null],[3,"PyModule","","Represents a Python `module` object.",null,null],[3,"PyLong","","Represents a Python `int` object.",null,null],[3,"PyInt","","Represents a Python `int` object.",null,null],[3,"PySequence","","Represents a reference to a Python object supporting the…",null,null],[3,"PyFrozenSet","","Represents a  Python `frozenset`",null,null],[3,"PySet","","Represents a Python `set`",null,null],[3,"PySlice","","Represents a Python `slice`.",null,null],[3,"PySliceIndices","","Represents Python `slice` indices.",null,null],[12,"start","","",271,null],[12,"stop","","",271,null],[12,"step","","",271,null],[12,"slicelength","","",271,null],[3,"PyString","","Represents a Python `string` (a Unicode string object).",null,null],[3,"PyUnicode","","Represents a Python `string` (a Unicode string object).",null,null],[3,"PyTuple","","Represents a Python `tuple` object.",null,null],[3,"PyType","","Represents a reference to a Python `type object`.",null,null],[11,"downcast","pyo3","Convert this PyAny to a concrete Python type.",272,[[],[["pydowncasterror",3],["result",4]]]],[11,"hasattr","","Determines whether this object has the given attribute.",272,[[],["pyresult",6]]],[11,"getattr","","Retrieves an attribute value.",272,[[],[["pyany",3],["pyresult",6]]]],[11,"setattr","","Sets an attribute value.",272,[[],["pyresult",6]]],[11,"delattr","","Deletes an attribute.",272,[[],["pyresult",6]]],[11,"compare","","Compares two Python objects.",272,[[],[["pyresult",6],["ordering",4]]]],[11,"rich_compare","","Compares two Python objects.",272,[[["compareop",4]],[["pyany",3],["pyresult",6]]]],[11,"is_callable","","Determines whether this object is callable.",272,[[]]],[11,"call","","Calls the object.",272,[[["pydict",3],["option",4]],[["pyany",3],["pyresult",6]]]],[11,"call0","","Calls the object without arguments.",272,[[],[["pyany",3],["pyresult",6]]]],[11,"call1","","Calls the object with only positional arguments.",272,[[],[["pyany",3],["pyresult",6]]]],[11,"call_method","","Calls a method on the object.",272,[[["pydict",3],["option",4]],[["pyany",3],["pyresult",6]]]],[11,"call_method0","","Calls a method on the object without arguments.",272,[[],[["pyany",3],["pyresult",6]]]],[11,"call_method1","","Calls a method on the object with only positional arguments.",272,[[],[["pyany",3],["pyresult",6]]]],[11,"is_true","","Returns whether the object is considered to be true.",272,[[],["pyresult",6]]],[11,"is_none","","Returns whether the object is considered to be None.",272,[[]]],[11,"is_empty","","Returns true if the sequence or mapping has a length of 0.",272,[[],["pyresult",6]]],[11,"get_item","","Gets an item from the collection.",272,[[],[["pyany",3],["pyresult",6]]]],[11,"set_item","","Sets a collection item value.",272,[[],["pyresult",6]]],[11,"del_item","","Deletes an item from the collection.",272,[[],["pyresult",6]]],[11,"iter","","Takes an object and returns an iterator for it.",272,[[],[["pyresult",6],["pyiterator",3]]]],[11,"get_type","","Returns the Python type object for this object\'s type.",272,[[],["pytype",3]]],[11,"get_type_ptr","","Returns the Python type pointer for this object.",272,[[]]],[11,"cast_as","","Casts the PyObject to a concrete Python object type.",272,[[],[["pydowncasterror",3],["result",4]]]],[11,"extract","","Extracts some type from the Python object.",272,[[],["pyresult",6]]],[11,"get_refcnt","","Returns the reference count for the Python object.",272,[[]]],[11,"repr","","Computes the \\\"repr\\\" representation of self.",272,[[],[["pyresult",6],["pystring",3]]]],[11,"str","","Computes the \\\"str\\\" representation of self.",272,[[],[["pyresult",6],["pystring",3]]]],[11,"hash","","Retrieves the hash code of self.",272,[[],["pyresult",6]]],[11,"len","","Returns the length of the sequence or mapping.",272,[[],["pyresult",6]]],[11,"dir","","Returns the list of attributes of this object.",272,[[],["pylist",3]]],[11,"new","pyo3::types","Depending on `val`, returns `true` or `false`.",273,[[["python",3]],["pybool",3]]],[11,"is_true","","Gets whether this boolean is `true`.",273,[[]]],[11,"new","","Creates a new Python bytearray object.",274,[[["python",3]],["pybytearray",3]]],[11,"from","","Creates a new Python bytearray object from another…",274,[[["python",3]],[["pybytearray",3],["pyresult",6]]]],[11,"len","","Gets the length of the bytearray.",274,[[]]],[11,"is_empty","","Checks if the bytearray is empty.",274,[[]]],[11,"data","","Get the start of the buffer containing the contents of the…",274,[[]]],[11,"as_bytes","","Get the contents of this buffer as a slice.",274,[[]]],[11,"as_bytes_mut","","Get the contents of this buffer as a mutable slice.",274,[[]]],[11,"to_vec","","Copies the contents of the bytearray to a Rust vector.",274,[[],["vec",3]]],[11,"resize","","Resizes the bytearray object to the new length `len`.",274,[[],["pyresult",6]]],[11,"new","","Creates a new Python bytestring object. The bytestring is…",275,[[["python",3]],["pybytes",3]]],[11,"from_ptr","","Creates a new Python byte string object from a raw pointer…",275,[[["python",3]],["pybytes",3]]],[11,"as_bytes","","Gets the Python string as a byte slice.",275,[[]]],[11,"from_doubles","","Creates a new Python `complex` object, from its real and…",276,[[["python",3],["c_double",6]],["pycomplex",3]]],[11,"real","","Returns the real part of the complex number.",276,[[],["c_double",6]]],[11,"imag","","Returns the imaginary part the complex number.",276,[[],["c_double",6]]],[11,"abs","","Returns `|self|`.",276,[[],["c_double",6]]],[11,"pow","","Returns `self ** other`",276,[[["pycomplex",3]],["pycomplex",3]]],[11,"new","","",277,[[["python",3]],[["pydate",3],["pyresult",6]]]],[11,"from_timestamp","","Construct a `datetime.date` from a POSIX timestamp",277,[[["python",3]],[["pydate",3],["pyresult",6]]]],[11,"new","","",278,[[["python",3],["pyobject",3],["option",4]],[["pydatetime",3],["pyresult",6]]]],[11,"from_timestamp","","Construct a `datetime` object from a POSIX timestamp",278,[[["python",3],["option",4],["pytzinfo",3]],[["pydatetime",3],["pyresult",6]]]],[11,"new","","",279,[[["python",3],["pyobject",3],["option",4]],[["pyresult",6],["pytime",3]]]],[11,"new_with_fold","","Alternate constructor that takes a `fold` argument",279,[[["python",3],["pyobject",3],["option",4]],[["pyresult",6],["pytime",3]]]],[11,"new","","",280,[[["python",3]],[["pyresult",6],["pydelta",3]]]],[11,"new","","Creates a new empty dictionary.",281,[[["python",3]],["pydict",3]]],[11,"from_sequence","","Creates a new dictionary from the sequence given.",281,[[["python",3],["pyobject",3]],[["pyresult",6],["pydict",3]]]],[11,"copy","","Returns a new dictionary that contains the same key-value…",281,[[],[["pyresult",6],["pydict",3]]]],[11,"clear","","Empties an existing dictionary of all key-value pairs.",281,[[]]],[11,"len","","Return the number of items in the dictionary.",281,[[]]],[11,"is_empty","","Checks if the dict is empty, i.e. `len(self) == 0`.",281,[[]]],[11,"contains","","Determines if the dictionary contains the specified key.",281,[[],["pyresult",6]]],[11,"get_item","","Gets an item from the dictionary.",281,[[],[["pyany",3],["option",4]]]],[11,"set_item","","Sets an item value.",281,[[],["pyresult",6]]],[11,"del_item","","Deletes an item.",281,[[],["pyresult",6]]],[11,"keys","","Returns a list of dict keys.",281,[[],["pylist",3]]],[11,"values","","Returns a list of dict values.",281,[[],["pylist",3]]],[11,"items","","Returns a list of dict items.",281,[[],["pylist",3]]],[11,"iter","","Returns an iterator of `(key, value)` pairs in this…",281,[[],["pydictiterator",3]]],[11,"new","","Creates a new Python `float` object.",282,[[["python",3],["c_double",6]],["pyfloat",3]]],[11,"value","","Gets the value of this float.",282,[[],["c_double",6]]],[11,"from_object","","Constructs a `PyIterator` from a Python iterator object.",283,[[["python",3]],[["pydowncasterror",3],["result",4],["pyiterator",3]]]],[11,"new","","Constructs a new list with the given elements.",284,[[["python",3]],["pylist",3]]],[11,"empty","","Constructs a new empty list.",284,[[["python",3]],["pylist",3]]],[11,"len","","Returns the length of the list.",284,[[]]],[11,"is_empty","","Checks if the list is empty.",284,[[]]],[11,"get_item","","Gets the item at the specified index.",284,[[],["pyany",3]]],[11,"get_parked_item","","Gets the item at the specified index.",284,[[],["pyobject",3]]],[11,"set_item","","Sets the item at the specified index.",284,[[],["pyresult",6]]],[11,"append","","Appends an item to the list.",284,[[],["pyresult",6]]],[11,"insert","","Inserts an item at the specified index.",284,[[],["pyresult",6]]],[11,"iter","","Returns an iterator over this list\'s items.",284,[[],["pylistiterator",3]]],[11,"sort","","Sorts the list in-place. Equivalent to the Python…",284,[[],["pyresult",6]]],[11,"reverse","","Reverses the list in-place. Equivalent to the Python…",284,[[],["pyresult",6]]],[11,"new","pyo3::prelude","Creates a new module object with the `__name__` attribute…",285,[[["python",3]],[["pymodule",3],["pyresult",6]]]],[11,"import","","Imports the Python module with the specified name.",285,[[["python",3]],[["pymodule",3],["pyresult",6]]]],[11,"from_code","","Loads the Python code specified into a new module.",285,[[["python",3]],[["pymodule",3],["pyresult",6]]]],[11,"dict","","Return the dictionary object that implements module\'s…",285,[[],["pydict",3]]],[11,"index","","Return the index (`__all__`) of the module, creating one…",285,[[],[["pyresult",6],["pylist",3]]]],[11,"name","","Returns the module\'s name.",285,[[],["pyresult",6]]],[11,"filename","","Returns the module\'s filename.",285,[[],["pyresult",6]]],[11,"call","","Calls a function in the module.",285,[[["pydict",3],["option",4]],[["pyany",3],["pyresult",6]]]],[11,"call1","","Calls a function in the module with only positional…",285,[[],[["pyany",3],["pyresult",6]]]],[11,"call0","","Calls a function in the module without arguments.",285,[[],[["pyany",3],["pyresult",6]]]],[11,"get","","Gets a member from the module.",285,[[],[["pyany",3],["pyresult",6]]]],[11,"add","","Adds a member to the module.",285,[[],["pyresult",6]]],[11,"add_class","","Adds a new extension type to the module.",285,[[],["pyresult",6]]],[11,"add_wrapped","","Adds a function or a (sub)module to a module, using the…",285,[[],["pyresult",6]]],[11,"len","pyo3::types","Returns the number of objects in sequence.",286,[[],["pyresult",6]]],[11,"is_empty","","",286,[[],["pyresult",6]]],[11,"concat","","Returns the concatenation of `self` and `other`.",286,[[["pysequence",3]],[["pyresult",6],["pysequence",3]]]],[11,"repeat","","Returns the result of repeating a sequence object `count`…",286,[[],[["pyresult",6],["pysequence",3]]]],[11,"in_place_concat","","Concatenates `self` and `other` in place.",286,[[["pysequence",3]],["pyresult",6]]],[11,"in_place_repeat","","Repeats the sequence object `count` times and updates…",286,[[],["pyresult",6]]],[11,"get_item","","Returns the `index`th element of the Sequence.",286,[[],[["pyany",3],["pyresult",6]]]],[11,"get_slice","","Returns the slice of sequence object between `begin` and…",286,[[],[["pyany",3],["pyresult",6]]]],[11,"set_item","","Assigns object `item` to the `i`th element of self.",286,[[],["pyresult",6]]],[11,"del_item","","Deletes the `i`th element of self.",286,[[],["pyresult",6]]],[11,"set_slice","","Assigns the sequence `v` to the slice of `self` from `i1`…",286,[[["pyany",3]],["pyresult",6]]],[11,"del_slice","","Deletes the slice from `i1` to `i2` from `self`.",286,[[],["pyresult",6]]],[11,"count","","Returns the number of occurrences of `value` in self, that…",286,[[],["pyresult",6]]],[11,"contains","","Determines if self contains `value`.",286,[[],["pyresult",6]]],[11,"index","","Returns the first index `i` for which `self[i] == value`.",286,[[],["pyresult",6]]],[11,"list","","Returns a fresh list based on the Sequence.",286,[[],[["pyresult",6],["pylist",3]]]],[11,"tuple","","Returns a fresh tuple based on the Sequence.",286,[[],[["pyresult",6],["pytuple",3]]]],[11,"new","","Creates a new set with elements from the given slice.",287,[[["python",3]],[["pyresult",6],["pyset",3]]]],[11,"empty","","Creates a new empty set.",287,[[["python",3]],[["pyresult",6],["pyset",3]]]],[11,"clear","","Removes all elements from the set.",287,[[]]],[11,"len","","Returns the number of items in the set.",287,[[]]],[11,"is_empty","","Checks if set is empty.",287,[[]]],[11,"contains","","Determines if the set contains the specified key.",287,[[],["pyresult",6]]],[11,"discard","","Removes the element from the set if it is present.",287,[[]]],[11,"add","","Adds an element to the set.",287,[[],["pyresult",6]]],[11,"pop","","Removes and returns an arbitrary element from the set.",287,[[],[["option",4],["pyobject",3]]]],[11,"iter","","Returns an iterator of values in this set.",287,[[],["pysetiterator",3]]],[11,"new","","Creates a new frozenset.",288,[[["python",3]],[["pyresult",6],["pyfrozenset",3]]]],[11,"empty","","Creates a new empty frozen set",288,[[["python",3]],[["pyresult",6],["pyset",3]]]],[11,"len","","Return the number of items in the set. This is equivalent…",288,[[]]],[11,"is_empty","","Check if set is empty.",288,[[]]],[11,"contains","","Determine if the set contains the specified key. This is…",288,[[],["pyresult",6]]],[11,"iter","","Returns an iterator of values in this frozen set.",288,[[],["pysetiterator",3]]],[11,"new","","",271,[[],["pysliceindices",3]]],[11,"new","","Constructs a new slice with the given elements.",289,[[["python",3]],["pyslice",3]]],[11,"indices","","Retrieves the start, stop, and step indices from the slice…",289,[[["c_long",6]],[["pyresult",6],["pysliceindices",3]]]],[11,"new","","Creates a new Python string object.",290,[[["python",3]],["pystring",3]]],[11,"from_object","","",290,[[["pyany",3]],[["pyresult",6],["pystring",3]]]],[11,"as_bytes","","Gets the Python string as a byte slice.",290,[[],["pyresult",6]]],[11,"to_string","","Converts the `PyString` into a Rust string.",290,[[],[["pyresult",6],["cow",4]]]],[11,"to_string_lossy","","Converts the `PyString` into a Rust string.",290,[[],["cow",4]]],[11,"new","","Constructs a new tuple with the given elements.",291,[[["python",3]],["pytuple",3]]],[11,"empty","","Constructs an empty tuple (on the Python side, a singleton…",291,[[["python",3]],["pytuple",3]]],[11,"len","","Gets the length of the tuple.",291,[[]]],[11,"is_empty","","Checks if the tuple is empty.",291,[[]]],[11,"slice","","Takes a slice of the tuple pointed from `low` to `high`…",291,[[],["pytuple",3]]],[11,"split_from","","Takes a slice of the tuple from `low` to the end and…",291,[[],["pytuple",3]]],[11,"get_item","","Gets the tuple item at the specified index.",291,[[],["pyany",3]]],[11,"as_slice","","Returns `self` as a slice of objects.",291,[[]]],[11,"iter","","Returns an iterator over the tuple items.",291,[[],["pytupleiterator",3]]],[11,"new","","Creates a new type object.",292,[[["python",3]],["pytype",3]]],[11,"as_type_ptr","","Retrieves the underlying FFI pointer associated with this…",292,[[]]],[11,"from_type_ptr","","Retrieves the `PyType` instance for the given FFI pointer.…",292,[[["python",3]],["pytype",3]]],[11,"name","","Gets the name of the `PyType`.",292,[[],["cow",4]]],[11,"is_subclass","","Checks whether `self` is subclass of type `T`.",292,[[],["pyresult",6]]],[11,"is_instance","","Check whether `obj` is an instance of `self`.",292,[[],["pyresult",6]]],[8,"PyDeltaAccess","","Trait for accessing the components of a struct containing…",null,null],[10,"get_days","","",293,[[]]],[10,"get_seconds","","",293,[[]]],[10,"get_microseconds","","",293,[[]]],[8,"PyDateAccess","","Access traits Trait for accessing the date components of a…",null,null],[10,"get_year","","",294,[[]]],[10,"get_month","","",294,[[]]],[10,"get_day","","",294,[[]]],[8,"PyTimeAccess","","Trait for accessing the time components of a struct…",null,null],[10,"get_hour","","",295,[[]]],[10,"get_minute","","",295,[[]]],[10,"get_second","","",295,[[]]],[10,"get_microsecond","","",295,[[]]],[10,"get_fold","","",295,[[]]],[8,"IntoPyDict","","Conversion trait that allows a sequence of tuples to be…",null,null],[10,"into_py_dict","","Converts self into a `PyDict` object pointer. Whether…",296,[[["python",3]],["pydict",3]]],[0,"proc_macro","pyo3","The proc macros, which are also part of the prelude.",null,null],[23,"pymodule","pyo3::proc_macro","Internally, this proc macro create a new c function called…",null,null],[23,"pyclass","","The proc macro attributes",null,null],[23,"pyfunction","","The proc macro attributes",null,null],[23,"pymethods","","The proc macro attributes",null,null],[23,"pyproto","","The proc macro attributes",null,null],[6,"PyResult","pyo3","Represents the result of a Python call.",null,null],[8,"PyErrArguments","","Helper conversion trait that allows to use custom…",null,null],[10,"arguments","","Arguments for exception",297,[[["python",3]],["pyobject",3]]],[8,"AsPyRef","","Retrieves `&\'py` types from `Py<T>` or `PyObject`.",null,null],[16,"Target","","",254,null],[10,"as_ref","","Return reference to object.",254,[[["python",3]]]],[8,"PyNativeType","","Types that are built into the Python interpreter.",null,null],[11,"py","","",298,[[],["python",3]]],[11,"unchecked_downcast","","Cast `&PyAny` to `&Self` without no type checking.",298,[[["pyany",3]]]],[14,"impl_exception_boilerplate","","The boilerplate to convert between a Rust type and a…",null,null],[14,"import_exception","","Defines a Rust type for an exception defined in Python code.",null,null],[14,"import_exception_type_object","","`impl $crate::type_object::PyTypeObject for $name` where…",null,null],[14,"create_exception","","Defines a new exception type.",null,null],[14,"create_exception_type_object","","`impl $crate::type_object::PyTypeObject for $name` where…",null,null],[14,"pyobject_native_type_named","","",null,null],[14,"pyobject_native_type","","",null,null],[14,"pyobject_native_var_type","","",null,null],[14,"pyobject_native_type_convert","","",null,null],[14,"wrap_pyfunction","","Returns a function that takes a [Python] instance and…",null,null],[14,"wrap_pymodule","","Returns a function that takes a [Python] instance and…",null,null],[14,"py_run","","A convenient macro to execute a Python code snippet, with…",null,null],[11,"from_py","","",299,[[["python",3]]]],[11,"into_py","","",299,[[["python",3]]]],[11,"from","","",299,[[]]],[11,"into","","",299,[[]]],[11,"borrow","","",299,[[]]],[11,"borrow_mut","","",299,[[]]],[11,"try_from","","",299,[[],["result",4]]],[11,"try_into","","",299,[[],["result",4]]],[11,"type_id","","",299,[[],["typeid",3]]],[11,"from_py","","",0,[[["python",3]]]],[11,"into_py","","",0,[[["python",3]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from_py","","",248,[[["python",3]]]],[11,"into_py","","",248,[[["python",3]]]],[11,"from","","",248,[[]]],[11,"into","","",248,[[]]],[11,"borrow","","",248,[[]]],[11,"borrow_mut","","",248,[[]]],[11,"try_from","","",248,[[],["result",4]]],[11,"try_into","","",248,[[],["result",4]]],[11,"type_id","","",248,[[],["typeid",3]]],[11,"from_py","","",249,[[["python",3]]]],[11,"into_py","","",249,[[["python",3]]]],[11,"from","","",249,[[]]],[11,"into","","",249,[[]]],[11,"borrow","","",249,[[]]],[11,"borrow_mut","","",249,[[]]],[11,"try_from","","",249,[[],["result",4]]],[11,"try_into","","",249,[[],["result",4]]],[11,"type_id","","",249,[[],["typeid",3]]],[11,"from_py","","",250,[[["python",3]]]],[11,"into_py","","",250,[[["python",3]]]],[11,"extract","","",250,[[["pyany",3]],[["result",4],["pyerr",3]]]],[11,"from","","",250,[[]]],[11,"into","","",250,[[]]],[11,"to_owned","","",250,[[]]],[11,"clone_into","","",250,[[]]],[11,"borrow","","",250,[[]]],[11,"borrow_mut","","",250,[[]]],[11,"try_from","","",250,[[],["result",4]]],[11,"try_into","","",250,[[],["result",4]]],[11,"type_id","","",250,[[],["typeid",3]]],[11,"from_py","","",251,[[["python",3]]]],[11,"into_py","","",251,[[["python",3]]]],[11,"extract","","",251,[[["pyany",3]],[["result",4],["pyerr",3]]]],[11,"from","","",251,[[]]],[11,"into","","",251,[[]]],[11,"to_owned","","",251,[[]]],[11,"clone_into","","",251,[[]]],[11,"borrow","","",251,[[]]],[11,"borrow_mut","","",251,[[]]],[11,"try_from","","",251,[[],["result",4]]],[11,"try_into","","",251,[[],["result",4]]],[11,"type_id","","",251,[[],["typeid",3]]],[11,"from_py","","",267,[[["python",3]]]],[11,"into_py","","",267,[[["python",3]]]],[11,"from","","",267,[[]]],[11,"into","","",267,[[]]],[11,"to_owned","","",267,[[]]],[11,"clone_into","","",267,[[]]],[11,"borrow","","",267,[[]]],[11,"borrow_mut","","",267,[[]]],[11,"try_from","","",267,[[],["result",4]]],[11,"try_into","","",267,[[],["result",4]]],[11,"type_id","","",267,[[],["typeid",3]]],[11,"from_py","","",272,[[["python",3]]]],[11,"into_py","","",272,[[["python",3]]]],[11,"try_from","","",272,[[],[["result",4],["pydowncasterror",3]]]],[11,"try_from_exact","","",272,[[],[["result",4],["pydowncasterror",3]]]],[11,"try_from_unchecked","","",272,[[]]],[11,"from_owned_ptr_or_opt","","",272,[[["python",3]],["option",4]]],[11,"from_borrowed_ptr_or_opt","","",272,[[["python",3]],["option",4]]],[11,"type_object","","",272,[[["python",3]],["pytype",3]]],[11,"from","","",272,[[]]],[11,"into","","",272,[[]]],[11,"to_string","","",272,[[],["string",3]]],[11,"borrow","","",272,[[]]],[11,"borrow_mut","","",272,[[]]],[11,"try_from","","",272,[[],["result",4]]],[11,"try_into","","",272,[[],["result",4]]],[11,"type_id","","",272,[[],["typeid",3]]],[11,"from_py","","",1,[[["python",3]]]],[11,"into_py","","",1,[[["python",3]]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from_py","pyo3::buffer","",7,[[["python",3]]]],[11,"into_py","","",7,[[["python",3]]]],[11,"extract","","",7,[[["pyany",3]],[["result",4],["pyerr",3]]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from_py","","",8,[[["python",3]]]],[11,"into_py","","",8,[[["python",3]]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from_py","","",2,[[["python",3]]]],[11,"into_py","","",2,[[["python",3]]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from_py","pyo3::class::basic","",9,[[["python",3]]]],[11,"into_py","","",9,[[["python",3]]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from_py","","",10,[[["python",3]]]],[11,"into_py","","",10,[[["python",3]]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from_py","pyo3::class::descr","",28,[[["python",3]]]],[11,"into_py","","",28,[[["python",3]]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from_py","pyo3::class::gc","",300,[[["python",3]]]],[11,"into_py","","",300,[[["python",3]]]],[11,"from","","",300,[[]]],[11,"into","","",300,[[]]],[11,"borrow","","",300,[[]]],[11,"borrow_mut","","",300,[[]]],[11,"try_from","","",300,[[],["result",4]]],[11,"try_into","","",300,[[],["result",4]]],[11,"type_id","","",300,[[],["typeid",3]]],[11,"from_py","","",34,[[["python",3]]]],[11,"into_py","","",34,[[["python",3]]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from_py","","",36,[[["python",3]]]],[11,"into_py","","",36,[[["python",3]]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from_py","pyo3::class::iter","",37,[[["python",3]]]],[11,"into_py","","",37,[[["python",3]]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from_py","","",38,[[["python",3]]]],[11,"into_py","","",38,[[["python",3]]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from_py","pyo3::class::methods","",48,[[["python",3]]]],[11,"into_py","","",48,[[["python",3]]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from_py","","",49,[[["python",3]]]],[11,"into_py","","",49,[[["python",3]]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from_py","","",50,[[["python",3]]]],[11,"into_py","","",50,[[["python",3]]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from_py","","",51,[[["python",3]]]],[11,"into_py","","",51,[[["python",3]]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from_py","","",52,[[["python",3]]]],[11,"into_py","","",52,[[["python",3]]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from_py","","",53,[[["python",3]]]],[11,"into_py","","",53,[[["python",3]]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from_py","pyo3::class::pyasync","",108,[[["python",3]]]],[11,"into_py","","",108,[[["python",3]]]],[11,"from","","",108,[[]]],[11,"into","","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"from_py","pyo3::exceptions","",145,[[["python",3]]]],[11,"into_py","","",145,[[["python",3]]]],[11,"type_object","","",145,[[["python",3]],["pytype",3]]],[11,"from","","",145,[[]]],[11,"into","","",145,[[]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"try_into","","",145,[[],["result",4]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"from_py","","",146,[[["python",3]]]],[11,"into_py","","",146,[[["python",3]]]],[11,"type_object","","",146,[[["python",3]],["pytype",3]]],[11,"from","","",146,[[]]],[11,"into","","",146,[[]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"try_into","","",146,[[],["result",4]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"from_py","","",147,[[["python",3]]]],[11,"into_py","","",147,[[["python",3]]]],[11,"type_object","","",147,[[["python",3]],["pytype",3]]],[11,"from","","",147,[[]]],[11,"into","","",147,[[]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"try_into","","",147,[[],["result",4]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"from_py","","",148,[[["python",3]]]],[11,"into_py","","",148,[[["python",3]]]],[11,"type_object","","",148,[[["python",3]],["pytype",3]]],[11,"from","","",148,[[]]],[11,"into","","",148,[[]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"try_into","","",148,[[],["result",4]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"from_py","","",149,[[["python",3]]]],[11,"into_py","","",149,[[["python",3]]]],[11,"type_object","","",149,[[["python",3]],["pytype",3]]],[11,"from","","",149,[[]]],[11,"into","","",149,[[]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"try_into","","",149,[[],["result",4]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"from_py","","",150,[[["python",3]]]],[11,"into_py","","",150,[[["python",3]]]],[11,"type_object","","",150,[[["python",3]],["pytype",3]]],[11,"from","","",150,[[]]],[11,"into","","",150,[[]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"try_into","","",150,[[],["result",4]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"from_py","","",151,[[["python",3]]]],[11,"into_py","","",151,[[["python",3]]]],[11,"type_object","","",151,[[["python",3]],["pytype",3]]],[11,"from","","",151,[[]]],[11,"into","","",151,[[]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"try_into","","",151,[[],["result",4]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"from_py","","",152,[[["python",3]]]],[11,"into_py","","",152,[[["python",3]]]],[11,"type_object","","",152,[[["python",3]],["pytype",3]]],[11,"from","","",152,[[]]],[11,"into","","",152,[[]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"try_into","","",152,[[],["result",4]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"from_py","","",153,[[["python",3]]]],[11,"into_py","","",153,[[["python",3]]]],[11,"type_object","","",153,[[["python",3]],["pytype",3]]],[11,"from","","",153,[[]]],[11,"into","","",153,[[]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"try_into","","",153,[[],["result",4]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"from_py","","",154,[[["python",3]]]],[11,"into_py","","",154,[[["python",3]]]],[11,"type_object","","",154,[[["python",3]],["pytype",3]]],[11,"from","","",154,[[]]],[11,"into","","",154,[[]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"try_into","","",154,[[],["result",4]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"from_py","","",155,[[["python",3]]]],[11,"into_py","","",155,[[["python",3]]]],[11,"type_object","","",155,[[["python",3]],["pytype",3]]],[11,"from","","",155,[[]]],[11,"into","","",155,[[]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"try_into","","",155,[[],["result",4]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"from_py","","",156,[[["python",3]]]],[11,"into_py","","",156,[[["python",3]]]],[11,"type_object","","",156,[[["python",3]],["pytype",3]]],[11,"from","","",156,[[]]],[11,"into","","",156,[[]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"try_into","","",156,[[],["result",4]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"from_py","","",157,[[["python",3]]]],[11,"into_py","","",157,[[["python",3]]]],[11,"type_object","","",157,[[["python",3]],["pytype",3]]],[11,"from","","",157,[[]]],[11,"into","","",157,[[]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"try_into","","",157,[[],["result",4]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"from_py","","",158,[[["python",3]]]],[11,"into_py","","",158,[[["python",3]]]],[11,"type_object","","",158,[[["python",3]],["pytype",3]]],[11,"from","","",158,[[]]],[11,"into","","",158,[[]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"try_into","","",158,[[],["result",4]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"from_py","","",159,[[["python",3]]]],[11,"into_py","","",159,[[["python",3]]]],[11,"type_object","","",159,[[["python",3]],["pytype",3]]],[11,"from","","",159,[[]]],[11,"into","","",159,[[]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"try_into","","",159,[[],["result",4]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"from_py","","",160,[[["python",3]]]],[11,"into_py","","",160,[[["python",3]]]],[11,"type_object","","",160,[[["python",3]],["pytype",3]]],[11,"from","","",160,[[]]],[11,"into","","",160,[[]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"try_into","","",160,[[],["result",4]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"from_py","","",161,[[["python",3]]]],[11,"into_py","","",161,[[["python",3]]]],[11,"type_object","","",161,[[["python",3]],["pytype",3]]],[11,"from","","",161,[[]]],[11,"into","","",161,[[]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"try_into","","",161,[[],["result",4]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"from_py","","",162,[[["python",3]]]],[11,"into_py","","",162,[[["python",3]]]],[11,"type_object","","",162,[[["python",3]],["pytype",3]]],[11,"from","","",162,[[]]],[11,"into","","",162,[[]]],[11,"borrow","","",162,[[]]],[11,"borrow_mut","","",162,[[]]],[11,"try_from","","",162,[[],["result",4]]],[11,"try_into","","",162,[[],["result",4]]],[11,"type_id","","",162,[[],["typeid",3]]],[11,"from_py","","",163,[[["python",3]]]],[11,"into_py","","",163,[[["python",3]]]],[11,"type_object","","",163,[[["python",3]],["pytype",3]]],[11,"from","","",163,[[]]],[11,"into","","",163,[[]]],[11,"borrow","","",163,[[]]],[11,"borrow_mut","","",163,[[]]],[11,"try_from","","",163,[[],["result",4]]],[11,"try_into","","",163,[[],["result",4]]],[11,"type_id","","",163,[[],["typeid",3]]],[11,"from_py","","",164,[[["python",3]]]],[11,"into_py","","",164,[[["python",3]]]],[11,"type_object","","",164,[[["python",3]],["pytype",3]]],[11,"from","","",164,[[]]],[11,"into","","",164,[[]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"try_from","","",164,[[],["result",4]]],[11,"try_into","","",164,[[],["result",4]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"from_py","","",165,[[["python",3]]]],[11,"into_py","","",165,[[["python",3]]]],[11,"type_object","","",165,[[["python",3]],["pytype",3]]],[11,"from","","",165,[[]]],[11,"into","","",165,[[]]],[11,"borrow","","",165,[[]]],[11,"borrow_mut","","",165,[[]]],[11,"try_from","","",165,[[],["result",4]]],[11,"try_into","","",165,[[],["result",4]]],[11,"type_id","","",165,[[],["typeid",3]]],[11,"from_py","","",166,[[["python",3]]]],[11,"into_py","","",166,[[["python",3]]]],[11,"type_object","","",166,[[["python",3]],["pytype",3]]],[11,"from","","",166,[[]]],[11,"into","","",166,[[]]],[11,"borrow","","",166,[[]]],[11,"borrow_mut","","",166,[[]]],[11,"try_from","","",166,[[],["result",4]]],[11,"try_into","","",166,[[],["result",4]]],[11,"type_id","","",166,[[],["typeid",3]]],[11,"from_py","","",167,[[["python",3]]]],[11,"into_py","","",167,[[["python",3]]]],[11,"type_object","","",167,[[["python",3]],["pytype",3]]],[11,"from","","",167,[[]]],[11,"into","","",167,[[]]],[11,"borrow","","",167,[[]]],[11,"borrow_mut","","",167,[[]]],[11,"try_from","","",167,[[],["result",4]]],[11,"try_into","","",167,[[],["result",4]]],[11,"type_id","","",167,[[],["typeid",3]]],[11,"from_py","","",168,[[["python",3]]]],[11,"into_py","","",168,[[["python",3]]]],[11,"type_object","","",168,[[["python",3]],["pytype",3]]],[11,"from","","",168,[[]]],[11,"into","","",168,[[]]],[11,"borrow","","",168,[[]]],[11,"borrow_mut","","",168,[[]]],[11,"try_from","","",168,[[],["result",4]]],[11,"try_into","","",168,[[],["result",4]]],[11,"type_id","","",168,[[],["typeid",3]]],[11,"from_py","","",169,[[["python",3]]]],[11,"into_py","","",169,[[["python",3]]]],[11,"type_object","","",169,[[["python",3]],["pytype",3]]],[11,"from","","",169,[[]]],[11,"into","","",169,[[]]],[11,"borrow","","",169,[[]]],[11,"borrow_mut","","",169,[[]]],[11,"try_from","","",169,[[],["result",4]]],[11,"try_into","","",169,[[],["result",4]]],[11,"type_id","","",169,[[],["typeid",3]]],[11,"from_py","","",170,[[["python",3]]]],[11,"into_py","","",170,[[["python",3]]]],[11,"type_object","","",170,[[["python",3]],["pytype",3]]],[11,"from","","",170,[[]]],[11,"into","","",170,[[]]],[11,"borrow","","",170,[[]]],[11,"borrow_mut","","",170,[[]]],[11,"try_from","","",170,[[],["result",4]]],[11,"try_into","","",170,[[],["result",4]]],[11,"type_id","","",170,[[],["typeid",3]]],[11,"from_py","","",171,[[["python",3]]]],[11,"into_py","","",171,[[["python",3]]]],[11,"type_object","","",171,[[["python",3]],["pytype",3]]],[11,"from","","",171,[[]]],[11,"into","","",171,[[]]],[11,"borrow","","",171,[[]]],[11,"borrow_mut","","",171,[[]]],[11,"try_from","","",171,[[],["result",4]]],[11,"try_into","","",171,[[],["result",4]]],[11,"type_id","","",171,[[],["typeid",3]]],[11,"from_py","","",172,[[["python",3]]]],[11,"into_py","","",172,[[["python",3]]]],[11,"type_object","","",172,[[["python",3]],["pytype",3]]],[11,"from","","",172,[[]]],[11,"into","","",172,[[]]],[11,"borrow","","",172,[[]]],[11,"borrow_mut","","",172,[[]]],[11,"try_from","","",172,[[],["result",4]]],[11,"try_into","","",172,[[],["result",4]]],[11,"type_id","","",172,[[],["typeid",3]]],[11,"from_py","","",173,[[["python",3]]]],[11,"into_py","","",173,[[["python",3]]]],[11,"type_object","","",173,[[["python",3]],["pytype",3]]],[11,"from","","",173,[[]]],[11,"into","","",173,[[]]],[11,"borrow","","",173,[[]]],[11,"borrow_mut","","",173,[[]]],[11,"try_from","","",173,[[],["result",4]]],[11,"try_into","","",173,[[],["result",4]]],[11,"type_id","","",173,[[],["typeid",3]]],[11,"from_py","","",174,[[["python",3]]]],[11,"into_py","","",174,[[["python",3]]]],[11,"type_object","","",174,[[["python",3]],["pytype",3]]],[11,"from","","",174,[[]]],[11,"into","","",174,[[]]],[11,"borrow","","",174,[[]]],[11,"borrow_mut","","",174,[[]]],[11,"try_from","","",174,[[],["result",4]]],[11,"try_into","","",174,[[],["result",4]]],[11,"type_id","","",174,[[],["typeid",3]]],[11,"from_py","","",175,[[["python",3]]]],[11,"into_py","","",175,[[["python",3]]]],[11,"type_object","","",175,[[["python",3]],["pytype",3]]],[11,"from","","",175,[[]]],[11,"into","","",175,[[]]],[11,"borrow","","",175,[[]]],[11,"borrow_mut","","",175,[[]]],[11,"try_from","","",175,[[],["result",4]]],[11,"try_into","","",175,[[],["result",4]]],[11,"type_id","","",175,[[],["typeid",3]]],[11,"from_py","","",176,[[["python",3]]]],[11,"into_py","","",176,[[["python",3]]]],[11,"type_object","","",176,[[["python",3]],["pytype",3]]],[11,"from","","",176,[[]]],[11,"into","","",176,[[]]],[11,"borrow","","",176,[[]]],[11,"borrow_mut","","",176,[[]]],[11,"try_from","","",176,[[],["result",4]]],[11,"try_into","","",176,[[],["result",4]]],[11,"type_id","","",176,[[],["typeid",3]]],[11,"from_py","","",177,[[["python",3]]]],[11,"into_py","","",177,[[["python",3]]]],[11,"type_object","","",177,[[["python",3]],["pytype",3]]],[11,"from","","",177,[[]]],[11,"into","","",177,[[]]],[11,"borrow","","",177,[[]]],[11,"borrow_mut","","",177,[[]]],[11,"try_from","","",177,[[],["result",4]]],[11,"try_into","","",177,[[],["result",4]]],[11,"type_id","","",177,[[],["typeid",3]]],[11,"from_py","","",178,[[["python",3]]]],[11,"into_py","","",178,[[["python",3]]]],[11,"type_object","","",178,[[["python",3]],["pytype",3]]],[11,"from","","",178,[[]]],[11,"into","","",178,[[]]],[11,"borrow","","",178,[[]]],[11,"borrow_mut","","",178,[[]]],[11,"try_from","","",178,[[],["result",4]]],[11,"try_into","","",178,[[],["result",4]]],[11,"type_id","","",178,[[],["typeid",3]]],[11,"from_py","","",179,[[["python",3]]]],[11,"into_py","","",179,[[["python",3]]]],[11,"type_object","","",179,[[["python",3]],["pytype",3]]],[11,"from","","",179,[[]]],[11,"into","","",179,[[]]],[11,"borrow","","",179,[[]]],[11,"borrow_mut","","",179,[[]]],[11,"try_from","","",179,[[],["result",4]]],[11,"try_into","","",179,[[],["result",4]]],[11,"type_id","","",179,[[],["typeid",3]]],[11,"from_py","","",180,[[["python",3]]]],[11,"into_py","","",180,[[["python",3]]]],[11,"type_object","","",180,[[["python",3]],["pytype",3]]],[11,"from","","",180,[[]]],[11,"into","","",180,[[]]],[11,"borrow","","",180,[[]]],[11,"borrow_mut","","",180,[[]]],[11,"try_from","","",180,[[],["result",4]]],[11,"try_into","","",180,[[],["result",4]]],[11,"type_id","","",180,[[],["typeid",3]]],[11,"from_py","","",181,[[["python",3]]]],[11,"into_py","","",181,[[["python",3]]]],[11,"type_object","","",181,[[["python",3]],["pytype",3]]],[11,"from","","",181,[[]]],[11,"into","","",181,[[]]],[11,"borrow","","",181,[[]]],[11,"borrow_mut","","",181,[[]]],[11,"try_from","","",181,[[],["result",4]]],[11,"try_into","","",181,[[],["result",4]]],[11,"type_id","","",181,[[],["typeid",3]]],[11,"from_py","","",182,[[["python",3]]]],[11,"into_py","","",182,[[["python",3]]]],[11,"type_object","","",182,[[["python",3]],["pytype",3]]],[11,"from","","",182,[[]]],[11,"into","","",182,[[]]],[11,"borrow","","",182,[[]]],[11,"borrow_mut","","",182,[[]]],[11,"try_from","","",182,[[],["result",4]]],[11,"try_into","","",182,[[],["result",4]]],[11,"type_id","","",182,[[],["typeid",3]]],[11,"from_py","","",183,[[["python",3]]]],[11,"into_py","","",183,[[["python",3]]]],[11,"type_object","","",183,[[["python",3]],["pytype",3]]],[11,"from","","",183,[[]]],[11,"into","","",183,[[]]],[11,"borrow","","",183,[[]]],[11,"borrow_mut","","",183,[[]]],[11,"try_from","","",183,[[],["result",4]]],[11,"try_into","","",183,[[],["result",4]]],[11,"type_id","","",183,[[],["typeid",3]]],[11,"from_py","","",184,[[["python",3]]]],[11,"into_py","","",184,[[["python",3]]]],[11,"type_object","","",184,[[["python",3]],["pytype",3]]],[11,"from","","",184,[[]]],[11,"into","","",184,[[]]],[11,"borrow","","",184,[[]]],[11,"borrow_mut","","",184,[[]]],[11,"try_from","","",184,[[],["result",4]]],[11,"try_into","","",184,[[],["result",4]]],[11,"type_id","","",184,[[],["typeid",3]]],[11,"from_py","","",185,[[["python",3]]]],[11,"into_py","","",185,[[["python",3]]]],[11,"type_object","","",185,[[["python",3]],["pytype",3]]],[11,"from","","",185,[[]]],[11,"into","","",185,[[]]],[11,"borrow","","",185,[[]]],[11,"borrow_mut","","",185,[[]]],[11,"try_from","","",185,[[],["result",4]]],[11,"try_into","","",185,[[],["result",4]]],[11,"type_id","","",185,[[],["typeid",3]]],[11,"from_py","","",186,[[["python",3]]]],[11,"into_py","","",186,[[["python",3]]]],[11,"type_object","","",186,[[["python",3]],["pytype",3]]],[11,"from","","",186,[[]]],[11,"into","","",186,[[]]],[11,"borrow","","",186,[[]]],[11,"borrow_mut","","",186,[[]]],[11,"try_from","","",186,[[],["result",4]]],[11,"try_into","","",186,[[],["result",4]]],[11,"type_id","","",186,[[],["typeid",3]]],[11,"from_py","","",187,[[["python",3]]]],[11,"into_py","","",187,[[["python",3]]]],[11,"type_object","","",187,[[["python",3]],["pytype",3]]],[11,"from","","",187,[[]]],[11,"into","","",187,[[]]],[11,"borrow","","",187,[[]]],[11,"borrow_mut","","",187,[[]]],[11,"try_from","","",187,[[],["result",4]]],[11,"try_into","","",187,[[],["result",4]]],[11,"type_id","","",187,[[],["typeid",3]]],[11,"from_py","","",188,[[["python",3]]]],[11,"into_py","","",188,[[["python",3]]]],[11,"type_object","","",188,[[["python",3]],["pytype",3]]],[11,"from","","",188,[[]]],[11,"into","","",188,[[]]],[11,"borrow","","",188,[[]]],[11,"borrow_mut","","",188,[[]]],[11,"try_from","","",188,[[],["result",4]]],[11,"try_into","","",188,[[],["result",4]]],[11,"type_id","","",188,[[],["typeid",3]]],[11,"from_py","","",189,[[["python",3]]]],[11,"into_py","","",189,[[["python",3]]]],[11,"type_object","","",189,[[["python",3]],["pytype",3]]],[11,"from","","",189,[[]]],[11,"into","","",189,[[]]],[11,"borrow","","",189,[[]]],[11,"borrow_mut","","",189,[[]]],[11,"try_from","","",189,[[],["result",4]]],[11,"try_into","","",189,[[],["result",4]]],[11,"type_id","","",189,[[],["typeid",3]]],[11,"from_py","","",190,[[["python",3]]]],[11,"into_py","","",190,[[["python",3]]]],[11,"type_object","","",190,[[["python",3]],["pytype",3]]],[11,"from","","",190,[[]]],[11,"into","","",190,[[]]],[11,"borrow","","",190,[[]]],[11,"borrow_mut","","",190,[[]]],[11,"try_from","","",190,[[],["result",4]]],[11,"try_into","","",190,[[],["result",4]]],[11,"type_id","","",190,[[],["typeid",3]]],[11,"from_py","","",191,[[["python",3]]]],[11,"into_py","","",191,[[["python",3]]]],[11,"type_object","","",191,[[["python",3]],["pytype",3]]],[11,"from","","",191,[[]]],[11,"into","","",191,[[]]],[11,"borrow","","",191,[[]]],[11,"borrow_mut","","",191,[[]]],[11,"try_from","","",191,[[],["result",4]]],[11,"try_into","","",191,[[],["result",4]]],[11,"type_id","","",191,[[],["typeid",3]]],[11,"from_py","","",192,[[["python",3]]]],[11,"into_py","","",192,[[["python",3]]]],[11,"type_object","","",192,[[["python",3]],["pytype",3]]],[11,"from","","",192,[[]]],[11,"into","","",192,[[]]],[11,"borrow","","",192,[[]]],[11,"borrow_mut","","",192,[[]]],[11,"try_from","","",192,[[],["result",4]]],[11,"try_into","","",192,[[],["result",4]]],[11,"type_id","","",192,[[],["typeid",3]]],[11,"from_py","","",193,[[["python",3]]]],[11,"into_py","","",193,[[["python",3]]]],[11,"type_object","","",193,[[["python",3]],["pytype",3]]],[11,"from","","",193,[[]]],[11,"into","","",193,[[]]],[11,"borrow","","",193,[[]]],[11,"borrow_mut","","",193,[[]]],[11,"try_from","","",193,[[],["result",4]]],[11,"try_into","","",193,[[],["result",4]]],[11,"type_id","","",193,[[],["typeid",3]]],[11,"from_py","","",194,[[["python",3]]]],[11,"into_py","","",194,[[["python",3]]]],[11,"type_object","","",194,[[["python",3]],["pytype",3]]],[11,"from","","",194,[[]]],[11,"into","","",194,[[]]],[11,"borrow","","",194,[[]]],[11,"borrow_mut","","",194,[[]]],[11,"try_from","","",194,[[],["result",4]]],[11,"try_into","","",194,[[],["result",4]]],[11,"type_id","","",194,[[],["typeid",3]]],[11,"from_py","","",195,[[["python",3]]]],[11,"into_py","","",195,[[["python",3]]]],[11,"type_object","","",195,[[["python",3]],["pytype",3]]],[11,"from","","",195,[[]]],[11,"into","","",195,[[]]],[11,"borrow","","",195,[[]]],[11,"borrow_mut","","",195,[[]]],[11,"try_from","","",195,[[],["result",4]]],[11,"try_into","","",195,[[],["result",4]]],[11,"type_id","","",195,[[],["typeid",3]]],[11,"from_py","","",196,[[["python",3]]]],[11,"into_py","","",196,[[["python",3]]]],[11,"type_object","","",196,[[["python",3]],["pytype",3]]],[11,"from","","",196,[[]]],[11,"into","","",196,[[]]],[11,"borrow","","",196,[[]]],[11,"borrow_mut","","",196,[[]]],[11,"try_from","","",196,[[],["result",4]]],[11,"try_into","","",196,[[],["result",4]]],[11,"type_id","","",196,[[],["typeid",3]]],[11,"from_py","","",197,[[["python",3]]]],[11,"into_py","","",197,[[["python",3]]]],[11,"type_object","","",197,[[["python",3]],["pytype",3]]],[11,"from","","",197,[[]]],[11,"into","","",197,[[]]],[11,"borrow","","",197,[[]]],[11,"borrow_mut","","",197,[[]]],[11,"try_from","","",197,[[],["result",4]]],[11,"try_into","","",197,[[],["result",4]]],[11,"type_id","","",197,[[],["typeid",3]]],[11,"from_py","pyo3::exceptions::asyncio","",135,[[["python",3]]]],[11,"into_py","","",135,[[["python",3]]]],[11,"type_object","","",135,[[["python",3]],["pytype",3]]],[11,"from","","",135,[[]]],[11,"into","","",135,[[]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"try_into","","",135,[[],["result",4]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"from_py","","",136,[[["python",3]]]],[11,"into_py","","",136,[[["python",3]]]],[11,"type_object","","",136,[[["python",3]],["pytype",3]]],[11,"from","","",136,[[]]],[11,"into","","",136,[[]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"try_into","","",136,[[],["result",4]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"from_py","","",137,[[["python",3]]]],[11,"into_py","","",137,[[["python",3]]]],[11,"type_object","","",137,[[["python",3]],["pytype",3]]],[11,"from","","",137,[[]]],[11,"into","","",137,[[]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"try_into","","",137,[[],["result",4]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"from_py","","",138,[[["python",3]]]],[11,"into_py","","",138,[[["python",3]]]],[11,"type_object","","",138,[[["python",3]],["pytype",3]]],[11,"from","","",138,[[]]],[11,"into","","",138,[[]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"try_into","","",138,[[],["result",4]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"from_py","","",139,[[["python",3]]]],[11,"into_py","","",139,[[["python",3]]]],[11,"type_object","","",139,[[["python",3]],["pytype",3]]],[11,"from","","",139,[[]]],[11,"into","","",139,[[]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"try_into","","",139,[[],["result",4]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"from_py","","",140,[[["python",3]]]],[11,"into_py","","",140,[[["python",3]]]],[11,"type_object","","",140,[[["python",3]],["pytype",3]]],[11,"from","","",140,[[]]],[11,"into","","",140,[[]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"try_into","","",140,[[],["result",4]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"from_py","","",141,[[["python",3]]]],[11,"into_py","","",141,[[["python",3]]]],[11,"type_object","","",141,[[["python",3]],["pytype",3]]],[11,"from","","",141,[[]]],[11,"into","","",141,[[]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"try_into","","",141,[[],["result",4]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"from_py","pyo3::exceptions::socket","",142,[[["python",3]]]],[11,"into_py","","",142,[[["python",3]]]],[11,"type_object","","",142,[[["python",3]],["pytype",3]]],[11,"from","","",142,[[]]],[11,"into","","",142,[[]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"try_into","","",142,[[],["result",4]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"from_py","","",143,[[["python",3]]]],[11,"into_py","","",143,[[["python",3]]]],[11,"type_object","","",143,[[["python",3]],["pytype",3]]],[11,"from","","",143,[[]]],[11,"into","","",143,[[]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"try_into","","",143,[[],["result",4]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"from_py","","",144,[[["python",3]]]],[11,"into_py","","",144,[[["python",3]]]],[11,"type_object","","",144,[[["python",3]],["pytype",3]]],[11,"from","","",144,[[]]],[11,"into","","",144,[[]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"try_into","","",144,[[],["result",4]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"from_py","pyo3::ffi","",198,[[["python",3]]]],[11,"into_py","","",198,[[["python",3]]]],[11,"from","","",198,[[]]],[11,"into","","",198,[[]]],[11,"to_owned","","",198,[[]]],[11,"clone_into","","",198,[[]]],[11,"borrow","","",198,[[]]],[11,"borrow_mut","","",198,[[]]],[11,"try_from","","",198,[[],["result",4]]],[11,"try_into","","",198,[[],["result",4]]],[11,"type_id","","",198,[[],["typeid",3]]],[11,"from_py","","",199,[[["python",3]]]],[11,"into_py","","",199,[[["python",3]]]],[11,"from","","",199,[[]]],[11,"into","","",199,[[]]],[11,"to_owned","","",199,[[]]],[11,"clone_into","","",199,[[]]],[11,"borrow","","",199,[[]]],[11,"borrow_mut","","",199,[[]]],[11,"try_from","","",199,[[],["result",4]]],[11,"try_into","","",199,[[],["result",4]]],[11,"type_id","","",199,[[],["typeid",3]]],[11,"from_py","","",200,[[["python",3]]]],[11,"into_py","","",200,[[["python",3]]]],[11,"from","","",200,[[]]],[11,"into","","",200,[[]]],[11,"to_owned","","",200,[[]]],[11,"clone_into","","",200,[[]]],[11,"borrow","","",200,[[]]],[11,"borrow_mut","","",200,[[]]],[11,"try_from","","",200,[[],["result",4]]],[11,"try_into","","",200,[[],["result",4]]],[11,"type_id","","",200,[[],["typeid",3]]],[11,"from_py","","",201,[[["python",3]]]],[11,"into_py","","",201,[[["python",3]]]],[11,"from","","",201,[[]]],[11,"into","","",201,[[]]],[11,"to_owned","","",201,[[]]],[11,"clone_into","","",201,[[]]],[11,"borrow","","",201,[[]]],[11,"borrow_mut","","",201,[[]]],[11,"try_from","","",201,[[],["result",4]]],[11,"try_into","","",201,[[],["result",4]]],[11,"type_id","","",201,[[],["typeid",3]]],[11,"from_py","","",202,[[["python",3]]]],[11,"into_py","","",202,[[["python",3]]]],[11,"from","","",202,[[]]],[11,"into","","",202,[[]]],[11,"to_owned","","",202,[[]]],[11,"clone_into","","",202,[[]]],[11,"borrow","","",202,[[]]],[11,"borrow_mut","","",202,[[]]],[11,"try_from","","",202,[[],["result",4]]],[11,"try_into","","",202,[[],["result",4]]],[11,"type_id","","",202,[[],["typeid",3]]],[11,"from_py","","",203,[[["python",3]]]],[11,"into_py","","",203,[[["python",3]]]],[11,"from","","",203,[[]]],[11,"into","","",203,[[]]],[11,"to_owned","","",203,[[]]],[11,"clone_into","","",203,[[]]],[11,"borrow","","",203,[[]]],[11,"borrow_mut","","",203,[[]]],[11,"try_from","","",203,[[],["result",4]]],[11,"try_into","","",203,[[],["result",4]]],[11,"type_id","","",203,[[],["typeid",3]]],[11,"from_py","","",204,[[["python",3]]]],[11,"into_py","","",204,[[["python",3]]]],[11,"from","","",204,[[]]],[11,"into","","",204,[[]]],[11,"to_owned","","",204,[[]]],[11,"clone_into","","",204,[[]]],[11,"borrow","","",204,[[]]],[11,"borrow_mut","","",204,[[]]],[11,"try_from","","",204,[[],["result",4]]],[11,"try_into","","",204,[[],["result",4]]],[11,"type_id","","",204,[[],["typeid",3]]],[11,"from_py","","",205,[[["python",3]]]],[11,"into_py","","",205,[[["python",3]]]],[11,"from","","",205,[[]]],[11,"into","","",205,[[]]],[11,"to_owned","","",205,[[]]],[11,"clone_into","","",205,[[]]],[11,"borrow","","",205,[[]]],[11,"borrow_mut","","",205,[[]]],[11,"try_from","","",205,[[],["result",4]]],[11,"try_into","","",205,[[],["result",4]]],[11,"type_id","","",205,[[],["typeid",3]]],[11,"from_py","","",206,[[["python",3]]]],[11,"into_py","","",206,[[["python",3]]]],[11,"from","","",206,[[]]],[11,"into","","",206,[[]]],[11,"to_owned","","",206,[[]]],[11,"clone_into","","",206,[[]]],[11,"borrow","","",206,[[]]],[11,"borrow_mut","","",206,[[]]],[11,"try_from","","",206,[[],["result",4]]],[11,"try_into","","",206,[[],["result",4]]],[11,"type_id","","",206,[[],["typeid",3]]],[11,"from_py","","",301,[[["python",3]]]],[11,"into_py","","",301,[[["python",3]]]],[11,"from","","",301,[[]]],[11,"into","","",301,[[]]],[11,"borrow","","",301,[[]]],[11,"borrow_mut","","",301,[[]]],[11,"try_from","","",301,[[],["result",4]]],[11,"try_into","","",301,[[],["result",4]]],[11,"type_id","","",301,[[],["typeid",3]]],[11,"from_py","","",207,[[["python",3]]]],[11,"into_py","","",207,[[["python",3]]]],[11,"from","","",207,[[]]],[11,"into","","",207,[[]]],[11,"to_owned","","",207,[[]]],[11,"clone_into","","",207,[[]]],[11,"borrow","","",207,[[]]],[11,"borrow_mut","","",207,[[]]],[11,"try_from","","",207,[[],["result",4]]],[11,"try_into","","",207,[[],["result",4]]],[11,"type_id","","",207,[[],["typeid",3]]],[11,"from_py","","",302,[[["python",3]]]],[11,"into_py","","",302,[[["python",3]]]],[11,"from","","",302,[[]]],[11,"into","","",302,[[]]],[11,"borrow","","",302,[[]]],[11,"borrow_mut","","",302,[[]]],[11,"try_from","","",302,[[],["result",4]]],[11,"try_into","","",302,[[],["result",4]]],[11,"type_id","","",302,[[],["typeid",3]]],[11,"from_py","","",208,[[["python",3]]]],[11,"into_py","","",208,[[["python",3]]]],[11,"from","","",208,[[]]],[11,"into","","",208,[[]]],[11,"borrow","","",208,[[]]],[11,"borrow_mut","","",208,[[]]],[11,"try_from","","",208,[[],["result",4]]],[11,"try_into","","",208,[[],["result",4]]],[11,"type_id","","",208,[[],["typeid",3]]],[11,"from_py","","",209,[[["python",3]]]],[11,"into_py","","",209,[[["python",3]]]],[11,"from","","",209,[[]]],[11,"into","","",209,[[]]],[11,"borrow","","",209,[[]]],[11,"borrow_mut","","",209,[[]]],[11,"try_from","","",209,[[],["result",4]]],[11,"try_into","","",209,[[],["result",4]]],[11,"type_id","","",209,[[],["typeid",3]]],[11,"from_py","","",210,[[["python",3]]]],[11,"into_py","","",210,[[["python",3]]]],[11,"from","","",210,[[]]],[11,"into","","",210,[[]]],[11,"to_owned","","",210,[[]]],[11,"clone_into","","",210,[[]]],[11,"borrow","","",210,[[]]],[11,"borrow_mut","","",210,[[]]],[11,"try_from","","",210,[[],["result",4]]],[11,"try_into","","",210,[[],["result",4]]],[11,"type_id","","",210,[[],["typeid",3]]],[11,"from_py","","",211,[[["python",3]]]],[11,"into_py","","",211,[[["python",3]]]],[11,"from","","",211,[[]]],[11,"into","","",211,[[]]],[11,"to_owned","","",211,[[]]],[11,"clone_into","","",211,[[]]],[11,"borrow","","",211,[[]]],[11,"borrow_mut","","",211,[[]]],[11,"try_from","","",211,[[],["result",4]]],[11,"try_into","","",211,[[],["result",4]]],[11,"type_id","","",211,[[],["typeid",3]]],[11,"from_py","","",303,[[["python",3]]]],[11,"into_py","","",303,[[["python",3]]]],[11,"from","","",303,[[]]],[11,"into","","",303,[[]]],[11,"borrow","","",303,[[]]],[11,"borrow_mut","","",303,[[]]],[11,"try_from","","",303,[[],["result",4]]],[11,"try_into","","",303,[[],["result",4]]],[11,"type_id","","",303,[[],["typeid",3]]],[11,"from_py","","",212,[[["python",3]]]],[11,"into_py","","",212,[[["python",3]]]],[11,"from","","",212,[[]]],[11,"into","","",212,[[]]],[11,"to_owned","","",212,[[]]],[11,"clone_into","","",212,[[]]],[11,"borrow","","",212,[[]]],[11,"borrow_mut","","",212,[[]]],[11,"try_from","","",212,[[],["result",4]]],[11,"try_into","","",212,[[],["result",4]]],[11,"type_id","","",212,[[],["typeid",3]]],[11,"from_py","","",213,[[["python",3]]]],[11,"into_py","","",213,[[["python",3]]]],[11,"from","","",213,[[]]],[11,"into","","",213,[[]]],[11,"to_owned","","",213,[[]]],[11,"clone_into","","",213,[[]]],[11,"borrow","","",213,[[]]],[11,"borrow_mut","","",213,[[]]],[11,"try_from","","",213,[[],["result",4]]],[11,"try_into","","",213,[[],["result",4]]],[11,"type_id","","",213,[[],["typeid",3]]],[11,"from_py","","",214,[[["python",3]]]],[11,"into_py","","",214,[[["python",3]]]],[11,"from","","",214,[[]]],[11,"into","","",214,[[]]],[11,"to_owned","","",214,[[]]],[11,"clone_into","","",214,[[]]],[11,"borrow","","",214,[[]]],[11,"borrow_mut","","",214,[[]]],[11,"try_from","","",214,[[],["result",4]]],[11,"try_into","","",214,[[],["result",4]]],[11,"type_id","","",214,[[],["typeid",3]]],[11,"from_py","","",215,[[["python",3]]]],[11,"into_py","","",215,[[["python",3]]]],[11,"from","","",215,[[]]],[11,"into","","",215,[[]]],[11,"to_owned","","",215,[[]]],[11,"clone_into","","",215,[[]]],[11,"borrow","","",215,[[]]],[11,"borrow_mut","","",215,[[]]],[11,"try_from","","",215,[[],["result",4]]],[11,"try_into","","",215,[[],["result",4]]],[11,"type_id","","",215,[[],["typeid",3]]],[11,"from_py","","",216,[[["python",3]]]],[11,"into_py","","",216,[[["python",3]]]],[11,"from","","",216,[[]]],[11,"into","","",216,[[]]],[11,"to_owned","","",216,[[]]],[11,"clone_into","","",216,[[]]],[11,"borrow","","",216,[[]]],[11,"borrow_mut","","",216,[[]]],[11,"try_from","","",216,[[],["result",4]]],[11,"try_into","","",216,[[],["result",4]]],[11,"type_id","","",216,[[],["typeid",3]]],[11,"from_py","","",217,[[["python",3]]]],[11,"into_py","","",217,[[["python",3]]]],[11,"from","","",217,[[]]],[11,"into","","",217,[[]]],[11,"to_owned","","",217,[[]]],[11,"clone_into","","",217,[[]]],[11,"borrow","","",217,[[]]],[11,"borrow_mut","","",217,[[]]],[11,"try_from","","",217,[[],["result",4]]],[11,"try_into","","",217,[[],["result",4]]],[11,"type_id","","",217,[[],["typeid",3]]],[11,"from_py","","",218,[[["python",3]]]],[11,"into_py","","",218,[[["python",3]]]],[11,"from","","",218,[[]]],[11,"into","","",218,[[]]],[11,"to_owned","","",218,[[]]],[11,"clone_into","","",218,[[]]],[11,"borrow","","",218,[[]]],[11,"borrow_mut","","",218,[[]]],[11,"try_from","","",218,[[],["result",4]]],[11,"try_into","","",218,[[],["result",4]]],[11,"type_id","","",218,[[],["typeid",3]]],[11,"from_py","","",219,[[["python",3]]]],[11,"into_py","","",219,[[["python",3]]]],[11,"from","","",219,[[]]],[11,"into","","",219,[[]]],[11,"to_owned","","",219,[[]]],[11,"clone_into","","",219,[[]]],[11,"borrow","","",219,[[]]],[11,"borrow_mut","","",219,[[]]],[11,"try_from","","",219,[[],["result",4]]],[11,"try_into","","",219,[[],["result",4]]],[11,"type_id","","",219,[[],["typeid",3]]],[11,"from_py","","",220,[[["python",3]]]],[11,"into_py","","",220,[[["python",3]]]],[11,"from","","",220,[[]]],[11,"into","","",220,[[]]],[11,"to_owned","","",220,[[]]],[11,"clone_into","","",220,[[]]],[11,"borrow","","",220,[[]]],[11,"borrow_mut","","",220,[[]]],[11,"try_from","","",220,[[],["result",4]]],[11,"try_into","","",220,[[],["result",4]]],[11,"type_id","","",220,[[],["typeid",3]]],[11,"from_py","","",221,[[["python",3]]]],[11,"into_py","","",221,[[["python",3]]]],[11,"from","","",221,[[]]],[11,"into","","",221,[[]]],[11,"to_owned","","",221,[[]]],[11,"clone_into","","",221,[[]]],[11,"borrow","","",221,[[]]],[11,"borrow_mut","","",221,[[]]],[11,"try_from","","",221,[[],["result",4]]],[11,"try_into","","",221,[[],["result",4]]],[11,"type_id","","",221,[[],["typeid",3]]],[11,"from_py","","",222,[[["python",3]]]],[11,"into_py","","",222,[[["python",3]]]],[11,"from","","",222,[[]]],[11,"into","","",222,[[]]],[11,"to_owned","","",222,[[]]],[11,"clone_into","","",222,[[]]],[11,"borrow","","",222,[[]]],[11,"borrow_mut","","",222,[[]]],[11,"try_from","","",222,[[],["result",4]]],[11,"try_into","","",222,[[],["result",4]]],[11,"type_id","","",222,[[],["typeid",3]]],[11,"from_py","","",223,[[["python",3]]]],[11,"into_py","","",223,[[["python",3]]]],[11,"from","","",223,[[]]],[11,"into","","",223,[[]]],[11,"to_owned","","",223,[[]]],[11,"clone_into","","",223,[[]]],[11,"borrow","","",223,[[]]],[11,"borrow_mut","","",223,[[]]],[11,"try_from","","",223,[[],["result",4]]],[11,"try_into","","",223,[[],["result",4]]],[11,"type_id","","",223,[[],["typeid",3]]],[11,"from_py","","",224,[[["python",3]]]],[11,"into_py","","",224,[[["python",3]]]],[11,"from","","",224,[[]]],[11,"into","","",224,[[]]],[11,"to_owned","","",224,[[]]],[11,"clone_into","","",224,[[]]],[11,"borrow","","",224,[[]]],[11,"borrow_mut","","",224,[[]]],[11,"try_from","","",224,[[],["result",4]]],[11,"try_into","","",224,[[],["result",4]]],[11,"type_id","","",224,[[],["typeid",3]]],[11,"from_py","","",225,[[["python",3]]]],[11,"into_py","","",225,[[["python",3]]]],[11,"from","","",225,[[]]],[11,"into","","",225,[[]]],[11,"to_owned","","",225,[[]]],[11,"clone_into","","",225,[[]]],[11,"borrow","","",225,[[]]],[11,"borrow_mut","","",225,[[]]],[11,"try_from","","",225,[[],["result",4]]],[11,"try_into","","",225,[[],["result",4]]],[11,"type_id","","",225,[[],["typeid",3]]],[11,"from_py","","",226,[[["python",3]]]],[11,"into_py","","",226,[[["python",3]]]],[11,"from","","",226,[[]]],[11,"into","","",226,[[]]],[11,"to_owned","","",226,[[]]],[11,"clone_into","","",226,[[]]],[11,"borrow","","",226,[[]]],[11,"borrow_mut","","",226,[[]]],[11,"try_from","","",226,[[],["result",4]]],[11,"try_into","","",226,[[],["result",4]]],[11,"type_id","","",226,[[],["typeid",3]]],[11,"from_py","","",227,[[["python",3]]]],[11,"into_py","","",227,[[["python",3]]]],[11,"from","","",227,[[]]],[11,"into","","",227,[[]]],[11,"to_owned","","",227,[[]]],[11,"clone_into","","",227,[[]]],[11,"borrow","","",227,[[]]],[11,"borrow_mut","","",227,[[]]],[11,"try_from","","",227,[[],["result",4]]],[11,"try_into","","",227,[[],["result",4]]],[11,"type_id","","",227,[[],["typeid",3]]],[11,"from_py","","",228,[[["python",3]]]],[11,"into_py","","",228,[[["python",3]]]],[11,"from","","",228,[[]]],[11,"into","","",228,[[]]],[11,"to_owned","","",228,[[]]],[11,"clone_into","","",228,[[]]],[11,"borrow","","",228,[[]]],[11,"borrow_mut","","",228,[[]]],[11,"try_from","","",228,[[],["result",4]]],[11,"try_into","","",228,[[],["result",4]]],[11,"type_id","","",228,[[],["typeid",3]]],[11,"from_py","","",229,[[["python",3]]]],[11,"into_py","","",229,[[["python",3]]]],[11,"from","","",229,[[]]],[11,"into","","",229,[[]]],[11,"to_owned","","",229,[[]]],[11,"clone_into","","",229,[[]]],[11,"borrow","","",229,[[]]],[11,"borrow_mut","","",229,[[]]],[11,"try_from","","",229,[[],["result",4]]],[11,"try_into","","",229,[[],["result",4]]],[11,"type_id","","",229,[[],["typeid",3]]],[11,"from_py","","",230,[[["python",3]]]],[11,"into_py","","",230,[[["python",3]]]],[11,"from","","",230,[[]]],[11,"into","","",230,[[]]],[11,"to_owned","","",230,[[]]],[11,"clone_into","","",230,[[]]],[11,"borrow","","",230,[[]]],[11,"borrow_mut","","",230,[[]]],[11,"try_from","","",230,[[],["result",4]]],[11,"try_into","","",230,[[],["result",4]]],[11,"type_id","","",230,[[],["typeid",3]]],[11,"from_py","","",231,[[["python",3]]]],[11,"into_py","","",231,[[["python",3]]]],[11,"from","","",231,[[]]],[11,"into","","",231,[[]]],[11,"to_owned","","",231,[[]]],[11,"clone_into","","",231,[[]]],[11,"borrow","","",231,[[]]],[11,"borrow_mut","","",231,[[]]],[11,"try_from","","",231,[[],["result",4]]],[11,"try_into","","",231,[[],["result",4]]],[11,"type_id","","",231,[[],["typeid",3]]],[11,"from_py","","",232,[[["python",3]]]],[11,"into_py","","",232,[[["python",3]]]],[11,"from","","",232,[[]]],[11,"into","","",232,[[]]],[11,"to_owned","","",232,[[]]],[11,"clone_into","","",232,[[]]],[11,"borrow","","",232,[[]]],[11,"borrow_mut","","",232,[[]]],[11,"try_from","","",232,[[],["result",4]]],[11,"try_into","","",232,[[],["result",4]]],[11,"type_id","","",232,[[],["typeid",3]]],[11,"from_py","","",233,[[["python",3]]]],[11,"into_py","","",233,[[["python",3]]]],[11,"from","","",233,[[]]],[11,"into","","",233,[[]]],[11,"to_owned","","",233,[[]]],[11,"clone_into","","",233,[[]]],[11,"borrow","","",233,[[]]],[11,"borrow_mut","","",233,[[]]],[11,"try_from","","",233,[[],["result",4]]],[11,"try_into","","",233,[[],["result",4]]],[11,"type_id","","",233,[[],["typeid",3]]],[11,"from_py","","",234,[[["python",3]]]],[11,"into_py","","",234,[[["python",3]]]],[11,"from","","",234,[[]]],[11,"into","","",234,[[]]],[11,"borrow","","",234,[[]]],[11,"borrow_mut","","",234,[[]]],[11,"try_from","","",234,[[],["result",4]]],[11,"try_into","","",234,[[],["result",4]]],[11,"type_id","","",234,[[],["typeid",3]]],[11,"from_py","","",235,[[["python",3]]]],[11,"into_py","","",235,[[["python",3]]]],[11,"from","","",235,[[]]],[11,"into","","",235,[[]]],[11,"borrow","","",235,[[]]],[11,"borrow_mut","","",235,[[]]],[11,"try_from","","",235,[[],["result",4]]],[11,"try_into","","",235,[[],["result",4]]],[11,"type_id","","",235,[[],["typeid",3]]],[11,"from_py","","",236,[[["python",3]]]],[11,"into_py","","",236,[[["python",3]]]],[11,"from","","",236,[[]]],[11,"into","","",236,[[]]],[11,"borrow","","",236,[[]]],[11,"borrow_mut","","",236,[[]]],[11,"try_from","","",236,[[],["result",4]]],[11,"try_into","","",236,[[],["result",4]]],[11,"type_id","","",236,[[],["typeid",3]]],[11,"from_py","","",237,[[["python",3]]]],[11,"into_py","","",237,[[["python",3]]]],[11,"from","","",237,[[]]],[11,"into","","",237,[[]]],[11,"to_owned","","",237,[[]]],[11,"clone_into","","",237,[[]]],[11,"borrow","","",237,[[]]],[11,"borrow_mut","","",237,[[]]],[11,"try_from","","",237,[[],["result",4]]],[11,"try_into","","",237,[[],["result",4]]],[11,"type_id","","",237,[[],["typeid",3]]],[11,"from_py","","",238,[[["python",3]]]],[11,"into_py","","",238,[[["python",3]]]],[11,"from","","",238,[[]]],[11,"into","","",238,[[]]],[11,"to_owned","","",238,[[]]],[11,"clone_into","","",238,[[]]],[11,"borrow","","",238,[[]]],[11,"borrow_mut","","",238,[[]]],[11,"try_from","","",238,[[],["result",4]]],[11,"try_into","","",238,[[],["result",4]]],[11,"type_id","","",238,[[],["typeid",3]]],[11,"from_py","","",239,[[["python",3]]]],[11,"into_py","","",239,[[["python",3]]]],[11,"from","","",239,[[]]],[11,"into","","",239,[[]]],[11,"borrow","","",239,[[]]],[11,"borrow_mut","","",239,[[]]],[11,"try_from","","",239,[[],["result",4]]],[11,"try_into","","",239,[[],["result",4]]],[11,"type_id","","",239,[[],["typeid",3]]],[11,"from_py","","",304,[[["python",3]]]],[11,"into_py","","",304,[[["python",3]]]],[11,"from","","",304,[[]]],[11,"into","","",304,[[]]],[11,"borrow","","",304,[[]]],[11,"borrow_mut","","",304,[[]]],[11,"try_from","","",304,[[],["result",4]]],[11,"try_into","","",304,[[],["result",4]]],[11,"type_id","","",304,[[],["typeid",3]]],[11,"from_py","","",240,[[["python",3]]]],[11,"into_py","","",240,[[["python",3]]]],[11,"from","","",240,[[]]],[11,"into","","",240,[[]]],[11,"to_owned","","",240,[[]]],[11,"clone_into","","",240,[[]]],[11,"borrow","","",240,[[]]],[11,"borrow_mut","","",240,[[]]],[11,"try_from","","",240,[[],["result",4]]],[11,"try_into","","",240,[[],["result",4]]],[11,"type_id","","",240,[[],["typeid",3]]],[11,"from_py","","",241,[[["python",3]]]],[11,"into_py","","",241,[[["python",3]]]],[11,"from","","",241,[[]]],[11,"into","","",241,[[]]],[11,"to_owned","","",241,[[]]],[11,"clone_into","","",241,[[]]],[11,"borrow","","",241,[[]]],[11,"borrow_mut","","",241,[[]]],[11,"try_from","","",241,[[],["result",4]]],[11,"try_into","","",241,[[],["result",4]]],[11,"type_id","","",241,[[],["typeid",3]]],[11,"from_py","","",305,[[["python",3]]]],[11,"into_py","","",305,[[["python",3]]]],[11,"from","","",305,[[]]],[11,"into","","",305,[[]]],[11,"borrow","","",305,[[]]],[11,"borrow_mut","","",305,[[]]],[11,"try_from","","",305,[[],["result",4]]],[11,"try_into","","",305,[[],["result",4]]],[11,"type_id","","",305,[[],["typeid",3]]],[11,"from_py","","",306,[[["python",3]]]],[11,"into_py","","",306,[[["python",3]]]],[11,"from","","",306,[[]]],[11,"into","","",306,[[]]],[11,"borrow","","",306,[[]]],[11,"borrow_mut","","",306,[[]]],[11,"try_from","","",306,[[],["result",4]]],[11,"try_into","","",306,[[],["result",4]]],[11,"type_id","","",306,[[],["typeid",3]]],[11,"from_py","","",307,[[["python",3]]]],[11,"into_py","","",307,[[["python",3]]]],[11,"from","","",307,[[]]],[11,"into","","",307,[[]]],[11,"borrow","","",307,[[]]],[11,"borrow_mut","","",307,[[]]],[11,"try_from","","",307,[[],["result",4]]],[11,"try_into","","",307,[[],["result",4]]],[11,"type_id","","",307,[[],["typeid",3]]],[11,"from_py","","",308,[[["python",3]]]],[11,"into_py","","",308,[[["python",3]]]],[11,"from","","",308,[[]]],[11,"into","","",308,[[]]],[11,"borrow","","",308,[[]]],[11,"borrow_mut","","",308,[[]]],[11,"try_from","","",308,[[],["result",4]]],[11,"try_into","","",308,[[],["result",4]]],[11,"type_id","","",308,[[],["typeid",3]]],[11,"from_py","pyo3::ffi::structmember","",242,[[["python",3]]]],[11,"into_py","","",242,[[["python",3]]]],[11,"from","","",242,[[]]],[11,"into","","",242,[[]]],[11,"to_owned","","",242,[[]]],[11,"clone_into","","",242,[[]]],[11,"borrow","","",242,[[]]],[11,"borrow_mut","","",242,[[]]],[11,"try_from","","",242,[[],["result",4]]],[11,"try_into","","",242,[[],["result",4]]],[11,"type_id","","",242,[[],["typeid",3]]],[11,"from_py","pyo3::ffi::frameobject","",243,[[["python",3]]]],[11,"into_py","","",243,[[["python",3]]]],[11,"from","","",243,[[]]],[11,"into","","",243,[[]]],[11,"to_owned","","",243,[[]]],[11,"clone_into","","",243,[[]]],[11,"borrow","","",243,[[]]],[11,"borrow_mut","","",243,[[]]],[11,"try_from","","",243,[[],["result",4]]],[11,"try_into","","",243,[[],["result",4]]],[11,"type_id","","",243,[[],["typeid",3]]],[11,"from_py","","",244,[[["python",3]]]],[11,"into_py","","",244,[[["python",3]]]],[11,"from","","",244,[[]]],[11,"into","","",244,[[]]],[11,"to_owned","","",244,[[]]],[11,"clone_into","","",244,[[]]],[11,"borrow","","",244,[[]]],[11,"borrow_mut","","",244,[[]]],[11,"try_from","","",244,[[],["result",4]]],[11,"try_into","","",244,[[],["result",4]]],[11,"type_id","","",244,[[],["typeid",3]]],[11,"from_py","pyo3::freelist","",247,[[["python",3]]]],[11,"into_py","","",247,[[["python",3]]]],[11,"from","","",247,[[]]],[11,"into","","",247,[[]]],[11,"borrow","","",247,[[]]],[11,"borrow_mut","","",247,[[]]],[11,"try_from","","",247,[[],["result",4]]],[11,"try_into","","",247,[[],["result",4]]],[11,"type_id","","",247,[[],["typeid",3]]],[11,"from_py","","",245,[[["python",3]]]],[11,"into_py","","",245,[[["python",3]]]],[11,"from","","",245,[[]]],[11,"into","","",245,[[]]],[11,"borrow","","",245,[[]]],[11,"borrow_mut","","",245,[[]]],[11,"try_from","","",245,[[],["result",4]]],[11,"try_into","","",245,[[],["result",4]]],[11,"type_id","","",245,[[],["typeid",3]]],[11,"from_py","pyo3::once_cell","",252,[[["python",3]]]],[11,"into_py","","",252,[[["python",3]]]],[11,"from","","",252,[[]]],[11,"into","","",252,[[]]],[11,"borrow","","",252,[[]]],[11,"borrow_mut","","",252,[[]]],[11,"try_from","","",252,[[],["result",4]]],[11,"try_into","","",252,[[],["result",4]]],[11,"type_id","","",252,[[],["typeid",3]]],[11,"from_py","pyo3::panic","",253,[[["python",3]]]],[11,"into_py","","",253,[[["python",3]]]],[11,"type_object","","",253,[[["python",3]],["pytype",3]]],[11,"from","","",253,[[]]],[11,"into","","",253,[[]]],[11,"borrow","","",253,[[]]],[11,"borrow_mut","","",253,[[]]],[11,"try_from","","",253,[[],["result",4]]],[11,"try_into","","",253,[[],["result",4]]],[11,"type_id","","",253,[[],["typeid",3]]],[11,"from_py","pyo3::prelude","",285,[[["python",3]]]],[11,"into_py","","",285,[[["python",3]]]],[11,"try_from","","",285,[[],[["result",4],["pydowncasterror",3]]]],[11,"try_from_exact","","",285,[[],[["result",4],["pydowncasterror",3]]]],[11,"try_from_unchecked","","",285,[[]]],[11,"from_owned_ptr_or_opt","","",285,[[["python",3]],["option",4]]],[11,"from_borrowed_ptr_or_opt","","",285,[[["python",3]],["option",4]]],[11,"type_object","","",285,[[["python",3]],["pytype",3]]],[11,"from","","",285,[[]]],[11,"into","","",285,[[]]],[11,"to_string","","",285,[[],["string",3]]],[11,"borrow","","",285,[[]]],[11,"borrow_mut","","",285,[[]]],[11,"try_from","","",285,[[],["result",4]]],[11,"try_into","","",285,[[],["result",4]]],[11,"type_id","","",285,[[],["typeid",3]]],[11,"from_py","pyo3::pycell","",255,[[["python",3]]]],[11,"into_py","","",255,[[["python",3]]]],[11,"try_from","","",255,[[],[["result",4],["pydowncasterror",3]]]],[11,"try_from_exact","","",255,[[],[["result",4],["pydowncasterror",3]]]],[11,"try_from_unchecked","","",255,[[]]],[11,"from_owned_ptr_or_opt","","",255,[[["python",3]],["option",4]]],[11,"from_borrowed_ptr_or_opt","","",255,[[["python",3]],["option",4]]],[11,"from","","",255,[[]]],[11,"into","","",255,[[]]],[11,"borrow","","",255,[[]]],[11,"borrow_mut","","",255,[[]]],[11,"try_from","","",255,[[],["result",4]]],[11,"try_into","","",255,[[],["result",4]]],[11,"type_id","","",255,[[],["typeid",3]]],[11,"from_py","","",256,[[["python",3]]]],[11,"into_py","","",256,[[["python",3]]]],[11,"extract","","",256,[[["pyany",3]],[["result",4],["pyerr",3]]]],[11,"from","","",256,[[]]],[11,"into","","",256,[[]]],[11,"borrow","","",256,[[]]],[11,"borrow_mut","","",256,[[]]],[11,"try_from","","",256,[[],["result",4]]],[11,"try_into","","",256,[[],["result",4]]],[11,"type_id","","",256,[[],["typeid",3]]],[11,"from_py","","",257,[[["python",3]]]],[11,"into_py","","",257,[[["python",3]]]],[11,"extract","","",257,[[["pyany",3]],[["result",4],["pyerr",3]]]],[11,"from","","",257,[[]]],[11,"into","","",257,[[]]],[11,"borrow","","",257,[[]]],[11,"borrow_mut","","",257,[[]]],[11,"try_from","","",257,[[],["result",4]]],[11,"try_into","","",257,[[],["result",4]]],[11,"type_id","","",257,[[],["typeid",3]]],[11,"from_py","","",258,[[["python",3]]]],[11,"into_py","","",258,[[["python",3]]]],[11,"type_object","","",258,[[["python",3]],["pytype",3]]],[11,"from","","",258,[[]]],[11,"into","","",258,[[]]],[11,"to_string","","",258,[[],["string",3]]],[11,"borrow","","",258,[[]]],[11,"borrow_mut","","",258,[[]]],[11,"try_from","","",258,[[],["result",4]]],[11,"try_into","","",258,[[],["result",4]]],[11,"type_id","","",258,[[],["typeid",3]]],[11,"from_py","","",259,[[["python",3]]]],[11,"into_py","","",259,[[["python",3]]]],[11,"type_object","","",259,[[["python",3]],["pytype",3]]],[11,"from","","",259,[[]]],[11,"into","","",259,[[]]],[11,"to_string","","",259,[[],["string",3]]],[11,"borrow","","",259,[[]]],[11,"borrow_mut","","",259,[[]]],[11,"try_from","","",259,[[],["result",4]]],[11,"try_into","","",259,[[],["result",4]]],[11,"type_id","","",259,[[],["typeid",3]]],[11,"from_py","pyo3::pyclass_init","",309,[[["python",3]]]],[11,"into_py","","",309,[[["python",3]]]],[11,"from","","",309,[[]]],[11,"into","","",309,[[]]],[11,"borrow","","",309,[[]]],[11,"borrow_mut","","",309,[[]]],[11,"try_from","","",309,[[],["result",4]]],[11,"try_into","","",309,[[],["result",4]]],[11,"type_id","","",309,[[],["typeid",3]]],[11,"from_py","","",264,[[["python",3]]]],[11,"into_py","","",264,[[["python",3]]]],[11,"from","","",264,[[]]],[11,"into","","",264,[[]]],[11,"borrow","","",264,[[]]],[11,"borrow_mut","","",264,[[]]],[11,"try_from","","",264,[[],["result",4]]],[11,"try_into","","",264,[[],["result",4]]],[11,"type_id","","",264,[[],["typeid",3]]],[11,"from_py","pyo3::pyclass_slots","",310,[[["python",3]]]],[11,"into_py","","",310,[[["python",3]]]],[11,"from","","",310,[[]]],[11,"into","","",310,[[]]],[11,"borrow","","",310,[[]]],[11,"borrow_mut","","",310,[[]]],[11,"try_from","","",310,[[],["result",4]]],[11,"try_into","","",310,[[],["result",4]]],[11,"type_id","","",310,[[],["typeid",3]]],[11,"from_py","","",311,[[["python",3]]]],[11,"into_py","","",311,[[["python",3]]]],[11,"from","","",311,[[]]],[11,"into","","",311,[[]]],[11,"borrow","","",311,[[]]],[11,"borrow_mut","","",311,[[]]],[11,"try_from","","",311,[[],["result",4]]],[11,"try_into","","",311,[[],["result",4]]],[11,"type_id","","",311,[[],["typeid",3]]],[11,"from_py","","",312,[[["python",3]]]],[11,"into_py","","",312,[[["python",3]]]],[11,"from","","",312,[[]]],[11,"into","","",312,[[]]],[11,"borrow","","",312,[[]]],[11,"borrow_mut","","",312,[[]]],[11,"try_from","","",312,[[],["result",4]]],[11,"try_into","","",312,[[],["result",4]]],[11,"type_id","","",312,[[],["typeid",3]]],[11,"from_py","pyo3::types","",273,[[["python",3]]]],[11,"into_py","","",273,[[["python",3]]]],[11,"try_from","","",273,[[],[["result",4],["pydowncasterror",3]]]],[11,"try_from_exact","","",273,[[],[["result",4],["pydowncasterror",3]]]],[11,"try_from_unchecked","","",273,[[]]],[11,"from_owned_ptr_or_opt","","",273,[[["python",3]],["option",4]]],[11,"from_borrowed_ptr_or_opt","","",273,[[["python",3]],["option",4]]],[11,"type_object","","",273,[[["python",3]],["pytype",3]]],[11,"from","","",273,[[]]],[11,"into","","",273,[[]]],[11,"to_string","","",273,[[],["string",3]]],[11,"borrow","","",273,[[]]],[11,"borrow_mut","","",273,[[]]],[11,"try_from","","",273,[[],["result",4]]],[11,"try_into","","",273,[[],["result",4]]],[11,"type_id","","",273,[[],["typeid",3]]],[11,"from_py","","",274,[[["python",3]]]],[11,"into_py","","",274,[[["python",3]]]],[11,"try_from","","",274,[[],[["result",4],["pydowncasterror",3]]]],[11,"try_from_exact","","",274,[[],[["result",4],["pydowncasterror",3]]]],[11,"try_from_unchecked","","",274,[[]]],[11,"from_owned_ptr_or_opt","","",274,[[["python",3]],["option",4]]],[11,"from_borrowed_ptr_or_opt","","",274,[[["python",3]],["option",4]]],[11,"type_object","","",274,[[["python",3]],["pytype",3]]],[11,"from","","",274,[[]]],[11,"into","","",274,[[]]],[11,"to_string","","",274,[[],["string",3]]],[11,"borrow","","",274,[[]]],[11,"borrow_mut","","",274,[[]]],[11,"try_from","","",274,[[],["result",4]]],[11,"try_into","","",274,[[],["result",4]]],[11,"type_id","","",274,[[],["typeid",3]]],[11,"from_py","","",275,[[["python",3]]]],[11,"into_py","","",275,[[["python",3]]]],[11,"try_from","","",275,[[],[["result",4],["pydowncasterror",3]]]],[11,"try_from_exact","","",275,[[],[["result",4],["pydowncasterror",3]]]],[11,"try_from_unchecked","","",275,[[]]],[11,"from_owned_ptr_or_opt","","",275,[[["python",3]],["option",4]]],[11,"from_borrowed_ptr_or_opt","","",275,[[["python",3]],["option",4]]],[11,"type_object","","",275,[[["python",3]],["pytype",3]]],[11,"from","","",275,[[]]],[11,"into","","",275,[[]]],[11,"to_string","","",275,[[],["string",3]]],[11,"borrow","","",275,[[]]],[11,"borrow_mut","","",275,[[]]],[11,"try_from","","",275,[[],["result",4]]],[11,"try_into","","",275,[[],["result",4]]],[11,"type_id","","",275,[[],["typeid",3]]],[11,"from_py","","",276,[[["python",3]]]],[11,"into_py","","",276,[[["python",3]]]],[11,"try_from","","",276,[[],[["result",4],["pydowncasterror",3]]]],[11,"try_from_exact","","",276,[[],[["result",4],["pydowncasterror",3]]]],[11,"try_from_unchecked","","",276,[[]]],[11,"from_owned_ptr_or_opt","","",276,[[["python",3]],["option",4]]],[11,"from_borrowed_ptr_or_opt","","",276,[[["python",3]],["option",4]]],[11,"type_object","","",276,[[["python",3]],["pytype",3]]],[11,"from","","",276,[[]]],[11,"into","","",276,[[]]],[11,"to_string","","",276,[[],["string",3]]],[11,"borrow","","",276,[[]]],[11,"borrow_mut","","",276,[[]]],[11,"try_from","","",276,[[],["result",4]]],[11,"try_into","","",276,[[],["result",4]]],[11,"type_id","","",276,[[],["typeid",3]]],[11,"from_py","","",277,[[["python",3]]]],[11,"into_py","","",277,[[["python",3]]]],[11,"try_from","","",277,[[],[["result",4],["pydowncasterror",3]]]],[11,"try_from_exact","","",277,[[],[["result",4],["pydowncasterror",3]]]],[11,"try_from_unchecked","","",277,[[]]],[11,"from_owned_ptr_or_opt","","",277,[[["python",3]],["option",4]]],[11,"from_borrowed_ptr_or_opt","","",277,[[["python",3]],["option",4]]],[11,"type_object","","",277,[[["python",3]],["pytype",3]]],[11,"from","","",277,[[]]],[11,"into","","",277,[[]]],[11,"to_string","","",277,[[],["string",3]]],[11,"borrow","","",277,[[]]],[11,"borrow_mut","","",277,[[]]],[11,"try_from","","",277,[[],["result",4]]],[11,"try_into","","",277,[[],["result",4]]],[11,"type_id","","",277,[[],["typeid",3]]],[11,"from_py","","",278,[[["python",3]]]],[11,"into_py","","",278,[[["python",3]]]],[11,"try_from","","",278,[[],[["result",4],["pydowncasterror",3]]]],[11,"try_from_exact","","",278,[[],[["result",4],["pydowncasterror",3]]]],[11,"try_from_unchecked","","",278,[[]]],[11,"from_owned_ptr_or_opt","","",278,[[["python",3]],["option",4]]],[11,"from_borrowed_ptr_or_opt","","",278,[[["python",3]],["option",4]]],[11,"type_object","","",278,[[["python",3]],["pytype",3]]],[11,"from","","",278,[[]]],[11,"into","","",278,[[]]],[11,"to_string","","",278,[[],["string",3]]],[11,"borrow","","",278,[[]]],[11,"borrow_mut","","",278,[[]]],[11,"try_from","","",278,[[],["result",4]]],[11,"try_into","","",278,[[],["result",4]]],[11,"type_id","","",278,[[],["typeid",3]]],[11,"from_py","","",280,[[["python",3]]]],[11,"into_py","","",280,[[["python",3]]]],[11,"try_from","","",280,[[],[["result",4],["pydowncasterror",3]]]],[11,"try_from_exact","","",280,[[],[["result",4],["pydowncasterror",3]]]],[11,"try_from_unchecked","","",280,[[]]],[11,"from_owned_ptr_or_opt","","",280,[[["python",3]],["option",4]]],[11,"from_borrowed_ptr_or_opt","","",280,[[["python",3]],["option",4]]],[11,"type_object","","",280,[[["python",3]],["pytype",3]]],[11,"from","","",280,[[]]],[11,"into","","",280,[[]]],[11,"to_string","","",280,[[],["string",3]]],[11,"borrow","","",280,[[]]],[11,"borrow_mut","","",280,[[]]],[11,"try_from","","",280,[[],["result",4]]],[11,"try_into","","",280,[[],["result",4]]],[11,"type_id","","",280,[[],["typeid",3]]],[11,"from_py","","",279,[[["python",3]]]],[11,"into_py","","",279,[[["python",3]]]],[11,"try_from","","",279,[[],[["result",4],["pydowncasterror",3]]]],[11,"try_from_exact","","",279,[[],[["result",4],["pydowncasterror",3]]]],[11,"try_from_unchecked","","",279,[[]]],[11,"from_owned_ptr_or_opt","","",279,[[["python",3]],["option",4]]],[11,"from_borrowed_ptr_or_opt","","",279,[[["python",3]],["option",4]]],[11,"type_object","","",279,[[["python",3]],["pytype",3]]],[11,"from","","",279,[[]]],[11,"into","","",279,[[]]],[11,"to_string","","",279,[[],["string",3]]],[11,"borrow","","",279,[[]]],[11,"borrow_mut","","",279,[[]]],[11,"try_from","","",279,[[],["result",4]]],[11,"try_into","","",279,[[],["result",4]]],[11,"type_id","","",279,[[],["typeid",3]]],[11,"from_py","","",313,[[["python",3]]]],[11,"into_py","","",313,[[["python",3]]]],[11,"try_from","","",313,[[],[["result",4],["pydowncasterror",3]]]],[11,"try_from_exact","","",313,[[],[["result",4],["pydowncasterror",3]]]],[11,"try_from_unchecked","","",313,[[]]],[11,"from_owned_ptr_or_opt","","",313,[[["python",3]],["option",4]]],[11,"from_borrowed_ptr_or_opt","","",313,[[["python",3]],["option",4]]],[11,"type_object","","",313,[[["python",3]],["pytype",3]]],[11,"from","","",313,[[]]],[11,"into","","",313,[[]]],[11,"to_string","","",313,[[],["string",3]]],[11,"borrow","","",313,[[]]],[11,"borrow_mut","","",313,[[]]],[11,"try_from","","",313,[[],["result",4]]],[11,"try_into","","",313,[[],["result",4]]],[11,"type_id","","",313,[[],["typeid",3]]],[11,"from_py","","",281,[[["python",3]]]],[11,"into_py","","",281,[[["python",3]]]],[11,"try_from","","",281,[[],[["result",4],["pydowncasterror",3]]]],[11,"try_from_exact","","",281,[[],[["result",4],["pydowncasterror",3]]]],[11,"try_from_unchecked","","",281,[[]]],[11,"from_owned_ptr_or_opt","","",281,[[["python",3]],["option",4]]],[11,"from_borrowed_ptr_or_opt","","",281,[[["python",3]],["option",4]]],[11,"type_object","","",281,[[["python",3]],["pytype",3]]],[11,"from","","",281,[[]]],[11,"into","","",281,[[]]],[11,"to_string","","",281,[[],["string",3]]],[11,"borrow","","",281,[[]]],[11,"borrow_mut","","",281,[[]]],[11,"try_from","","",281,[[],["result",4]]],[11,"try_into","","",281,[[],["result",4]]],[11,"type_id","","",281,[[],["typeid",3]]],[11,"from_py","","",282,[[["python",3]]]],[11,"into_py","","",282,[[["python",3]]]],[11,"try_from","","",282,[[],[["result",4],["pydowncasterror",3]]]],[11,"try_from_exact","","",282,[[],[["result",4],["pydowncasterror",3]]]],[11,"try_from_unchecked","","",282,[[]]],[11,"from_owned_ptr_or_opt","","",282,[[["python",3]],["option",4]]],[11,"from_borrowed_ptr_or_opt","","",282,[[["python",3]],["option",4]]],[11,"type_object","","",282,[[["python",3]],["pytype",3]]],[11,"from","","",282,[[]]],[11,"into","","",282,[[]]],[11,"to_string","","",282,[[],["string",3]]],[11,"borrow","","",282,[[]]],[11,"borrow_mut","","",282,[[]]],[11,"try_from","","",282,[[],["result",4]]],[11,"try_into","","",282,[[],["result",4]]],[11,"type_id","","",282,[[],["typeid",3]]],[11,"from_py","","",283,[[["python",3]]]],[11,"into_py","","",283,[[["python",3]]]],[11,"from","","",283,[[]]],[11,"into","","",283,[[]]],[11,"into_iter","","",283,[[]]],[11,"borrow","","",283,[[]]],[11,"borrow_mut","","",283,[[]]],[11,"try_from","","",283,[[],["result",4]]],[11,"try_into","","",283,[[],["result",4]]],[11,"type_id","","",283,[[],["typeid",3]]],[11,"from_py","","",284,[[["python",3]]]],[11,"into_py","","",284,[[["python",3]]]],[11,"try_from","","",284,[[],[["result",4],["pydowncasterror",3]]]],[11,"try_from_exact","","",284,[[],[["result",4],["pydowncasterror",3]]]],[11,"try_from_unchecked","","",284,[[]]],[11,"from_owned_ptr_or_opt","","",284,[[["python",3]],["option",4]]],[11,"from_borrowed_ptr_or_opt","","",284,[[["python",3]],["option",4]]],[11,"type_object","","",284,[[["python",3]],["pytype",3]]],[11,"from","","",284,[[]]],[11,"into","","",284,[[]]],[11,"to_string","","",284,[[],["string",3]]],[11,"borrow","","",284,[[]]],[11,"borrow_mut","","",284,[[]]],[11,"try_from","","",284,[[],["result",4]]],[11,"try_into","","",284,[[],["result",4]]],[11,"type_id","","",284,[[],["typeid",3]]],[11,"from_py","","",314,[[["python",3]]]],[11,"into_py","","",314,[[["python",3]]]],[11,"try_from","","",314,[[],[["result",4],["pydowncasterror",3]]]],[11,"try_from_exact","","",314,[[],[["result",4],["pydowncasterror",3]]]],[11,"try_from_unchecked","","",314,[[]]],[11,"from_owned_ptr_or_opt","","",314,[[["python",3]],["option",4]]],[11,"from_borrowed_ptr_or_opt","","",314,[[["python",3]],["option",4]]],[11,"type_object","","",314,[[["python",3]],["pytype",3]]],[11,"from","","",314,[[]]],[11,"into","","",314,[[]]],[11,"to_string","","",314,[[],["string",3]]],[11,"borrow","","",314,[[]]],[11,"borrow_mut","","",314,[[]]],[11,"try_from","","",314,[[],["result",4]]],[11,"try_into","","",314,[[],["result",4]]],[11,"type_id","","",314,[[],["typeid",3]]],[11,"from_py","","",286,[[["python",3]]]],[11,"into_py","","",286,[[["python",3]]]],[11,"try_from","","",286,[[],[["result",4],["pydowncasterror",3]]]],[11,"try_from_exact","","",286,[[],[["result",4],["pydowncasterror",3]]]],[11,"try_from_unchecked","","",286,[[]]],[11,"from_owned_ptr_or_opt","","",286,[[["python",3]],["option",4]]],[11,"from_borrowed_ptr_or_opt","","",286,[[["python",3]],["option",4]]],[11,"from","","",286,[[]]],[11,"into","","",286,[[]]],[11,"borrow","","",286,[[]]],[11,"borrow_mut","","",286,[[]]],[11,"try_from","","",286,[[],["result",4]]],[11,"try_into","","",286,[[],["result",4]]],[11,"type_id","","",286,[[],["typeid",3]]],[11,"from_py","","",288,[[["python",3]]]],[11,"into_py","","",288,[[["python",3]]]],[11,"try_from","","",288,[[],[["result",4],["pydowncasterror",3]]]],[11,"try_from_exact","","",288,[[],[["result",4],["pydowncasterror",3]]]],[11,"try_from_unchecked","","",288,[[]]],[11,"from_owned_ptr_or_opt","","",288,[[["python",3]],["option",4]]],[11,"from_borrowed_ptr_or_opt","","",288,[[["python",3]],["option",4]]],[11,"type_object","","",288,[[["python",3]],["pytype",3]]],[11,"from","","",288,[[]]],[11,"into","","",288,[[]]],[11,"to_string","","",288,[[],["string",3]]],[11,"borrow","","",288,[[]]],[11,"borrow_mut","","",288,[[]]],[11,"try_from","","",288,[[],["result",4]]],[11,"try_into","","",288,[[],["result",4]]],[11,"type_id","","",288,[[],["typeid",3]]],[11,"from_py","","",287,[[["python",3]]]],[11,"into_py","","",287,[[["python",3]]]],[11,"try_from","","",287,[[],[["result",4],["pydowncasterror",3]]]],[11,"try_from_exact","","",287,[[],[["result",4],["pydowncasterror",3]]]],[11,"try_from_unchecked","","",287,[[]]],[11,"from_owned_ptr_or_opt","","",287,[[["python",3]],["option",4]]],[11,"from_borrowed_ptr_or_opt","","",287,[[["python",3]],["option",4]]],[11,"type_object","","",287,[[["python",3]],["pytype",3]]],[11,"from","","",287,[[]]],[11,"into","","",287,[[]]],[11,"to_string","","",287,[[],["string",3]]],[11,"borrow","","",287,[[]]],[11,"borrow_mut","","",287,[[]]],[11,"try_from","","",287,[[],["result",4]]],[11,"try_into","","",287,[[],["result",4]]],[11,"type_id","","",287,[[],["typeid",3]]],[11,"from_py","","",289,[[["python",3]]]],[11,"into_py","","",289,[[["python",3]]]],[11,"try_from","","",289,[[],[["result",4],["pydowncasterror",3]]]],[11,"try_from_exact","","",289,[[],[["result",4],["pydowncasterror",3]]]],[11,"try_from_unchecked","","",289,[[]]],[11,"from_owned_ptr_or_opt","","",289,[[["python",3]],["option",4]]],[11,"from_borrowed_ptr_or_opt","","",289,[[["python",3]],["option",4]]],[11,"type_object","","",289,[[["python",3]],["pytype",3]]],[11,"from","","",289,[[]]],[11,"into","","",289,[[]]],[11,"to_string","","",289,[[],["string",3]]],[11,"borrow","","",289,[[]]],[11,"borrow_mut","","",289,[[]]],[11,"try_from","","",289,[[],["result",4]]],[11,"try_into","","",289,[[],["result",4]]],[11,"type_id","","",289,[[],["typeid",3]]],[11,"from_py","","",271,[[["python",3]]]],[11,"into_py","","",271,[[["python",3]]]],[11,"from","","",271,[[]]],[11,"into","","",271,[[]]],[11,"borrow","","",271,[[]]],[11,"borrow_mut","","",271,[[]]],[11,"try_from","","",271,[[],["result",4]]],[11,"try_into","","",271,[[],["result",4]]],[11,"type_id","","",271,[[],["typeid",3]]],[11,"from_py","","",290,[[["python",3]]]],[11,"into_py","","",290,[[["python",3]]]],[11,"try_from","","",290,[[],[["result",4],["pydowncasterror",3]]]],[11,"try_from_exact","","",290,[[],[["result",4],["pydowncasterror",3]]]],[11,"try_from_unchecked","","",290,[[]]],[11,"from_owned_ptr_or_opt","","",290,[[["python",3]],["option",4]]],[11,"from_borrowed_ptr_or_opt","","",290,[[["python",3]],["option",4]]],[11,"type_object","","",290,[[["python",3]],["pytype",3]]],[11,"from","","",290,[[]]],[11,"into","","",290,[[]]],[11,"to_string","","",290,[[],["string",3]]],[11,"borrow","","",290,[[]]],[11,"borrow_mut","","",290,[[]]],[11,"try_from","","",290,[[],["result",4]]],[11,"try_into","","",290,[[],["result",4]]],[11,"type_id","","",290,[[],["typeid",3]]],[11,"from_py","","",291,[[["python",3]]]],[11,"into_py","","",291,[[["python",3]]]],[11,"try_from","","",291,[[],[["result",4],["pydowncasterror",3]]]],[11,"try_from_exact","","",291,[[],[["result",4],["pydowncasterror",3]]]],[11,"try_from_unchecked","","",291,[[]]],[11,"from_owned_ptr_or_opt","","",291,[[["python",3]],["option",4]]],[11,"from_borrowed_ptr_or_opt","","",291,[[["python",3]],["option",4]]],[11,"type_object","","",291,[[["python",3]],["pytype",3]]],[11,"from","","",291,[[]]],[11,"into","","",291,[[]]],[11,"to_string","","",291,[[],["string",3]]],[11,"borrow","","",291,[[]]],[11,"borrow_mut","","",291,[[]]],[11,"try_from","","",291,[[],["result",4]]],[11,"try_into","","",291,[[],["result",4]]],[11,"type_id","","",291,[[],["typeid",3]]],[11,"from_py","","",292,[[["python",3]]]],[11,"into_py","","",292,[[["python",3]]]],[11,"try_from","","",292,[[],[["result",4],["pydowncasterror",3]]]],[11,"try_from_exact","","",292,[[],[["result",4],["pydowncasterror",3]]]],[11,"try_from_unchecked","","",292,[[]]],[11,"from_owned_ptr_or_opt","","",292,[[["python",3]],["option",4]]],[11,"from_borrowed_ptr_or_opt","","",292,[[["python",3]],["option",4]]],[11,"type_object","","",292,[[["python",3]],["pytype",3]]],[11,"from","","",292,[[]]],[11,"into","","",292,[[]]],[11,"to_string","","",292,[[],["string",3]]],[11,"borrow","","",292,[[]]],[11,"borrow_mut","","",292,[[]]],[11,"try_from","","",292,[[],["result",4]]],[11,"try_into","","",292,[[],["result",4]]],[11,"type_id","","",292,[[],["typeid",3]]],[11,"as_ptr","pyo3","Gets the underlying FFI pointer, returns a borrowed pointer.",250,[[]]],[11,"as_ptr","","Gets the underlying FFI pointer, returns a borrowed pointer.",251,[[]]],[11,"as_ptr","pyo3::pycell","",255,[[]]],[11,"as_ptr","","",256,[[]]],[11,"as_ptr","","",257,[[]]],[11,"as_ptr","pyo3","",272,[[]]],[11,"as_ptr","pyo3::types","Gets the underlying FFI pointer, returns a borrowed pointer.",273,[[]]],[11,"as_ptr","","Gets the underlying FFI pointer, returns a borrowed pointer.",274,[[]]],[11,"as_ptr","","Gets the underlying FFI pointer, returns a borrowed pointer.",275,[[]]],[11,"as_ptr","","Gets the underlying FFI pointer, returns a borrowed pointer.",276,[[]]],[11,"as_ptr","","Gets the underlying FFI pointer, returns a borrowed pointer.",277,[[]]],[11,"as_ptr","","Gets the underlying FFI pointer, returns a borrowed pointer.",278,[[]]],[11,"as_ptr","","Gets the underlying FFI pointer, returns a borrowed pointer.",279,[[]]],[11,"as_ptr","","Gets the underlying FFI pointer, returns a borrowed pointer.",313,[[]]],[11,"as_ptr","","Gets the underlying FFI pointer, returns a borrowed pointer.",280,[[]]],[11,"as_ptr","","Gets the underlying FFI pointer, returns a borrowed pointer.",281,[[]]],[11,"as_ptr","","Gets the underlying FFI pointer, returns a borrowed pointer.",282,[[]]],[11,"as_ptr","","Gets the underlying FFI pointer, returns a borrowed pointer.",284,[[]]],[11,"as_ptr","pyo3::prelude","Gets the underlying FFI pointer, returns a borrowed pointer.",285,[[]]],[11,"as_ptr","pyo3::types","Gets the underlying FFI pointer, returns a borrowed pointer.",314,[[]]],[11,"as_ptr","","Gets the underlying FFI pointer, returns a borrowed pointer.",286,[[]]],[11,"as_ptr","","Gets the underlying FFI pointer, returns a borrowed pointer.",287,[[]]],[11,"as_ptr","","Gets the underlying FFI pointer, returns a borrowed pointer.",288,[[]]],[11,"as_ptr","","Gets the underlying FFI pointer, returns a borrowed pointer.",289,[[]]],[11,"as_ptr","","Gets the underlying FFI pointer, returns a borrowed pointer.",290,[[]]],[11,"as_ptr","","Gets the underlying FFI pointer, returns a borrowed pointer.",291,[[]]],[11,"as_ptr","","Gets the underlying FFI pointer, returns a borrowed pointer.",292,[[]]],[11,"into_ptr","pyo3","Gets the underlying FFI pointer, returns a owned pointer.",250,[[]]],[11,"into_ptr","","Gets the underlying FFI pointer, returns a owned pointer.",251,[[]]],[11,"to_object","","",0,[[["python",3]],["pyobject",3]]],[11,"to_object","","Converts `Py` instance -> PyObject.",250,[[["python",3]],["pyobject",3]]],[11,"to_object","","",251,[[["python",3]],["pyobject",3]]],[11,"to_object","","",272,[[["python",3]],["pyobject",3]]],[11,"to_object","pyo3::types","",273,[[["python",3]],["pyobject",3]]],[11,"to_object","","",274,[[["python",3]],["pyobject",3]]],[11,"to_object","","",275,[[["python",3]],["pyobject",3]]],[11,"to_object","","",276,[[["python",3]],["pyobject",3]]],[11,"to_object","","",277,[[["python",3]],["pyobject",3]]],[11,"to_object","","",278,[[["python",3]],["pyobject",3]]],[11,"to_object","","",279,[[["python",3]],["pyobject",3]]],[11,"to_object","","",313,[[["python",3]],["pyobject",3]]],[11,"to_object","","",280,[[["python",3]],["pyobject",3]]],[11,"to_object","","",281,[[["python",3]],["pyobject",3]]],[11,"to_object","","",282,[[["python",3]],["pyobject",3]]],[11,"to_object","","",284,[[["python",3]],["pyobject",3]]],[11,"to_object","pyo3::prelude","",285,[[["python",3]],["pyobject",3]]],[11,"to_object","pyo3::types","",314,[[["python",3]],["pyobject",3]]],[11,"to_object","","",287,[[["python",3]],["pyobject",3]]],[11,"to_object","","",288,[[["python",3]],["pyobject",3]]],[11,"to_object","","",289,[[["python",3]],["pyobject",3]]],[11,"to_object","","",271,[[["python",3]],["pyobject",3]]],[11,"to_object","","",290,[[["python",3]],["pyobject",3]]],[11,"to_object","","",291,[[["python",3]],["pyobject",3]]],[11,"to_object","","",292,[[["python",3]],["pyobject",3]]],[11,"from_py","pyo3","",251,[[["python",3]]]],[11,"from_py","","",251,[[["python",3]],["pyobject",3]]],[11,"from_py","","",250,[[["python",3]],[["pytuple",3],["py",3]]]],[11,"from_py","","",251,[[["python",3],["pyerr",3]]]],[11,"from_py","","",251,[[["pyref",3],["python",3]],["pyobject",3]]],[11,"from_py","","",251,[[["python",3],["pyrefmut",3]],["pyobject",3]]],[11,"from_py","","",251,[[["python",3]]]],[11,"from_py","","",251,[[["python",3]]]],[11,"from_py","","",251,[[["python",3]]]],[11,"from_py","","",251,[[["python",3]]]],[11,"from_py","","",251,[[["python",3],["hashset",3]]]],[11,"from_py","","",251,[[["python",3],["btreeset",3]]]],[11,"from_py","","",251,[[["python",3],["string",3]]]],[11,"from_py","","",250,[[["pytuple",3],["python",3]],[["pytuple",3],["py",3]]]],[11,"into_py","","Converts a `Py` instance to `PyObject`. Consumes `self`…",250,[[["python",3]],["pyobject",3]]],[11,"extract","pyo3::buffer","",7,[[["pyany",3]],[["pybuffer",3],["pyresult",6]]]],[11,"extract","pyo3::pycell","",256,[[["pyany",3]],["pyresult",6]]],[11,"extract","","",257,[[["pyany",3]],["pyresult",6]]],[11,"extract","pyo3","Extracts `Self` from the source `PyObject`.",250,[[["pyany",3]],["pyresult",6]]],[11,"extract","","Extracts `Self` from the source `PyObject`.",251,[[["pyany",3]],["pyresult",6]]],[11,"try_from","pyo3::pycell","",255,[[["pyany",3],["into",8]],[["result",4],["pydowncasterror",3]]]],[11,"try_from_exact","","",255,[[["pyany",3],["into",8]],[["result",4],["pydowncasterror",3]]]],[11,"try_from_unchecked","","",255,[[["pyany",3],["into",8]]]],[11,"try_from","pyo3::types","",286,[[["pyany",3],["into",8]],[["result",4],["pysequence",3],["pydowncasterror",3]]]],[11,"try_from_exact","","",286,[[["pyany",3],["into",8]],[["result",4],["pysequence",3],["pydowncasterror",3]]]],[11,"try_from_unchecked","","",286,[[["pyany",3],["into",8]],["pysequence",3]]],[11,"try_into","pyo3","",272,[[],[["result",4],["pydowncasterror",3]]]],[11,"try_into_exact","","",272,[[],[["result",4],["pydowncasterror",3]]]],[11,"as_ref","","",250,[[["python",3]]]],[11,"as_ref","","",251,[[["python",3]],["pyany",3]]],[11,"init_class","pyo3::pyclass_init","",309,[[]]],[11,"init_class","","",264,[[]]],[11,"new","pyo3::pyclass_slots","",310,[[]]],[11,"new","","",311,[[]]],[11,"clear_dict","","",311,[[["python",3]]]],[11,"new","","",310,[[]]],[11,"new","","",312,[[]]],[11,"clear_weakrefs","","",312,[[["python",3]]]],[11,"get_super","pyo3::pycell","",255,[[],["option",4]]],[11,"py_init","","",255,[[]]],[11,"py_drop","","",255,[[["python",3]]]],[11,"type_object_raw","pyo3","",272,[[["python",3]]]],[11,"is_instance","","",272,[[["pyany",3]]]],[11,"type_object_raw","pyo3::types","",273,[[["python",3]]]],[11,"is_instance","","",273,[[["pyany",3]]]],[11,"type_object_raw","","",274,[[["python",3]]]],[11,"is_instance","","",274,[[["pyany",3]]]],[11,"type_object_raw","","",275,[[["python",3]]]],[11,"is_instance","","",275,[[["pyany",3]]]],[11,"type_object_raw","","",276,[[["python",3]]]],[11,"is_instance","","",276,[[["pyany",3]]]],[11,"type_object_raw","","",277,[[["python",3]]]],[11,"is_instance","","",277,[[["pyany",3]]]],[11,"type_object_raw","","",278,[[["python",3]]]],[11,"is_instance","","",278,[[["pyany",3]]]],[11,"type_object_raw","","",279,[[["python",3]]]],[11,"is_instance","","",279,[[["pyany",3]]]],[11,"type_object_raw","","",313,[[["python",3]]]],[11,"is_instance","","",313,[[["pyany",3]]]],[11,"type_object_raw","","",280,[[["python",3]]]],[11,"is_instance","","",280,[[["pyany",3]]]],[11,"type_object_raw","","",281,[[["python",3]]]],[11,"is_instance","","",281,[[["pyany",3]]]],[11,"type_object_raw","","",282,[[["python",3]]]],[11,"is_instance","","",282,[[["pyany",3]]]],[11,"type_object_raw","","",284,[[["python",3]]]],[11,"is_instance","","",284,[[["pyany",3]]]],[11,"type_object_raw","pyo3::prelude","",285,[[["python",3]]]],[11,"is_instance","","",285,[[["pyany",3]]]],[11,"type_object_raw","pyo3::types","",314,[[["python",3]]]],[11,"is_instance","","",314,[[["pyany",3]]]],[11,"type_object_raw","","",287,[[["python",3]]]],[11,"is_instance","","",287,[[["pyany",3]]]],[11,"type_object_raw","","",288,[[["python",3]]]],[11,"is_instance","","",288,[[["pyany",3]]]],[11,"type_object_raw","","",289,[[["python",3]]]],[11,"is_instance","","",289,[[["pyany",3]]]],[11,"type_object_raw","","",290,[[["python",3]]]],[11,"is_instance","","",290,[[["pyany",3]]]],[11,"type_object_raw","","",291,[[["python",3]]]],[11,"is_instance","","",291,[[["pyany",3]]]],[11,"type_object_raw","","",292,[[["python",3]]]],[11,"is_instance","","",292,[[["pyany",3]]]],[11,"type_object","pyo3::exceptions","",145,[[["python",3]],["pytype",3]]],[11,"type_object","","",146,[[["python",3]],["pytype",3]]],[11,"type_object","","",147,[[["python",3]],["pytype",3]]],[11,"type_object","","",148,[[["python",3]],["pytype",3]]],[11,"type_object","","",149,[[["python",3]],["pytype",3]]],[11,"type_object","","",150,[[["python",3]],["pytype",3]]],[11,"type_object","","",151,[[["python",3]],["pytype",3]]],[11,"type_object","","",152,[[["python",3]],["pytype",3]]],[11,"type_object","","",153,[[["python",3]],["pytype",3]]],[11,"type_object","","",154,[[["python",3]],["pytype",3]]],[11,"type_object","","",155,[[["python",3]],["pytype",3]]],[11,"type_object","","",156,[[["python",3]],["pytype",3]]],[11,"type_object","","",157,[[["python",3]],["pytype",3]]],[11,"type_object","","",158,[[["python",3]],["pytype",3]]],[11,"type_object","","",159,[[["python",3]],["pytype",3]]],[11,"type_object","","",160,[[["python",3]],["pytype",3]]],[11,"type_object","","",161,[[["python",3]],["pytype",3]]],[11,"type_object","","",162,[[["python",3]],["pytype",3]]],[11,"type_object","","",163,[[["python",3]],["pytype",3]]],[11,"type_object","","",164,[[["python",3]],["pytype",3]]],[11,"type_object","","",165,[[["python",3]],["pytype",3]]],[11,"type_object","","",166,[[["python",3]],["pytype",3]]],[11,"type_object","","",167,[[["python",3]],["pytype",3]]],[11,"type_object","","",168,[[["python",3]],["pytype",3]]],[11,"type_object","","",169,[[["python",3]],["pytype",3]]],[11,"type_object","","",170,[[["python",3]],["pytype",3]]],[11,"type_object","","",171,[[["python",3]],["pytype",3]]],[11,"type_object","","",172,[[["python",3]],["pytype",3]]],[11,"type_object","","",173,[[["python",3]],["pytype",3]]],[11,"type_object","","",174,[[["python",3]],["pytype",3]]],[11,"type_object","","",175,[[["python",3]],["pytype",3]]],[11,"type_object","","",176,[[["python",3]],["pytype",3]]],[11,"type_object","","",177,[[["python",3]],["pytype",3]]],[11,"type_object","","",178,[[["python",3]],["pytype",3]]],[11,"type_object","","",179,[[["python",3]],["pytype",3]]],[11,"type_object","","",180,[[["python",3]],["pytype",3]]],[11,"type_object","","",181,[[["python",3]],["pytype",3]]],[11,"type_object","","",182,[[["python",3]],["pytype",3]]],[11,"type_object","","",183,[[["python",3]],["pytype",3]]],[11,"type_object","","",184,[[["python",3]],["pytype",3]]],[11,"type_object","","",185,[[["python",3]],["pytype",3]]],[11,"type_object","","",186,[[["python",3]],["pytype",3]]],[11,"type_object","","",187,[[["python",3]],["pytype",3]]],[11,"type_object","","",188,[[["python",3]],["pytype",3]]],[11,"type_object","","",189,[[["python",3]],["pytype",3]]],[11,"type_object","","",190,[[["python",3]],["pytype",3]]],[11,"type_object","","",191,[[["python",3]],["pytype",3]]],[11,"type_object","","",192,[[["python",3]],["pytype",3]]],[11,"type_object","","",193,[[["python",3]],["pytype",3]]],[11,"type_object","","",194,[[["python",3]],["pytype",3]]],[11,"type_object","","",195,[[["python",3]],["pytype",3]]],[11,"type_object","","",196,[[["python",3]],["pytype",3]]],[11,"type_object","","",197,[[["python",3]],["pytype",3]]],[11,"type_object","pyo3::exceptions::asyncio","",135,[[["python",3]],["pytype",3]]],[11,"type_object","","",136,[[["python",3]],["pytype",3]]],[11,"type_object","","",137,[[["python",3]],["pytype",3]]],[11,"type_object","","",138,[[["python",3]],["pytype",3]]],[11,"type_object","","",139,[[["python",3]],["pytype",3]]],[11,"type_object","","",140,[[["python",3]],["pytype",3]]],[11,"type_object","","",141,[[["python",3]],["pytype",3]]],[11,"type_object","pyo3::exceptions::socket","",142,[[["python",3]],["pytype",3]]],[11,"type_object","","",143,[[["python",3]],["pytype",3]]],[11,"type_object","","",144,[[["python",3]],["pytype",3]]],[11,"type_object","pyo3::panic","",253,[[["python",3]],["pytype",3]]],[11,"type_object","pyo3::pycell","",258,[[["python",3]],["pytype",3]]],[11,"type_object","","",259,[[["python",3]],["pytype",3]]],[11,"get_year","pyo3::types","",277,[[]]],[11,"get_month","","",277,[[]]],[11,"get_day","","",277,[[]]],[11,"get_year","","",278,[[]]],[11,"get_month","","",278,[[]]],[11,"get_day","","",278,[[]]],[11,"get_days","","",280,[[]]],[11,"get_seconds","","",280,[[]]],[11,"get_microseconds","","",280,[[]]],[11,"get_hour","","",278,[[]]],[11,"get_minute","","",278,[[]]],[11,"get_second","","",278,[[]]],[11,"get_microsecond","","",278,[[]]],[11,"get_fold","","",278,[[]]],[11,"get_hour","","",279,[[]]],[11,"get_minute","","",279,[[]]],[11,"get_second","","",279,[[]]],[11,"get_microsecond","","",279,[[]]],[11,"get_fold","","",279,[[]]],[11,"drop","pyo3::buffer","",7,[[]]],[11,"drop","pyo3","",248,[[]]],[11,"drop","","",249,[[]]],[11,"drop","","",250,[[]]],[11,"drop","","",251,[[]]],[11,"drop","pyo3::pycell","",256,[[]]],[11,"drop","","",257,[[]]],[11,"drop","pyo3::types","",283,[[]]],[11,"as_mut","pyo3::pycell","",257,[[]]],[11,"as_ref","","",255,[[],["pyany",3]]],[11,"as_ref","","",256,[[]]],[11,"as_ref","","",257,[[]]],[11,"as_ref","pyo3::types","",273,[[],["pyany",3]]],[11,"as_ref","","",274,[[],["pyany",3]]],[11,"as_ref","","",275,[[],["pyany",3]]],[11,"as_ref","","",276,[[],["pyany",3]]],[11,"as_ref","","",277,[[],["pyany",3]]],[11,"as_ref","","",278,[[],["pyany",3]]],[11,"as_ref","","",279,[[],["pyany",3]]],[11,"as_ref","","",313,[[],["pyany",3]]],[11,"as_ref","","",280,[[],["pyany",3]]],[11,"as_ref","","",281,[[],["pyany",3]]],[11,"as_ref","","",282,[[],["pyany",3]]],[11,"as_ref","","",284,[[],["pyany",3]]],[11,"as_ref","pyo3::prelude","",285,[[],["pyany",3]]],[11,"as_ref","pyo3::types","",314,[[],["pyany",3]]],[11,"as_ref","","",286,[[],["pyany",3]]],[11,"as_ref","","",287,[[],["pyany",3]]],[11,"as_ref","","",288,[[],["pyany",3]]],[11,"as_ref","","",289,[[],["pyany",3]]],[11,"as_ref","","",290,[[],["pyany",3]]],[11,"as_ref","","",291,[[],["pyany",3]]],[11,"as_ref","","",292,[[],["pyany",3]]],[11,"from","pyo3","",0,[[["pydowncasterror",3]],["pyerr",3]]],[11,"from","","",0,[[["error",3]],["pyerr",3]]],[11,"from","","",0,[[["intoinnererror",3]],["pyerr",3]]],[11,"from","","",0,[[["infallible",4]],["pyerr",3]]],[11,"from","","",0,[[["tryfromsliceerror",3]],["pyerr",3]]],[11,"from","","",0,[[["parseinterror",3]],["pyerr",3]]],[11,"from","","",0,[[["parsefloaterror",3]],["pyerr",3]]],[11,"from","","",0,[[["tryfrominterror",3]],["pyerr",3]]],[11,"from","","",0,[[["parseboolerror",3]],["pyerr",3]]],[11,"from","","",0,[[["intostringerror",3]],["pyerr",3]]],[11,"from","","",0,[[["nulerror",3]],["pyerr",3]]],[11,"from","","",0,[[["utf8error",3]],["pyerr",3]]],[11,"from","","",0,[[["fromutf8error",3]],["pyerr",3]]],[11,"from","","",0,[[["fromutf16error",3]],["pyerr",3]]],[11,"from","","",0,[[["decodeutf16error",3]],["pyerr",3]]],[11,"from","","",0,[[["addrparseerror",3]],["pyerr",3]]],[11,"from","","",0,[[["baseexception",3]],["pyerr",3]]],[11,"from","","",0,[[["exception",3]],["pyerr",3]]],[11,"from","","",0,[[["stopasynciteration",3]],["pyerr",3]]],[11,"from","","",0,[[["stopiteration",3]],["pyerr",3]]],[11,"from","","",0,[[["generatorexit",3]],["pyerr",3]]],[11,"from","","",0,[[["arithmeticerror",3]],["pyerr",3]]],[11,"from","","",0,[[["lookuperror",3]],["pyerr",3]]],[11,"from","","",0,[[["assertionerror",3]],["pyerr",3]]],[11,"from","","",0,[[["attributeerror",3]],["pyerr",3]]],[11,"from","","",0,[[["buffererror",3]],["pyerr",3]]],[11,"from","","",0,[[["eoferror",3]],["pyerr",3]]],[11,"from","","",0,[[["floatingpointerror",3]],["pyerr",3]]],[11,"from","","",0,[[["oserror",3]],["pyerr",3]]],[11,"from","","",0,[[["importerror",3]],["pyerr",3]]],[11,"from","","",0,[[["modulenotfounderror",3]],["pyerr",3]]],[11,"from","","",0,[[["indexerror",3]],["pyerr",3]]],[11,"from","","",0,[[["keyerror",3]],["pyerr",3]]],[11,"from","","",0,[[["keyboardinterrupt",3]],["pyerr",3]]],[11,"from","","",0,[[["memoryerror",3]],["pyerr",3]]],[11,"from","","",0,[[["nameerror",3]],["pyerr",3]]],[11,"from","","",0,[[["overflowerror",3]],["pyerr",3]]],[11,"from","","",0,[[["runtimeerror",3]],["pyerr",3]]],[11,"from","","",0,[[["recursionerror",3]],["pyerr",3]]],[11,"from","","",0,[[["notimplementederror",3]],["pyerr",3]]],[11,"from","","",0,[[["syntaxerror",3]],["pyerr",3]]],[11,"from","","",0,[[["referenceerror",3]],["pyerr",3]]],[11,"from","","",0,[[["systemerror",3]],["pyerr",3]]],[11,"from","","",0,[[["systemexit",3]],["pyerr",3]]],[11,"from","","",0,[[["typeerror",3]],["pyerr",3]]],[11,"from","","",0,[[["unboundlocalerror",3]],["pyerr",3]]],[11,"from","","",0,[[["unicodeerror",3]],["pyerr",3]]],[11,"from","","",0,[[["unicodedecodeerror",3]],["pyerr",3]]],[11,"from","","",0,[[["unicodeencodeerror",3]],["pyerr",3]]],[11,"from","","",0,[[["unicodetranslateerror",3]],["pyerr",3]]],[11,"from","","",0,[[["valueerror",3]],["pyerr",3]]],[11,"from","","",0,[[["zerodivisionerror",3]],["pyerr",3]]],[11,"from","","",0,[[["blockingioerror",3]],["pyerr",3]]],[11,"from","","",0,[[["brokenpipeerror",3]],["pyerr",3]]],[11,"from","","",0,[[["childprocesserror",3]],["pyerr",3]]],[11,"from","","",0,[[["connectionerror",3]],["pyerr",3]]],[11,"from","","",0,[[["connectionabortederror",3]],["pyerr",3]]],[11,"from","","",0,[[["connectionrefusederror",3]],["pyerr",3]]],[11,"from","","",0,[[["connectionreseterror",3]],["pyerr",3]]],[11,"from","","",0,[[["fileexistserror",3]],["pyerr",3]]],[11,"from","","",0,[[["filenotfounderror",3]],["pyerr",3]]],[11,"from","","",0,[[["interruptederror",3]],["pyerr",3]]],[11,"from","","",0,[[["isadirectoryerror",3]],["pyerr",3]]],[11,"from","","",0,[[["notadirectoryerror",3]],["pyerr",3]]],[11,"from","","",0,[[["permissionerror",3]],["pyerr",3]]],[11,"from","","",0,[[["processlookuperror",3]],["pyerr",3]]],[11,"from","","",0,[[["timeouterror",3]],["pyerr",3]]],[11,"from","","",0,[[["environmenterror",3]],["pyerr",3]]],[11,"from","","",0,[[["ioerror",3]],["pyerr",3]]],[11,"from","","",0,[[["cancellederror",3]],["pyerr",3]]],[11,"from","","",0,[[["invalidstateerror",3]],["pyerr",3]]],[11,"from","","",0,[[["timeouterror",3]],["pyerr",3]]],[11,"from","","",0,[[["incompletereaderror",3]],["pyerr",3]]],[11,"from","","",0,[[["limitoverrunerror",3]],["pyerr",3]]],[11,"from","","",0,[[["queueempty",3]],["pyerr",3]]],[11,"from","","",0,[[["queuefull",3]],["pyerr",3]]],[11,"from","","",0,[[["herror",3]],["pyerr",3]]],[11,"from","","",0,[[["gaierror",3]],["pyerr",3]]],[11,"from","","",0,[[["timeout",3]],["pyerr",3]]],[11,"from","","",250,[[]]],[11,"from","","",250,[[["pycell",3]]]],[11,"from","","",250,[[["pyref",3]]]],[11,"from","","",250,[[["pyrefmut",3]]]],[11,"from","","",251,[[["py",3]]]],[11,"from","","",251,[[]]],[11,"from","","",251,[[]]],[11,"from","","",0,[[["panicexception",3]],["pyerr",3]]],[11,"from","","",0,[[["pyborrowerror",3]],["pyerr",3]]],[11,"from","","",0,[[["pyborrowmuterror",3]],["pyerr",3]]],[11,"from","pyo3::pyclass_init","",264,[[],["pyclassinitializer",3]]],[11,"from","","",264,[[],["pyclassinitializer",3]]],[11,"into","pyo3","",0,[[],["pyresult",6]]],[11,"into","pyo3::exceptions","",145,[[],["pyresult",6]]],[11,"into","","",146,[[],["pyresult",6]]],[11,"into","","",147,[[],["pyresult",6]]],[11,"into","","",148,[[],["pyresult",6]]],[11,"into","","",149,[[],["pyresult",6]]],[11,"into","","",150,[[],["pyresult",6]]],[11,"into","","",151,[[],["pyresult",6]]],[11,"into","","",152,[[],["pyresult",6]]],[11,"into","","",153,[[],["pyresult",6]]],[11,"into","","",154,[[],["pyresult",6]]],[11,"into","","",155,[[],["pyresult",6]]],[11,"into","","",156,[[],["pyresult",6]]],[11,"into","","",157,[[],["pyresult",6]]],[11,"into","","",158,[[],["pyresult",6]]],[11,"into","","",159,[[],["pyresult",6]]],[11,"into","","",160,[[],["pyresult",6]]],[11,"into","","",161,[[],["pyresult",6]]],[11,"into","","",162,[[],["pyresult",6]]],[11,"into","","",163,[[],["pyresult",6]]],[11,"into","","",164,[[],["pyresult",6]]],[11,"into","","",165,[[],["pyresult",6]]],[11,"into","","",166,[[],["pyresult",6]]],[11,"into","","",167,[[],["pyresult",6]]],[11,"into","","",168,[[],["pyresult",6]]],[11,"into","","",169,[[],["pyresult",6]]],[11,"into","","",170,[[],["pyresult",6]]],[11,"into","","",171,[[],["pyresult",6]]],[11,"into","","",172,[[],["pyresult",6]]],[11,"into","","",173,[[],["pyresult",6]]],[11,"into","","",174,[[],["pyresult",6]]],[11,"into","","",175,[[],["pyresult",6]]],[11,"into","","",176,[[],["pyresult",6]]],[11,"into","","",177,[[],["pyresult",6]]],[11,"into","","",178,[[],["pyresult",6]]],[11,"into","","",179,[[],["pyresult",6]]],[11,"into","","",180,[[],["pyresult",6]]],[11,"into","","",181,[[],["pyresult",6]]],[11,"into","","",182,[[],["pyresult",6]]],[11,"into","","",183,[[],["pyresult",6]]],[11,"into","","",184,[[],["pyresult",6]]],[11,"into","","",185,[[],["pyresult",6]]],[11,"into","","",186,[[],["pyresult",6]]],[11,"into","","",187,[[],["pyresult",6]]],[11,"into","","",188,[[],["pyresult",6]]],[11,"into","","",189,[[],["pyresult",6]]],[11,"into","","",190,[[],["pyresult",6]]],[11,"into","","",191,[[],["pyresult",6]]],[11,"into","","",192,[[],["pyresult",6]]],[11,"into","","",193,[[],["pyresult",6]]],[11,"into","","",194,[[],["pyresult",6]]],[11,"into","","",195,[[],["pyresult",6]]],[11,"into","","",196,[[],["pyresult",6]]],[11,"into","","",197,[[],["pyresult",6]]],[11,"into","pyo3::exceptions::asyncio","",135,[[],["pyresult",6]]],[11,"into","","",136,[[],["pyresult",6]]],[11,"into","","",137,[[],["pyresult",6]]],[11,"into","","",138,[[],["pyresult",6]]],[11,"into","","",139,[[],["pyresult",6]]],[11,"into","","",140,[[],["pyresult",6]]],[11,"into","","",141,[[],["pyresult",6]]],[11,"into","pyo3::exceptions::socket","",142,[[],["pyresult",6]]],[11,"into","","",143,[[],["pyresult",6]]],[11,"into","","",144,[[],["pyresult",6]]],[11,"into","pyo3::panic","",253,[[],["pyresult",6]]],[11,"into","pyo3::pycell","",258,[[],["pyresult",6]]],[11,"into","","",259,[[],["pyresult",6]]],[11,"next","pyo3::types","Retrieves the next item from an iterator.",283,[[],["option",4]]],[11,"clone","pyo3::buffer","",2,[[],["elementtype",4]]],[11,"clone","pyo3::class::gc","",36,[[],["pyvisit",3]]],[11,"clone","pyo3::class::methods","",53,[[],["pymethodtype",4]]],[11,"clone","","",48,[[],["pymethoddef",3]]],[11,"clone","","",49,[[],["pyclassattributedef",3]]],[11,"clone","","",50,[[],["pygetterdef",3]]],[11,"clone","","",51,[[],["pysetterdef",3]]],[11,"clone","pyo3::ffi","",240,[[],["pymemallocatordomain",4]]],[11,"clone","","",230,[[],["pymemallocatorex",3]]],[11,"clone","","",216,[[],["pyobject",3]]],[11,"clone","","",217,[[],["pyvarobject",3]]],[11,"clone","","",218,[[],["py_buffer",3]]],[11,"clone","","",219,[[],["pynumbermethods",3]]],[11,"clone","","",220,[[],["pysequencemethods",3]]],[11,"clone","","",221,[[],["pymappingmethods",3]]],[11,"clone","","",222,[[],["pyasyncmethods",3]]],[11,"clone","","",223,[[],["pybufferprocs",3]]],[11,"clone","","",224,[[],["pytypeobject",3]]],[11,"clone","","",225,[[],["pyheaptypeobject",3]]],[11,"clone","","",226,[[],["pytype_slot",3]]],[11,"clone","","",227,[[],["pytype_spec",3]]],[11,"clone","","",228,[[],["pyobjectarenaallocator",3]]],[11,"clone","","",229,[[],["pyhash_funcdef",3]]],[11,"clone","","",200,[[],["py_complex",3]]],[11,"clone","","",201,[[],["pycomplexobject",3]]],[11,"clone","","",211,[[],["pylistobject",3]]],[11,"clone","","",212,[[],["pymethoddef",3]]],[11,"clone","","",213,[[],["pymoduledef_base",3]]],[11,"clone","","",214,[[],["pymoduledef_slot",3]]],[11,"clone","","",215,[[],["pymoduledef",3]]],[11,"clone","","",207,[[],["pygetsetdef",3]]],[11,"clone","","",210,[[],["pygenobject",3]]],[11,"clone","","",237,[[],["pystructsequence_field",3]]],[11,"clone","","",238,[[],["pystructsequence_desc",3]]],[11,"clone","","",231,[[],["pyinterpreterstate",3]]],[11,"clone","","",232,[[],["pythreadstate",3]]],[11,"clone","","",241,[[],["pygilstate_state",4]]],[11,"clone","","",233,[[],["pycompilerflags",3]]],[11,"clone","","",198,[[],["pycodeobject",3]]],[11,"clone","","",199,[[],["pyfuturefeatures",3]]],[11,"clone","pyo3::ffi::structmember","",242,[[],["pymemberdef",3]]],[11,"clone","pyo3::ffi::frameobject","",243,[[],["pytryblock",3]]],[11,"clone","","",244,[[],["pyframeobject",3]]],[11,"clone","pyo3::ffi","",202,[[],["pydatetime_capi",3]]],[11,"clone","","",203,[[],["pydatetime_date",3]]],[11,"clone","","",204,[[],["pydatetime_time",3]]],[11,"clone","","",205,[[],["pydatetime_datetime",3]]],[11,"clone","","",206,[[],["pydatetime_delta",3]]],[11,"clone","pyo3","",250,[[]]],[11,"clone","","",251,[[]]],[11,"clone","","",267,[[],["python",3]]],[11,"default","pyo3::class::basic","",9,[[],["pyobjectmethods",3]]],[11,"default","pyo3::class::descr","",28,[[],["pydescrmethods",3]]],[11,"default","pyo3::class::gc","",34,[[],["pygcmethods",3]]],[11,"default","pyo3::class::iter","",37,[[],["pyitermethods",3]]],[11,"default","pyo3::ffi","",219,[[]]],[11,"default","","",220,[[]]],[11,"default","","",221,[[]]],[11,"default","","",222,[[]]],[11,"default","","",223,[[]]],[11,"default","","",225,[[]]],[11,"default","","",226,[[],["pytype_slot",3]]],[11,"default","","",227,[[],["pytype_spec",3]]],[11,"default","","",228,[[]]],[11,"default","","",229,[[]]],[11,"default","","",212,[[],["pymethoddef",3]]],[11,"eq","pyo3::buffer","",2,[[["elementtype",4]]]],[11,"ne","","",2,[[["elementtype",4]]]],[11,"eq","pyo3","",250,[[["py",3]]]],[11,"eq","","Checks for pointer identity, not equivalent to Python\'s…",251,[[["pyobject",3]]]],[11,"eq","","",272,[[["pyany",3]]]],[11,"eq","pyo3::types","",273,[[["pybool",3]]]],[11,"eq","","",274,[[["pybytearray",3]]]],[11,"eq","","",275,[[["pybytes",3]]]],[11,"eq","","",276,[[["pycomplex",3]]]],[11,"eq","","",277,[[["pydate",3]]]],[11,"eq","","",278,[[["pydatetime",3]]]],[11,"eq","","",279,[[["pytime",3]]]],[11,"eq","","",313,[[["pytzinfo",3]]]],[11,"eq","","",280,[[["pydelta",3]]]],[11,"eq","","",281,[[["pydict",3]]]],[11,"eq","","",282,[[["pyfloat",3]]]],[11,"eq","","",284,[[["pylist",3]]]],[11,"eq","pyo3::prelude","",285,[[["pymodule",3]]]],[11,"eq","pyo3::types","",314,[[["pylong",3]]]],[11,"eq","","",286,[[["pysequence",3]]]],[11,"eq","","",287,[[["pyset",3]]]],[11,"eq","","",288,[[["pyfrozenset",3]]]],[11,"eq","","",289,[[["pyslice",3]]]],[11,"eq","","",290,[[["pystring",3]]]],[11,"eq","","",291,[[["pytuple",3]]]],[11,"eq","","",292,[[["pytype",3]]]],[11,"deref","pyo3::ffi","",301,[[],["pydatetime_capi",3]]],[11,"deref","pyo3::pycell","",255,[[],["pyany",3]]],[11,"deref","","",256,[[]]],[11,"deref","","",257,[[]]],[11,"deref","pyo3::types","",273,[[],["pyany",3]]],[11,"deref","","",274,[[],["pyany",3]]],[11,"deref","","",275,[[],["pyany",3]]],[11,"deref","","",276,[[],["pyany",3]]],[11,"deref","","",277,[[],["pyany",3]]],[11,"deref","","",278,[[],["pyany",3]]],[11,"deref","","",279,[[],["pyany",3]]],[11,"deref","","",313,[[],["pyany",3]]],[11,"deref","","",280,[[],["pyany",3]]],[11,"deref","","",281,[[],["pyany",3]]],[11,"deref","","",282,[[],["pyany",3]]],[11,"deref","","",284,[[],["pyany",3]]],[11,"deref","pyo3::prelude","",285,[[],["pyany",3]]],[11,"deref","pyo3::types","",314,[[],["pyany",3]]],[11,"deref","","",286,[[],["pyany",3]]],[11,"deref","","",287,[[],["pyany",3]]],[11,"deref","","",288,[[],["pyany",3]]],[11,"deref","","",289,[[],["pyany",3]]],[11,"deref","","",290,[[],["pyany",3]]],[11,"deref","","",291,[[],["pyany",3]]],[11,"deref","","",292,[[],["pyany",3]]],[11,"deref_mut","pyo3::pycell","",257,[[]]],[11,"fmt","pyo3::class::basic","",10,[[["formatter",3]],["result",6]]],[11,"fmt","pyo3::class::methods","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","pyo3","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",299,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pyo3::ffi","",216,[[["formatter",3]],["result",6]]],[11,"fmt","","",217,[[["formatter",3]],["result",6]]],[11,"fmt","","",223,[[["formatter",3]],["result",6]]],[11,"fmt","","",224,[[["formatter",3]],["result",6]]],[11,"fmt","","",208,[[["formatter",3]],["result",6]]],[11,"fmt","","",234,[[["formatter",3]],["result",6]]],[11,"fmt","","",235,[[["formatter",3]],["result",6]]],[11,"fmt","","",207,[[["formatter",3]],["result",6]]],[11,"fmt","","",241,[[["formatter",3]],["result",6]]],[11,"fmt","","",202,[[["formatter",3]],["result",6]]],[11,"fmt","","",203,[[["formatter",3]],["result",6]]],[11,"fmt","","",204,[[["formatter",3]],["result",6]]],[11,"fmt","","",205,[[["formatter",3]],["result",6]]],[11,"fmt","","",206,[[["formatter",3]],["result",6]]],[11,"fmt","","",301,[[["formatter",3]],["result",6]]],[11,"fmt","pyo3","",250,[[["formatter",3]],["result",6]]],[11,"fmt","","",251,[[["formatter",3]],["result",6]]],[11,"fmt","pyo3::pycell","",255,[[["formatter",3]],["result",6]]],[11,"fmt","","",256,[[["formatter",3]],["result",6]]],[11,"fmt","","",257,[[["formatter",3]],["result",6]]],[11,"fmt","","",258,[[["formatter",3]],["result",6]]],[11,"fmt","","",259,[[["formatter",3]],["result",6]]],[11,"fmt","pyo3","",272,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pyo3::types","",273,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",274,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",275,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",276,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",277,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",278,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",279,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",313,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",280,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",281,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",282,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",284,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pyo3::prelude","",285,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pyo3::types","",314,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",287,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",288,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",289,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",290,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",291,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",292,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pyo3::pycell","",258,[[["formatter",3]],["result",6]]],[11,"fmt","","",259,[[["formatter",3]],["result",6]]],[11,"fmt","pyo3","",272,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pyo3::types","",273,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",274,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",275,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",276,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",277,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",278,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",279,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",313,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",280,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",281,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",282,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",284,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pyo3::prelude","",285,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pyo3::types","",314,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",287,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",288,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",289,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",290,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",291,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",292,[[["formatter",3]],[["error",3],["result",4]]]],[11,"index","","",275,[[]]],[11,"try_from","pyo3::pycell","",256,[[["pycell",3]],["result",4]]],[11,"try_from","","",257,[[["pycell",3]],["result",4]]],[11,"try_from","pyo3::pyclass_init","",264,[[["pyresult",6]],["pyresult",6]]],[11,"py","pyo3","",298,[[],["python",3]]],[11,"unchecked_downcast","","Cast `&PyAny` to `&Self` without no type checking.",298,[[["pyany",3]]]]],"p":[[3,"PyErr"],[4,"PyErrValue"],[4,"ElementType"],[13,"SignedInteger"],[13,"UnsignedInteger"],[13,"Float"],[8,"Element"],[3,"PyBuffer"],[3,"ReadOnlyCell"],[3,"PyObjectMethods"],[4,"CompareOp"],[8,"PyObjectProtocol"],[8,"PyObjectGetAttrProtocol"],[8,"PyObjectSetAttrProtocol"],[8,"PyObjectDelAttrProtocol"],[8,"PyObjectStrProtocol"],[8,"PyObjectReprProtocol"],[8,"PyObjectFormatProtocol"],[8,"PyObjectHashProtocol"],[8,"PyObjectBoolProtocol"],[8,"PyObjectBytesProtocol"],[8,"PyObjectRichcmpProtocol"],[8,"PyBufferProtocol"],[8,"PyBufferGetBufferProtocol"],[8,"PyBufferReleaseBufferProtocol"],[8,"PyContextProtocol"],[8,"PyContextEnterProtocol"],[8,"PyContextExitProtocol"],[3,"PyDescrMethods"],[8,"PyDescrProtocol"],[8,"PyDescrGetProtocol"],[8,"PyDescrSetProtocol"],[8,"PyDescrDeleteProtocol"],[8,"PyDescrSetNameProtocol"],[3,"PyGCMethods"],[8,"PyGCProtocol"],[3,"PyVisit"],[3,"PyIterMethods"],[4,"IterNextOutput"],[8,"PyIterProtocol"],[8,"PyIterIterProtocol"],[8,"PyIterNextProtocol"],[8,"PyMappingProtocol"],[8,"PyMappingLenProtocol"],[8,"PyMappingGetItemProtocol"],[8,"PyMappingSetItemProtocol"],[8,"PyMappingDelItemProtocol"],[8,"PyMappingReversedProtocol"],[3,"PyMethodDef"],[3,"PyClassAttributeDef"],[3,"PyGetterDef"],[3,"PySetterDef"],[4,"PyMethodDefType"],[4,"PyMethodType"],[8,"PyMethods"],[8,"PyNumberProtocol"],[8,"PyNumberAddProtocol"],[8,"PyNumberSubProtocol"],[8,"PyNumberMulProtocol"],[8,"PyNumberMatmulProtocol"],[8,"PyNumberTruedivProtocol"],[8,"PyNumberFloordivProtocol"],[8,"PyNumberModProtocol"],[8,"PyNumberDivmodProtocol"],[8,"PyNumberPowProtocol"],[8,"PyNumberLShiftProtocol"],[8,"PyNumberRShiftProtocol"],[8,"PyNumberAndProtocol"],[8,"PyNumberXorProtocol"],[8,"PyNumberOrProtocol"],[8,"PyNumberRAddProtocol"],[8,"PyNumberRSubProtocol"],[8,"PyNumberRMulProtocol"],[8,"PyNumberRMatmulProtocol"],[8,"PyNumberRTruedivProtocol"],[8,"PyNumberRFloordivProtocol"],[8,"PyNumberRModProtocol"],[8,"PyNumberRDivmodProtocol"],[8,"PyNumberRPowProtocol"],[8,"PyNumberRLShiftProtocol"],[8,"PyNumberRRShiftProtocol"],[8,"PyNumberRAndProtocol"],[8,"PyNumberRXorProtocol"],[8,"PyNumberROrProtocol"],[8,"PyNumberIAddProtocol"],[8,"PyNumberISubProtocol"],[8,"PyNumberIMulProtocol"],[8,"PyNumberIMatmulProtocol"],[8,"PyNumberITruedivProtocol"],[8,"PyNumberIFloordivProtocol"],[8,"PyNumberIModProtocol"],[8,"PyNumberIDivmodProtocol"],[8,"PyNumberIPowProtocol"],[8,"PyNumberILShiftProtocol"],[8,"PyNumberIRShiftProtocol"],[8,"PyNumberIAndProtocol"],[8,"PyNumberIXorProtocol"],[8,"PyNumberIOrProtocol"],[8,"PyNumberNegProtocol"],[8,"PyNumberPosProtocol"],[8,"PyNumberAbsProtocol"],[8,"PyNumberInvertProtocol"],[8,"PyNumberComplexProtocol"],[8,"PyNumberIntProtocol"],[8,"PyNumberFloatProtocol"],[8,"PyNumberRoundProtocol"],[8,"PyNumberIndexProtocol"],[8,"PyProtoMethods"],[4,"IterANextOutput"],[8,"PyAsyncProtocol"],[8,"PyAsyncAwaitProtocol"],[8,"PyAsyncAiterProtocol"],[8,"PyAsyncAnextProtocol"],[8,"PyAsyncAenterProtocol"],[8,"PyAsyncAexitProtocol"],[8,"PySequenceProtocol"],[8,"PySequenceLenProtocol"],[8,"PySequenceGetItemProtocol"],[8,"PySequenceSetItemProtocol"],[8,"PySequenceDelItemProtocol"],[8,"PySequenceContainsProtocol"],[8,"PySequenceConcatProtocol"],[8,"PySequenceRepeatProtocol"],[8,"PySequenceInplaceConcatProtocol"],[8,"PySequenceInplaceRepeatProtocol"],[8,"AsPyPointer"],[8,"IntoPyPointer"],[8,"ToPyObject"],[8,"ToBorrowedObject"],[8,"FromPy"],[8,"IntoPy"],[8,"FromPyObject"],[8,"PyTryFrom"],[8,"PyTryInto"],[8,"FromPyPointer"],[3,"CancelledError"],[3,"InvalidStateError"],[3,"TimeoutError"],[3,"IncompleteReadError"],[3,"LimitOverrunError"],[3,"QueueEmpty"],[3,"QueueFull"],[3,"herror"],[3,"gaierror"],[3,"timeout"],[3,"BaseException"],[3,"Exception"],[3,"StopAsyncIteration"],[3,"StopIteration"],[3,"GeneratorExit"],[3,"ArithmeticError"],[3,"LookupError"],[3,"AssertionError"],[3,"AttributeError"],[3,"BufferError"],[3,"EOFError"],[3,"FloatingPointError"],[3,"OSError"],[3,"ImportError"],[3,"ModuleNotFoundError"],[3,"IndexError"],[3,"KeyError"],[3,"KeyboardInterrupt"],[3,"MemoryError"],[3,"NameError"],[3,"OverflowError"],[3,"RuntimeError"],[3,"RecursionError"],[3,"NotImplementedError"],[3,"SyntaxError"],[3,"ReferenceError"],[3,"SystemError"],[3,"SystemExit"],[3,"TypeError"],[3,"UnboundLocalError"],[3,"UnicodeError"],[3,"UnicodeDecodeError"],[3,"UnicodeEncodeError"],[3,"UnicodeTranslateError"],[3,"ValueError"],[3,"ZeroDivisionError"],[3,"BlockingIOError"],[3,"BrokenPipeError"],[3,"ChildProcessError"],[3,"ConnectionError"],[3,"ConnectionAbortedError"],[3,"ConnectionRefusedError"],[3,"ConnectionResetError"],[3,"FileExistsError"],[3,"FileNotFoundError"],[3,"InterruptedError"],[3,"IsADirectoryError"],[3,"NotADirectoryError"],[3,"PermissionError"],[3,"ProcessLookupError"],[3,"TimeoutError"],[3,"EnvironmentError"],[3,"IOError"],[3,"PyCodeObject"],[3,"PyFutureFeatures"],[3,"Py_complex"],[3,"PyComplexObject"],[3,"PyDateTime_CAPI"],[3,"PyDateTime_Date"],[3,"PyDateTime_Time"],[3,"PyDateTime_DateTime"],[3,"PyDateTime_Delta"],[3,"PyGetSetDef"],[3,"PyDictObject"],[3,"PyFloatObject"],[3,"PyGenObject"],[3,"PyListObject"],[3,"PyMethodDef"],[3,"PyModuleDef_Base"],[3,"PyModuleDef_Slot"],[3,"PyModuleDef"],[3,"PyObject"],[3,"PyVarObject"],[3,"Py_buffer"],[3,"PyNumberMethods"],[3,"PySequenceMethods"],[3,"PyMappingMethods"],[3,"PyAsyncMethods"],[3,"PyBufferProcs"],[3,"PyTypeObject"],[3,"PyHeapTypeObject"],[3,"PyType_Slot"],[3,"PyType_Spec"],[3,"PyObjectArenaAllocator"],[3,"PyHash_FuncDef"],[3,"PyMemAllocatorEx"],[3,"PyInterpreterState"],[3,"PyThreadState"],[3,"PyCompilerFlags"],[3,"setentry"],[3,"PySetObject"],[3,"PySliceObject"],[3,"PyStructSequence_Field"],[3,"PyStructSequence_Desc"],[3,"PyTupleObject"],[4,"PyMemAllocatorDomain"],[4,"PyGILState_STATE"],[3,"PyMemberDef"],[3,"PyTryBlock"],[3,"PyFrameObject"],[4,"Slot"],[8,"PyClassWithFreeList"],[3,"FreeList"],[3,"GILGuard"],[3,"GILPool"],[3,"Py"],[3,"PyObject"],[3,"GILOnceCell"],[3,"PanicException"],[8,"AsPyRef"],[3,"PyCell"],[3,"PyRef"],[3,"PyRefMut"],[3,"PyBorrowError"],[3,"PyBorrowMutError"],[8,"PyClassAlloc"],[8,"PyClass"],[8,"PyClassSend"],[8,"PyObjectInit"],[3,"PyClassInitializer"],[8,"PyClassDict"],[8,"PyClassWeakRef"],[3,"Python"],[8,"PyLayout"],[8,"PyTypeInfo"],[8,"PyTypeObject"],[3,"PySliceIndices"],[3,"PyAny"],[3,"PyBool"],[3,"PyByteArray"],[3,"PyBytes"],[3,"PyComplex"],[3,"PyDate"],[3,"PyDateTime"],[3,"PyTime"],[3,"PyDelta"],[3,"PyDict"],[3,"PyFloat"],[3,"PyIterator"],[3,"PyList"],[3,"PyModule"],[3,"PySequence"],[3,"PySet"],[3,"PyFrozenSet"],[3,"PySlice"],[3,"PyString"],[3,"PyTuple"],[3,"PyType"],[8,"PyDeltaAccess"],[8,"PyDateAccess"],[8,"PyTimeAccess"],[8,"IntoPyDict"],[8,"PyErrArguments"],[8,"PyNativeType"],[3,"PyDowncastError"],[3,"PyTraverseError"],[3,"PyDateTimeAPI"],[3,"PyDictKeysObject"],[3,"PyLongObject"],[4,"PyArena"],[4,"_mod"],[4,"symtable"],[4,"_node"],[4,"PyWeakReference"],[3,"PyNativeTypeInitializer"],[3,"PyClassDummySlot"],[3,"PyClassDictSlot"],[3,"PyClassWeakRefSlot"],[3,"PyTzInfo"],[3,"PyLong"]]},\
"pyo3_derive_backend":{"doc":"This crate contains the implementation of the proc macro…","i":[[3,"PyClassArgs","pyo3_derive_backend","The parsed arguments of the pyclass macro",null,null],[12,"freelist","","",0,null],[12,"name","","",0,null],[12,"flags","","",0,null],[12,"base","","",0,null],[12,"has_extends","","",0,null],[12,"has_unsendable","","",0,null],[12,"module","","",0,null],[3,"PyFunctionAttr","","The attributes of the pyfunction macro",null,null],[12,"arguments","","",1,null],[5,"add_fn_to_module","","Generates python wrapper over a function that allows…",null,[[["argument",4],["ident",3],["vec",3],["itemfn",3]],[["tokenstream",3],["result",6]]]],[5,"process_functions_in_module","","Finds and takes care of the #[pyfn(...)] in `#[pymodule]`",null,[[["itemfn",3]],["result",6]]],[5,"py_init","","Generates the function that is called by the python…",null,[[["litstr",3],["ident",3]],["tokenstream",3]]],[5,"build_py_class","","",null,[[["pyclassargs",3],["itemstruct",3]],[["tokenstream",3],["result",6]]]],[5,"build_py_function","","",null,[[["itemfn",3],["pyfunctionattr",3]],[["tokenstream",3],["result",6]]]],[5,"build_py_methods","","",null,[[["itemimpl",3]],[["tokenstream",3],["result",6]]]],[5,"impl_methods","","",null,[[["type",4],["vec",3]],[["tokenstream",3],["result",6]]]],[5,"build_py_proto","","",null,[[["itemimpl",3]],[["tokenstream",3],["result",6]]]],[5,"get_doc","","",null,[[["litstr",3],["option",4]],[["litstr",3],["result",6]]]],[11,"from_meta","","",1,[[],["result",6]]],[11,"add_item","","",1,[[["nestedmeta",4]],["result",6]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"default","","",0,[[]]],[11,"default","","",1,[[],["pyfunctionattr",3]]],[11,"parse","","",0,[[["parsestream",6]],["result",6]]],[11,"parse","","",1,[[["parsebuffer",3]],["result",6]]]],"p":[[3,"PyClassArgs"],[3,"PyFunctionAttr"]]},\
"pyo3cls":{"doc":"This crate declares only the proc macro attributes, as a…","i":[[23,"pymodule","pyo3cls","Internally, this proc macro create a new c function called…",null,null],[23,"pyproto","","",null,null],[23,"pyclass","","",null,null],[23,"pymethods","","",null,null],[23,"pyfunction","","",null,null]],"p":[]},\
"quick_error":{"doc":"A macro which makes errors easy to write","i":[[3,"Context","quick_error","Generic context type",null,null],[12,"0","","",0,null],[12,"1","","",0,null],[8,"ResultExt","","Result extension trait adding a `context` method",null,null],[10,"context","","The method is use to add context information to current…",1,[[],[["result",4],["context",3]]]],[14,"quick_error","","Main macro that does all the work",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]]],"p":[[3,"Context"],[8,"ResultExt"]]},\
"quote":{"doc":"github crates-io docs-rs","i":[[8,"TokenStreamExt","quote","TokenStream extension trait with methods for appending…",null,null],[10,"append","","For use by `ToTokens` implementations.",0,[[]]],[10,"append_all","","For use by `ToTokens` implementations.",0,[[]]],[10,"append_separated","","For use by `ToTokens` implementations.",0,[[]]],[10,"append_terminated","","For use by `ToTokens` implementations.",0,[[]]],[8,"IdentFragment","","Specialized formatting trait used by `format_ident!`.",null,null],[10,"fmt","","Format this value as an identifier fragment.",1,[[["formatter",3]],["result",6]]],[11,"span","","Span associated with this `IdentFragment`.",1,[[],[["option",4],["span",3]]]],[8,"ToTokens","","Types that can be interpolated inside a `quote!` invocation.",null,null],[10,"to_tokens","","Write `self` to the given `TokenStream`.",2,[[["tokenstream",3]]]],[11,"to_token_stream","","Convert `self` directly into a `TokenStream` object.",2,[[],["tokenstream",3]]],[11,"into_token_stream","","Convert `self` directly into a `TokenStream` object.",2,[[],["tokenstream",3]]],[14,"format_ident","","Formatting macro for constructing `Ident`s.",null,null],[14,"quote","","The whole point.",null,null],[14,"quote_spanned","","Same as `quote!`, but applies a given span to all tokens…",null,null],[11,"span","","Span associated with this `IdentFragment`.",1,[[],[["option",4],["span",3]]]],[11,"to_token_stream","","Convert `self` directly into a `TokenStream` object.",2,[[],["tokenstream",3]]],[11,"into_token_stream","","Convert `self` directly into a `TokenStream` object.",2,[[],["tokenstream",3]]]],"p":[[8,"TokenStreamExt"],[8,"IdentFragment"],[8,"ToTokens"]]},\
"rand":{"doc":"Utilities for random number generation","i":[[8,"CryptoRng","rand","A marker trait used to indicate that an [`RngCore`] or…",null,null],[3,"Error","","Error type of random number generators",null,null],[8,"RngCore","","The core of a random number generator.",null,null],[10,"next_u32","","Return the next random `u32`.",0,[[]]],[10,"next_u64","","Return the next random `u64`.",0,[[]]],[10,"fill_bytes","","Fill `dest` with random data.",0,[[]]],[10,"try_fill_bytes","","Fill `dest` entirely with random data.",0,[[],[["error",3],["result",4]]]],[8,"SeedableRng","","A random number generator that can be explicitly seeded.",null,null],[16,"Seed","","Seed type, which is restricted to types…",1,null],[10,"from_seed","","Create a new PRNG using the given seed.",1,[[]]],[11,"seed_from_u64","","Create a new PRNG using a `u64` seed.",1,[[]]],[11,"from_rng","","Create a new PRNG seeded from another `Rng`.",1,[[],[["result",4],["error",3]]]],[11,"from_entropy","","Creates a new instance of the RNG seeded via `getrandom`.",1,[[]]],[5,"thread_rng","","Retrieve the lazily-initialized thread-local random number…",null,[[],["threadrng",3]]],[5,"random","","Generates a random value using the thread-local random…",null,[[]]],[0,"distributions","","Generating random samples from probability distributions",null,null],[3,"Bernoulli","rand::distributions","The Bernoulli distribution.",null,null],[3,"Open01","","A distribution to sample floating point numbers uniformly…",null,null],[3,"OpenClosed01","","A distribution to sample floating point numbers uniformly…",null,null],[3,"Alphanumeric","","Sample a `char`, uniformly distributed over ASCII letters…",null,null],[3,"Uniform","","Sample values uniformly between two bounds.",null,null],[3,"Binomial","","The binomial distribution `Binomial(n, p)`.",null,null],[3,"Cauchy","","The Cauchy distribution `Cauchy(median, scale)`.",null,null],[3,"Dirichlet","","The dirichelet distribution `Dirichlet(alpha)`.",null,null],[3,"Exp","","The exponential distribution `Exp(lambda)`.",null,null],[3,"Exp1","","Samples floating-point numbers according to the…",null,null],[3,"Beta","","The Beta distribution with shape parameters `alpha` and…",null,null],[3,"ChiSquared","","The chi-squared distribution `χ²(k)`, where `k` is the…",null,null],[3,"FisherF","","The Fisher F distribution `F(m, n)`.",null,null],[3,"Gamma","","The Gamma distribution `Gamma(shape, scale)` distribution.",null,null],[3,"StudentT","","The Student t distribution, `t(nu)`, where `nu` is the…",null,null],[3,"LogNormal","","The log-normal distribution `ln N(mean, std_dev**2)`.",null,null],[3,"Normal","","The normal distribution `N(mean, std_dev**2)`.",null,null],[3,"StandardNormal","","Samples floating-point numbers according to the normal…",null,null],[3,"Pareto","","Samples floating-point numbers according to the Pareto…",null,null],[3,"Poisson","","The Poisson distribution `Poisson(lambda)`.",null,null],[3,"Triangular","","The triangular distribution.",null,null],[3,"UnitCircle","","Samples uniformly from the edge of the unit circle in two…",null,null],[3,"UnitSphereSurface","","Samples uniformly from the surface of the unit sphere in…",null,null],[3,"Weibull","","Samples floating-point numbers according to the Weibull…",null,null],[3,"DistIter","","An iterator that generates random values of `T` with…",null,null],[3,"Standard","","A generic random value distribution, implemented for many…",null,null],[4,"BernoulliError","","Error type returned from `Bernoulli::new`.",null,null],[13,"InvalidProbability","","`p < 0` or `p > 1`.",2,null],[11,"new","","Construct a new `Bernoulli` with the given probability of…",3,[[],[["bernoullierror",4],["bernoulli",3],["result",4]]]],[11,"from_ratio","","Construct a new `Bernoulli` with the probability of…",3,[[],[["bernoullierror",4],["bernoulli",3],["result",4]]]],[11,"new","","Construct a new `Binomial` with the given shape parameters…",4,[[],["binomial",3]]],[11,"new","","Construct a new `Cauchy` with the given shape parameters…",5,[[],["cauchy",3]]],[11,"new","","Construct a new `Dirichlet` with the given alpha parameter…",6,[[["into",8],["vec",3]],["dirichlet",3]]],[11,"new_with_param","","Construct a new `Dirichlet` with the given shape parameter…",6,[[],["dirichlet",3]]],[11,"new","","Construct a new `Exp` with the given shape parameter…",7,[[],["exp",3]]],[11,"new","","Construct an object representing the `Gamma(shape, scale)`…",8,[[],["gamma",3]]],[11,"new","","Create a new chi-squared distribution with…",9,[[],["chisquared",3]]],[11,"new","","Create a new `FisherF` distribution, with the given…",10,[[],["fisherf",3]]],[11,"new","","Create a new Student t distribution with `n` degrees of…",11,[[],["studentt",3]]],[11,"new","","Construct an object representing the `Beta(alpha, beta)`…",12,[[],["beta",3]]],[11,"new","","Construct a new `Normal` distribution with the given mean…",13,[[],["normal",3]]],[11,"new","","Construct a new `LogNormal` distribution with the given…",14,[[],["lognormal",3]]],[11,"new","","Construct a new Pareto distribution with given `scale` and…",15,[[],["pareto",3]]],[11,"new","","Construct a new `Poisson` with the given shape parameter…",16,[[],["poisson",3]]],[11,"new","","Construct a new `Triangular` with minimum `min`, maximum…",17,[[],["triangular",3]]],[0,"uniform","","A distribution uniformly sampling numbers within a given…",null,null],[3,"Uniform","rand::distributions::uniform","Sample values uniformly between two bounds.",null,null],[3,"UniformInt","","The back-end implementing [`UniformSampler`] for integer…",null,null],[3,"UniformFloat","","The back-end implementing [`UniformSampler`] for…",null,null],[3,"UniformDuration","","The back-end implementing [`UniformSampler`] for `Duration`.",null,null],[8,"SampleUniform","","Helper trait for creating objects using the correct…",null,null],[16,"Sampler","","The `UniformSampler` implementation supporting type `X`.",18,null],[8,"UniformSampler","","Helper trait handling actual uniform sampling.",null,null],[16,"X","","The type sampled by this implementation.",19,null],[10,"new","","Construct self, with inclusive lower bound and exclusive…",19,[[]]],[10,"new_inclusive","","Construct self, with inclusive bounds `[low, high]`.",19,[[]]],[10,"sample","","Sample a value.",19,[[]]],[11,"sample_single","","Sample a single value uniformly from a range with…",19,[[]]],[8,"SampleBorrow","","Helper trait similar to `Borrow` but implemented only for…",null,null],[10,"borrow","","Immutably borrows from an owned value. See `Borrow::borrow`",20,[[]]],[11,"new","","Create a new `Uniform` instance which samples uniformly…",21,[[],["uniform",3]]],[11,"new_inclusive","","Create a new `Uniform` instance which samples uniformly…",21,[[],["uniform",3]]],[11,"new","rand::distributions","Construct a new `UnitCircle` distribution.",22,[[],["unitcircle",3]]],[11,"new","","Construct a new `UnitSphereSurface` distribution.",23,[[],["unitspheresurface",3]]],[11,"new","","Construct a new `Weibull` distribution with given `scale`…",24,[[],["weibull",3]]],[0,"weighted","","Weighted index sampling",null,null],[3,"WeightedIndex","rand::distributions::weighted","A distribution using weighted sampling to pick a…",null,null],[4,"WeightedError","","Error type returned from `WeightedIndex::new`.",null,null],[13,"NoItem","","The provided weight collection contains no items.",25,null],[13,"InvalidWeight","","A weight is either less than zero, greater than the…",25,null],[13,"AllWeightsZero","","All items in the provided weight collection are zero.",25,null],[13,"TooMany","","Too many weights are provided (length greater than…",25,null],[0,"alias_method","","This module contains an implementation of alias method for…",null,null],[3,"WeightedIndex","rand::distributions::weighted::alias_method","A distribution using weighted sampling to pick a…",null,null],[8,"Weight","","Trait that must be implemented for weights, that are used…",null,null],[18,"MAX","","Maximum number representable by `Self`.",26,null],[18,"ZERO","","Element of `Self` equivalent to 0.",26,null],[10,"try_from_u32_lossy","","Produce an instance of `Self` from a `u32` value, or…",26,[[],["option",4]]],[11,"sum","","Sums all values in slice `values`.",26,[[]]],[11,"new","","Creates a new [`WeightedIndex`].",27,[[["vec",3]],[["weightederror",4],["result",4]]]],[11,"new","rand::distributions::weighted","Creates a new a `WeightedIndex` [`Distribution`] using the…",28,[[],[["weightedindex",3],["weightederror",4],["result",4]]]],[11,"update_weights","","Update a subset of weights, without changing the number of…",28,[[],[["result",4],["weightederror",4]]]],[8,"Distribution","rand::distributions","Types (distributions) that can be used to create a random…",null,null],[10,"sample","","Generate a random value of `T`, using `rng` as the source…",29,[[]]],[11,"sample_iter","","Create an iterator that generates random values of `T`,…",29,[[],["distiter",3]]],[0,"prelude","rand","Convenience re-export of common members",null,null],[0,"rngs","","Random number generators and adapters",null,null],[3,"OsRng","rand::rngs","A random number generator that retrieves randomness from…",null,null],[3,"EntropyRng","","An interface returning random data from external…",null,null],[3,"SmallRng","","A small-state, fast non-crypto PRNG",null,null],[3,"StdRng","","The standard RNG. The PRNG algorithm in `StdRng` is chosen…",null,null],[3,"ThreadRng","","The type returned by [`thread_rng`], essentially just a…",null,null],[0,"adapter","","Wrappers / adapters forming RNGs",null,null],[3,"ReadError","rand::rngs::adapter","`ReadRng` error type",null,null],[3,"ReadRng","","An RNG that reads random bytes straight from any type…",null,null],[3,"ReseedingRng","","A wrapper around any PRNG that implements `BlockRngCore`,…",null,null],[11,"new","","Create a new `ReadRng` from a `Read`.",30,[[],["readrng",3]]],[11,"new","","Create a new `ReseedingRng` from an existing PRNG,…",31,[[]]],[11,"reseed","","Reseed the internal PRNG.",31,[[],[["error",3],["result",4]]]],[11,"new","rand::rngs","Create a new `EntropyRng`.",32,[[]]],[0,"mock","","Mock random number generator",null,null],[3,"StepRng","rand::rngs::mock","A simple implementation of `RngCore` for testing purposes.",null,null],[11,"new","","Create a `StepRng`, yielding an arithmetic sequence…",33,[[]]],[0,"seq","rand","Sequence-related functionality",null,null],[3,"SliceChooseIter","rand::seq","An iterator over multiple slice elements.",null,null],[0,"index","","Low-level API for sampling indices",null,null],[4,"IndexVec","rand::seq::index","A vector of indices.",null,null],[4,"IndexVecIter","","Return type of `IndexVec::iter`.",null,null],[4,"IndexVecIntoIter","","Return type of `IndexVec::into_iter`.",null,null],[5,"sample","","Randomly sample exactly `amount` distinct indices from…",null,[[],["indexvec",4]]],[11,"len","","Returns the number of indices",34,[[]]],[11,"is_empty","","Returns `true` if the length is 0.",34,[[]]],[11,"index","","Return the value at the given `index`.",34,[[]]],[11,"into_vec","","Return result as a `Vec<usize>`. Conversion may or may not…",34,[[],["vec",3]]],[11,"iter","","Iterate over the indices as a sequence of `usize` values",34,[[],["indexveciter",4]]],[11,"into_iter","","Convert into an iterator over the indices as a sequence of…",34,[[],["indexvecintoiter",4]]],[8,"SliceRandom","rand::seq","Extension trait on slices, providing random mutation and…",null,null],[16,"Item","","The element type.",35,null],[10,"choose","","Returns a reference to one random element of the slice, or…",35,[[],["option",4]]],[10,"choose_mut","","Returns a mutable reference to one random element of the…",35,[[],["option",4]]],[10,"choose_multiple","","Chooses `amount` elements from the slice at random,…",35,[[],["slicechooseiter",3]]],[10,"choose_weighted","","Similar to `choose`, but where the likelihood of each…",35,[[],[["result",4],["weightederror",4]]]],[10,"choose_weighted_mut","","Similar to `choose_mut`, but where the likelihood of each…",35,[[],[["result",4],["weightederror",4]]]],[10,"shuffle","","Shuffle a mutable slice in place.",35,[[]]],[10,"partial_shuffle","","Shuffle a slice in place, but exit early.",35,[[]]],[8,"IteratorRandom","","Extension trait on iterators, providing random sampling…",null,null],[11,"choose","","Choose one element at random from the iterator.",36,[[],["option",4]]],[11,"choose_multiple_fill","","Collects values at random from the iterator into a…",36,[[]]],[11,"choose_multiple","","Collects `amount` values at random from the iterator into…",36,[[],["vec",3]]],[8,"Rng","rand","An automatically-implemented extension trait on…",null,null],[11,"gen","","Return a random value supporting the `Standard`…",37,[[]]],[11,"gen_range","","Generate a random value in the range [`low`, `high`), i.e.…",37,[[],["sampleuniform",8]]],[11,"sample","","Sample a new value, using the given distribution.",37,[[["distribution",8]]]],[11,"sample_iter","","Create an iterator that generates values using the given…",37,[[],["distiter",3]]],[11,"fill","","Fill `dest` entirely with random bytes (uniform value…",37,[[]]],[11,"try_fill","","Fill `dest` entirely with random bytes (uniform value…",37,[[],[["error",3],["result",4]]]],[11,"gen_bool","","Return a bool with a probability `p` of being true.",37,[[]]],[11,"gen_ratio","","Return a bool with a probability of…",37,[[]]],[8,"AsByteSliceMut","","Trait for casting types to byte slices",null,null],[10,"as_byte_slice_mut","","Return a mutable reference to self as a byte slice",38,[[]]],[10,"to_le","","Call `to_le` on each element (i.e. byte-swap on Big Endian…",38,[[]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_string","","",39,[[],["string",3]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"vzip","","",39,[[]]],[11,"from","rand::distributions","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"vzip","","",40,[[]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"vzip","","",41,[[]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"vzip","","",42,[[]]],[11,"from","rand::distributions::uniform","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"from","rand::distributions","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"vzip","","",43,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"vzip","","",44,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"into_iter","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"vzip","","",45,[[]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"vzip","","",46,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","rand::distributions::uniform","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"vzip","","",47,[[]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"vzip","","",48,[[]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"vzip","","",49,[[]]],[11,"from","rand::distributions::weighted","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"to_string","","",25,[[],["string",3]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"from","rand::distributions::weighted::alias_method","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"from","rand::rngs","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"vzip","","",50,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"vzip","","",32,[[]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"vzip","","",51,[[]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"vzip","","",52,[[]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"vzip","","",53,[[]]],[11,"from","rand::rngs::adapter","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_string","","",54,[[],["string",3]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"vzip","","",54,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"vzip","","",31,[[]]],[11,"from","rand::rngs::mock","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"from","rand::seq","",55,[[]]],[11,"into","","",55,[[]]],[11,"into_iter","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"vzip","","",55,[[]]],[11,"from","rand::seq::index","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"into_iter","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"vzip","","",56,[[]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"into_iter","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"vzip","","",57,[[]]],[11,"from","rand","",39,[[["error",3]],["error",3]]],[11,"from","","",39,[[["nonzerou32",3]],["error",3]]],[11,"read","","",0,[[],[["error",3],["result",4]]]],[11,"next_u32","rand::rngs","",50,[[]]],[11,"next_u64","","",50,[[]]],[11,"fill_bytes","","",50,[[]]],[11,"try_fill_bytes","","",50,[[],[["error",3],["result",4]]]],[11,"fmt","","",50,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rand","",39,[[["formatter",3]],[["error",3],["result",4]]]],[11,"default","rand::rngs","",50,[[],["osrng",3]]],[11,"source","rand","",39,[[],[["option",4],["error",8]]]],[11,"clone","rand::rngs","",50,[[],["osrng",3]]],[11,"fmt","rand","",39,[[["formatter",3]],[["error",3],["result",4]]]],[11,"new","rand::distributions::uniform","",47,[[]]],[11,"new_inclusive","","",47,[[]]],[11,"sample","","",47,[[]]],[11,"sample_single","","",47,[[]]],[11,"new","","",47,[[]]],[11,"new_inclusive","","",47,[[]]],[11,"sample","","",47,[[]]],[11,"sample_single","","",47,[[]]],[11,"new","","",47,[[]]],[11,"new_inclusive","","",47,[[]]],[11,"sample","","",47,[[]]],[11,"sample_single","","",47,[[]]],[11,"new","","",47,[[]]],[11,"new_inclusive","","",47,[[]]],[11,"sample","","",47,[[]]],[11,"sample_single","","",47,[[]]],[11,"new","","",47,[[]]],[11,"new_inclusive","","",47,[[]]],[11,"sample","","",47,[[]]],[11,"sample_single","","",47,[[]]],[11,"new","","",47,[[]]],[11,"new_inclusive","","",47,[[]]],[11,"sample","","",47,[[]]],[11,"sample_single","","",47,[[]]],[11,"new","","",47,[[]]],[11,"new_inclusive","","",47,[[]]],[11,"sample","","",47,[[]]],[11,"sample_single","","",47,[[]]],[11,"new","","",47,[[]]],[11,"new_inclusive","","",47,[[]]],[11,"sample","","",47,[[]]],[11,"sample_single","","",47,[[]]],[11,"new","","",47,[[]]],[11,"new_inclusive","","",47,[[]]],[11,"sample","","",47,[[]]],[11,"sample_single","","",47,[[]]],[11,"new","","",47,[[]]],[11,"new_inclusive","","",47,[[]]],[11,"sample","","",47,[[]]],[11,"sample_single","","",47,[[]]],[11,"new","","",47,[[]]],[11,"new_inclusive","","",47,[[]]],[11,"sample","","",47,[[]]],[11,"sample_single","","",47,[[]]],[11,"new","","",47,[[]]],[11,"new_inclusive","","",47,[[]]],[11,"sample","","",47,[[]]],[11,"sample_single","","",47,[[]]],[11,"new","","",48,[[]]],[11,"new_inclusive","","",48,[[]]],[11,"sample","","",48,[[]]],[11,"sample_single","","",48,[[]]],[11,"new","","",48,[[]]],[11,"new_inclusive","","",48,[[]]],[11,"sample","","",48,[[]]],[11,"sample_single","","",48,[[]]],[11,"new","","",49,[[]]],[11,"new_inclusive","","",49,[[]]],[11,"sample","","",49,[[],["duration",3]]],[11,"sample","rand::distributions","",3,[[]]],[11,"sample","","",4,[[]]],[11,"sample","","",5,[[]]],[11,"sample","","",6,[[],["vec",3]]],[11,"sample","","",43,[[]]],[11,"sample","","",7,[[]]],[11,"sample","","",8,[[]]],[11,"sample","","",9,[[]]],[11,"sample","","",10,[[]]],[11,"sample","","",11,[[]]],[11,"sample","","",12,[[]]],[11,"sample","","",44,[[]]],[11,"sample","","",13,[[]]],[11,"sample","","",14,[[]]],[11,"sample","","",15,[[]]],[11,"sample","","",16,[[]]],[11,"sample","","",17,[[]]],[11,"sample","rand::distributions::uniform","",21,[[]]],[11,"sample","rand::distributions","",22,[[]]],[11,"sample","","",23,[[]]],[11,"sample","","",24,[[]]],[11,"sample","rand::distributions::weighted::alias_method","",27,[[]]],[11,"sample","rand::distributions::weighted","",28,[[]]],[11,"sample","rand::distributions","",46,[[]]],[11,"sample","","",41,[[]]],[11,"sample","","",40,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",41,[[]]],[11,"sample","","",40,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[],["nonzerou8",3]]],[11,"sample","","",46,[[],["nonzerou16",3]]],[11,"sample","","",46,[[],["nonzerou32",3]]],[11,"sample","","",46,[[],["nonzerou64",3]]],[11,"sample","","",46,[[],["nonzerou128",3]]],[11,"sample","","",46,[[],["nonzerousize",3]]],[11,"sample","","",46,[[]]],[11,"sample","","",42,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[],["option",4]]],[11,"sample","","",46,[[],["wrapping",3]]],[11,"from","rand::distributions::uniform","",21,[[["range",3]],["uniform",3]]],[11,"from","","",21,[[["rangeinclusive",3]],["uniform",3]]],[11,"from","rand::seq::index","",34,[[["vec",3]]]],[11,"from","","",34,[[["vec",3]]]],[11,"len","rand::seq","",55,[[]]],[11,"next","rand::distributions","",45,[[],["option",4]]],[11,"size_hint","","",45,[[]]],[11,"next","rand::seq::index","",56,[[],["option",4]]],[11,"size_hint","","",56,[[]]],[11,"next","","",57,[[],["option",4]]],[11,"size_hint","","",57,[[]]],[11,"next","rand::seq","",55,[[],["option",4]]],[11,"size_hint","","",55,[[]]],[11,"clone","rand::distributions","",3,[[],["bernoulli",3]]],[11,"clone","","",2,[[],["bernoullierror",4]]],[11,"clone","","",4,[[],["binomial",3]]],[11,"clone","","",5,[[],["cauchy",3]]],[11,"clone","","",6,[[],["dirichlet",3]]],[11,"clone","","",43,[[],["exp1",3]]],[11,"clone","","",7,[[],["exp",3]]],[11,"clone","","",8,[[],["gamma",3]]],[11,"clone","","",9,[[],["chisquared",3]]],[11,"clone","","",10,[[],["fisherf",3]]],[11,"clone","","",11,[[],["studentt",3]]],[11,"clone","","",12,[[],["beta",3]]],[11,"clone","","",44,[[],["standardnormal",3]]],[11,"clone","","",13,[[],["normal",3]]],[11,"clone","","",14,[[],["lognormal",3]]],[11,"clone","","",15,[[],["pareto",3]]],[11,"clone","","",16,[[],["poisson",3]]],[11,"clone","","",17,[[],["triangular",3]]],[11,"clone","rand::distributions::uniform","",21,[[],["uniform",3]]],[11,"clone","","",47,[[],["uniformint",3]]],[11,"clone","","",48,[[],["uniformfloat",3]]],[11,"clone","","",49,[[],["uniformduration",3]]],[11,"clone","rand::distributions","",22,[[],["unitcircle",3]]],[11,"clone","","",23,[[],["unitspheresurface",3]]],[11,"clone","","",24,[[],["weibull",3]]],[11,"clone","rand::distributions::weighted::alias_method","",27,[[]]],[11,"clone","rand::distributions::weighted","",28,[[],["weightedindex",3]]],[11,"clone","","",25,[[],["weightederror",4]]],[11,"clone","rand::distributions","",41,[[],["openclosed01",3]]],[11,"clone","","",40,[[],["open01",3]]],[11,"clone","","",46,[[],["standard",3]]],[11,"clone","rand::rngs::adapter","",31,[[],["reseedingrng",3]]],[11,"clone","rand::rngs::mock","",33,[[],["steprng",3]]],[11,"clone","rand::rngs","",51,[[],["smallrng",3]]],[11,"clone","","",52,[[],["stdrng",3]]],[11,"clone","","",53,[[],["threadrng",3]]],[11,"clone","rand::seq::index","",34,[[],["indexvec",4]]],[11,"clone","","",57,[[],["indexvecintoiter",4]]],[11,"default","rand::rngs","",32,[[]]],[11,"default","","",53,[[],["threadrng",3]]],[11,"eq","rand::distributions","",2,[[["bernoullierror",4]]]],[11,"eq","rand::distributions::weighted","",25,[[["weightederror",4]]]],[11,"eq","rand::seq::index","",34,[[["indexvec",4]]]],[11,"fmt","rand::distributions","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","rand::distributions::uniform","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","rand::distributions","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","rand::distributions::weighted::alias_method","",27,[[["formatter",3]],["result",6]]],[11,"fmt","rand::distributions::weighted","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","rand::distributions","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","rand::rngs::adapter","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","rand::rngs","",32,[[["formatter",3]],["result",6]]],[11,"fmt","rand::rngs::mock","",33,[[["formatter",3]],["result",6]]],[11,"fmt","rand::rngs","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","rand::seq::index","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","rand::seq","",55,[[["formatter",3]],["result",6]]],[11,"fmt","rand::distributions","",2,[[["formatter",3]],["result",6]]],[11,"fmt","rand::distributions::weighted","",25,[[["formatter",3]],["result",6]]],[11,"fmt","rand::rngs::adapter","",54,[[["formatter",3]],["result",6]]],[11,"source","","",54,[[],[["error",8],["option",4]]]],[11,"next_u32","","",30,[[]]],[11,"next_u64","","",30,[[]]],[11,"fill_bytes","","",30,[[]]],[11,"try_fill_bytes","","",30,[[],[["error",3],["result",4]]]],[11,"next_u32","","",31,[[]]],[11,"next_u64","","",31,[[]]],[11,"fill_bytes","","",31,[[]]],[11,"try_fill_bytes","","",31,[[],[["error",3],["result",4]]]],[11,"next_u32","rand::rngs","",32,[[]]],[11,"next_u64","","",32,[[]]],[11,"fill_bytes","","",32,[[]]],[11,"try_fill_bytes","","",32,[[],[["error",3],["result",4]]]],[11,"next_u32","rand::rngs::mock","",33,[[]]],[11,"next_u64","","",33,[[]]],[11,"fill_bytes","","",33,[[]]],[11,"try_fill_bytes","","",33,[[],[["error",3],["result",4]]]],[11,"next_u32","rand::rngs","",51,[[]]],[11,"next_u64","","",51,[[]]],[11,"fill_bytes","","",51,[[]]],[11,"try_fill_bytes","","",51,[[],[["error",3],["result",4]]]],[11,"next_u32","","",52,[[]]],[11,"next_u64","","",52,[[]]],[11,"fill_bytes","","",52,[[]]],[11,"try_fill_bytes","","",52,[[],[["error",3],["result",4]]]],[11,"next_u32","","",53,[[]]],[11,"next_u64","","",53,[[]]],[11,"fill_bytes","","",53,[[]]],[11,"try_fill_bytes","","",53,[[],[["error",3],["result",4]]]],[11,"from_seed","","",51,[[]]],[11,"from_rng","","",51,[[["rngcore",8]],[["error",3],["result",4]]]],[11,"from_seed","","",52,[[]]],[11,"from_rng","","",52,[[["rngcore",8]],[["error",3],["result",4]]]],[11,"new","rand","Construct from any type supporting `std::error::Error`",39,[[],["error",3]]],[11,"inner","","Reference the inner error (`std` only)",39,[[],["error",8]]],[11,"take_inner","","Unwrap the inner error (`std` only)",39,[[],[["error",8],["box",3]]]],[18,"INTERNAL_START","","Codes below this point represent OS Errors (i.e. positive…",39,null],[18,"CUSTOM_START","","Codes at or above this point can be used by users to…",39,null],[11,"raw_os_error","","Extract the raw OS error code (if this error came from the…",39,[[],["option",4]]],[11,"code","","Retrieve the error code, if any.",39,[[],[["option",4],["nonzerou32",3]]]]],"p":[[8,"RngCore"],[8,"SeedableRng"],[4,"BernoulliError"],[3,"Bernoulli"],[3,"Binomial"],[3,"Cauchy"],[3,"Dirichlet"],[3,"Exp"],[3,"Gamma"],[3,"ChiSquared"],[3,"FisherF"],[3,"StudentT"],[3,"Beta"],[3,"Normal"],[3,"LogNormal"],[3,"Pareto"],[3,"Poisson"],[3,"Triangular"],[8,"SampleUniform"],[8,"UniformSampler"],[8,"SampleBorrow"],[3,"Uniform"],[3,"UnitCircle"],[3,"UnitSphereSurface"],[3,"Weibull"],[4,"WeightedError"],[8,"Weight"],[3,"WeightedIndex"],[3,"WeightedIndex"],[8,"Distribution"],[3,"ReadRng"],[3,"ReseedingRng"],[3,"EntropyRng"],[3,"StepRng"],[4,"IndexVec"],[8,"SliceRandom"],[8,"IteratorRandom"],[8,"Rng"],[8,"AsByteSliceMut"],[3,"Error"],[3,"Open01"],[3,"OpenClosed01"],[3,"Alphanumeric"],[3,"Exp1"],[3,"StandardNormal"],[3,"DistIter"],[3,"Standard"],[3,"UniformInt"],[3,"UniformFloat"],[3,"UniformDuration"],[3,"OsRng"],[3,"SmallRng"],[3,"StdRng"],[3,"ThreadRng"],[3,"ReadError"],[3,"SliceChooseIter"],[4,"IndexVecIter"],[4,"IndexVecIntoIter"]]},\
"rand_chacha":{"doc":"The ChaCha random number generator.","i":[[3,"ChaCha12Core","rand_chacha","ChaCha with 12 rounds",null,null],[3,"ChaCha12Rng","","A cryptographically secure random number generator that…",null,null],[3,"ChaCha20Core","","ChaCha with 20 rounds",null,null],[3,"ChaCha20Rng","","A cryptographically secure random number generator that…",null,null],[3,"ChaCha8Core","","ChaCha with 8 rounds",null,null],[3,"ChaCha8Rng","","A cryptographically secure random number generator that…",null,null],[11,"get_word_pos","","Get the offset from the start of the stream, in 32-bit…",0,[[]]],[11,"set_word_pos","","Set the offset from the start of the stream, in 32-bit…",0,[[]]],[11,"set_stream","","Set the stream number.",0,[[]]],[11,"get_word_pos","","Get the offset from the start of the stream, in 32-bit…",1,[[]]],[11,"set_word_pos","","Set the offset from the start of the stream, in 32-bit…",1,[[]]],[11,"set_stream","","Set the stream number.",1,[[]]],[11,"get_word_pos","","Get the offset from the start of the stream, in 32-bit…",2,[[]]],[11,"set_word_pos","","Set the offset from the start of the stream, in 32-bit…",2,[[]]],[11,"set_stream","","Set the stream number.",2,[[]]],[6,"ChaChaRng","","ChaCha with 20 rounds",null,null],[6,"ChaChaCore","","ChaCha with 20 rounds, low-level interface",null,null],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",0,[[["chacha20core",3]]]],[11,"from","","",1,[[["chacha12core",3]]]],[11,"from","","",2,[[["chacha8core",3]]]],[11,"clone","","",4,[[],["chacha20core",3]]],[11,"clone","","",0,[[],["chacha20rng",3]]],[11,"clone","","",3,[[],["chacha12core",3]]],[11,"clone","","",1,[[],["chacha12rng",3]]],[11,"clone","","",5,[[],["chacha8core",3]]],[11,"clone","","",2,[[],["chacha8rng",3]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"generate","","",4,[[]]],[11,"generate","","",3,[[]]],[11,"generate","","",5,[[]]],[11,"next_u32","","",0,[[]]],[11,"next_u64","","",0,[[]]],[11,"fill_bytes","","",0,[[]]],[11,"try_fill_bytes","","",0,[[],[["error",3],["result",4]]]],[11,"next_u32","","",1,[[]]],[11,"next_u64","","",1,[[]]],[11,"fill_bytes","","",1,[[]]],[11,"try_fill_bytes","","",1,[[],[["error",3],["result",4]]]],[11,"next_u32","","",2,[[]]],[11,"next_u64","","",2,[[]]],[11,"fill_bytes","","",2,[[]]],[11,"try_fill_bytes","","",2,[[],[["error",3],["result",4]]]],[11,"from_seed","","",4,[[]]],[11,"from_seed","","",0,[[]]],[11,"from_seed","","",3,[[]]],[11,"from_seed","","",1,[[]]],[11,"from_seed","","",5,[[]]],[11,"from_seed","","",2,[[]]]],"p":[[3,"ChaCha20Rng"],[3,"ChaCha12Rng"],[3,"ChaCha8Rng"],[3,"ChaCha12Core"],[3,"ChaCha20Core"],[3,"ChaCha8Core"]]},\
"rand_core":{"doc":"Random number generation traits","i":[[3,"Error","rand_core","Error type of random number generators",null,null],[3,"OsRng","","A random number generator that retrieves randomness from…",null,null],[11,"new","","Construct from any type supporting `std::error::Error`",0,[[]]],[11,"inner","","Reference the inner error (`std` only)",0,[[],["error",8]]],[11,"take_inner","","Unwrap the inner error (`std` only)",0,[[],[["box",3],["error",8]]]],[18,"INTERNAL_START","","Codes below this point represent OS Errors (i.e. positive…",0,null],[18,"CUSTOM_START","","Codes at or above this point can be used by users to…",0,null],[11,"raw_os_error","","Extract the raw OS error code (if this error came from the…",0,[[],["option",4]]],[11,"code","","Retrieve the error code, if any.",0,[[],[["nonzerou32",3],["option",4]]]],[0,"block","","The `BlockRngCore` trait and implementation helpers",null,null],[3,"BlockRng","rand_core::block","A wrapper type implementing [`RngCore`] for some type…",null,null],[12,"core","","The core part of the RNG, implementing the `generate`…",1,null],[3,"BlockRng64","","A wrapper type implementing [`RngCore`] for some type…",null,null],[12,"core","","The core part of the RNG, implementing the `generate`…",2,null],[8,"BlockRngCore","","A trait for RNGs which do not generate random numbers…",null,null],[16,"Item","","Results element type, e.g. `u32`.",3,null],[16,"Results","","Results type. This is the \'block\' an RNG implementing…",3,null],[10,"generate","","Generate a new block of results.",3,[[]]],[11,"new","","Create a new `BlockRng` from an existing RNG implementing…",1,[[],["blockrng",3]]],[11,"index","","Get the index into the result buffer.",1,[[]]],[11,"reset","","Reset the number of available results. This will force a…",1,[[]]],[11,"generate_and_set","","Generate a new set of results immediately, setting the…",1,[[]]],[11,"new","","Create a new `BlockRng` from an existing RNG implementing…",2,[[],["blockrng64",3]]],[11,"index","","Get the index into the result buffer.",2,[[]]],[11,"reset","","Reset the number of available results. This will force a…",2,[[]]],[11,"generate_and_set","","Generate a new set of results immediately, setting the…",2,[[]]],[0,"impls","rand_core","Helper functions for implementing `RngCore` functions.",null,null],[5,"next_u64_via_u32","rand_core::impls","Implement `next_u64` via `next_u32`, little-endian order.",null,[[]]],[5,"fill_bytes_via_next","","Implement `fill_bytes` via `next_u64` and `next_u32`,…",null,[[]]],[5,"fill_via_u32_chunks","","Implement `fill_bytes` by reading chunks from the output…",null,[[]]],[5,"fill_via_u64_chunks","","Implement `fill_bytes` by reading chunks from the output…",null,[[]]],[5,"next_u32_via_fill","","Implement `next_u32` via `fill_bytes`, little-endian order.",null,[[]]],[5,"next_u64_via_fill","","Implement `next_u64` via `fill_bytes`, little-endian order.",null,[[]]],[0,"le","rand_core","Little-Endian utilities",null,null],[5,"read_u32_into","rand_core::le","Reads unsigned 32 bit integers from `src` into `dst`.…",null,[[]]],[5,"read_u64_into","","Reads unsigned 64 bit integers from `src` into `dst`.…",null,[[]]],[8,"RngCore","rand_core","The core of a random number generator.",null,null],[10,"next_u32","","Return the next random `u32`.",4,[[]]],[10,"next_u64","","Return the next random `u64`.",4,[[]]],[10,"fill_bytes","","Fill `dest` with random data.",4,[[]]],[10,"try_fill_bytes","","Fill `dest` entirely with random data.",4,[[],[["error",3],["result",4]]]],[8,"CryptoRng","","A marker trait used to indicate that an [`RngCore`] or…",null,null],[8,"SeedableRng","","A random number generator that can be explicitly seeded.",null,null],[16,"Seed","","Seed type, which is restricted to types…",5,null],[10,"from_seed","","Create a new PRNG using the given seed.",5,[[]]],[11,"seed_from_u64","","Create a new PRNG using a `u64` seed.",5,[[]]],[11,"from_rng","","Create a new PRNG seeded from another `Rng`.",5,[[["rngcore",8]],[["error",3],["result",4]]]],[11,"from_entropy","","Creates a new instance of the RNG seeded via `getrandom`.",5,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","rand_core::block","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"next_u32","","",1,[[]]],[11,"next_u64","","",1,[[]]],[11,"fill_bytes","","",1,[[]]],[11,"try_fill_bytes","","",1,[[],[["error",3],["result",4]]]],[11,"next_u32","","",2,[[]]],[11,"next_u64","","",2,[[]]],[11,"fill_bytes","","",2,[[]]],[11,"try_fill_bytes","","",2,[[],[["error",3],["result",4]]]],[11,"next_u32","rand_core","",6,[[]]],[11,"next_u64","","",6,[[]]],[11,"fill_bytes","","",6,[[]]],[11,"try_fill_bytes","","",6,[[],[["error",3],["result",4]]]],[11,"from_seed","rand_core::block","",1,[[]]],[11,"seed_from_u64","","",1,[[]]],[11,"from_rng","","",1,[[["rngcore",8]],[["error",3],["result",4]]]],[11,"from_seed","","",2,[[]]],[11,"seed_from_u64","","",2,[[]]],[11,"from_rng","","",2,[[["rngcore",8]],[["error",3],["result",4]]]],[11,"from","rand_core","",0,[[["nonzerou32",3]]]],[11,"from","","",0,[[["error",3]]]],[11,"clone","rand_core::block","",1,[[],["blockrng",3]]],[11,"clone","","",2,[[],["blockrng64",3]]],[11,"clone","rand_core","",6,[[],["osrng",3]]],[11,"default","","",6,[[],["osrng",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","rand_core::block","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","rand_core","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"source","","",0,[[],[["error",8],["option",4]]]],[11,"read","","",4,[[],[["error",3],["result",4]]]]],"p":[[3,"Error"],[3,"BlockRng"],[3,"BlockRng64"],[8,"BlockRngCore"],[8,"RngCore"],[8,"SeedableRng"],[3,"OsRng"]]},\
"rand_distr":{"doc":"Generating random samples from probability distributions.","i":[[8,"Distribution","rand_distr","Types (distributions) that can be used to create a random…",null,null],[10,"sample","","Generate a random value of `T`, using `rng` as the source…",0,[[]]],[11,"sample_iter","","Create an iterator that generates random values of `T`,…",0,[[],["distiter",3]]],[3,"DistIter","","An iterator that generates random values of `T` with…",null,null],[3,"Standard","","A generic random value distribution, implemented for many…",null,null],[3,"Alphanumeric","","Sample a `char`, uniformly distributed over ASCII letters…",null,null],[3,"Uniform","","Sample values uniformly between two bounds.",null,null],[3,"OpenClosed01","","A distribution to sample floating point numbers uniformly…",null,null],[3,"Open01","","A distribution to sample floating point numbers uniformly…",null,null],[3,"Bernoulli","","The Bernoulli distribution.",null,null],[0,"uniform","","A distribution uniformly sampling numbers within a given…",null,null],[3,"Uniform","rand_distr::uniform","Sample values uniformly between two bounds.",null,null],[8,"SampleUniform","","Helper trait for creating objects using the correct…",null,null],[16,"Sampler","","The `UniformSampler` implementation supporting type `X`.",1,null],[8,"UniformSampler","","Helper trait handling actual uniform sampling.",null,null],[16,"X","","The type sampled by this implementation.",2,null],[10,"new","","Construct self, with inclusive lower bound and exclusive…",2,[[]]],[10,"new_inclusive","","Construct self, with inclusive bounds `[low, high]`.",2,[[]]],[10,"sample","","Sample a value.",2,[[]]],[11,"sample_single","","Sample a single value uniformly from a range with…",2,[[]]],[8,"SampleBorrow","","Helper trait similar to `Borrow` but implemented only for…",null,null],[10,"borrow","","Immutably borrows from an owned value. See `Borrow::borrow`",3,[[]]],[3,"UniformInt","","The back-end implementing [`UniformSampler`] for integer…",null,null],[3,"UniformFloat","","The back-end implementing [`UniformSampler`] for…",null,null],[3,"UniformDuration","","The back-end implementing [`UniformSampler`] for `Duration`.",null,null],[0,"weighted","rand_distr","Weighted index sampling",null,null],[0,"alias_method","rand_distr::weighted","This module contains an implementation of alias method for…",null,null],[3,"WeightedIndex","rand_distr::weighted::alias_method","A distribution using weighted sampling to pick a…",null,null],[8,"Weight","","Trait that must be implemented for weights, that are used…",null,null],[18,"MAX","","Maximum number representable by `Self`.",4,null],[18,"ZERO","","Element of `Self` equivalent to 0.",4,null],[10,"try_from_u32_lossy","","Produce an instance of `Self` from a `u32` value, or…",4,[[],["option",4]]],[11,"sum","","Sums all values in slice `values`.",4,[[]]],[3,"WeightedIndex","rand_distr::weighted","A distribution using weighted sampling to pick a…",null,null],[4,"WeightedError","","Error type returned from `WeightedIndex::new`.",null,null],[13,"NoItem","","The provided weight collection contains no items.",5,null],[13,"InvalidWeight","","A weight is either less than zero, greater than the…",5,null],[13,"AllWeightsZero","","All items in the provided weight collection are zero.",5,null],[13,"TooMany","","Too many weights are provided (length greater than…",5,null],[3,"UnitSphere","rand_distr","Samples uniformly from the surface of the unit sphere in…",null,null],[3,"UnitBall","","Samples uniformly from the unit ball (surface and…",null,null],[3,"UnitCircle","","Samples uniformly from the edge of the unit circle in two…",null,null],[3,"UnitDisc","","Samples uniformly from the unit disc in two dimensions.",null,null],[3,"Gamma","","The Gamma distribution `Gamma(shape, scale)` distribution.",null,null],[3,"ChiSquared","","The chi-squared distribution `χ²(k)`, where `k` is the…",null,null],[3,"FisherF","","The Fisher F distribution `F(m, n)`.",null,null],[3,"StudentT","","The Student t distribution, `t(nu)`, where `nu` is the…",null,null],[3,"Beta","","The Beta distribution with shape parameters `alpha` and…",null,null],[3,"Normal","","The normal distribution `N(mean, std_dev**2)`.",null,null],[3,"LogNormal","","The log-normal distribution `ln N(mean, std_dev**2)`.",null,null],[3,"StandardNormal","","Samples floating-point numbers according to the normal…",null,null],[3,"Exp","","The exponential distribution `Exp(lambda)`.",null,null],[3,"Exp1","","Samples floating-point numbers according to the…",null,null],[3,"Pareto","","Samples floating-point numbers according to the Pareto…",null,null],[3,"Pert","","The PERT distribution.",null,null],[3,"Poisson","","The Poisson distribution `Poisson(lambda)`.",null,null],[3,"Binomial","","The binomial distribution `Binomial(n, p)`.",null,null],[3,"Cauchy","","The Cauchy distribution `Cauchy(median, scale)`.",null,null],[3,"Dirichlet","","The dirichelet distribution `Dirichlet(alpha)`.",null,null],[3,"Triangular","","The triangular distribution.",null,null],[3,"Weibull","","Samples floating-point numbers according to the Weibull…",null,null],[4,"GammaError","","Error type returned from `Gamma::new`.",null,null],[13,"ShapeTooSmall","","`shape <= 0` or `nan`.",6,null],[13,"ScaleTooSmall","","`scale <= 0` or `nan`.",6,null],[13,"ScaleTooLarge","","`1 / scale == 0`.",6,null],[4,"ChiSquaredError","","Error type returned from `ChiSquared::new` and…",null,null],[13,"DoFTooSmall","","`0.5 * k <= 0` or `nan`.",7,null],[4,"FisherFError","","Error type returned from `FisherF::new`.",null,null],[13,"MTooSmall","","`m <= 0` or `nan`.",8,null],[13,"NTooSmall","","`n <= 0` or `nan`.",8,null],[4,"BetaError","","Error type returned from `Beta::new`.",null,null],[13,"AlphaTooSmall","","`alpha <= 0` or `nan`.",9,null],[13,"BetaTooSmall","","`beta <= 0` or `nan`.",9,null],[4,"NormalError","","Error type returned from `Normal::new` and `LogNormal::new`.",null,null],[13,"StdDevTooSmall","","`std_dev < 0` or `nan`.",10,null],[4,"ExpError","","Error type returned from `Exp::new`.",null,null],[13,"LambdaTooSmall","","`lambda <= 0` or `nan`.",11,null],[4,"ParetoError","","Error type returned from `Pareto::new`.",null,null],[13,"ScaleTooSmall","","`scale <= 0` or `nan`.",12,null],[13,"ShapeTooSmall","","`shape <= 0` or `nan`.",12,null],[4,"PertError","","Error type returned from [`Pert`] constructors.",null,null],[13,"RangeTooSmall","","`max < min` or `min` or `max` is NaN.",13,null],[13,"ModeRange","","`mode < min` or `mode > max` or `mode` is NaN.",13,null],[13,"ShapeTooSmall","","`shape < 0` or `shape` is NaN",13,null],[4,"PoissonError","","Error type returned from `Poisson::new`.",null,null],[13,"ShapeTooSmall","","`lambda <= 0` or `nan`.",14,null],[4,"BinomialError","","Error type returned from `Binomial::new`.",null,null],[13,"ProbabilityTooSmall","","`p < 0` or `nan`.",15,null],[13,"ProbabilityTooLarge","","`p > 1`.",15,null],[4,"CauchyError","","Error type returned from `Cauchy::new`.",null,null],[13,"ScaleTooSmall","","`scale <= 0` or `nan`.",16,null],[4,"DirichletError","","Error type returned from `Dirchlet::new`.",null,null],[13,"AlphaTooShort","","`alpha.len() < 2`.",17,null],[13,"AlphaTooSmall","","`alpha <= 0.0` or `nan`.",17,null],[13,"SizeTooSmall","","`size < 2`.",17,null],[4,"TriangularError","","Error type returned from [`Triangular::new`].",null,null],[13,"RangeTooSmall","","`max < min` or `min` or `max` is NaN.",18,null],[13,"ModeRange","","`mode < min` or `mode > max` or `mode` is NaN.",18,null],[4,"WeibullError","","Error type returned from `Weibull::new`.",null,null],[13,"ScaleTooSmall","","`scale <= 0` or `nan`.",19,null],[13,"ShapeTooSmall","","`shape <= 0` or `nan`.",19,null],[11,"new","","Construct an object representing the `Gamma(shape, scale)`…",20,[[],[["result",4],["gamma",3],["error",4]]]],[11,"new","","Create a new chi-squared distribution with…",21,[[],[["chisquared",3],["chisquarederror",4],["result",4]]]],[11,"new","","Create a new `FisherF` distribution, with the given…",22,[[],[["fisherferror",4],["result",4],["fisherf",3]]]],[11,"new","","Create a new Student t distribution with `n` degrees of…",23,[[],[["result",4],["chisquarederror",4],["studentt",3]]]],[11,"new","","Construct an object representing the `Beta(alpha, beta)`…",24,[[],[["beta",3],["result",4],["betaerror",4]]]],[11,"new","","Construct a new `Normal` distribution with the given mean…",25,[[],[["normal",3],["error",4],["result",4]]]],[11,"new","","Construct a new `LogNormal` distribution with the given…",26,[[],[["lognormal",3],["error",4],["result",4]]]],[11,"new","","Construct a new `Exp` with the given shape parameter…",27,[[],[["error",4],["exp",3],["result",4]]]],[11,"new","","Construct a new Pareto distribution with given `scale` and…",28,[[],[["pareto",3],["result",4],["error",4]]]],[11,"new","","Set up the PERT distribution with defined `min`, `max` and…",29,[[],[["pert",3],["perterror",4],["result",4]]]],[11,"new_with_shape","","Set up the PERT distribution with defined `min`, `max`,…",29,[[],[["pert",3],["perterror",4],["result",4]]]],[11,"new","","Construct a new `Poisson` with the given shape parameter…",30,[[],[["poisson",3],["error",4],["result",4]]]],[11,"new","","Construct a new `Binomial` with the given shape parameters…",31,[[],[["result",4],["binomial",3],["error",4]]]],[11,"new","","Construct a new `Cauchy` with the given shape parameters…",32,[[],[["cauchy",3],["result",4],["error",4]]]],[11,"new","","Construct a new `Dirichlet` with the given alpha parameter…",33,[[["into",8],["vec",3]],[["result",4],["dirichlet",3],["error",4]]]],[11,"new_with_size","","Construct a new `Dirichlet` with the given shape parameter…",33,[[],[["result",4],["dirichlet",3],["error",4]]]],[11,"new","","Set up the Triangular distribution with defined `min`,…",34,[[],[["result",4],["triangular",3],["triangularerror",4]]]],[11,"new","","Construct a new `Weibull` distribution with given `scale`…",35,[[],[["result",4],["error",4],["weibull",3]]]],[8,"Float","","Trait for floating-point scalar types",null,null],[10,"pi","","The constant π",36,[[]]],[10,"from","","Support approximate representation of a f64 value",36,[[]]],[10,"to_u64","","Support converting to an unsigned integer.",36,[[],["option",4]]],[10,"abs","","Take the absolute value of self",36,[[]]],[10,"floor","","Take the largest integer less than or equal to self",36,[[]]],[10,"exp","","Take the exponential of self",36,[[]]],[10,"ln","","Take the natural logarithm of self",36,[[]]],[10,"sqrt","","Take square root of self",36,[[]]],[10,"powf","","Take self to a floating-point power",36,[[]]],[10,"tan","","Take the tangent of self",36,[[]]],[10,"log_gamma","","Take the logarithm of the gamma function of self",36,[[]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"into_iter","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"vzip","","",37,[[]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"vzip","","",38,[[]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"vzip","","",39,[[]]],[11,"from","rand_distr::uniform","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"vzip","","",40,[[]]],[11,"from","rand_distr","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"vzip","","",41,[[]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"vzip","","",42,[[]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"vzip","","",43,[[]]],[11,"from","rand_distr::uniform","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"vzip","","",44,[[]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"vzip","","",45,[[]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"vzip","","",46,[[]]],[11,"from","rand_distr::weighted::alias_method","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"vzip","","",47,[[]]],[11,"from","rand_distr::weighted","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"vzip","","",48,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","rand_distr","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"vzip","","",49,[[]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"vzip","","",50,[[]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"vzip","","",51,[[]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"vzip","","",52,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"vzip","","",53,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"vzip","","",54,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"vzip","","",31,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"vzip","","",32,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"vzip","","",35,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"fmt","rand_distr::uniform","",40,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rand_distr","",39,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rand_distr::weighted","",5,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rand_distr","",38,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",42,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rand_distr::weighted","",48,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rand_distr","",37,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",43,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rand_distr::uniform","",46,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rand_distr","",41,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rand_distr::uniform","",44,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",45,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rand_distr::weighted::alias_method","",47,[[["formatter",3]],[["error",3],["result",4]]]],[11,"new","rand_distr::uniform","",44,[[],["uniformint",3]]],[11,"new_inclusive","","",44,[[],["uniformint",3]]],[11,"sample","","",44,[[]]],[11,"sample_single","","",44,[[]]],[11,"new","","",44,[[],["uniformint",3]]],[11,"new_inclusive","","",44,[[],["uniformint",3]]],[11,"sample","","",44,[[]]],[11,"sample_single","","",44,[[]]],[11,"new","","",45,[[],["uniformfloat",3]]],[11,"new_inclusive","","",45,[[],["uniformfloat",3]]],[11,"sample","","",45,[[]]],[11,"sample_single","","",45,[[]]],[11,"new","","",44,[[],["uniformint",3]]],[11,"new_inclusive","","",44,[[],["uniformint",3]]],[11,"sample","","",44,[[]]],[11,"sample_single","","",44,[[]]],[11,"new","","",44,[[],["uniformint",3]]],[11,"new_inclusive","","",44,[[],["uniformint",3]]],[11,"sample","","",44,[[]]],[11,"sample_single","","",44,[[]]],[11,"new","","",46,[[],["uniformduration",3]]],[11,"new_inclusive","","",46,[[],["uniformduration",3]]],[11,"sample","","",46,[[],["duration",3]]],[11,"new","","",44,[[],["uniformint",3]]],[11,"new_inclusive","","",44,[[],["uniformint",3]]],[11,"sample","","",44,[[]]],[11,"sample_single","","",44,[[]]],[11,"new","","",45,[[],["uniformfloat",3]]],[11,"new_inclusive","","",45,[[],["uniformfloat",3]]],[11,"sample","","",45,[[]]],[11,"sample_single","","",45,[[]]],[11,"new","","",44,[[],["uniformint",3]]],[11,"new_inclusive","","",44,[[],["uniformint",3]]],[11,"sample","","",44,[[]]],[11,"sample_single","","",44,[[]]],[11,"new","","",44,[[],["uniformint",3]]],[11,"new_inclusive","","",44,[[],["uniformint",3]]],[11,"sample","","",44,[[]]],[11,"sample_single","","",44,[[]]],[11,"new","","",44,[[],["uniformint",3]]],[11,"new_inclusive","","",44,[[],["uniformint",3]]],[11,"sample","","",44,[[]]],[11,"sample_single","","",44,[[]]],[11,"new","","",44,[[],["uniformint",3]]],[11,"new_inclusive","","",44,[[],["uniformint",3]]],[11,"sample","","",44,[[]]],[11,"sample_single","","",44,[[]]],[11,"new","","",44,[[],["uniformint",3]]],[11,"new_inclusive","","",44,[[],["uniformint",3]]],[11,"sample","","",44,[[]]],[11,"sample_single","","",44,[[]]],[11,"new","","",44,[[],["uniformint",3]]],[11,"new_inclusive","","",44,[[],["uniformint",3]]],[11,"sample","","",44,[[]]],[11,"sample_single","","",44,[[]]],[11,"new","","",44,[[],["uniformint",3]]],[11,"new_inclusive","","",44,[[],["uniformint",3]]],[11,"sample","","",44,[[]]],[11,"sample_single","","",44,[[]]],[11,"next","rand_distr","",37,[[],["option",4]]],[11,"size_hint","","",37,[[]]],[11,"clone","rand_distr::weighted","",48,[[],["weightedindex",3]]],[11,"clone","rand_distr","",42,[[],["open01",3]]],[11,"clone","","",43,[[],["bernoulli",3]]],[11,"clone","rand_distr::uniform","",45,[[],["uniformfloat",3]]],[11,"clone","rand_distr::weighted::alias_method","",47,[[],["weightedindex",3]]],[11,"clone","rand_distr","",41,[[],["openclosed01",3]]],[11,"clone","","",38,[[],["standard",3]]],[11,"clone","rand_distr::uniform","",44,[[],["uniformint",3]]],[11,"clone","","",46,[[],["uniformduration",3]]],[11,"clone","rand_distr::weighted","",5,[[],["weightederror",4]]],[11,"clone","rand_distr::uniform","",40,[[],["uniform",3]]],[11,"sample","rand_distr","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",41,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[],["nonzerou64",3]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[],["nonzerou8",3]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[],["nonzerousize",3]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[],["option",4]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",39,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","rand_distr::weighted::alias_method","",47,[[]]],[11,"sample","rand_distr","",41,[[]]],[11,"sample","","",42,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[],["wrapping",3]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[],["nonzerou128",3]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[],["nonzerou16",3]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",42,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","rand_distr::weighted","",48,[[]]],[11,"sample","rand_distr","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","rand_distr::uniform","",40,[[]]],[11,"sample","rand_distr","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",43,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[],["nonzerou32",3]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",38,[[]]],[11,"fmt","rand_distr::weighted","",5,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","rand_distr::uniform","",40,[[["range",3]],["uniform",3]]],[11,"from","","",40,[[["rangeinclusive",3]],["uniform",3]]],[11,"eq","rand_distr::weighted","",5,[[["weightederror",4]]]],[11,"clone","rand_distr","",49,[[],["unitsphere",3]]],[11,"clone","","",50,[[],["unitball",3]]],[11,"clone","","",51,[[],["unitcircle",3]]],[11,"clone","","",52,[[],["unitdisc",3]]],[11,"clone","","",20,[[],["gamma",3]]],[11,"clone","","",6,[[],["error",4]]],[11,"clone","","",21,[[],["chisquared",3]]],[11,"clone","","",7,[[],["chisquarederror",4]]],[11,"clone","","",22,[[],["fisherf",3]]],[11,"clone","","",8,[[],["fisherferror",4]]],[11,"clone","","",23,[[],["studentt",3]]],[11,"clone","","",24,[[],["beta",3]]],[11,"clone","","",9,[[],["betaerror",4]]],[11,"clone","","",53,[[],["standardnormal",3]]],[11,"clone","","",25,[[],["normal",3]]],[11,"clone","","",10,[[],["error",4]]],[11,"clone","","",26,[[],["lognormal",3]]],[11,"clone","","",54,[[],["exp1",3]]],[11,"clone","","",27,[[],["exp",3]]],[11,"clone","","",11,[[],["error",4]]],[11,"clone","","",28,[[],["pareto",3]]],[11,"clone","","",12,[[],["error",4]]],[11,"clone","","",29,[[],["pert",3]]],[11,"clone","","",13,[[],["perterror",4]]],[11,"clone","","",30,[[],["poisson",3]]],[11,"clone","","",14,[[],["error",4]]],[11,"clone","","",31,[[],["binomial",3]]],[11,"clone","","",15,[[],["error",4]]],[11,"clone","","",32,[[],["cauchy",3]]],[11,"clone","","",16,[[],["error",4]]],[11,"clone","","",33,[[],["dirichlet",3]]],[11,"clone","","",17,[[],["error",4]]],[11,"clone","","",34,[[],["triangular",3]]],[11,"clone","","",18,[[],["triangularerror",4]]],[11,"clone","","",35,[[],["weibull",3]]],[11,"clone","","",19,[[],["error",4]]],[11,"eq","","",6,[[["error",4]]]],[11,"eq","","",7,[[["chisquarederror",4]]]],[11,"eq","","",8,[[["fisherferror",4]]]],[11,"eq","","",9,[[["betaerror",4]]]],[11,"eq","","",10,[[["error",4]]]],[11,"eq","","",11,[[["error",4]]]],[11,"eq","","",12,[[["error",4]]]],[11,"eq","","",13,[[["perterror",4]]]],[11,"eq","","",14,[[["error",4]]]],[11,"eq","","",15,[[["error",4]]]],[11,"eq","","",16,[[["error",4]]]],[11,"eq","","",17,[[["error",4]]]],[11,"eq","","",18,[[["triangularerror",4]]]],[11,"eq","","",19,[[["error",4]]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"sample","","",49,[[]]],[11,"sample","","",50,[[]]],[11,"sample","","",51,[[]]],[11,"sample","","",52,[[]]],[11,"sample","","",20,[[]]],[11,"sample","","",21,[[]]],[11,"sample","","",22,[[]]],[11,"sample","","",23,[[]]],[11,"sample","","",24,[[]]],[11,"sample","","",53,[[]]],[11,"sample","","",53,[[]]],[11,"sample","","",25,[[]]],[11,"sample","","",26,[[]]],[11,"sample","","",54,[[]]],[11,"sample","","",54,[[]]],[11,"sample","","",27,[[]]],[11,"sample","","",28,[[]]],[11,"sample","","",29,[[]]],[11,"sample","","",30,[[]]],[11,"sample","","",30,[[]]],[11,"sample","","",31,[[]]],[11,"sample","","",32,[[]]],[11,"sample","","",33,[[],["vec",3]]],[11,"sample","","",34,[[]]],[11,"sample","","",35,[[]]],[11,"new","rand_distr::uniform","Create a new `Uniform` instance which samples uniformly…",40,[[],["uniform",3]]],[11,"new_inclusive","","Create a new `Uniform` instance which samples uniformly…",40,[[],["uniform",3]]],[11,"new","rand_distr","Construct a new `Bernoulli` with the given probability of…",43,[[],[["bernoullierror",4],["bernoulli",3],["result",4]]]],[11,"from_ratio","","Construct a new `Bernoulli` with the probability of…",43,[[],[["bernoullierror",4],["bernoulli",3],["result",4]]]],[11,"new","rand_distr::weighted::alias_method","Creates a new [`WeightedIndex`].",47,[[["vec",3]],[["weightederror",4],["result",4],["weightedindex",3]]]],[11,"new","rand_distr::weighted","Creates a new a `WeightedIndex` [`Distribution`] using the…",48,[[],[["result",4],["weightederror",4],["weightedindex",3]]]],[11,"update_weights","","Update a subset of weights, without changing the number of…",48,[[],[["result",4],["weightederror",4]]]]],"p":[[8,"Distribution"],[8,"SampleUniform"],[8,"UniformSampler"],[8,"SampleBorrow"],[8,"Weight"],[4,"WeightedError"],[4,"GammaError"],[4,"ChiSquaredError"],[4,"FisherFError"],[4,"BetaError"],[4,"NormalError"],[4,"ExpError"],[4,"ParetoError"],[4,"PertError"],[4,"PoissonError"],[4,"BinomialError"],[4,"CauchyError"],[4,"DirichletError"],[4,"TriangularError"],[4,"WeibullError"],[3,"Gamma"],[3,"ChiSquared"],[3,"FisherF"],[3,"StudentT"],[3,"Beta"],[3,"Normal"],[3,"LogNormal"],[3,"Exp"],[3,"Pareto"],[3,"Pert"],[3,"Poisson"],[3,"Binomial"],[3,"Cauchy"],[3,"Dirichlet"],[3,"Triangular"],[3,"Weibull"],[8,"Float"],[3,"DistIter"],[3,"Standard"],[3,"Alphanumeric"],[3,"Uniform"],[3,"OpenClosed01"],[3,"Open01"],[3,"Bernoulli"],[3,"UniformInt"],[3,"UniformFloat"],[3,"UniformDuration"],[3,"WeightedIndex"],[3,"WeightedIndex"],[3,"UnitSphere"],[3,"UnitBall"],[3,"UnitCircle"],[3,"UnitDisc"],[3,"StandardNormal"],[3,"Exp1"]]},\
"rand_pcg":{"doc":"The PCG random number generators.","i":[[3,"Lcg64Xsh32","rand_pcg","A PCG random number generator (XSH RR 64/32 (LCG) variant).",null,null],[3,"Lcg128Xsl64","","A PCG random number generator (XSL RR 128/64 (LCG) variant).",null,null],[3,"Mcg128Xsl64","","A PCG random number generator (XSL 128/64 (MCG) variant).",null,null],[11,"new","","Construct an instance compatible with PCG seed and stream.",0,[[]]],[11,"new","","Construct an instance compatible with PCG seed and stream.",1,[[]]],[11,"new","","Construct an instance compatible with PCG seed.",2,[[]]],[6,"Pcg32","","`Lcg64Xsh32` is also officially known as `pcg32`.",null,null],[6,"Pcg64","","`Lcg128Xsl64` is also officially known as `pcg64`.",null,null],[6,"Pcg64Mcg","","A friendly name for `Mcg128Xsl64` (also known as…",null,null],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"clone","","",0,[[],["lcg64xsh32",3]]],[11,"clone","","",1,[[],["lcg128xsl64",3]]],[11,"clone","","",2,[[],["mcg128xsl64",3]]],[11,"next_u32","","",0,[[]]],[11,"next_u64","","",0,[[]]],[11,"fill_bytes","","",0,[[]]],[11,"try_fill_bytes","","",0,[[],[["error",3],["result",4]]]],[11,"next_u32","","",1,[[]]],[11,"next_u64","","",1,[[]]],[11,"fill_bytes","","",1,[[]]],[11,"try_fill_bytes","","",1,[[],[["error",3],["result",4]]]],[11,"next_u32","","",2,[[]]],[11,"next_u64","","",2,[[]]],[11,"fill_bytes","","",2,[[]]],[11,"try_fill_bytes","","",2,[[],[["error",3],["result",4]]]],[11,"from_seed","","",0,[[]]],[11,"from_seed","","",1,[[]]],[11,"from_seed","","",2,[[]]]],"p":[[3,"Lcg64Xsh32"],[3,"Lcg128Xsl64"],[3,"Mcg128Xsl64"]]},\
"rawpointer":{"doc":"Rawpointer adds extra utility methods to raw pointers…","i":[[5,"ptrdistance","rawpointer","Return the number of elements of `T` from `start` to…",null,[[]]],[8,"PointerExt","","Extension methods for raw pointers",null,null],[10,"offset","","",0,[[]]],[11,"add","","",0,[[]]],[11,"sub","","",0,[[]]],[11,"pre_inc","","Increment the pointer by 1, and return its new value.",0,[[]]],[11,"post_inc","","Increment the pointer by 1, but return its old value.",0,[[]]],[11,"pre_dec","","Decrement the pointer by 1, and return its new value.",0,[[]]],[11,"post_dec","","Decrement the pointer by 1, but return its old value.",0,[[]]],[11,"inc","","Increment by 1",0,[[]]],[11,"dec","","Decrement by 1",0,[[]]],[11,"stride_offset","","Offset the pointer by `s` multiplied by `index`.",0,[[]]]],"p":[[8,"PointerExt"]]},\
"regex":{"doc":"This crate provides a native implementation of regular…","i":[[3,"RegexBuilder","regex","A configurable builder for a regular expression.",null,null],[3,"RegexSet","","Match multiple (possibly overlapping) regular expressions…",null,null],[3,"SetMatches","","A set of matches returned by a regex set.",null,null],[3,"SetMatchesIntoIter","","An owned iterator over the set of matches from a regex set.",null,null],[3,"SetMatchesIter","","A borrowed iterator over the set of matches from a regex…",null,null],[3,"Regex","","A compiled regular expression for matching Unicode strings.",null,null],[3,"Captures","","Captures represents a group of captured strings for a…",null,null],[3,"SubCaptures","","An iterator over capture groups for a particular match of…",null,null],[3,"SubCapturesPos","","An iterator over capture group positions for a particular…",null,null],[3,"SubCapturesNamed","","An Iterator over named capture groups as a tuple with the…",null,null],[3,"CaptureNames","","An iterator over the names of all possible captures.",null,null],[3,"FindCaptures","","An iterator that yields all non-overlapping capture groups…",null,null],[3,"FindMatches","","An iterator over all non-overlapping matches for a…",null,null],[3,"NoExpand","","NoExpand indicates literal string replacement.",null,null],[12,"0","","",0,null],[3,"RegexSplits","","Yields all substrings delimited by a regular expression…",null,null],[3,"RegexSplitsN","","Yields at most `N` substrings delimited by a regular…",null,null],[4,"Error","","An error that occurred during parsing or compiling a…",null,null],[13,"Syntax","","A syntax error.",1,null],[13,"CompiledTooBig","","The compiled program exceeded the set size limit. The…",1,null],[13,"InvalidSet","","DEPRECATED: Will be removed on next major version bump.",1,null],[5,"quote","","Escapes all regular expression meta characters in `text`.",null,[[],["string",3]]],[5,"is_match","","Tests if the given regular expression matches somewhere in…",null,[[],[["error",4],["result",4]]]],[0,"bytes","","Match regular expressions on arbitrary bytes.",null,null],[3,"RegexBuilder","regex::bytes","A configurable builder for a regular expression.",null,null],[3,"RegexSet","","Match multiple (possibly overlapping) regular expressions…",null,null],[3,"SetMatches","","A set of matches returned by a regex set.",null,null],[3,"SetMatchesIntoIter","","An owned iterator over the set of matches from a regex set.",null,null],[3,"SetMatchesIter","","A borrowed iterator over the set of matches from a regex…",null,null],[3,"Regex","","A compiled regular expression for matching arbitrary bytes.",null,null],[3,"FindMatches","","An iterator over all non-overlapping matches for a…",null,null],[3,"FindCaptures","","An iterator that yields all non-overlapping capture groups…",null,null],[3,"Splits","","Yields all substrings delimited by a regular expression…",null,null],[3,"SplitsN","","Yields at most `N` substrings delimited by a regular…",null,null],[3,"CaptureNames","","An iterator over the names of all possible captures.",null,null],[3,"Captures","","Captures represents a group of captured byte strings for a…",null,null],[3,"SubCaptures","","An iterator over capture groups for a particular match of…",null,null],[3,"SubCapturesPos","","An iterator over capture group positions for a particular…",null,null],[3,"SubCapturesNamed","","An Iterator over named capture groups as a tuple with the…",null,null],[3,"NoExpand","","NoExpand indicates literal byte string replacement.",null,null],[12,"0","","",2,null],[8,"Replacer","","Replacer describes types that can be used to replace…",null,null],[10,"replace_append","","Appends text to `dst` to replace the current match.",3,[[["captures",3],["vec",3]]]],[11,"no_expansion","","Return a fixed unchanging replacement byte string.",3,[[],[["cow",4],["option",4]]]],[11,"new","","Create a new regular expression builder with the given…",4,[[],["regexbuilder",3]]],[11,"compile","","Consume the builder and compile the regular expression.",4,[[],[["result",4],["regex",3],["error",4]]]],[11,"case_insensitive","","Set the value for the case insensitive (`i`) flag.",4,[[],["regexbuilder",3]]],[11,"multi_line","","Set the value for the multi-line matching (`m`) flag.",4,[[],["regexbuilder",3]]],[11,"dot_matches_new_line","","Set the value for the any character (`s`) flag, where in…",4,[[],["regexbuilder",3]]],[11,"swap_greed","","Set the value for the greedy swap (`U`) flag.",4,[[],["regexbuilder",3]]],[11,"ignore_whitespace","","Set the value for the ignore whitespace (`x`) flag.",4,[[],["regexbuilder",3]]],[11,"unicode","","Set the value for the Unicode (`u`) flag.",4,[[],["regexbuilder",3]]],[11,"size_limit","","Set the approximate size limit of the compiled regular…",4,[[],["regexbuilder",3]]],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",4,[[],["regexbuilder",3]]],[11,"new","regex","Create a new regular expression builder with the given…",5,[[],["regexbuilder",3]]],[11,"compile","","Consume the builder and compile the regular expression.",5,[[],[["regex",3],["error",4],["result",4]]]],[11,"case_insensitive","","Set the value for the case insensitive (`i`) flag.",5,[[],["regexbuilder",3]]],[11,"multi_line","","Set the value for the multi-line matching (`m`) flag.",5,[[],["regexbuilder",3]]],[11,"dot_matches_new_line","","Set the value for the any character (`s`) flag, where in…",5,[[],["regexbuilder",3]]],[11,"swap_greed","","Set the value for the greedy swap (`U`) flag.",5,[[],["regexbuilder",3]]],[11,"ignore_whitespace","","Set the value for the ignore whitespace (`x`) flag.",5,[[],["regexbuilder",3]]],[11,"unicode","","Set the value for the Unicode (`u`) flag.",5,[[],["regexbuilder",3]]],[11,"size_limit","","Set the approximate size limit of the compiled regular…",5,[[],["regexbuilder",3]]],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",5,[[],["regexbuilder",3]]],[11,"no_expansion","regex::bytes","Return a fixed unchanging replacement byte string.",3,[[],[["cow",4],["option",4]]]],[11,"new","","Compiles a regular expression. Once compiled, it can be…",6,[[],[["result",4],["regex",3],["error",4]]]],[11,"with_size_limit","","Compiles a regular expression with the given size limit.",6,[[],[["result",4],["regex",3],["error",4]]]],[11,"is_match","","Returns true if and only if the regex matches the string…",6,[[]]],[11,"find","","Returns the start and end byte range of the leftmost-first…",6,[[],["option",4]]],[11,"find_iter","","Returns an iterator for each successive non-overlapping…",6,[[],["findmatches",3]]],[11,"captures","","Returns the capture groups corresponding to the…",6,[[],[["captures",3],["option",4]]]],[11,"captures_iter","","Returns an iterator over all the non-overlapping capture…",6,[[],["findcaptures",3]]],[11,"split","","Returns an iterator of substrings of `text` delimited by a…",6,[[],["splits",3]]],[11,"splitn","","Returns an iterator of at most `limit` substrings of…",6,[[],["splitsn",3]]],[11,"replace","","Replaces the leftmost-first match with the replacement…",6,[[["replacer",8]],["vec",3]]],[11,"replace_all","","Replaces all non-overlapping matches in `text` with the…",6,[[["replacer",8]],["vec",3]]],[11,"replacen","","Replaces at most `limit` non-overlapping matches in `text`…",6,[[["replacer",8]],["vec",3]]],[11,"shortest_match","","Returns the end location of a match in the text given.",6,[[],["option",4]]],[11,"as_str","","Returns the original string of this regex.",6,[[]]],[11,"capture_names","","Returns an iterator over the capture names.",6,[[],["capturenames",3]]],[11,"captures_len","","Returns the number of captures.",6,[[]]],[11,"pos","","Returns the start and end positions of the Nth capture…",7,[[],["option",4]]],[11,"at","","Returns the matched string for the capture group `i`. If…",7,[[],["option",4]]],[11,"name","","Returns the matched string for the capture group named…",7,[[],["option",4]]],[11,"iter","","Creates an iterator of all the capture groups in order of…",7,[[],["subcaptures",3]]],[11,"iter_pos","","Creates an iterator of all the capture group positions in…",7,[[],["subcapturespos",3]]],[11,"iter_named","","Creates an iterator of all named groups as an tuple with…",7,[[],["subcapturesnamed",3]]],[11,"expand","","Expands all instances of `$name` in `text` to the…",7,[[["vec",3]]]],[11,"len","","Returns the number of captured groups.",7,[[]]],[11,"is_empty","","Returns true if and only if there are no captured groups.",7,[[]]],[11,"new","regex","Create a new regex set with the given regular expressions.",8,[[],[["regexset",3],["error",4],["result",4]]]],[11,"is_match","","Returns true if and only if one of the regexes in this set…",8,[[]]],[11,"matches","","Returns the set of regular expressions that match in the…",8,[[],["setmatches",3]]],[11,"len","","Returns the total number of regular expressions in this set.",8,[[]]],[11,"matched_any","","Whether this set contains any matches.",9,[[]]],[11,"matched","","Whether the regex at the given index matched.",9,[[]]],[11,"len","","The total number of regexes in the set that created these…",9,[[]]],[11,"iter","","Returns an iterator over indexes in the regex that matched.",9,[[],["setmatchesiter",3]]],[11,"new","regex::bytes","Create a new regex set with the given regular expressions.",10,[[],[["result",4],["error",4],["regexset",3]]]],[11,"is_match","","Returns true if and only if one of the regexes in this set…",10,[[]]],[11,"matches","","Returns the set of regular expressions that match in the…",10,[[],["setmatches",3]]],[11,"len","","Returns the total number of regular expressions in this set.",10,[[]]],[11,"matched_any","","Whether this set contains any matches.",11,[[]]],[11,"matched","","Whether the regex at the given index matched.",11,[[]]],[11,"len","","The total number of regexes in the set that created these…",11,[[]]],[11,"iter","","Returns an iterator over indexes in the regex that matched.",11,[[],["setmatchesiter",3]]],[11,"new","regex","Compiles a regular expression. Once compiled, it can be…",12,[[],[["regex",3],["error",4],["result",4]]]],[11,"with_size_limit","","Compiles a regular expression with the given size limit.",12,[[],[["regex",3],["error",4],["result",4]]]],[11,"is_match","","Returns true if and only if the regex matches the string…",12,[[]]],[11,"find","","Returns the start and end byte range of the leftmost-first…",12,[[],["option",4]]],[11,"find_iter","","Returns an iterator for each successive non-overlapping…",12,[[],["findmatches",3]]],[11,"captures","","Returns the capture groups corresponding to the…",12,[[],[["option",4],["captures",3]]]],[11,"captures_iter","","Returns an iterator over all the non-overlapping capture…",12,[[],["findcaptures",3]]],[11,"split","","Returns an iterator of substrings of `text` delimited by a…",12,[[],["regexsplits",3]]],[11,"splitn","","Returns an iterator of at most `limit` substrings of…",12,[[],["regexsplitsn",3]]],[11,"replace","","Replaces the leftmost-first match with the replacement…",12,[[["replacer",8]],["string",3]]],[11,"replace_all","","Replaces all non-overlapping matches in `text` with the…",12,[[["replacer",8]],["string",3]]],[11,"replacen","","Replaces at most `limit` non-overlapping matches in `text`…",12,[[["replacer",8]],["string",3]]],[11,"shortest_match","","Returns the end location of a match in the text given.",12,[[],["option",4]]],[11,"as_str","","Returns the original string of this regex.",12,[[]]],[11,"capture_names","","Returns an iterator over the capture names.",12,[[],["capturenames",3]]],[11,"captures_len","","Returns the number of captures.",12,[[]]],[11,"pos","","Returns the start and end positions of the Nth capture…",13,[[],["option",4]]],[11,"at","","Returns the matched string for the capture group `i`. If…",13,[[],["option",4]]],[11,"name","","Returns the matched string for the capture group named…",13,[[],["option",4]]],[11,"iter","","Creates an iterator of all the capture groups in order of…",13,[[],["subcaptures",3]]],[11,"iter_pos","","Creates an iterator of all the capture group positions in…",13,[[],["subcapturespos",3]]],[11,"iter_named","","Creates an iterator of all named groups as an tuple with…",13,[[],["subcapturesnamed",3]]],[11,"expand","","Expands all instances of `$name` in `text` to the…",13,[[],["string",3]]],[11,"len","","Returns the number of captured groups.",13,[[]]],[11,"is_empty","","Returns true if and only if there are no captured groups.",13,[[]]],[8,"Replacer","","Replacer describes types that can be used to replace…",null,null],[10,"reg_replace","","Returns a possibly owned string that is used to replace…",14,[[["captures",3]],["cow",4]]],[11,"no_expand","","Returns a possibly owned string that never needs expansion.",14,[[],[["cow",4],["option",4]]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"into_iter","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"into_iter","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"into_iter","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"into_iter","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"into_iter","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"into_iter","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"into_iter","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"into_iter","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"into_iter","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"into_iter","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"into_iter","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","regex::bytes","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"into_iter","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"into_iter","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"into_iter","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"into_iter","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"into_iter","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"into_iter","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"into_iter","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"into_iter","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"into_iter","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"into_iter","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"into_iter","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"replace_append","","",2,[[["captures",3],["vec",3]]]],[11,"no_expansion","","",2,[[],[["cow",4],["option",4]]]],[11,"reg_replace","regex","",0,[[["captures",3]],["cow",4]]],[11,"no_expand","","",0,[[],[["cow",4],["option",4]]]],[11,"from","","",1,[[["error",3]],["error",4]]],[11,"next_back","","",15,[[],["option",4]]],[11,"next_back","","",16,[[],["option",4]]],[11,"next_back","regex::bytes","",25,[[],["option",4]]],[11,"next_back","","",26,[[],["option",4]]],[11,"into_iter","regex","",9,[[]]],[11,"into_iter","regex::bytes","",11,[[]]],[11,"next","","",27,[[],["option",4]]],[11,"next","","",28,[[],[["captures",3],["option",4]]]],[11,"next","","",29,[[],["option",4]]],[11,"next","","",30,[[],["option",4]]],[11,"next","","",31,[[],[["option",4],["option",4]]]],[11,"size_hint","","",31,[[]]],[11,"next","","",32,[[],[["option",4],["option",4]]]],[11,"next","","",33,[[],[["option",4],["option",4]]]],[11,"next","","",34,[[],["option",4]]],[11,"next","regex","",15,[[],["option",4]]],[11,"next","","",16,[[],["option",4]]],[11,"next","regex::bytes","",25,[[],["option",4]]],[11,"next","","",26,[[],["option",4]]],[11,"next","regex","",20,[[],[["option",4],["option",4]]]],[11,"size_hint","","",20,[[]]],[11,"next","","",23,[[],["option",4]]],[11,"next","","",24,[[],["option",4]]],[11,"next","","",17,[[],[["option",4],["option",4]]]],[11,"next","","",18,[[],[["option",4],["option",4]]]],[11,"next","","",19,[[],["option",4]]],[11,"next","","",21,[[],[["option",4],["captures",3]]]],[11,"next","","",22,[[],["option",4]]],[11,"clone","regex::bytes","",6,[[],["regex",3]]],[11,"clone","regex","",8,[[],["regexset",3]]],[11,"clone","","",9,[[],["setmatches",3]]],[11,"clone","","",16,[[],["setmatchesiter",3]]],[11,"clone","regex::bytes","",10,[[],["regexset",3]]],[11,"clone","","",11,[[],["setmatches",3]]],[11,"clone","","",26,[[],["setmatchesiter",3]]],[11,"clone","regex","",12,[[],["regex",3]]],[11,"eq","","",12,[[["regex",3]]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","regex::bytes","Shows the original regular expression.",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","regex","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","regex::bytes","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","regex","Shows the original regular expression.",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","regex::bytes","Shows the original regular expression.",6,[[["formatter",3]],["result",6]]],[11,"fmt","regex","Shows the original regular expression.",12,[[["formatter",3]],["result",6]]],[11,"index","regex::bytes","",7,[[]]],[11,"index","","",7,[[]]],[11,"index","regex","",13,[[]]],[11,"index","","",13,[[]]],[11,"from_str","regex::bytes","Attempts to parse a string into a regular expression",6,[[],[["result",4],["regex",3],["error",4]]]],[11,"from_str","regex","Attempts to parse a string into a regular expression",12,[[],[["regex",3],["error",4],["result",4]]]],[11,"description","","",1,[[]]],[11,"cause","","",1,[[],[["error",8],["option",4]]]],[11,"no_expand","","Returns a possibly owned string that never needs expansion.",14,[[],[["cow",4],["option",4]]]]],"p":[[3,"NoExpand"],[4,"Error"],[3,"NoExpand"],[8,"Replacer"],[3,"RegexBuilder"],[3,"RegexBuilder"],[3,"Regex"],[3,"Captures"],[3,"RegexSet"],[3,"SetMatches"],[3,"RegexSet"],[3,"SetMatches"],[3,"Regex"],[3,"Captures"],[8,"Replacer"],[3,"SetMatchesIntoIter"],[3,"SetMatchesIter"],[3,"SubCaptures"],[3,"SubCapturesPos"],[3,"SubCapturesNamed"],[3,"CaptureNames"],[3,"FindCaptures"],[3,"FindMatches"],[3,"RegexSplits"],[3,"RegexSplitsN"],[3,"SetMatchesIntoIter"],[3,"SetMatchesIter"],[3,"FindMatches"],[3,"FindCaptures"],[3,"Splits"],[3,"SplitsN"],[3,"CaptureNames"],[3,"SubCaptures"],[3,"SubCapturesPos"],[3,"SubCapturesNamed"]]},\
"regex_syntax":{"doc":"This crate provides a robust regular expression parser.","i":[[3,"Parser","regex_syntax","A convenience parser for regular expressions.",null,null],[3,"ParserBuilder","","A builder for a regular expression parser.",null,null],[3,"UnicodeWordError","","An error that occurs when the Unicode-aware `\\\\w` class is…",null,null],[4,"Error","","This error type encompasses any error that can be returned…",null,null],[13,"Parse","","An error that occurred while translating concrete syntax…",0,null],[13,"Translate","","An error that occurred while translating abstract syntax…",0,null],[5,"escape","","Escapes all regular expression meta characters in `text`.",null,[[],["string",3]]],[5,"escape_into","","Escapes all meta characters in `text` and writes the…",null,[[["string",3]]]],[5,"is_meta_character","","Returns true if the give character has significance in a…",null,[[]]],[5,"is_word_character","","Returns true if and only if the given character is a…",null,[[]]],[5,"try_is_word_character","","Returns true if and only if the given character is a…",null,[[],[["result",4],["unicodeworderror",3]]]],[5,"is_word_byte","","Returns true if and only if the given character is an…",null,[[]]],[0,"ast","","Defines an abstract syntax for regular expressions.",null,null],[3,"Error","regex_syntax::ast","An error that occurred while parsing a regular expression…",null,null],[3,"Span","","Span represents the position information of a single AST…",null,null],[12,"start","","The start byte offset.",1,null],[12,"end","","The end byte offset.",1,null],[3,"Position","","A single position in a regular expression.",null,null],[12,"offset","","The absolute offset of this position, starting at `0` from…",2,null],[12,"line","","The line number, starting at `1`.",2,null],[12,"column","","The approximate column number, starting at `1`.",2,null],[3,"WithComments","","An abstract syntax tree for a singular expression along…",null,null],[12,"ast","","The actual ast.",3,null],[12,"comments","","All comments found in the original regular expression.",3,null],[3,"Comment","","A comment from a regular expression with an associated span.",null,null],[12,"span","","The span of this comment, including the beginning `#` and…",4,null],[12,"comment","","The comment text, starting with the first character…",4,null],[3,"Alternation","","An alternation of regular expressions.",null,null],[12,"span","","The span of this alternation.",5,null],[12,"asts","","The alternate regular expressions.",5,null],[3,"Concat","","A concatenation of regular expressions.",null,null],[12,"span","","The span of this concatenation.",6,null],[12,"asts","","The concatenation regular expressions.",6,null],[3,"Literal","","A single literal expression.",null,null],[12,"span","","The span of this literal.",7,null],[12,"kind","","The kind of this literal.",7,null],[12,"c","","The Unicode scalar value corresponding to this literal.",7,null],[3,"ClassPerl","","A Perl character class.",null,null],[12,"span","","The span of this class.",8,null],[12,"kind","","The kind of Perl class.",8,null],[12,"negated","","Whether the class is negated or not. e.g., `\\\\d` is not…",8,null],[3,"ClassAscii","","An ASCII character class.",null,null],[12,"span","","The span of this class.",9,null],[12,"kind","","The kind of ASCII class.",9,null],[12,"negated","","Whether the class is negated or not. e.g., `[[:alpha:]]`…",9,null],[3,"ClassUnicode","","A Unicode character class.",null,null],[12,"span","","The span of this class.",10,null],[12,"negated","","Whether this class is negated or not.",10,null],[12,"kind","","The kind of Unicode class.",10,null],[3,"ClassBracketed","","A bracketed character class, e.g., `[a-z0-9]`.",null,null],[12,"span","","The span of this class.",11,null],[12,"negated","","Whether this class is negated or not. e.g., `[a]` is not…",11,null],[12,"kind","","The type of this set. A set is either a normal union of…",11,null],[3,"ClassSetRange","","A single character class range in a set.",null,null],[12,"span","","The span of this range.",12,null],[12,"start","","The start of this range.",12,null],[12,"end","","The end of this range.",12,null],[3,"ClassSetUnion","","A union of items inside a character class set.",null,null],[12,"span","","The span of the items in this operation. e.g., the…",13,null],[12,"items","","The sequence of items that make up this union.",13,null],[3,"ClassSetBinaryOp","","A Unicode character class set operation.",null,null],[12,"span","","The span of this operation. e.g., the `a-z--[h-p]` in…",14,null],[12,"kind","","The type of this set operation.",14,null],[12,"lhs","","The left hand side of the operation.",14,null],[12,"rhs","","The right hand side of the operation.",14,null],[3,"Assertion","","A single zero-width assertion.",null,null],[12,"span","","The span of this assertion.",15,null],[12,"kind","","The assertion kind, e.g., `\\\\b` or `^`.",15,null],[3,"Repetition","","A repetition operation applied to a regular expression.",null,null],[12,"span","","The span of this operation.",16,null],[12,"op","","The actual operation.",16,null],[12,"greedy","","Whether this operation was applied greedily or not.",16,null],[12,"ast","","The regular expression under repetition.",16,null],[3,"RepetitionOp","","The repetition operator itself.",null,null],[12,"span","","The span of this operator. This includes things like `+`,…",17,null],[12,"kind","","The type of operation.",17,null],[3,"Group","","A grouped regular expression.",null,null],[12,"span","","The span of this group.",18,null],[12,"kind","","The kind of this group.",18,null],[12,"ast","","The regular expression in this group.",18,null],[3,"CaptureName","","A capture name.",null,null],[12,"span","","The span of this capture name.",19,null],[12,"name","","The capture name.",19,null],[12,"index","","The capture index.",19,null],[3,"SetFlags","","A group of flags that is not applied to a particular…",null,null],[12,"span","","The span of these flags, including the grouping parentheses.",20,null],[12,"flags","","The actual sequence of flags.",20,null],[3,"Flags","","A group of flags.",null,null],[12,"span","","The span of this group of flags.",21,null],[12,"items","","A sequence of flag items. Each item is either a flag or a…",21,null],[3,"FlagsItem","","A single item in a group of flags.",null,null],[12,"span","","The span of this item.",22,null],[12,"kind","","The kind of this item.",22,null],[4,"ErrorKind","","The type of an error that occurred while building an AST.",null,null],[13,"CaptureLimitExceeded","","The capturing group limit was exceeded.",23,null],[13,"ClassEscapeInvalid","","An invalid escape sequence was found in a character class…",23,null],[13,"ClassRangeInvalid","","An invalid character class range was found. An invalid…",23,null],[13,"ClassRangeLiteral","","An invalid range boundary was found in a character class.…",23,null],[13,"ClassUnclosed","","An opening `[` was found with no corresponding closing `]`.",23,null],[13,"DecimalEmpty","","Note that this error variant is no longer used. Namely, a…",23,null],[13,"DecimalInvalid","","An invalid decimal number was given where one was expected.",23,null],[13,"EscapeHexEmpty","","A bracketed hex literal was empty.",23,null],[13,"EscapeHexInvalid","","A bracketed hex literal did not correspond to a Unicode…",23,null],[13,"EscapeHexInvalidDigit","","An invalid hexadecimal digit was found.",23,null],[13,"EscapeUnexpectedEof","","EOF was found before an escape sequence was completed.",23,null],[13,"EscapeUnrecognized","","An unrecognized escape sequence.",23,null],[13,"FlagDanglingNegation","","A dangling negation was used when setting flags, e.g., `i-`.",23,null],[13,"FlagDuplicate","","A flag was used twice, e.g., `i-i`.",23,null],[12,"original","regex_syntax::ast::ErrorKind","The position of the original flag. The error position…",24,null],[13,"FlagRepeatedNegation","regex_syntax::ast","The negation operator was used twice, e.g., `-i-s`.",23,null],[12,"original","regex_syntax::ast::ErrorKind","The position of the original negation operator. The error…",25,null],[13,"FlagUnexpectedEof","regex_syntax::ast","Expected a flag but got EOF, e.g., `(?`.",23,null],[13,"FlagUnrecognized","","Unrecognized flag, e.g., `a`.",23,null],[13,"GroupNameDuplicate","","A duplicate capture name was found.",23,null],[12,"original","regex_syntax::ast::ErrorKind","The position of the initial occurrence of the capture…",26,null],[13,"GroupNameEmpty","regex_syntax::ast","A capture group name is empty, e.g., `(?P<>abc)`.",23,null],[13,"GroupNameInvalid","","An invalid character was seen for a capture group name.…",23,null],[13,"GroupNameUnexpectedEof","","A closing `>` could not be found for a capture group name.",23,null],[13,"GroupUnclosed","","An unclosed group, e.g., `(ab`.",23,null],[13,"GroupUnopened","","An unopened group, e.g., `ab)`.",23,null],[13,"NestLimitExceeded","","The nest limit was exceeded. The limit stored here is the…",23,null],[13,"RepetitionCountInvalid","","The range provided in a counted repetition operator is…",23,null],[13,"RepetitionCountDecimalEmpty","","An opening `{` was not followed by a valid decimal value.…",23,null],[13,"RepetitionCountUnclosed","","An opening `{` was found with no corresponding closing `}`.",23,null],[13,"RepetitionMissing","","A repetition operator was applied to a missing…",23,null],[13,"UnicodeClassInvalid","","The Unicode class is not valid. This typically occurs when…",23,null],[13,"UnsupportedBackreference","","When octal support is disabled, this error is produced…",23,null],[13,"UnsupportedLookAround","","When syntax similar to PCRE\'s look-around is used, this…",23,null],[4,"Ast","","An abstract syntax tree for a single regular expression.",null,null],[13,"Empty","","An empty regex that matches everything.",27,null],[13,"Flags","","A set of flags, e.g., `(?is)`.",27,null],[13,"Literal","","A single character literal, which includes escape sequences.",27,null],[13,"Dot","","The \\\"any character\\\" class.",27,null],[13,"Assertion","","A single zero-width assertion.",27,null],[13,"Class","","A single character class. This includes all forms of…",27,null],[13,"Repetition","","A repetition operator applied to an arbitrary regular…",27,null],[13,"Group","","A grouped regular expression.",27,null],[13,"Alternation","","An alternation of regular expressions.",27,null],[13,"Concat","","A concatenation of regular expressions.",27,null],[4,"LiteralKind","","The kind of a single literal expression.",null,null],[13,"Verbatim","","The literal is written verbatim, e.g., `a` or `☃`.",28,null],[13,"Punctuation","","The literal is written as an escape because it is…",28,null],[13,"Octal","","The literal is written as an octal escape, e.g., `\\\\141`.",28,null],[13,"HexFixed","","The literal is written as a hex code with a fixed number…",28,null],[13,"HexBrace","","The literal is written as a hex code with a bracketed…",28,null],[13,"Special","","The literal is written as a specially recognized escape,…",28,null],[4,"SpecialLiteralKind","","The type of a special literal.",null,null],[13,"Bell","","Bell, spelled `\\\\a` (`\\\\x07`).",29,null],[13,"FormFeed","","Form feed, spelled `\\\\f` (`\\\\x0C`).",29,null],[13,"Tab","","Tab, spelled `\\\\t` (`\\\\x09`).",29,null],[13,"LineFeed","","Line feed, spelled `\\\\n` (`\\\\x0A`).",29,null],[13,"CarriageReturn","","Carriage return, spelled `\\\\r` (`\\\\x0D`).",29,null],[13,"VerticalTab","","Vertical tab, spelled `\\\\v` (`\\\\x0B`).",29,null],[13,"Space","","Space, spelled `\\\\ ` (`\\\\x20`). Note that this can only…",29,null],[4,"HexLiteralKind","","The type of a Unicode hex literal.",null,null],[13,"X","","A `\\\\x` prefix. When used without brackets, this form is…",30,null],[13,"UnicodeShort","","A `\\\\u` prefix. When used without brackets, this form is…",30,null],[13,"UnicodeLong","","A `\\\\U` prefix. When used without brackets, this form is…",30,null],[4,"Class","","A single character class expression.",null,null],[13,"Unicode","","A Unicode character class, e.g., `\\\\pL` or `\\\\p{Greek}`.",31,null],[13,"Perl","","A perl character class, e.g., `\\\\d` or `\\\\W`.",31,null],[13,"Bracketed","","A bracketed character class set, which may contain zero or…",31,null],[4,"ClassPerlKind","","The available Perl character classes.",null,null],[13,"Digit","","Decimal numbers.",32,null],[13,"Space","","Whitespace.",32,null],[13,"Word","","Word characters.",32,null],[4,"ClassAsciiKind","","The available ASCII character classes.",null,null],[13,"Alnum","","`[0-9A-Za-z]`",33,null],[13,"Alpha","","`[A-Za-z]`",33,null],[13,"Ascii","","`[\\\\x00-\\\\x7F]`",33,null],[13,"Blank","","`[ \\\\t]`",33,null],[13,"Cntrl","","`[\\\\x00-\\\\x1F\\\\x7F]`",33,null],[13,"Digit","","`[0-9]`",33,null],[13,"Graph","","`[!-~]`",33,null],[13,"Lower","","`[a-z]`",33,null],[13,"Print","","`[ -~]`",33,null],[13,"Punct","","`[!-/:-@\\\\[-`{-~]`",33,null],[13,"Space","","`[\\\\t\\\\n\\\\v\\\\f\\\\r ]`",33,null],[13,"Upper","","`[A-Z]`",33,null],[13,"Word","","`[0-9A-Za-z_]`",33,null],[13,"Xdigit","","`[0-9A-Fa-f]`",33,null],[4,"ClassUnicodeKind","","The available forms of Unicode character classes.",null,null],[13,"OneLetter","","A one letter abbreviated class, e.g., `\\\\pN`.",34,null],[13,"Named","","A binary property, general category or script. The string…",34,null],[13,"NamedValue","","A property name and an associated value.",34,null],[12,"op","regex_syntax::ast::ClassUnicodeKind","The type of Unicode op used to associate `name` with…",35,null],[12,"name","","The property name (which may be empty).",35,null],[12,"value","","The property value (which may be empty).",35,null],[4,"ClassUnicodeOpKind","regex_syntax::ast","The type of op used in a Unicode character class.",null,null],[13,"Equal","","A property set to a specific value, e.g.,…",36,null],[13,"Colon","","A property set to a specific value using a colon, e.g.,…",36,null],[13,"NotEqual","","A property that isn\'t a particular value, e.g.,…",36,null],[4,"ClassSet","","A character class set.",null,null],[13,"Item","","An item, which can be a single literal, range, nested…",37,null],[13,"BinaryOp","","A single binary operation (i.e., &&, -- or ~~).",37,null],[4,"ClassSetItem","","A single component of a character class set.",null,null],[13,"Empty","","An empty item.",38,null],[13,"Literal","","A single literal.",38,null],[13,"Range","","A range between two literals.",38,null],[13,"Ascii","","An ASCII character class, e.g., `[:alnum:]` or `[:punct:]`.",38,null],[13,"Unicode","","A Unicode character class, e.g., `\\\\pL` or `\\\\p{Greek}`.",38,null],[13,"Perl","","A perl character class, e.g., `\\\\d` or `\\\\W`.",38,null],[13,"Bracketed","","A bracketed character class set, which may contain zero or…",38,null],[13,"Union","","A union of items.",38,null],[4,"ClassSetBinaryOpKind","","The type of a Unicode character class set operation.",null,null],[13,"Intersection","","The intersection of two sets, e.g., `\\\\pN&&[a-z]`.",39,null],[13,"Difference","","The difference of two sets, e.g., `\\\\pN--[0-9]`.",39,null],[13,"SymmetricDifference","","The symmetric difference of two sets. The symmetric…",39,null],[4,"AssertionKind","","An assertion kind.",null,null],[13,"StartLine","","`^`",40,null],[13,"EndLine","","`$`",40,null],[13,"StartText","","`\\\\A`",40,null],[13,"EndText","","`\\\\z`",40,null],[13,"WordBoundary","","`\\\\b`",40,null],[13,"NotWordBoundary","","`\\\\B`",40,null],[4,"RepetitionKind","","The kind of a repetition operator.",null,null],[13,"ZeroOrOne","","`?`",41,null],[13,"ZeroOrMore","","`*`",41,null],[13,"OneOrMore","","`+`",41,null],[13,"Range","","`{m,n}`",41,null],[4,"RepetitionRange","","A range repetition operator.",null,null],[13,"Exactly","","`{m}`",42,null],[13,"AtLeast","","`{m,}`",42,null],[13,"Bounded","","`{m,n}`",42,null],[4,"GroupKind","","The kind of a group.",null,null],[13,"CaptureIndex","","`(a)`",43,null],[13,"CaptureName","","`(?P<name>a)`",43,null],[13,"NonCapturing","","`(?:a)` and `(?i:a)`",43,null],[4,"FlagsItemKind","","The kind of an item in a group of flags.",null,null],[13,"Negation","","A negation operator applied to all subsequent flags in the…",44,null],[13,"Flag","","A single flag in a group.",44,null],[4,"Flag","","A single flag.",null,null],[13,"CaseInsensitive","","`i`",45,null],[13,"MultiLine","","`m`",45,null],[13,"DotMatchesNewLine","","`s`",45,null],[13,"SwapGreed","","`U`",45,null],[13,"Unicode","","`u`",45,null],[13,"IgnoreWhitespace","","`x`",45,null],[5,"visit","","Executes an implementation of `Visitor` in constant stack…",null,[[["visitor",8],["ast",4]],["result",4]]],[0,"parse","","This module provides a regular expression parser.",null,null],[3,"ParserBuilder","regex_syntax::ast::parse","A builder for a regular expression parser.",null,null],[3,"Parser","","A regular expression parser.",null,null],[11,"new","","Create a new parser builder with a default configuration.",46,[[],["parserbuilder",3]]],[11,"build","","Build a parser from this configuration with the given…",46,[[],["parser",3]]],[11,"nest_limit","","Set the nesting limit for this parser.",46,[[],["parserbuilder",3]]],[11,"octal","","Whether to support octal syntax or not.",46,[[],["parserbuilder",3]]],[11,"ignore_whitespace","","Enable verbose mode in the regular expression.",46,[[],["parserbuilder",3]]],[11,"new","","Create a new parser with a default configuration.",47,[[],["parser",3]]],[11,"parse","","Parse the regular expression into an abstract syntax tree.",47,[[],[["error",3],["result",4],["ast",4]]]],[11,"parse_with_comments","","Parse the regular expression and return an abstract syntax…",47,[[],[["withcomments",3],["error",3],["result",4]]]],[0,"print","regex_syntax::ast","This module provides a regular expression printer for `Ast`.",null,null],[3,"Printer","regex_syntax::ast::print","A printer for a regular expression abstract syntax tree.",null,null],[11,"new","","Create a new printer.",48,[[],["printer",3]]],[11,"print","","Print the given `Ast` to the given writer. The writer must…",48,[[["write",8],["ast",4]],["result",6]]],[8,"Visitor","regex_syntax::ast","A trait for visiting an abstract syntax tree (AST) in…",null,null],[16,"Output","","The result of visiting an AST.",49,null],[16,"Err","","An error that visiting an AST might return.",49,null],[10,"finish","","All implementors of `Visitor` must provide a `finish`…",49,[[],["result",4]]],[11,"start","","This method is called before beginning traversal of the AST.",49,[[]]],[11,"visit_pre","","This method is called on an `Ast` before descending into…",49,[[["ast",4]],["result",4]]],[11,"visit_post","","This method is called on an `Ast` after descending all of…",49,[[["ast",4]],["result",4]]],[11,"visit_alternation_in","","This method is called between child nodes of an…",49,[[],["result",4]]],[11,"visit_class_set_item_pre","","This method is called on every `ClassSetItem` before…",49,[[["classsetitem",4]],["result",4]]],[11,"visit_class_set_item_post","","This method is called on every `ClassSetItem` after…",49,[[["classsetitem",4]],["result",4]]],[11,"visit_class_set_binary_op_pre","","This method is called on every `ClassSetBinaryOp` before…",49,[[["classsetbinaryop",3]],["result",4]]],[11,"visit_class_set_binary_op_post","","This method is called on every `ClassSetBinaryOp` after…",49,[[["classsetbinaryop",3]],["result",4]]],[11,"visit_class_set_binary_op_in","","This method is called between the left hand and right hand…",49,[[["classsetbinaryop",3]],["result",4]]],[11,"kind","","Return the type of this error.",50,[[],["errorkind",4]]],[11,"pattern","","The original pattern string in which this error occurred.",50,[[]]],[11,"span","","Return the span at which this error occurred.",50,[[],["span",3]]],[11,"auxiliary_span","","Return an auxiliary span. This span exists only for some…",50,[[],[["option",4],["span",3]]]],[11,"new","","Create a new span with the given positions.",1,[[["position",3]],["span",3]]],[11,"splat","","Create a new span using the given position as the start…",1,[[["position",3]],["span",3]]],[11,"with_start","","Create a new span by replacing the starting the position…",1,[[["position",3]],["span",3]]],[11,"with_end","","Create a new span by replacing the ending the position…",1,[[["position",3]],["span",3]]],[11,"is_one_line","","Returns true if and only if this span occurs on a single…",1,[[]]],[11,"is_empty","","Returns true if and only if this span is empty. That is,…",1,[[]]],[11,"new","","Create a new position with the given information.",2,[[],["position",3]]],[11,"span","","Return the span of this abstract syntax tree.",27,[[],["span",3]]],[11,"is_empty","","Return true if and only if this Ast is empty.",27,[[]]],[11,"into_ast","","Return this alternation as an AST.",5,[[],["ast",4]]],[11,"into_ast","","Return this concatenation as an AST.",6,[[],["ast",4]]],[11,"byte","","If this literal was written as a `\\\\x` hex escape, then…",7,[[],["option",4]]],[11,"digits","","The number of digits that must be used with this literal…",30,[[]]],[11,"span","","Return the span of this character class.",31,[[],["span",3]]],[11,"from_name","","Return the corresponding ClassAsciiKind variant for the…",33,[[],[["option",4],["classasciikind",4]]]],[11,"is_negated","","Returns true if this class has been negated.",10,[[]]],[11,"is_equal","","Whether the op is an equality op or not.",36,[[]]],[11,"union","","Build a set from a union.",37,[[["classsetunion",3]],["classset",4]]],[11,"span","","Return the span of this character class set.",37,[[],["span",3]]],[11,"span","","Return the span of this character class set item.",38,[[],["span",3]]],[11,"is_valid","","Returns true if and only if this character class range is…",12,[[]]],[11,"push","","Push a new item in this union.",13,[[["classsetitem",4]]]],[11,"into_item","","Return this union as a character class set item.",13,[[],["classsetitem",4]]],[11,"is_valid","","Returns true if and only if this repetition range is valid.",42,[[]]],[11,"flags","","If this group is non-capturing, then this returns the…",18,[[],[["option",4],["flags",3]]]],[11,"is_capturing","","Returns true if and only if this group is capturing.",18,[[]]],[11,"capture_index","","Returns the capture index of this group, if this is a…",18,[[],["option",4]]],[11,"add_item","","Add the given item to this sequence of flags.",21,[[["flagsitem",3]],["option",4]]],[11,"flag_state","","Returns the state of the given flag in this set.",21,[[["flag",4]],["option",4]]],[11,"is_negation","","Returns true if and only if this item is a negation…",44,[[]]],[0,"hir","regex_syntax","Defines a high-level intermediate representation for…",null,null],[3,"CaseFoldError","regex_syntax::hir","An error that occurs when Unicode-aware simple case…",null,null],[3,"Error","","An error that can occur while translating an `Ast` to a…",null,null],[3,"Hir","","A high-level intermediate representation (HIR) for a…",null,null],[3,"ClassUnicode","","A set of characters represented by Unicode scalar values.",null,null],[3,"ClassUnicodeIter","","An iterator over all ranges in a Unicode character class.",null,null],[3,"ClassUnicodeRange","","A single range of characters represented by Unicode scalar…",null,null],[3,"ClassBytes","","A set of characters represented by arbitrary bytes (where…",null,null],[3,"ClassBytesIter","","An iterator over all ranges in a byte character class.",null,null],[3,"ClassBytesRange","","A single range of characters represented by arbitrary bytes.",null,null],[3,"Group","","The high-level intermediate representation for a group.",null,null],[12,"kind","","The kind of this group. If it is a capturing group, then…",51,null],[12,"hir","","The expression inside the capturing group, which may be…",51,null],[3,"Repetition","","The high-level intermediate representation of a repetition…",null,null],[12,"kind","","The kind of this repetition operator.",52,null],[12,"greedy","","Whether this repetition operator is greedy or not. A…",52,null],[12,"hir","","The expression being repeated.",52,null],[4,"ErrorKind","","The type of an error that occurred while building an `Hir`.",null,null],[13,"UnicodeNotAllowed","","This error occurs when a Unicode feature is used when…",53,null],[13,"InvalidUtf8","","This error occurs when translating a pattern that could…",53,null],[13,"UnicodePropertyNotFound","","This occurs when an unrecognized Unicode property name…",53,null],[13,"UnicodePropertyValueNotFound","","This occurs when an unrecognized Unicode property value…",53,null],[13,"UnicodePerlClassNotFound","","This occurs when a Unicode-aware Perl character class…",53,null],[13,"UnicodeCaseUnavailable","","This occurs when the Unicode simple case mapping tables…",53,null],[13,"EmptyClassNotAllowed","","This occurs when the translator attempts to construct a…",53,null],[4,"HirKind","","The kind of an arbitrary `Hir` expression.",null,null],[13,"Empty","","The empty regular expression, which matches everything,…",54,null],[13,"Literal","","A single literal character that matches exactly this…",54,null],[13,"Class","","A single character class that matches any of the…",54,null],[13,"Anchor","","An anchor assertion. An anchor assertion match always has…",54,null],[13,"WordBoundary","","A word boundary assertion, which may or may not be Unicode…",54,null],[13,"Repetition","","A repetition operation applied to a child expression.",54,null],[13,"Group","","A possibly capturing group, which contains a child…",54,null],[13,"Concat","","A concatenation of expressions. A concatenation always has…",54,null],[13,"Alternation","","An alternation of expressions. An alternation always has…",54,null],[4,"Literal","","The high-level intermediate representation of a literal.",null,null],[13,"Unicode","","A single character represented by a Unicode scalar value.",55,null],[13,"Byte","","A single character represented by an arbitrary byte.",55,null],[4,"Class","","The high-level intermediate representation of a character…",null,null],[13,"Unicode","","A set of characters represented by Unicode scalar values.",56,null],[13,"Bytes","","A set of characters represented by arbitrary bytes (one…",56,null],[4,"Anchor","","The high-level intermediate representation for an anchor…",null,null],[13,"StartLine","","Match the beginning of a line or the beginning of text.…",57,null],[13,"EndLine","","Match the end of a line or the end of text. Specifically,…",57,null],[13,"StartText","","Match the beginning of text. Specifically, this matches at…",57,null],[13,"EndText","","Match the end of text. Specifically, this matches at the…",57,null],[4,"WordBoundary","","The high-level intermediate representation for a…",null,null],[13,"Unicode","","Match a Unicode-aware word boundary. That is, this matches…",58,null],[13,"UnicodeNegate","","Match a Unicode-aware negation of a word boundary.",58,null],[13,"Ascii","","Match an ASCII-only word boundary. That is, this matches a…",58,null],[13,"AsciiNegate","","Match an ASCII-only negation of a word boundary.",58,null],[4,"GroupKind","","The kind of group.",null,null],[13,"CaptureIndex","","A normal unnamed capturing group.",59,null],[13,"CaptureName","","A named capturing group.",59,null],[12,"name","regex_syntax::hir::GroupKind","The name of the group.",60,null],[12,"index","","The capture index of the group.",60,null],[13,"NonCapturing","regex_syntax::hir","A non-capturing group.",59,null],[4,"RepetitionKind","","The kind of a repetition operator.",null,null],[13,"ZeroOrOne","","Matches a sub-expression zero or one times.",61,null],[13,"ZeroOrMore","","Matches a sub-expression zero or more times.",61,null],[13,"OneOrMore","","Matches a sub-expression one or more times.",61,null],[13,"Range","","Matches a sub-expression within a bounded range of times.",61,null],[4,"RepetitionRange","","The kind of a counted repetition operator.",null,null],[13,"Exactly","","Matches a sub-expression exactly this many times.",62,null],[13,"AtLeast","","Matches a sub-expression at least this many times.",62,null],[13,"Bounded","","Matches a sub-expression at least `m` times and at most…",62,null],[5,"visit","","Executes an implementation of `Visitor` in constant stack…",null,[[["hir",3],["visitor",8]],["result",4]]],[0,"literal","","Provides routines for extracting literal prefixes and…",null,null],[3,"Literals","regex_syntax::hir::literal","A set of literal byte strings extracted from a regular…",null,null],[3,"Literal","","A single member of a set of literals extracted from a…",null,null],[11,"empty","","Returns a new empty set of literals using default limits.",63,[[],["literals",3]]],[11,"prefixes","","Returns a set of literal prefixes extracted from the given…",63,[[["hir",3]],["literals",3]]],[11,"suffixes","","Returns a set of literal suffixes extracted from the given…",63,[[["hir",3]],["literals",3]]],[11,"limit_size","","Get the approximate size limit (in bytes) of this set.",63,[[]]],[11,"set_limit_size","","Set the approximate size limit (in bytes) of this set.",63,[[],["literals",3]]],[11,"limit_class","","Get the character class size limit for this set.",63,[[]]],[11,"set_limit_class","","Limits the size of character(or byte) classes considered.",63,[[],["literals",3]]],[11,"literals","","Returns the set of literals as a slice. Its order is…",63,[[]]],[11,"min_len","","Returns the length of the smallest literal.",63,[[],["option",4]]],[11,"all_complete","","Returns true if all members in this set are complete.",63,[[]]],[11,"any_complete","","Returns true if any member in this set is complete.",63,[[]]],[11,"contains_empty","","Returns true if this set contains an empty literal.",63,[[]]],[11,"is_empty","","Returns true if this set is empty or if all of its members…",63,[[]]],[11,"to_empty","","Returns a new empty set of literals using this set\'s limits.",63,[[],["literals",3]]],[11,"longest_common_prefix","","Returns the longest common prefix of all members in this…",63,[[]]],[11,"longest_common_suffix","","Returns the longest common suffix of all members in this…",63,[[]]],[11,"trim_suffix","","Returns a new set of literals with the given number of…",63,[[],[["literals",3],["option",4]]]],[11,"unambiguous_prefixes","","Returns a new set of prefixes of this set of literals that…",63,[[],["literals",3]]],[11,"unambiguous_suffixes","","Returns a new set of suffixes of this set of literals that…",63,[[],["literals",3]]],[11,"union_prefixes","","Unions the prefixes from the given expression to this set.",63,[[["hir",3]]]],[11,"union_suffixes","","Unions the suffixes from the given expression to this set.",63,[[["hir",3]]]],[11,"union","","Unions this set with another set.",63,[[["literals",3]]]],[11,"cross_product","","Extends this set with another set.",63,[[["literals",3]]]],[11,"cross_add","","Extends each literal in this set with the bytes given.",63,[[]]],[11,"add","","Adds the given literal to this set.",63,[[["literal",3]]]],[11,"add_char_class","","Extends each literal in this set with the character class…",63,[[["classunicode",3]]]],[11,"add_byte_class","","Extends each literal in this set with the byte class given.",63,[[["classbytes",3]]]],[11,"cut","","Cuts every member of this set. When a member is cut, it…",63,[[]]],[11,"reverse","","Reverses all members in place.",63,[[]]],[11,"clear","","Clears this set of all members.",63,[[]]],[11,"new","","Returns a new complete literal with the bytes given.",64,[[["vec",3]],["literal",3]]],[11,"empty","","Returns a new complete empty literal.",64,[[],["literal",3]]],[11,"is_cut","","Returns true if this literal was \\\"cut.\\\"",64,[[]]],[11,"cut","","Cuts this literal.",64,[[]]],[0,"print","regex_syntax::hir","This module provides a regular expression printer for `Hir`.",null,null],[3,"Printer","regex_syntax::hir::print","A printer for a regular expression\'s high-level…",null,null],[11,"new","","Create a new printer.",65,[[],["printer",3]]],[11,"print","","Print the given `Ast` to the given writer. The writer must…",65,[[["write",8],["hir",3]],["result",6]]],[0,"translate","regex_syntax::hir","Defines a translator that converts an `Ast` to an `Hir`.",null,null],[3,"TranslatorBuilder","regex_syntax::hir::translate","A builder for constructing an AST->HIR translator.",null,null],[3,"Translator","","A translator maps abstract syntax to a high level…",null,null],[11,"new","","Create a new translator builder with a default c…",66,[[],["translatorbuilder",3]]],[11,"build","","Build a translator using the current configuration.",66,[[],["translator",3]]],[11,"allow_invalid_utf8","","When enabled, translation will permit the construction of…",66,[[],["translatorbuilder",3]]],[11,"case_insensitive","","Enable or disable the case insensitive flag (`i`) by…",66,[[],["translatorbuilder",3]]],[11,"multi_line","","Enable or disable the multi-line matching flag (`m`) by…",66,[[],["translatorbuilder",3]]],[11,"dot_matches_new_line","","Enable or disable the \\\"dot matches any character\\\" flag…",66,[[],["translatorbuilder",3]]],[11,"swap_greed","","Enable or disable the \\\"swap greed\\\" flag (`U`) by default.",66,[[],["translatorbuilder",3]]],[11,"unicode","","Enable or disable the Unicode flag (`u`) by default.",66,[[],["translatorbuilder",3]]],[11,"new","","Create a new translator using the default configuration.",67,[[],["translator",3]]],[11,"translate","","Translate the given abstract syntax tree (AST) into a high…",67,[[["ast",4]],[["hir",3],["result",4],["error",3]]]],[8,"Visitor","regex_syntax::hir","A trait for visiting the high-level IR (HIR) in depth…",null,null],[16,"Output","","The result of visiting an HIR.",68,null],[16,"Err","","An error that visiting an HIR might return.",68,null],[10,"finish","","All implementors of `Visitor` must provide a `finish`…",68,[[],["result",4]]],[11,"start","","This method is called before beginning traversal of the HIR.",68,[[]]],[11,"visit_pre","","This method is called on an `Hir` before descending into…",68,[[["hir",3]],["result",4]]],[11,"visit_post","","This method is called on an `Hir` after descending all of…",68,[[["hir",3]],["result",4]]],[11,"visit_alternation_in","","This method is called between child nodes of an alternation.",68,[[],["result",4]]],[11,"kind","","Return the type of this error.",69,[[],["errorkind",4]]],[11,"pattern","","The original pattern string in which this error occurred.",69,[[]]],[11,"span","","Return the span at which this error occurred.",69,[[],["span",3]]],[11,"kind","","Returns a reference to the underlying HIR kind.",70,[[],["hirkind",4]]],[11,"into_kind","","Consumes ownership of this HIR expression and returns its…",70,[[],["hirkind",4]]],[11,"empty","","Returns an empty HIR expression.",70,[[],["hir",3]]],[11,"literal","","Creates a literal HIR expression.",70,[[["literal",4]],["hir",3]]],[11,"class","","Creates a class HIR expression.",70,[[["class",4]],["hir",3]]],[11,"anchor","","Creates an anchor assertion HIR expression.",70,[[["anchor",4]],["hir",3]]],[11,"word_boundary","","Creates a word boundary assertion HIR expression.",70,[[["wordboundary",4]],["hir",3]]],[11,"repetition","","Creates a repetition HIR expression.",70,[[["repetition",3]],["hir",3]]],[11,"group","","Creates a group HIR expression.",70,[[["group",3]],["hir",3]]],[11,"concat","","Returns the concatenation of the given expressions.",70,[[["vec",3],["hir",3]],["hir",3]]],[11,"alternation","","Returns the alternation of the given expressions.",70,[[["vec",3],["hir",3]],["hir",3]]],[11,"dot","","Build an HIR expression for `.`.",70,[[],["hir",3]]],[11,"any","","Build an HIR expression for `(?s).`.",70,[[],["hir",3]]],[11,"is_always_utf8","","Return true if and only if this HIR will always match…",70,[[]]],[11,"is_all_assertions","","Returns true if and only if this entire HIR expression is…",70,[[]]],[11,"is_anchored_start","","Return true if and only if this HIR is required to match…",70,[[]]],[11,"is_anchored_end","","Return true if and only if this HIR is required to match…",70,[[]]],[11,"is_line_anchored_start","","Return true if and only if this HIR is required to match…",70,[[]]],[11,"is_line_anchored_end","","Return true if and only if this HIR is required to match…",70,[[]]],[11,"is_any_anchored_start","","Return true if and only if this HIR contains any…",70,[[]]],[11,"is_any_anchored_end","","Return true if and only if this HIR contains any…",70,[[]]],[11,"is_match_empty","","Return true if and only if the empty string is part of the…",70,[[]]],[11,"is_literal","","Return true if and only if this HIR is a simple literal.…",70,[[]]],[11,"is_alternation_literal","","Return true if and only if this HIR is either a simple…",70,[[]]],[11,"is_empty","","Return true if and only if this HIR is the empty regular…",54,[[]]],[11,"has_subexprs","","Returns true if and only if this kind has any (including…",54,[[]]],[11,"is_unicode","","Returns true if and only if this literal corresponds to a…",55,[[]]],[11,"case_fold_simple","","Apply Unicode simple case folding to this character class,…",56,[[]]],[11,"negate","","Negate this character class in place.",56,[[]]],[11,"is_always_utf8","","Returns true if and only if this character class will only…",56,[[]]],[11,"new","","Create a new class from a sequence of ranges.",71,[[],["classunicode",3]]],[11,"empty","","Create a new class with no ranges.",71,[[],["classunicode",3]]],[11,"push","","Add a new range to this set.",71,[[["classunicoderange",3]]]],[11,"iter","","Return an iterator over all ranges in this class.",71,[[],["classunicodeiter",3]]],[11,"ranges","","Return the underlying ranges as a slice.",71,[[]]],[11,"case_fold_simple","","Expand this character class such that it contains all case…",71,[[]]],[11,"try_case_fold_simple","","Expand this character class such that it contains all case…",71,[[],[["casefolderror",3],["result",4]]]],[11,"negate","","Negate this character class.",71,[[]]],[11,"union","","Union this character class with the given character class,…",71,[[["classunicode",3]]]],[11,"intersect","","Intersect this character class with the given character…",71,[[["classunicode",3]]]],[11,"difference","","Subtract the given character class from this character…",71,[[["classunicode",3]]]],[11,"symmetric_difference","","Compute the symmetric difference of the given character…",71,[[["classunicode",3]]]],[11,"is_all_ascii","","Returns true if and only if this character class will…",71,[[]]],[11,"new","","Create a new Unicode scalar value range for a character…",72,[[],["classunicoderange",3]]],[11,"start","","Return the start of this range.",72,[[]]],[11,"end","","Return the end of this range.",72,[[]]],[11,"new","","Create a new class from a sequence of ranges.",73,[[],["classbytes",3]]],[11,"empty","","Create a new class with no ranges.",73,[[],["classbytes",3]]],[11,"push","","Add a new range to this set.",73,[[["classbytesrange",3]]]],[11,"iter","","Return an iterator over all ranges in this class.",73,[[],["classbytesiter",3]]],[11,"ranges","","Return the underlying ranges as a slice.",73,[[]]],[11,"case_fold_simple","","Expand this character class such that it contains all case…",73,[[]]],[11,"negate","","Negate this byte class.",73,[[]]],[11,"union","","Union this byte class with the given byte class, in place.",73,[[["classbytes",3]]]],[11,"intersect","","Intersect this byte class with the given byte class, in…",73,[[["classbytes",3]]]],[11,"difference","","Subtract the given byte class from this byte class, in…",73,[[["classbytes",3]]]],[11,"symmetric_difference","","Compute the symmetric difference of the given byte…",73,[[["classbytes",3]]]],[11,"is_all_ascii","","Returns true if and only if this character class will…",73,[[]]],[11,"new","","Create a new byte range for a character class.",74,[[],["classbytesrange",3]]],[11,"start","","Return the start of this range.",74,[[]]],[11,"end","","Return the end of this range.",74,[[]]],[11,"is_negated","","Returns true if and only if this word boundary assertion…",58,[[]]],[11,"is_match_empty","","Returns true if and only if this repetition operator makes…",52,[[]]],[11,"new","regex_syntax","Create a new parser builder with a default configuration.",75,[[],["parserbuilder",3]]],[11,"build","","Build a parser from this configuration with the given…",75,[[],["parser",3]]],[11,"nest_limit","","Set the nesting limit for this parser.",75,[[],["parserbuilder",3]]],[11,"octal","","Whether to support octal syntax or not.",75,[[],["parserbuilder",3]]],[11,"allow_invalid_utf8","","When enabled, the parser will permit the construction of a…",75,[[],["parserbuilder",3]]],[11,"ignore_whitespace","","Enable verbose mode in the regular expression.",75,[[],["parserbuilder",3]]],[11,"case_insensitive","","Enable or disable the case insensitive flag by default.",75,[[],["parserbuilder",3]]],[11,"multi_line","","Enable or disable the multi-line matching flag by default.",75,[[],["parserbuilder",3]]],[11,"dot_matches_new_line","","Enable or disable the \\\"dot matches any character\\\" flag by…",75,[[],["parserbuilder",3]]],[11,"swap_greed","","Enable or disable the \\\"swap greed\\\" flag by default.",75,[[],["parserbuilder",3]]],[11,"unicode","","Enable or disable the Unicode flag (`u`) by default.",75,[[],["parserbuilder",3]]],[11,"new","","Create a new parser with a default configuration.",76,[[],["parser",3]]],[11,"parse","","Parse the regular expression into a high level…",76,[[],[["hir",3],["result",6]]]],[0,"utf8","","Converts ranges of Unicode scalar values to equivalent…",null,null],[3,"Utf8Range","regex_syntax::utf8","A single inclusive range of UTF-8 bytes.",null,null],[12,"start","","Start of byte range (inclusive).",77,null],[12,"end","","End of byte range (inclusive).",77,null],[3,"Utf8Sequences","","An iterator over ranges of matching UTF-8 byte sequences.",null,null],[4,"Utf8Sequence","","Utf8Sequence represents a sequence of byte ranges.",null,null],[13,"One","","One byte range.",78,null],[13,"Two","","Two successive byte ranges.",78,null],[13,"Three","","Three successive byte ranges.",78,null],[13,"Four","","Four successive byte ranges.",78,null],[11,"as_slice","","Returns the underlying sequence of byte ranges as a slice.",78,[[]]],[11,"len","","Returns the number of byte ranges in this sequence.",78,[[]]],[11,"reverse","","Reverses the ranges in this sequence.",78,[[]]],[11,"matches","","Returns true if and only if a prefix of `bytes` matches…",78,[[]]],[11,"matches","","Returns true if and only if the given byte is in this range.",77,[[]]],[11,"new","","Create a new iterator over UTF-8 byte ranges for the…",79,[[]]],[6,"Result","regex_syntax","A type alias for dealing with errors returned by this crate.",null,null],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_string","","",80,[[],["string",3]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","regex_syntax::ast","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"to_string","","",50,[[],["string",3]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"to_string","","",23,[[],["string",3]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"to_string","","",27,[[],["string",3]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","regex_syntax::ast::parse","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","regex_syntax::ast::print","",48,[[]]],[11,"into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","regex_syntax::hir","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_string","","",81,[[],["string",3]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"to_string","","",69,[[],["string",3]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"to_string","","",70,[[],["string",3]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"into_iter","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"into_iter","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"to_string","","",53,[[],["string",3]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"from","regex_syntax::hir::literal","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","regex_syntax::hir::print","",65,[[]]],[11,"into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from","regex_syntax::hir::translate","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from","regex_syntax::utf8","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"into_iter","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"drop","regex_syntax::ast","",27,[[]]],[11,"drop","","",37,[[]]],[11,"drop","regex_syntax::hir","",70,[[]]],[11,"as_ref","regex_syntax::hir::literal","",64,[[]]],[11,"from","regex_syntax","",0,[[["error",3]],["error",4]]],[11,"from","","",0,[[["error",3]],["error",4]]],[11,"next","regex_syntax::hir","",82,[[],[["option",4],["classunicoderange",3]]]],[11,"next","","",83,[[],[["option",4],["classbytesrange",3]]]],[11,"next","regex_syntax::utf8","",79,[[],["option",4]]],[11,"clone","regex_syntax::ast::parse","",46,[[],["parserbuilder",3]]],[11,"clone","","",47,[[],["parser",3]]],[11,"clone","regex_syntax::ast","",50,[[],["error",3]]],[11,"clone","","",23,[[],["errorkind",4]]],[11,"clone","","",1,[[],["span",3]]],[11,"clone","","",2,[[],["position",3]]],[11,"clone","","",3,[[],["withcomments",3]]],[11,"clone","","",4,[[],["comment",3]]],[11,"clone","","",27,[[],["ast",4]]],[11,"clone","","",5,[[],["alternation",3]]],[11,"clone","","",6,[[],["concat",3]]],[11,"clone","","",7,[[],["literal",3]]],[11,"clone","","",28,[[],["literalkind",4]]],[11,"clone","","",29,[[],["specialliteralkind",4]]],[11,"clone","","",30,[[],["hexliteralkind",4]]],[11,"clone","","",31,[[],["class",4]]],[11,"clone","","",8,[[],["classperl",3]]],[11,"clone","","",32,[[],["classperlkind",4]]],[11,"clone","","",9,[[],["classascii",3]]],[11,"clone","","",33,[[],["classasciikind",4]]],[11,"clone","","",10,[[],["classunicode",3]]],[11,"clone","","",34,[[],["classunicodekind",4]]],[11,"clone","","",36,[[],["classunicodeopkind",4]]],[11,"clone","","",11,[[],["classbracketed",3]]],[11,"clone","","",37,[[],["classset",4]]],[11,"clone","","",38,[[],["classsetitem",4]]],[11,"clone","","",12,[[],["classsetrange",3]]],[11,"clone","","",13,[[],["classsetunion",3]]],[11,"clone","","",14,[[],["classsetbinaryop",3]]],[11,"clone","","",39,[[],["classsetbinaryopkind",4]]],[11,"clone","","",15,[[],["assertion",3]]],[11,"clone","","",40,[[],["assertionkind",4]]],[11,"clone","","",16,[[],["repetition",3]]],[11,"clone","","",17,[[],["repetitionop",3]]],[11,"clone","","",41,[[],["repetitionkind",4]]],[11,"clone","","",42,[[],["repetitionrange",4]]],[11,"clone","","",18,[[],["group",3]]],[11,"clone","","",43,[[],["groupkind",4]]],[11,"clone","","",19,[[],["capturename",3]]],[11,"clone","","",20,[[],["setflags",3]]],[11,"clone","","",21,[[],["flags",3]]],[11,"clone","","",22,[[],["flagsitem",3]]],[11,"clone","","",44,[[],["flagsitemkind",4]]],[11,"clone","","",45,[[],["flag",4]]],[11,"clone","regex_syntax","",0,[[],["error",4]]],[11,"clone","regex_syntax::hir::literal","",63,[[],["literals",3]]],[11,"clone","","",64,[[],["literal",3]]],[11,"clone","regex_syntax::hir::translate","",66,[[],["translatorbuilder",3]]],[11,"clone","","",67,[[],["translator",3]]],[11,"clone","regex_syntax::hir","",69,[[],["error",3]]],[11,"clone","","",53,[[],["errorkind",4]]],[11,"clone","","",70,[[],["hir",3]]],[11,"clone","","",54,[[],["hirkind",4]]],[11,"clone","","",55,[[],["literal",4]]],[11,"clone","","",56,[[],["class",4]]],[11,"clone","","",71,[[],["classunicode",3]]],[11,"clone","","",72,[[],["classunicoderange",3]]],[11,"clone","","",73,[[],["classbytes",3]]],[11,"clone","","",74,[[],["classbytesrange",3]]],[11,"clone","","",57,[[],["anchor",4]]],[11,"clone","","",58,[[],["wordboundary",4]]],[11,"clone","","",51,[[],["group",3]]],[11,"clone","","",59,[[],["groupkind",4]]],[11,"clone","","",52,[[],["repetition",3]]],[11,"clone","","",61,[[],["repetitionkind",4]]],[11,"clone","","",62,[[],["repetitionrange",4]]],[11,"clone","regex_syntax","",75,[[],["parserbuilder",3]]],[11,"clone","","",76,[[],["parser",3]]],[11,"clone","regex_syntax::utf8","",78,[[],["utf8sequence",4]]],[11,"clone","","",77,[[],["utf8range",3]]],[11,"default","regex_syntax::ast::parse","",46,[[],["parserbuilder",3]]],[11,"default","regex_syntax::hir::translate","",66,[[],["translatorbuilder",3]]],[11,"default","regex_syntax::hir","",72,[[],["classunicoderange",3]]],[11,"default","","",74,[[],["classbytesrange",3]]],[11,"default","regex_syntax","",75,[[],["parserbuilder",3]]],[11,"cmp","regex_syntax::ast","",1,[[["span",3]],["ordering",4]]],[11,"cmp","","",2,[[["position",3]],["ordering",4]]],[11,"cmp","regex_syntax::hir::literal","",64,[[["literal",3]],["ordering",4]]],[11,"cmp","regex_syntax::hir","",72,[[["classunicoderange",3]],["ordering",4]]],[11,"cmp","","",74,[[["classbytesrange",3]],["ordering",4]]],[11,"cmp","regex_syntax::utf8","",78,[[["utf8sequence",4]],["ordering",4]]],[11,"cmp","","",77,[[["utf8range",3]],["ordering",4]]],[11,"eq","regex_syntax::ast","",50,[[["error",3]]]],[11,"ne","","",50,[[["error",3]]]],[11,"eq","","",23,[[["errorkind",4]]]],[11,"ne","","",23,[[["errorkind",4]]]],[11,"eq","","",1,[[["span",3]]]],[11,"ne","","",1,[[["span",3]]]],[11,"eq","","",2,[[["position",3]]]],[11,"ne","","",2,[[["position",3]]]],[11,"eq","","",3,[[["withcomments",3]]]],[11,"ne","","",3,[[["withcomments",3]]]],[11,"eq","","",4,[[["comment",3]]]],[11,"ne","","",4,[[["comment",3]]]],[11,"eq","","",27,[[["ast",4]]]],[11,"ne","","",27,[[["ast",4]]]],[11,"eq","","",5,[[["alternation",3]]]],[11,"ne","","",5,[[["alternation",3]]]],[11,"eq","","",6,[[["concat",3]]]],[11,"ne","","",6,[[["concat",3]]]],[11,"eq","","",7,[[["literal",3]]]],[11,"ne","","",7,[[["literal",3]]]],[11,"eq","","",28,[[["literalkind",4]]]],[11,"ne","","",28,[[["literalkind",4]]]],[11,"eq","","",29,[[["specialliteralkind",4]]]],[11,"eq","","",30,[[["hexliteralkind",4]]]],[11,"eq","","",31,[[["class",4]]]],[11,"ne","","",31,[[["class",4]]]],[11,"eq","","",8,[[["classperl",3]]]],[11,"ne","","",8,[[["classperl",3]]]],[11,"eq","","",32,[[["classperlkind",4]]]],[11,"eq","","",9,[[["classascii",3]]]],[11,"ne","","",9,[[["classascii",3]]]],[11,"eq","","",33,[[["classasciikind",4]]]],[11,"eq","","",10,[[["classunicode",3]]]],[11,"ne","","",10,[[["classunicode",3]]]],[11,"eq","","",34,[[["classunicodekind",4]]]],[11,"ne","","",34,[[["classunicodekind",4]]]],[11,"eq","","",36,[[["classunicodeopkind",4]]]],[11,"eq","","",11,[[["classbracketed",3]]]],[11,"ne","","",11,[[["classbracketed",3]]]],[11,"eq","","",37,[[["classset",4]]]],[11,"ne","","",37,[[["classset",4]]]],[11,"eq","","",38,[[["classsetitem",4]]]],[11,"ne","","",38,[[["classsetitem",4]]]],[11,"eq","","",12,[[["classsetrange",3]]]],[11,"ne","","",12,[[["classsetrange",3]]]],[11,"eq","","",13,[[["classsetunion",3]]]],[11,"ne","","",13,[[["classsetunion",3]]]],[11,"eq","","",14,[[["classsetbinaryop",3]]]],[11,"ne","","",14,[[["classsetbinaryop",3]]]],[11,"eq","","",39,[[["classsetbinaryopkind",4]]]],[11,"eq","","",15,[[["assertion",3]]]],[11,"ne","","",15,[[["assertion",3]]]],[11,"eq","","",40,[[["assertionkind",4]]]],[11,"eq","","",16,[[["repetition",3]]]],[11,"ne","","",16,[[["repetition",3]]]],[11,"eq","","",17,[[["repetitionop",3]]]],[11,"ne","","",17,[[["repetitionop",3]]]],[11,"eq","","",41,[[["repetitionkind",4]]]],[11,"ne","","",41,[[["repetitionkind",4]]]],[11,"eq","","",42,[[["repetitionrange",4]]]],[11,"ne","","",42,[[["repetitionrange",4]]]],[11,"eq","","",18,[[["group",3]]]],[11,"ne","","",18,[[["group",3]]]],[11,"eq","","",43,[[["groupkind",4]]]],[11,"ne","","",43,[[["groupkind",4]]]],[11,"eq","","",19,[[["capturename",3]]]],[11,"ne","","",19,[[["capturename",3]]]],[11,"eq","","",20,[[["setflags",3]]]],[11,"ne","","",20,[[["setflags",3]]]],[11,"eq","","",21,[[["flags",3]]]],[11,"ne","","",21,[[["flags",3]]]],[11,"eq","","",22,[[["flagsitem",3]]]],[11,"ne","","",22,[[["flagsitem",3]]]],[11,"eq","","",44,[[["flagsitemkind",4]]]],[11,"ne","","",44,[[["flagsitemkind",4]]]],[11,"eq","","",45,[[["flag",4]]]],[11,"eq","regex_syntax","",0,[[["error",4]]]],[11,"ne","","",0,[[["error",4]]]],[11,"eq","regex_syntax::hir::literal","",63,[[["literals",3]]]],[11,"ne","","",63,[[["literals",3]]]],[11,"eq","","",64,[[["literal",3]]]],[11,"eq","regex_syntax::hir","",69,[[["error",3]]]],[11,"ne","","",69,[[["error",3]]]],[11,"eq","","",53,[[["errorkind",4]]]],[11,"eq","","",70,[[["hir",3]]]],[11,"ne","","",70,[[["hir",3]]]],[11,"eq","","",54,[[["hirkind",4]]]],[11,"ne","","",54,[[["hirkind",4]]]],[11,"eq","","",55,[[["literal",4]]]],[11,"ne","","",55,[[["literal",4]]]],[11,"eq","","",56,[[["class",4]]]],[11,"ne","","",56,[[["class",4]]]],[11,"eq","","",71,[[["classunicode",3]]]],[11,"ne","","",71,[[["classunicode",3]]]],[11,"eq","","",72,[[["classunicoderange",3]]]],[11,"ne","","",72,[[["classunicoderange",3]]]],[11,"eq","","",73,[[["classbytes",3]]]],[11,"ne","","",73,[[["classbytes",3]]]],[11,"eq","","",74,[[["classbytesrange",3]]]],[11,"ne","","",74,[[["classbytesrange",3]]]],[11,"eq","","",57,[[["anchor",4]]]],[11,"eq","","",58,[[["wordboundary",4]]]],[11,"eq","","",51,[[["group",3]]]],[11,"ne","","",51,[[["group",3]]]],[11,"eq","","",59,[[["groupkind",4]]]],[11,"ne","","",59,[[["groupkind",4]]]],[11,"eq","","",52,[[["repetition",3]]]],[11,"ne","","",52,[[["repetition",3]]]],[11,"eq","","",61,[[["repetitionkind",4]]]],[11,"ne","","",61,[[["repetitionkind",4]]]],[11,"eq","","",62,[[["repetitionrange",4]]]],[11,"ne","","",62,[[["repetitionrange",4]]]],[11,"eq","regex_syntax::utf8","",78,[[["utf8sequence",4]]]],[11,"ne","","",78,[[["utf8sequence",4]]]],[11,"eq","","",77,[[["utf8range",3]]]],[11,"ne","","",77,[[["utf8range",3]]]],[11,"partial_cmp","regex_syntax::ast","",1,[[["span",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",2,[[["position",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","regex_syntax::hir::literal","",64,[[["literal",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","regex_syntax::hir","",72,[[["classunicoderange",3]],[["ordering",4],["option",4]]]],[11,"lt","","",72,[[["classunicoderange",3]]]],[11,"le","","",72,[[["classunicoderange",3]]]],[11,"gt","","",72,[[["classunicoderange",3]]]],[11,"ge","","",72,[[["classunicoderange",3]]]],[11,"partial_cmp","","",74,[[["classbytesrange",3]],[["ordering",4],["option",4]]]],[11,"lt","","",74,[[["classbytesrange",3]]]],[11,"le","","",74,[[["classbytesrange",3]]]],[11,"gt","","",74,[[["classbytesrange",3]]]],[11,"ge","","",74,[[["classbytesrange",3]]]],[11,"partial_cmp","regex_syntax::utf8","",78,[[["utf8sequence",4]],[["ordering",4],["option",4]]]],[11,"lt","","",78,[[["utf8sequence",4]]]],[11,"le","","",78,[[["utf8sequence",4]]]],[11,"gt","","",78,[[["utf8sequence",4]]]],[11,"ge","","",78,[[["utf8sequence",4]]]],[11,"partial_cmp","","",77,[[["utf8range",3]],[["ordering",4],["option",4]]]],[11,"lt","","",77,[[["utf8range",3]]]],[11,"le","","",77,[[["utf8range",3]]]],[11,"gt","","",77,[[["utf8range",3]]]],[11,"ge","","",77,[[["utf8range",3]]]],[11,"deref","regex_syntax::hir::literal","",64,[[],["vec",3]]],[11,"deref_mut","","",64,[[],["vec",3]]],[11,"fmt","regex_syntax::ast::parse","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax::ast::print","",48,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax::ast","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax","",0,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax::hir::literal","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax::hir::print","",65,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax::hir::translate","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax::hir","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",82,[[["formatter",3]],["result",6]]],[11,"fmt","","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","","",83,[[["formatter",3]],["result",6]]],[11,"fmt","","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax::hir","",81,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax","",80,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax::utf8","",78,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax::ast","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax","",0,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax::hir","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","","",81,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax","",80,[[["formatter",3]],["result",6]]],[11,"description","regex_syntax::ast","",50,[[]]],[11,"description","regex_syntax","",0,[[]]],[11,"description","regex_syntax::hir","",69,[[]]],[11,"start","regex_syntax::ast","This method is called before beginning traversal of the AST.",49,[[]]],[11,"visit_pre","","This method is called on an `Ast` before descending into…",49,[[["ast",4]],["result",4]]],[11,"visit_post","","This method is called on an `Ast` after descending all of…",49,[[["ast",4]],["result",4]]],[11,"visit_alternation_in","","This method is called between child nodes of an…",49,[[],["result",4]]],[11,"visit_class_set_item_pre","","This method is called on every `ClassSetItem` before…",49,[[["classsetitem",4]],["result",4]]],[11,"visit_class_set_item_post","","This method is called on every `ClassSetItem` after…",49,[[["classsetitem",4]],["result",4]]],[11,"visit_class_set_binary_op_pre","","This method is called on every `ClassSetBinaryOp` before…",49,[[["classsetbinaryop",3]],["result",4]]],[11,"visit_class_set_binary_op_post","","This method is called on every `ClassSetBinaryOp` after…",49,[[["classsetbinaryop",3]],["result",4]]],[11,"visit_class_set_binary_op_in","","This method is called between the left hand and right hand…",49,[[["classsetbinaryop",3]],["result",4]]],[11,"start","regex_syntax::hir","This method is called before beginning traversal of the HIR.",68,[[]]],[11,"visit_pre","","This method is called on an `Hir` before descending into…",68,[[["hir",3]],["result",4]]],[11,"visit_post","","This method is called on an `Hir` after descending all of…",68,[[["hir",3]],["result",4]]],[11,"visit_alternation_in","","This method is called between child nodes of an alternation.",68,[[],["result",4]]]],"p":[[4,"Error"],[3,"Span"],[3,"Position"],[3,"WithComments"],[3,"Comment"],[3,"Alternation"],[3,"Concat"],[3,"Literal"],[3,"ClassPerl"],[3,"ClassAscii"],[3,"ClassUnicode"],[3,"ClassBracketed"],[3,"ClassSetRange"],[3,"ClassSetUnion"],[3,"ClassSetBinaryOp"],[3,"Assertion"],[3,"Repetition"],[3,"RepetitionOp"],[3,"Group"],[3,"CaptureName"],[3,"SetFlags"],[3,"Flags"],[3,"FlagsItem"],[4,"ErrorKind"],[13,"FlagDuplicate"],[13,"FlagRepeatedNegation"],[13,"GroupNameDuplicate"],[4,"Ast"],[4,"LiteralKind"],[4,"SpecialLiteralKind"],[4,"HexLiteralKind"],[4,"Class"],[4,"ClassPerlKind"],[4,"ClassAsciiKind"],[4,"ClassUnicodeKind"],[13,"NamedValue"],[4,"ClassUnicodeOpKind"],[4,"ClassSet"],[4,"ClassSetItem"],[4,"ClassSetBinaryOpKind"],[4,"AssertionKind"],[4,"RepetitionKind"],[4,"RepetitionRange"],[4,"GroupKind"],[4,"FlagsItemKind"],[4,"Flag"],[3,"ParserBuilder"],[3,"Parser"],[3,"Printer"],[8,"Visitor"],[3,"Error"],[3,"Group"],[3,"Repetition"],[4,"ErrorKind"],[4,"HirKind"],[4,"Literal"],[4,"Class"],[4,"Anchor"],[4,"WordBoundary"],[4,"GroupKind"],[13,"CaptureName"],[4,"RepetitionKind"],[4,"RepetitionRange"],[3,"Literals"],[3,"Literal"],[3,"Printer"],[3,"TranslatorBuilder"],[3,"Translator"],[8,"Visitor"],[3,"Error"],[3,"Hir"],[3,"ClassUnicode"],[3,"ClassUnicodeRange"],[3,"ClassBytes"],[3,"ClassBytesRange"],[3,"ParserBuilder"],[3,"Parser"],[3,"Utf8Range"],[4,"Utf8Sequence"],[3,"Utf8Sequences"],[3,"UnicodeWordError"],[3,"CaseFoldError"],[3,"ClassUnicodeIter"],[3,"ClassBytesIter"]]},\
"ryu":{"doc":"github crates-io docs-rs","i":[[3,"Buffer","ryu","Safe API for formatting floating point numbers to text.",null,null],[11,"new","","This is a cheap operation; you don\'t need to worry about…",0,[[]]],[11,"format","","Print a floating point number into this buffer and return…",0,[[["float",8]]]],[11,"format_finite","","Print a floating point number into this buffer and return…",0,[[["float",8]]]],[0,"raw","","Unsafe functions that mirror the API of the C…",null,null],[5,"format32","ryu::raw","Print f32 to the given buffer and return number of bytes…",null,[[]]],[5,"format64","","Print f64 to the given buffer and return number of bytes…",null,[[]]],[8,"Float","ryu","A floating point number, f32 or f64, that can be written…",null,null],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"clone","","",0,[[]]],[11,"default","","",0,[[]]]],"p":[[3,"Buffer"]]},\
"scopeguard":{"doc":"A scope guard will run a given closure when it goes out of…","i":[[3,"ScopeGuard","scopeguard","`ScopeGuard` is a scope guard that may own a protected…",null,null],[4,"Always","","Always run on scope exit.",null,null],[5,"guard","","Create a new `ScopeGuard` owning `v` and with deferred…",null,[[],[["scopeguard",3],["always",4]]]],[8,"Strategy","","Controls in which cases the associated code should be run",null,null],[10,"should_run","","Return `true` if the guard’s associated code should run…",0,[[]]],[11,"with_strategy","","Create a `ScopeGuard` that owns `v` (accessible through…",1,[[],["scopeguard",3]]],[11,"into_inner","","“Defuse” the guard and extract the value without calling…",1,[[]]],[14,"defer","","Macro to create a `ScopeGuard` (always run).",null,null],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"should_run","","",2,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"drop","","",1,[[]]]],"p":[[8,"Strategy"],[3,"ScopeGuard"],[4,"Always"]]},\
"scroll":{"doc":"Scroll","i":[[24,"Pread","scroll","",null,null],[24,"Pwrite","","",null,null],[24,"SizeWith","","",null,null],[24,"IOread","","",null,null],[24,"IOwrite","","",null,null],[3,"Uleb128","","An unsigned leb128 integer",null,null],[3,"Sleb128","","An signed leb128 integer",null,null],[4,"Endian","","The endianness (byte order) of a stream of bytes",null,null],[13,"Little","","",0,null],[13,"Big","","",0,null],[4,"Error","","A custom Scroll error",null,null],[13,"TooBig","","The type you tried to read was too big",1,null],[12,"size","scroll::Error","",2,null],[12,"len","","",2,null],[13,"BadOffset","scroll","The requested offset to read/write at is invalid",1,null],[13,"BadInput","","",1,null],[12,"size","scroll::Error","",3,null],[12,"msg","","",3,null],[13,"Custom","scroll","A custom Scroll error for reporting messages to clients",1,null],[13,"IO","","Returned when IO based errors are encountered",1,null],[0,"ctx","","Generic context-aware conversion traits, for automatic…",null,null],[4,"StrCtx","scroll::ctx","The parsing context for converting a byte sequence to a…",null,null],[13,"Delimiter","","",4,null],[13,"DelimiterUntil","","",4,null],[13,"Length","","",4,null],[17,"NULL","","A C-style, null terminator based delimiter",null,null],[17,"SPACE","","A space-based delimiter",null,null],[17,"RET","","A newline-based delimiter",null,null],[17,"TAB","","A tab-based delimiter",null,null],[8,"MeasureWith","","A trait for measuring how large something is; for a byte…",null,null],[10,"measure_with","","How large is `Self`, given the `ctx`?",5,[[]]],[8,"FromCtx","","Reads `Self` from `This` using the context `Ctx`; must not…",null,null],[10,"from_ctx","","",6,[[]]],[8,"TryFromCtx","","Tries to read `Self` from `This` using the context `Ctx`",null,null],[16,"Error","","",7,null],[10,"try_from_ctx","","",7,[[],["result",4]]],[8,"IntoCtx","","Writes `Self` into `This` using the context `Ctx`",null,null],[10,"into_ctx","","",8,[[]]],[8,"TryIntoCtx","","Tries to write `Self` into `This` using the context `Ctx`",null,null],[16,"Error","","",9,null],[10,"try_into_ctx","","",9,[[],["result",4]]],[8,"SizeWith","","Gets the size of `Self` with a `Ctx`, and in…",null,null],[10,"size_with","","",10,[[]]],[11,"len","","",4,[[]]],[11,"is_empty","","",4,[[]]],[11,"network","scroll","",0,[[],["endian",4]]],[11,"is_little","","",0,[[]]],[11,"size","","Return how many bytes this Uleb128 takes up in memory",11,[[]]],[11,"read","","Read a variable length u64 from `bytes` at `offset`",11,[[],["result",6]]],[11,"size","","Return how many bytes this Sleb128 takes up in memory",12,[[]]],[11,"read","","Read a variable length i64 from `bytes` at `offset`",12,[[],["result",6]]],[6,"Result","","",null,null],[17,"LE","","Little Endian byte order context",null,null],[17,"BE","","Big Endian byte order context",null,null],[17,"NETWORK","","Network byte order context",null,null],[17,"NATIVE","","The machine\'s native byte order",null,null],[8,"Pread","","A very generic, contextual pread interface in Rust. Allows…",null,null],[11,"pread","","Reads a value from `self` at `offset` with a default…",13,[[],[["result",4],["tryfromctx",8]]]],[11,"pread_with","","Reads a value from `self` at `offset` with the given `ctx`",13,[[],[["result",4],["tryfromctx",8]]]],[11,"gread","","Reads a value from `self` at `offset` with a default…",13,[[],[["result",4],["tryfromctx",8]]]],[11,"gread_with","","Reads a value from `self` at `offset` with the given…",13,[[],[["result",4],["tryfromctx",8]]]],[11,"gread_inout","","Trys to write `inout.len()` `N`s into `inout` from `Self`…",13,[[],["result",4]]],[11,"gread_inout_with","","Trys to write `inout.len()` `N`s into `inout` from `Self`…",13,[[],["result",4]]],[8,"Pwrite","","Writes into `Self` at an offset of type `I` using a `Ctx`",null,null],[11,"pwrite","","",14,[[["tryintoctx",8]],["result",4]]],[11,"pwrite_with","","Write `N` at offset `I` with context `Ctx`",14,[[["tryintoctx",8]],["result",4]]],[11,"gwrite","","Write `n` into `self` at `offset`, with a default `Ctx`.…",14,[[["tryintoctx",8]],["result",4]]],[11,"gwrite_with","","Write `n` into `self` at `offset`, with the `ctx`. Updates…",14,[[["tryintoctx",8]],["result",4]]],[8,"Cread","","Core-read - core, no_std friendly trait for reading basic…",null,null],[11,"cread_with","","Reads a value from `Self` at `offset` with `ctx`. Cannot…",15,[[],["fromctx",8]]],[11,"cread","","Reads a value implementing `FromCtx` from `Self` at…",15,[[],["fromctx",8]]],[8,"Cwrite","","Core-write - core, no_std friendly trait for writing basic…",null,null],[11,"cwrite","","Writes `n` into `Self` at `offset`; uses default context.…",16,[[["intoctx",8]]]],[11,"cwrite_with","","Writes `n` into `Self` at `offset` with `ctx`",16,[[["intoctx",8]]]],[8,"IOread","","An extension trait to `std::io::Read` streams; this only…",null,null],[11,"ioread","","Reads the type `N` from `Self`, with a default parsing…",17,[[],[["result",6],["fromctx",8],["sizewith",8]]]],[11,"ioread_with","","Reads the type `N` from `Self`, with the parsing context…",17,[[],[["result",6],["fromctx",8],["sizewith",8]]]],[8,"IOwrite","","An extension trait to `std::io::Write` streams; this only…",null,null],[11,"iowrite","","Writes the type `N` into `Self`, with the parsing context…",18,[[["intoctx",8],["sizewith",8]],["result",6]]],[11,"iowrite_with","","Writes the type `N` into `Self`, with the parsing context…",18,[[["intoctx",8],["sizewith",8]],["result",6]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","scroll::ctx","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"try_from_ctx","scroll","",11,[[],["result",4]]],[11,"try_from_ctx","","",12,[[],["result",4]]],[11,"as_ref","","",11,[[]]],[11,"as_ref","","",12,[[]]],[11,"from","","",1,[[["error",3]],["error",4]]],[11,"from","","",0,[[]]],[11,"clone","scroll::ctx","",4,[[],["strctx",4]]],[11,"clone","scroll","",0,[[],["endian",4]]],[11,"clone","","",11,[[],["uleb128",3]]],[11,"clone","","",12,[[],["sleb128",3]]],[11,"default","scroll::ctx","",4,[[]]],[11,"default","scroll","",0,[[]]],[11,"eq","","",0,[[["endian",4]]]],[11,"eq","","",11,[[["uleb128",3]]]],[11,"ne","","",11,[[["uleb128",3]]]],[11,"eq","","",12,[[["sleb128",3]]]],[11,"ne","","",12,[[["sleb128",3]]]],[11,"fmt","scroll::ctx","",4,[[["formatter",3]],["result",6]]],[11,"fmt","scroll","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"description","","",1,[[]]],[11,"cause","","",1,[[],[["option",4],["error",8]]]],[11,"pread","","Reads a value from `self` at `offset` with a default…",13,[[],[["result",4],["tryfromctx",8]]]],[11,"pread_with","","Reads a value from `self` at `offset` with the given `ctx`",13,[[],[["result",4],["tryfromctx",8]]]],[11,"gread","","Reads a value from `self` at `offset` with a default…",13,[[],[["result",4],["tryfromctx",8]]]],[11,"gread_with","","Reads a value from `self` at `offset` with the given…",13,[[],[["result",4],["tryfromctx",8]]]],[11,"gread_inout","","Trys to write `inout.len()` `N`s into `inout` from `Self`…",13,[[],["result",4]]],[11,"gread_inout_with","","Trys to write `inout.len()` `N`s into `inout` from `Self`…",13,[[],["result",4]]],[11,"pwrite","","",14,[[["tryintoctx",8]],["result",4]]],[11,"pwrite_with","","Write `N` at offset `I` with context `Ctx`",14,[[["tryintoctx",8]],["result",4]]],[11,"gwrite","","Write `n` into `self` at `offset`, with a default `Ctx`.…",14,[[["tryintoctx",8]],["result",4]]],[11,"gwrite_with","","Write `n` into `self` at `offset`, with the `ctx`. Updates…",14,[[["tryintoctx",8]],["result",4]]],[11,"cread_with","","Reads a value from `Self` at `offset` with `ctx`. Cannot…",15,[[],["fromctx",8]]],[11,"cread","","Reads a value implementing `FromCtx` from `Self` at…",15,[[],["fromctx",8]]],[11,"cwrite","","Writes `n` into `Self` at `offset`; uses default context.…",16,[[["intoctx",8]]]],[11,"cwrite_with","","Writes `n` into `Self` at `offset` with `ctx`",16,[[["intoctx",8]]]],[11,"ioread","","Reads the type `N` from `Self`, with a default parsing…",17,[[],[["result",6],["fromctx",8],["sizewith",8]]]],[11,"ioread_with","","Reads the type `N` from `Self`, with the parsing context…",17,[[],[["result",6],["fromctx",8],["sizewith",8]]]],[11,"iowrite","","Writes the type `N` into `Self`, with the parsing context…",18,[[["intoctx",8],["sizewith",8]],["result",6]]],[11,"iowrite_with","","Writes the type `N` into `Self`, with the parsing context…",18,[[["intoctx",8],["sizewith",8]],["result",6]]]],"p":[[4,"Endian"],[4,"Error"],[13,"TooBig"],[13,"BadInput"],[4,"StrCtx"],[8,"MeasureWith"],[8,"FromCtx"],[8,"TryFromCtx"],[8,"IntoCtx"],[8,"TryIntoCtx"],[8,"SizeWith"],[3,"Uleb128"],[3,"Sleb128"],[8,"Pread"],[8,"Pwrite"],[8,"Cread"],[8,"Cwrite"],[8,"IOread"],[8,"IOwrite"]]},\
"scroll_derive":{"doc":"","i":[[24,"Pread","scroll_derive","",null,null],[24,"Pwrite","","",null,null],[24,"SizeWith","","",null,null],[24,"IOread","","",null,null],[24,"IOwrite","","",null,null]],"p":[]},\
"serde":{"doc":"SerdeSerde is a framework for serializing and…","i":[[0,"de","serde","Generic data structure deserialization framework.",null,null],[3,"IgnoredAny","serde::de","An efficient way of discarding data from a deserializer.",null,null],[4,"Unexpected","","`Unexpected` represents an unexpected invocation of any…",null,null],[13,"Bool","","The input contained a boolean value that was not expected.",0,null],[13,"Unsigned","","The input contained an unsigned integer `u8`, `u16`, `u32`…",0,null],[13,"Signed","","The input contained a signed integer `i8`, `i16`, `i32` or…",0,null],[13,"Float","","The input contained a floating point `f32` or `f64` that…",0,null],[13,"Char","","The input contained a `char` that was not expected.",0,null],[13,"Str","","The input contained a `&str` or `String` that was not…",0,null],[13,"Bytes","","The input contained a `&[u8]` or `Vec<u8>` that was not…",0,null],[13,"Unit","","The input contained a unit `()` that was not expected.",0,null],[13,"Option","","The input contained an `Option<T>` that was not expected.",0,null],[13,"NewtypeStruct","","The input contained a newtype struct that was not expected.",0,null],[13,"Seq","","The input contained a sequence that was not expected.",0,null],[13,"Map","","The input contained a map that was not expected.",0,null],[13,"Enum","","The input contained an enum that was not expected.",0,null],[13,"UnitVariant","","The input contained a unit variant that was not expected.",0,null],[13,"NewtypeVariant","","The input contained a newtype variant that was not expected.",0,null],[13,"TupleVariant","","The input contained a tuple variant that was not expected.",0,null],[13,"StructVariant","","The input contained a struct variant that was not expected.",0,null],[13,"Other","","A message stating what uncategorized thing the input…",0,null],[0,"value","","Building blocks for deserializing basic values using the…",null,null],[3,"Error","serde::de::value","A minimal representation of all possible errors that can…",null,null],[3,"UnitDeserializer","","A deserializer holding a `()`.",null,null],[3,"BoolDeserializer","","A deserializer holding a `bool`.",null,null],[3,"I8Deserializer","","A deserializer holding an `i8`.",null,null],[3,"I16Deserializer","","A deserializer holding an `i16`.",null,null],[3,"I32Deserializer","","A deserializer holding an `i32`.",null,null],[3,"I64Deserializer","","A deserializer holding an `i64`.",null,null],[3,"IsizeDeserializer","","A deserializer holding an `isize`.",null,null],[3,"U8Deserializer","","A deserializer holding a `u8`.",null,null],[3,"U16Deserializer","","A deserializer holding a `u16`.",null,null],[3,"U64Deserializer","","A deserializer holding a `u64`.",null,null],[3,"UsizeDeserializer","","A deserializer holding a `usize`.",null,null],[3,"F32Deserializer","","A deserializer holding an `f32`.",null,null],[3,"F64Deserializer","","A deserializer holding an `f64`.",null,null],[3,"CharDeserializer","","A deserializer holding a `char`.",null,null],[3,"I128Deserializer","","A deserializer holding an `i128`.",null,null],[3,"U128Deserializer","","A deserializer holding a `u128`.",null,null],[3,"U32Deserializer","","A deserializer holding a `u32`.",null,null],[3,"StrDeserializer","","A deserializer holding a `&str`.",null,null],[3,"BorrowedStrDeserializer","","A deserializer holding a `&str` with a lifetime tied to…",null,null],[3,"StringDeserializer","","A deserializer holding a `String`.",null,null],[3,"CowStrDeserializer","","A deserializer holding a `Cow<str>`.",null,null],[3,"BorrowedBytesDeserializer","","A deserializer holding a `&[u8]` with a lifetime tied to…",null,null],[3,"SeqDeserializer","","A deserializer that iterates over a sequence.",null,null],[3,"SeqAccessDeserializer","","A deserializer holding a `SeqAccess`.",null,null],[3,"MapDeserializer","","A deserializer that iterates over a map.",null,null],[3,"MapAccessDeserializer","","A deserializer holding a `MapAccess`.",null,null],[11,"new","","Create a new borrowed deserializer from the given string.",1,[[],["borrowedstrdeserializer",3]]],[11,"new","","Create a new borrowed deserializer from the given byte…",2,[[],["borrowedbytesdeserializer",3]]],[11,"new","","Construct a new `SeqDeserializer<I, E>`.",3,[[]]],[11,"end","","Check for remaining elements after passing a…",3,[[],["result",4]]],[11,"new","","Construct a new `SeqAccessDeserializer<A>`.",4,[[]]],[11,"new","","Construct a new `MapDeserializer<I, E>`.",5,[[]]],[11,"end","","Check for remaining elements after passing a…",5,[[],["result",4]]],[11,"new","","Construct a new `MapAccessDeserializer<A>`.",6,[[]]],[8,"Error","serde::de","The `Error` trait allows `Deserialize` implementations to…",null,null],[10,"custom","","Raised when there is general error when deserializing a…",7,[[]]],[11,"invalid_type","","Raised when a `Deserialize` receives a type different from…",7,[[["expected",8],["unexpected",4]]]],[11,"invalid_value","","Raised when a `Deserialize` receives a value of the right…",7,[[["expected",8],["unexpected",4]]]],[11,"invalid_length","","Raised when deserializing a sequence or map and the input…",7,[[["expected",8]]]],[11,"unknown_variant","","Raised when a `Deserialize` enum type received a variant…",7,[[]]],[11,"unknown_field","","Raised when a `Deserialize` struct type received a field…",7,[[]]],[11,"missing_field","","Raised when a `Deserialize` struct type expected to…",7,[[]]],[11,"duplicate_field","","Raised when a `Deserialize` struct type received more than…",7,[[]]],[8,"Expected","","`Expected` represents an explanation of what data a…",null,null],[10,"fmt","","Format an explanation of what data was being expected.…",8,[[["formatter",3]],["result",6]]],[8,"Deserialize","","A data structure that can be deserialized from any data…",null,null],[10,"deserialize","","Deserialize this value from the given Serde deserializer.",9,[[],["result",4]]],[8,"DeserializeOwned","","A data structure that can be deserialized without…",null,null],[8,"DeserializeSeed","","`DeserializeSeed` is the stateful form of the…",null,null],[16,"Value","","The type produced by using this seed.",10,null],[10,"deserialize","","Equivalent to the more common `Deserialize::deserialize`…",10,[[],["result",4]]],[8,"Deserializer","","A data format that can deserialize any data structure…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",11,null],[10,"deserialize_any","","Require the `Deserializer` to figure out how to drive the…",11,[[],["result",4]]],[10,"deserialize_bool","","Hint that the `Deserialize` type is expecting a `bool`…",11,[[],["result",4]]],[10,"deserialize_i8","","Hint that the `Deserialize` type is expecting an `i8` value.",11,[[],["result",4]]],[10,"deserialize_i16","","Hint that the `Deserialize` type is expecting an `i16`…",11,[[],["result",4]]],[10,"deserialize_i32","","Hint that the `Deserialize` type is expecting an `i32`…",11,[[],["result",4]]],[10,"deserialize_i64","","Hint that the `Deserialize` type is expecting an `i64`…",11,[[],["result",4]]],[11,"deserialize_i128","","Hint that the `Deserialize` type is expecting an `i128`…",11,[[],["result",4]]],[10,"deserialize_u8","","Hint that the `Deserialize` type is expecting a `u8` value.",11,[[],["result",4]]],[10,"deserialize_u16","","Hint that the `Deserialize` type is expecting a `u16` value.",11,[[],["result",4]]],[10,"deserialize_u32","","Hint that the `Deserialize` type is expecting a `u32` value.",11,[[],["result",4]]],[10,"deserialize_u64","","Hint that the `Deserialize` type is expecting a `u64` value.",11,[[],["result",4]]],[11,"deserialize_u128","","Hint that the `Deserialize` type is expecting an `u128`…",11,[[],["result",4]]],[10,"deserialize_f32","","Hint that the `Deserialize` type is expecting a `f32` value.",11,[[],["result",4]]],[10,"deserialize_f64","","Hint that the `Deserialize` type is expecting a `f64` value.",11,[[],["result",4]]],[10,"deserialize_char","","Hint that the `Deserialize` type is expecting a `char`…",11,[[],["result",4]]],[10,"deserialize_str","","Hint that the `Deserialize` type is expecting a string…",11,[[],["result",4]]],[10,"deserialize_string","","Hint that the `Deserialize` type is expecting a string…",11,[[],["result",4]]],[10,"deserialize_bytes","","Hint that the `Deserialize` type is expecting a byte array…",11,[[],["result",4]]],[10,"deserialize_byte_buf","","Hint that the `Deserialize` type is expecting a byte array…",11,[[],["result",4]]],[10,"deserialize_option","","Hint that the `Deserialize` type is expecting an optional…",11,[[],["result",4]]],[10,"deserialize_unit","","Hint that the `Deserialize` type is expecting a unit value.",11,[[],["result",4]]],[10,"deserialize_unit_struct","","Hint that the `Deserialize` type is expecting a unit…",11,[[],["result",4]]],[10,"deserialize_newtype_struct","","Hint that the `Deserialize` type is expecting a newtype…",11,[[],["result",4]]],[10,"deserialize_seq","","Hint that the `Deserialize` type is expecting a sequence…",11,[[],["result",4]]],[10,"deserialize_tuple","","Hint that the `Deserialize` type is expecting a sequence…",11,[[],["result",4]]],[10,"deserialize_tuple_struct","","Hint that the `Deserialize` type is expecting a tuple…",11,[[],["result",4]]],[10,"deserialize_map","","Hint that the `Deserialize` type is expecting a map of…",11,[[],["result",4]]],[10,"deserialize_struct","","Hint that the `Deserialize` type is expecting a struct…",11,[[],["result",4]]],[10,"deserialize_enum","","Hint that the `Deserialize` type is expecting an enum…",11,[[],["result",4]]],[10,"deserialize_identifier","","Hint that the `Deserialize` type is expecting the name of…",11,[[],["result",4]]],[10,"deserialize_ignored_any","","Hint that the `Deserialize` type needs to deserialize a…",11,[[],["result",4]]],[11,"is_human_readable","","Determine whether `Deserialize` implementations should…",11,[[]]],[8,"Visitor","","This trait represents a visitor that walks through a…",null,null],[16,"Value","","The value produced by this visitor.",12,null],[10,"expecting","","Format a message stating what data this Visitor expects to…",12,[[["formatter",3]],["result",6]]],[11,"visit_bool","","The input contains a boolean.",12,[[],["result",4]]],[11,"visit_i8","","The input contains an `i8`.",12,[[],["result",4]]],[11,"visit_i16","","The input contains an `i16`.",12,[[],["result",4]]],[11,"visit_i32","","The input contains an `i32`.",12,[[],["result",4]]],[11,"visit_i64","","The input contains an `i64`.",12,[[],["result",4]]],[11,"visit_i128","","The input contains a `i128`.",12,[[],["result",4]]],[11,"visit_u8","","The input contains a `u8`.",12,[[],["result",4]]],[11,"visit_u16","","The input contains a `u16`.",12,[[],["result",4]]],[11,"visit_u32","","The input contains a `u32`.",12,[[],["result",4]]],[11,"visit_u64","","The input contains a `u64`.",12,[[],["result",4]]],[11,"visit_u128","","The input contains a `u128`.",12,[[],["result",4]]],[11,"visit_f32","","The input contains an `f32`.",12,[[],["result",4]]],[11,"visit_f64","","The input contains an `f64`.",12,[[],["result",4]]],[11,"visit_char","","The input contains a `char`.",12,[[],["result",4]]],[11,"visit_str","","The input contains a string. The lifetime of the string is…",12,[[],["result",4]]],[11,"visit_borrowed_str","","The input contains a string that lives at least as long as…",12,[[],["result",4]]],[11,"visit_string","","The input contains a string and ownership of the string is…",12,[[["string",3]],["result",4]]],[11,"visit_bytes","","The input contains a byte array. The lifetime of the byte…",12,[[],["result",4]]],[11,"visit_borrowed_bytes","","The input contains a byte array that lives at least as…",12,[[],["result",4]]],[11,"visit_byte_buf","","The input contains a byte array and ownership of the byte…",12,[[["vec",3]],["result",4]]],[11,"visit_none","","The input contains an optional that is absent.",12,[[],["result",4]]],[11,"visit_some","","The input contains an optional that is present.",12,[[],["result",4]]],[11,"visit_unit","","The input contains a unit `()`.",12,[[],["result",4]]],[11,"visit_newtype_struct","","The input contains a newtype struct.",12,[[],["result",4]]],[11,"visit_seq","","The input contains a sequence of elements.",12,[[],["result",4]]],[11,"visit_map","","The input contains a key-value map.",12,[[],["result",4]]],[11,"visit_enum","","The input contains an enum.",12,[[],["result",4]]],[8,"SeqAccess","","Provides a `Visitor` access to each element of a sequence…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",13,null],[10,"next_element_seed","","This returns `Ok(Some(value))` for the next value in the…",13,[[],[["result",4],["option",4]]]],[11,"next_element","","This returns `Ok(Some(value))` for the next value in the…",13,[[],[["result",4],["option",4]]]],[11,"size_hint","","Returns the number of elements remaining in the sequence,…",13,[[],["option",4]]],[8,"MapAccess","","Provides a `Visitor` access to each entry of a map in the…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",14,null],[10,"next_key_seed","","This returns `Ok(Some(key))` for the next key in the map,…",14,[[],[["result",4],["option",4]]]],[10,"next_value_seed","","This returns a `Ok(value)` for the next value in the map.",14,[[],["result",4]]],[11,"next_entry_seed","","This returns `Ok(Some((key, value)))` for the next…",14,[[],[["option",4],["result",4]]]],[11,"next_key","","This returns `Ok(Some(key))` for the next key in the map,…",14,[[],[["result",4],["option",4]]]],[11,"next_value","","This returns a `Ok(value)` for the next value in the map.",14,[[],["result",4]]],[11,"next_entry","","This returns `Ok(Some((key, value)))` for the next…",14,[[],[["option",4],["result",4]]]],[11,"size_hint","","Returns the number of entries remaining in the map, if…",14,[[],["option",4]]],[8,"EnumAccess","","Provides a `Visitor` access to the data of an enum in the…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",15,null],[16,"Variant","","The `Visitor` that will be used to deserialize the content…",15,null],[10,"variant_seed","","`variant` is called to identify which variant to…",15,[[],["result",4]]],[11,"variant","","`variant` is called to identify which variant to…",15,[[],["result",4]]],[8,"VariantAccess","","`VariantAccess` is a visitor that is created by the…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",16,null],[10,"unit_variant","","Called when deserializing a variant with no values.",16,[[],["result",4]]],[10,"newtype_variant_seed","","Called when deserializing a variant with a single value.",16,[[],["result",4]]],[11,"newtype_variant","","Called when deserializing a variant with a single value.",16,[[],["result",4]]],[10,"tuple_variant","","Called when deserializing a tuple-like variant.",16,[[],["result",4]]],[10,"struct_variant","","Called when deserializing a struct-like variant.",16,[[],["result",4]]],[8,"IntoDeserializer","","Converts an existing value into a `Deserializer` from…",null,null],[16,"Deserializer","","The type of the deserializer being converted into.",17,null],[10,"into_deserializer","","Convert this value into a deserializer.",17,[[]]],[0,"ser","serde","Generic data structure serialization framework.",null,null],[3,"Impossible","serde::ser","Helper type for implementing a `Serializer` that does not…",null,null],[8,"Error","","Trait used by `Serialize` implementations to generically…",null,null],[10,"custom","","Used when a `Serialize` implementation encounters any…",18,[[]]],[8,"Serialize","","A data structure that can be serialized into any data…",null,null],[10,"serialize","","Serialize this value into the given Serde serializer.",19,[[],["result",4]]],[8,"Serializer","","A data format that can serialize any data structure…",null,null],[16,"Ok","","The output type produced by this `Serializer` during…",20,null],[16,"Error","","The error type when some error occurs during serialization.",20,null],[16,"SerializeSeq","","Type returned from `serialize_seq` for serializing the…",20,null],[16,"SerializeTuple","","Type returned from `serialize_tuple` for serializing the…",20,null],[16,"SerializeTupleStruct","","Type returned from `serialize_tuple_struct` for…",20,null],[16,"SerializeTupleVariant","","Type returned from `serialize_tuple_variant` for…",20,null],[16,"SerializeMap","","Type returned from `serialize_map` for serializing the…",20,null],[16,"SerializeStruct","","Type returned from `serialize_struct` for serializing the…",20,null],[16,"SerializeStructVariant","","Type returned from `serialize_struct_variant` for…",20,null],[10,"serialize_bool","","Serialize a `bool` value.",20,[[],["result",4]]],[10,"serialize_i8","","Serialize an `i8` value.",20,[[],["result",4]]],[10,"serialize_i16","","Serialize an `i16` value.",20,[[],["result",4]]],[10,"serialize_i32","","Serialize an `i32` value.",20,[[],["result",4]]],[10,"serialize_i64","","Serialize an `i64` value.",20,[[],["result",4]]],[11,"serialize_i128","","Serialize an `i128` value.",20,[[],["result",4]]],[10,"serialize_u8","","Serialize a `u8` value.",20,[[],["result",4]]],[10,"serialize_u16","","Serialize a `u16` value.",20,[[],["result",4]]],[10,"serialize_u32","","Serialize a `u32` value.",20,[[],["result",4]]],[10,"serialize_u64","","Serialize a `u64` value.",20,[[],["result",4]]],[11,"serialize_u128","","Serialize a `u128` value.",20,[[],["result",4]]],[10,"serialize_f32","","Serialize an `f32` value.",20,[[],["result",4]]],[10,"serialize_f64","","Serialize an `f64` value.",20,[[],["result",4]]],[10,"serialize_char","","Serialize a character.",20,[[],["result",4]]],[10,"serialize_str","","Serialize a `&str`.",20,[[],["result",4]]],[10,"serialize_bytes","","Serialize a chunk of raw byte data.",20,[[],["result",4]]],[10,"serialize_none","","Serialize a `None` value.",20,[[],["result",4]]],[10,"serialize_some","","Serialize a `Some(T)` value.",20,[[],["result",4]]],[10,"serialize_unit","","Serialize a `()` value.",20,[[],["result",4]]],[10,"serialize_unit_struct","","Serialize a unit struct like `struct Unit` or…",20,[[],["result",4]]],[10,"serialize_unit_variant","","Serialize a unit variant like `E::A` in `enum E { A, B }`.",20,[[],["result",4]]],[10,"serialize_newtype_struct","","Serialize a newtype struct like `struct Millimeters(u8)`.",20,[[],["result",4]]],[10,"serialize_newtype_variant","","Serialize a newtype variant like `E::N` in `enum E { N(u8)…",20,[[],["result",4]]],[10,"serialize_seq","","Begin to serialize a variably sized sequence. This call…",20,[[["option",4]],["result",4]]],[10,"serialize_tuple","","Begin to serialize a statically sized sequence whose…",20,[[],["result",4]]],[10,"serialize_tuple_struct","","Begin to serialize a tuple struct like `struct Rgb(u8, u8,…",20,[[],["result",4]]],[10,"serialize_tuple_variant","","Begin to serialize a tuple variant like `E::T` in `enum E…",20,[[],["result",4]]],[10,"serialize_map","","Begin to serialize a map. This call must be followed by…",20,[[["option",4]],["result",4]]],[10,"serialize_struct","","Begin to serialize a struct like `struct Rgb { r: u8, g:…",20,[[],["result",4]]],[10,"serialize_struct_variant","","Begin to serialize a struct variant like `E::S` in `enum E…",20,[[],["result",4]]],[11,"collect_seq","","Collect an iterator as a sequence.",20,[[],["result",4]]],[11,"collect_map","","Collect an iterator as a map.",20,[[],["result",4]]],[11,"collect_str","","Serialize a string produced by an implementation of…",20,[[],["result",4]]],[11,"is_human_readable","","Determine whether `Serialize` implementations should…",20,[[]]],[8,"SerializeSeq","","Returned from `Serializer::serialize_seq`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",21,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",21,null],[10,"serialize_element","","Serialize a sequence element.",21,[[],["result",4]]],[10,"end","","Finish serializing a sequence.",21,[[],["result",4]]],[8,"SerializeTuple","","Returned from `Serializer::serialize_tuple`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",22,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",22,null],[10,"serialize_element","","Serialize a tuple element.",22,[[],["result",4]]],[10,"end","","Finish serializing a tuple.",22,[[],["result",4]]],[8,"SerializeTupleStruct","","Returned from `Serializer::serialize_tuple_struct`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",23,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",23,null],[10,"serialize_field","","Serialize a tuple struct field.",23,[[],["result",4]]],[10,"end","","Finish serializing a tuple struct.",23,[[],["result",4]]],[8,"SerializeTupleVariant","","Returned from `Serializer::serialize_tuple_variant`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",24,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",24,null],[10,"serialize_field","","Serialize a tuple variant field.",24,[[],["result",4]]],[10,"end","","Finish serializing a tuple variant.",24,[[],["result",4]]],[8,"SerializeMap","","Returned from `Serializer::serialize_map`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",25,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",25,null],[10,"serialize_key","","Serialize a map key.",25,[[],["result",4]]],[10,"serialize_value","","Serialize a map value.",25,[[],["result",4]]],[11,"serialize_entry","","Serialize a map entry consisting of a key and a value.",25,[[],["result",4]]],[10,"end","","Finish serializing a map.",25,[[],["result",4]]],[8,"SerializeStruct","","Returned from `Serializer::serialize_struct`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",26,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",26,null],[10,"serialize_field","","Serialize a struct field.",26,[[],["result",4]]],[11,"skip_field","","Indicate that a struct field has been skipped.",26,[[],["result",4]]],[10,"end","","Finish serializing a struct.",26,[[],["result",4]]],[8,"SerializeStructVariant","","Returned from `Serializer::serialize_struct_variant`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",27,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",27,null],[10,"serialize_field","","Serialize a struct variant field.",27,[[],["result",4]]],[11,"skip_field","","Indicate that a struct variant field has been skipped.",27,[[],["result",4]]],[10,"end","","Finish serializing a struct variant.",27,[[],["result",4]]],[8,"Deserialize","serde","A data structure that can be deserialized from any data…",null,null],[10,"deserialize","","Deserialize this value from the given Serde deserializer.",9,[[],["result",4]]],[8,"Deserializer","","A data format that can deserialize any data structure…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",11,null],[10,"deserialize_any","","Require the `Deserializer` to figure out how to drive the…",11,[[],["result",4]]],[10,"deserialize_bool","","Hint that the `Deserialize` type is expecting a `bool`…",11,[[],["result",4]]],[10,"deserialize_i8","","Hint that the `Deserialize` type is expecting an `i8` value.",11,[[],["result",4]]],[10,"deserialize_i16","","Hint that the `Deserialize` type is expecting an `i16`…",11,[[],["result",4]]],[10,"deserialize_i32","","Hint that the `Deserialize` type is expecting an `i32`…",11,[[],["result",4]]],[10,"deserialize_i64","","Hint that the `Deserialize` type is expecting an `i64`…",11,[[],["result",4]]],[11,"deserialize_i128","","Hint that the `Deserialize` type is expecting an `i128`…",11,[[],["result",4]]],[10,"deserialize_u8","","Hint that the `Deserialize` type is expecting a `u8` value.",11,[[],["result",4]]],[10,"deserialize_u16","","Hint that the `Deserialize` type is expecting a `u16` value.",11,[[],["result",4]]],[10,"deserialize_u32","","Hint that the `Deserialize` type is expecting a `u32` value.",11,[[],["result",4]]],[10,"deserialize_u64","","Hint that the `Deserialize` type is expecting a `u64` value.",11,[[],["result",4]]],[11,"deserialize_u128","","Hint that the `Deserialize` type is expecting an `u128`…",11,[[],["result",4]]],[10,"deserialize_f32","","Hint that the `Deserialize` type is expecting a `f32` value.",11,[[],["result",4]]],[10,"deserialize_f64","","Hint that the `Deserialize` type is expecting a `f64` value.",11,[[],["result",4]]],[10,"deserialize_char","","Hint that the `Deserialize` type is expecting a `char`…",11,[[],["result",4]]],[10,"deserialize_str","","Hint that the `Deserialize` type is expecting a string…",11,[[],["result",4]]],[10,"deserialize_string","","Hint that the `Deserialize` type is expecting a string…",11,[[],["result",4]]],[10,"deserialize_bytes","","Hint that the `Deserialize` type is expecting a byte array…",11,[[],["result",4]]],[10,"deserialize_byte_buf","","Hint that the `Deserialize` type is expecting a byte array…",11,[[],["result",4]]],[10,"deserialize_option","","Hint that the `Deserialize` type is expecting an optional…",11,[[],["result",4]]],[10,"deserialize_unit","","Hint that the `Deserialize` type is expecting a unit value.",11,[[],["result",4]]],[10,"deserialize_unit_struct","","Hint that the `Deserialize` type is expecting a unit…",11,[[],["result",4]]],[10,"deserialize_newtype_struct","","Hint that the `Deserialize` type is expecting a newtype…",11,[[],["result",4]]],[10,"deserialize_seq","","Hint that the `Deserialize` type is expecting a sequence…",11,[[],["result",4]]],[10,"deserialize_tuple","","Hint that the `Deserialize` type is expecting a sequence…",11,[[],["result",4]]],[10,"deserialize_tuple_struct","","Hint that the `Deserialize` type is expecting a tuple…",11,[[],["result",4]]],[10,"deserialize_map","","Hint that the `Deserialize` type is expecting a map of…",11,[[],["result",4]]],[10,"deserialize_struct","","Hint that the `Deserialize` type is expecting a struct…",11,[[],["result",4]]],[10,"deserialize_enum","","Hint that the `Deserialize` type is expecting an enum…",11,[[],["result",4]]],[10,"deserialize_identifier","","Hint that the `Deserialize` type is expecting the name of…",11,[[],["result",4]]],[10,"deserialize_ignored_any","","Hint that the `Deserialize` type needs to deserialize a…",11,[[],["result",4]]],[11,"is_human_readable","","Determine whether `Deserialize` implementations should…",11,[[]]],[8,"Serialize","","A data structure that can be serialized into any data…",null,null],[10,"serialize","","Serialize this value into the given Serde serializer.",19,[[],["result",4]]],[8,"Serializer","","A data format that can serialize any data structure…",null,null],[16,"Ok","","The output type produced by this `Serializer` during…",20,null],[16,"Error","","The error type when some error occurs during serialization.",20,null],[16,"SerializeSeq","","Type returned from `serialize_seq` for serializing the…",20,null],[16,"SerializeTuple","","Type returned from `serialize_tuple` for serializing the…",20,null],[16,"SerializeTupleStruct","","Type returned from `serialize_tuple_struct` for…",20,null],[16,"SerializeTupleVariant","","Type returned from `serialize_tuple_variant` for…",20,null],[16,"SerializeMap","","Type returned from `serialize_map` for serializing the…",20,null],[16,"SerializeStruct","","Type returned from `serialize_struct` for serializing the…",20,null],[16,"SerializeStructVariant","","Type returned from `serialize_struct_variant` for…",20,null],[10,"serialize_bool","","Serialize a `bool` value.",20,[[],["result",4]]],[10,"serialize_i8","","Serialize an `i8` value.",20,[[],["result",4]]],[10,"serialize_i16","","Serialize an `i16` value.",20,[[],["result",4]]],[10,"serialize_i32","","Serialize an `i32` value.",20,[[],["result",4]]],[10,"serialize_i64","","Serialize an `i64` value.",20,[[],["result",4]]],[11,"serialize_i128","","Serialize an `i128` value.",20,[[],["result",4]]],[10,"serialize_u8","","Serialize a `u8` value.",20,[[],["result",4]]],[10,"serialize_u16","","Serialize a `u16` value.",20,[[],["result",4]]],[10,"serialize_u32","","Serialize a `u32` value.",20,[[],["result",4]]],[10,"serialize_u64","","Serialize a `u64` value.",20,[[],["result",4]]],[11,"serialize_u128","","Serialize a `u128` value.",20,[[],["result",4]]],[10,"serialize_f32","","Serialize an `f32` value.",20,[[],["result",4]]],[10,"serialize_f64","","Serialize an `f64` value.",20,[[],["result",4]]],[10,"serialize_char","","Serialize a character.",20,[[],["result",4]]],[10,"serialize_str","","Serialize a `&str`.",20,[[],["result",4]]],[10,"serialize_bytes","","Serialize a chunk of raw byte data.",20,[[],["result",4]]],[10,"serialize_none","","Serialize a `None` value.",20,[[],["result",4]]],[10,"serialize_some","","Serialize a `Some(T)` value.",20,[[],["result",4]]],[10,"serialize_unit","","Serialize a `()` value.",20,[[],["result",4]]],[10,"serialize_unit_struct","","Serialize a unit struct like `struct Unit` or…",20,[[],["result",4]]],[10,"serialize_unit_variant","","Serialize a unit variant like `E::A` in `enum E { A, B }`.",20,[[],["result",4]]],[10,"serialize_newtype_struct","","Serialize a newtype struct like `struct Millimeters(u8)`.",20,[[],["result",4]]],[10,"serialize_newtype_variant","","Serialize a newtype variant like `E::N` in `enum E { N(u8)…",20,[[],["result",4]]],[10,"serialize_seq","","Begin to serialize a variably sized sequence. This call…",20,[[["option",4]],["result",4]]],[10,"serialize_tuple","","Begin to serialize a statically sized sequence whose…",20,[[],["result",4]]],[10,"serialize_tuple_struct","","Begin to serialize a tuple struct like `struct Rgb(u8, u8,…",20,[[],["result",4]]],[10,"serialize_tuple_variant","","Begin to serialize a tuple variant like `E::T` in `enum E…",20,[[],["result",4]]],[10,"serialize_map","","Begin to serialize a map. This call must be followed by…",20,[[["option",4]],["result",4]]],[10,"serialize_struct","","Begin to serialize a struct like `struct Rgb { r: u8, g:…",20,[[],["result",4]]],[10,"serialize_struct_variant","","Begin to serialize a struct variant like `E::S` in `enum E…",20,[[],["result",4]]],[11,"collect_seq","","Collect an iterator as a sequence.",20,[[],["result",4]]],[11,"collect_map","","Collect an iterator as a map.",20,[[],["result",4]]],[11,"collect_str","","Serialize a string produced by an implementation of…",20,[[],["result",4]]],[11,"is_human_readable","","Determine whether `Serialize` implementations should…",20,[[]]],[14,"forward_to_deserialize_any","","Helper macro when implementing the `Deserializer` part of…",null,null],[14,"serde_if_integer128","","Conditional compilation depending on whether Serde is…",null,null],[11,"fmt","serde::de","",28,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","serde::de::value","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"to_string","","",29,[[],["string",3]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","serde::ser","",50,[[]]],[11,"into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"deserialize","serde::de","",28,[[],[["ignoredany",3],["result",4]]]],[11,"deserialize_bool","serde::de::value","",30,[[],["result",4]]],[11,"deserialize_i8","","",30,[[],["result",4]]],[11,"deserialize_i16","","",30,[[],["result",4]]],[11,"deserialize_i32","","",30,[[],["result",4]]],[11,"deserialize_i64","","",30,[[],["result",4]]],[11,"deserialize_i128","","",30,[[],["result",4]]],[11,"deserialize_u8","","",30,[[],["result",4]]],[11,"deserialize_u16","","",30,[[],["result",4]]],[11,"deserialize_u32","","",30,[[],["result",4]]],[11,"deserialize_u64","","",30,[[],["result",4]]],[11,"deserialize_u128","","",30,[[],["result",4]]],[11,"deserialize_f32","","",30,[[],["result",4]]],[11,"deserialize_f64","","",30,[[],["result",4]]],[11,"deserialize_char","","",30,[[],["result",4]]],[11,"deserialize_str","","",30,[[],["result",4]]],[11,"deserialize_string","","",30,[[],["result",4]]],[11,"deserialize_bytes","","",30,[[],["result",4]]],[11,"deserialize_byte_buf","","",30,[[],["result",4]]],[11,"deserialize_unit","","",30,[[],["result",4]]],[11,"deserialize_unit_struct","","",30,[[],["result",4]]],[11,"deserialize_newtype_struct","","",30,[[],["result",4]]],[11,"deserialize_seq","","",30,[[],["result",4]]],[11,"deserialize_tuple","","",30,[[],["result",4]]],[11,"deserialize_tuple_struct","","",30,[[],["result",4]]],[11,"deserialize_map","","",30,[[],["result",4]]],[11,"deserialize_struct","","",30,[[],["result",4]]],[11,"deserialize_enum","","",30,[[],["result",4]]],[11,"deserialize_identifier","","",30,[[],["result",4]]],[11,"deserialize_ignored_any","","",30,[[],["result",4]]],[11,"deserialize_any","","",30,[[],["result",4]]],[11,"deserialize_option","","",30,[[],["result",4]]],[11,"deserialize_bool","","",31,[[],["result",4]]],[11,"deserialize_i8","","",31,[[],["result",4]]],[11,"deserialize_i16","","",31,[[],["result",4]]],[11,"deserialize_i32","","",31,[[],["result",4]]],[11,"deserialize_i64","","",31,[[],["result",4]]],[11,"deserialize_i128","","",31,[[],["result",4]]],[11,"deserialize_u8","","",31,[[],["result",4]]],[11,"deserialize_u16","","",31,[[],["result",4]]],[11,"deserialize_u32","","",31,[[],["result",4]]],[11,"deserialize_u64","","",31,[[],["result",4]]],[11,"deserialize_u128","","",31,[[],["result",4]]],[11,"deserialize_f32","","",31,[[],["result",4]]],[11,"deserialize_f64","","",31,[[],["result",4]]],[11,"deserialize_char","","",31,[[],["result",4]]],[11,"deserialize_str","","",31,[[],["result",4]]],[11,"deserialize_string","","",31,[[],["result",4]]],[11,"deserialize_bytes","","",31,[[],["result",4]]],[11,"deserialize_byte_buf","","",31,[[],["result",4]]],[11,"deserialize_option","","",31,[[],["result",4]]],[11,"deserialize_unit","","",31,[[],["result",4]]],[11,"deserialize_unit_struct","","",31,[[],["result",4]]],[11,"deserialize_newtype_struct","","",31,[[],["result",4]]],[11,"deserialize_seq","","",31,[[],["result",4]]],[11,"deserialize_tuple","","",31,[[],["result",4]]],[11,"deserialize_tuple_struct","","",31,[[],["result",4]]],[11,"deserialize_map","","",31,[[],["result",4]]],[11,"deserialize_struct","","",31,[[],["result",4]]],[11,"deserialize_enum","","",31,[[],["result",4]]],[11,"deserialize_identifier","","",31,[[],["result",4]]],[11,"deserialize_ignored_any","","",31,[[],["result",4]]],[11,"deserialize_any","","",31,[[],["result",4]]],[11,"deserialize_bool","","",32,[[],["result",4]]],[11,"deserialize_i8","","",32,[[],["result",4]]],[11,"deserialize_i16","","",32,[[],["result",4]]],[11,"deserialize_i32","","",32,[[],["result",4]]],[11,"deserialize_i64","","",32,[[],["result",4]]],[11,"deserialize_i128","","",32,[[],["result",4]]],[11,"deserialize_u8","","",32,[[],["result",4]]],[11,"deserialize_u16","","",32,[[],["result",4]]],[11,"deserialize_u32","","",32,[[],["result",4]]],[11,"deserialize_u64","","",32,[[],["result",4]]],[11,"deserialize_u128","","",32,[[],["result",4]]],[11,"deserialize_f32","","",32,[[],["result",4]]],[11,"deserialize_f64","","",32,[[],["result",4]]],[11,"deserialize_char","","",32,[[],["result",4]]],[11,"deserialize_str","","",32,[[],["result",4]]],[11,"deserialize_string","","",32,[[],["result",4]]],[11,"deserialize_bytes","","",32,[[],["result",4]]],[11,"deserialize_byte_buf","","",32,[[],["result",4]]],[11,"deserialize_option","","",32,[[],["result",4]]],[11,"deserialize_unit","","",32,[[],["result",4]]],[11,"deserialize_unit_struct","","",32,[[],["result",4]]],[11,"deserialize_newtype_struct","","",32,[[],["result",4]]],[11,"deserialize_seq","","",32,[[],["result",4]]],[11,"deserialize_tuple","","",32,[[],["result",4]]],[11,"deserialize_tuple_struct","","",32,[[],["result",4]]],[11,"deserialize_map","","",32,[[],["result",4]]],[11,"deserialize_struct","","",32,[[],["result",4]]],[11,"deserialize_enum","","",32,[[],["result",4]]],[11,"deserialize_identifier","","",32,[[],["result",4]]],[11,"deserialize_ignored_any","","",32,[[],["result",4]]],[11,"deserialize_any","","",32,[[],["result",4]]],[11,"deserialize_bool","","",33,[[],["result",4]]],[11,"deserialize_i8","","",33,[[],["result",4]]],[11,"deserialize_i16","","",33,[[],["result",4]]],[11,"deserialize_i32","","",33,[[],["result",4]]],[11,"deserialize_i64","","",33,[[],["result",4]]],[11,"deserialize_i128","","",33,[[],["result",4]]],[11,"deserialize_u8","","",33,[[],["result",4]]],[11,"deserialize_u16","","",33,[[],["result",4]]],[11,"deserialize_u32","","",33,[[],["result",4]]],[11,"deserialize_u64","","",33,[[],["result",4]]],[11,"deserialize_u128","","",33,[[],["result",4]]],[11,"deserialize_f32","","",33,[[],["result",4]]],[11,"deserialize_f64","","",33,[[],["result",4]]],[11,"deserialize_char","","",33,[[],["result",4]]],[11,"deserialize_str","","",33,[[],["result",4]]],[11,"deserialize_string","","",33,[[],["result",4]]],[11,"deserialize_bytes","","",33,[[],["result",4]]],[11,"deserialize_byte_buf","","",33,[[],["result",4]]],[11,"deserialize_option","","",33,[[],["result",4]]],[11,"deserialize_unit","","",33,[[],["result",4]]],[11,"deserialize_unit_struct","","",33,[[],["result",4]]],[11,"deserialize_newtype_struct","","",33,[[],["result",4]]],[11,"deserialize_seq","","",33,[[],["result",4]]],[11,"deserialize_tuple","","",33,[[],["result",4]]],[11,"deserialize_tuple_struct","","",33,[[],["result",4]]],[11,"deserialize_map","","",33,[[],["result",4]]],[11,"deserialize_struct","","",33,[[],["result",4]]],[11,"deserialize_enum","","",33,[[],["result",4]]],[11,"deserialize_identifier","","",33,[[],["result",4]]],[11,"deserialize_ignored_any","","",33,[[],["result",4]]],[11,"deserialize_any","","",33,[[],["result",4]]],[11,"deserialize_bool","","",34,[[],["result",4]]],[11,"deserialize_i8","","",34,[[],["result",4]]],[11,"deserialize_i16","","",34,[[],["result",4]]],[11,"deserialize_i32","","",34,[[],["result",4]]],[11,"deserialize_i64","","",34,[[],["result",4]]],[11,"deserialize_i128","","",34,[[],["result",4]]],[11,"deserialize_u8","","",34,[[],["result",4]]],[11,"deserialize_u16","","",34,[[],["result",4]]],[11,"deserialize_u32","","",34,[[],["result",4]]],[11,"deserialize_u64","","",34,[[],["result",4]]],[11,"deserialize_u128","","",34,[[],["result",4]]],[11,"deserialize_f32","","",34,[[],["result",4]]],[11,"deserialize_f64","","",34,[[],["result",4]]],[11,"deserialize_char","","",34,[[],["result",4]]],[11,"deserialize_str","","",34,[[],["result",4]]],[11,"deserialize_string","","",34,[[],["result",4]]],[11,"deserialize_bytes","","",34,[[],["result",4]]],[11,"deserialize_byte_buf","","",34,[[],["result",4]]],[11,"deserialize_option","","",34,[[],["result",4]]],[11,"deserialize_unit","","",34,[[],["result",4]]],[11,"deserialize_unit_struct","","",34,[[],["result",4]]],[11,"deserialize_newtype_struct","","",34,[[],["result",4]]],[11,"deserialize_seq","","",34,[[],["result",4]]],[11,"deserialize_tuple","","",34,[[],["result",4]]],[11,"deserialize_tuple_struct","","",34,[[],["result",4]]],[11,"deserialize_map","","",34,[[],["result",4]]],[11,"deserialize_struct","","",34,[[],["result",4]]],[11,"deserialize_enum","","",34,[[],["result",4]]],[11,"deserialize_identifier","","",34,[[],["result",4]]],[11,"deserialize_ignored_any","","",34,[[],["result",4]]],[11,"deserialize_any","","",34,[[],["result",4]]],[11,"deserialize_bool","","",35,[[],["result",4]]],[11,"deserialize_i8","","",35,[[],["result",4]]],[11,"deserialize_i16","","",35,[[],["result",4]]],[11,"deserialize_i32","","",35,[[],["result",4]]],[11,"deserialize_i64","","",35,[[],["result",4]]],[11,"deserialize_i128","","",35,[[],["result",4]]],[11,"deserialize_u8","","",35,[[],["result",4]]],[11,"deserialize_u16","","",35,[[],["result",4]]],[11,"deserialize_u32","","",35,[[],["result",4]]],[11,"deserialize_u64","","",35,[[],["result",4]]],[11,"deserialize_u128","","",35,[[],["result",4]]],[11,"deserialize_f32","","",35,[[],["result",4]]],[11,"deserialize_f64","","",35,[[],["result",4]]],[11,"deserialize_char","","",35,[[],["result",4]]],[11,"deserialize_str","","",35,[[],["result",4]]],[11,"deserialize_string","","",35,[[],["result",4]]],[11,"deserialize_bytes","","",35,[[],["result",4]]],[11,"deserialize_byte_buf","","",35,[[],["result",4]]],[11,"deserialize_option","","",35,[[],["result",4]]],[11,"deserialize_unit","","",35,[[],["result",4]]],[11,"deserialize_unit_struct","","",35,[[],["result",4]]],[11,"deserialize_newtype_struct","","",35,[[],["result",4]]],[11,"deserialize_seq","","",35,[[],["result",4]]],[11,"deserialize_tuple","","",35,[[],["result",4]]],[11,"deserialize_tuple_struct","","",35,[[],["result",4]]],[11,"deserialize_map","","",35,[[],["result",4]]],[11,"deserialize_struct","","",35,[[],["result",4]]],[11,"deserialize_enum","","",35,[[],["result",4]]],[11,"deserialize_identifier","","",35,[[],["result",4]]],[11,"deserialize_ignored_any","","",35,[[],["result",4]]],[11,"deserialize_any","","",35,[[],["result",4]]],[11,"deserialize_bool","","",36,[[],["result",4]]],[11,"deserialize_i8","","",36,[[],["result",4]]],[11,"deserialize_i16","","",36,[[],["result",4]]],[11,"deserialize_i32","","",36,[[],["result",4]]],[11,"deserialize_i64","","",36,[[],["result",4]]],[11,"deserialize_i128","","",36,[[],["result",4]]],[11,"deserialize_u8","","",36,[[],["result",4]]],[11,"deserialize_u16","","",36,[[],["result",4]]],[11,"deserialize_u32","","",36,[[],["result",4]]],[11,"deserialize_u64","","",36,[[],["result",4]]],[11,"deserialize_u128","","",36,[[],["result",4]]],[11,"deserialize_f32","","",36,[[],["result",4]]],[11,"deserialize_f64","","",36,[[],["result",4]]],[11,"deserialize_char","","",36,[[],["result",4]]],[11,"deserialize_str","","",36,[[],["result",4]]],[11,"deserialize_string","","",36,[[],["result",4]]],[11,"deserialize_bytes","","",36,[[],["result",4]]],[11,"deserialize_byte_buf","","",36,[[],["result",4]]],[11,"deserialize_option","","",36,[[],["result",4]]],[11,"deserialize_unit","","",36,[[],["result",4]]],[11,"deserialize_unit_struct","","",36,[[],["result",4]]],[11,"deserialize_newtype_struct","","",36,[[],["result",4]]],[11,"deserialize_seq","","",36,[[],["result",4]]],[11,"deserialize_tuple","","",36,[[],["result",4]]],[11,"deserialize_tuple_struct","","",36,[[],["result",4]]],[11,"deserialize_map","","",36,[[],["result",4]]],[11,"deserialize_struct","","",36,[[],["result",4]]],[11,"deserialize_enum","","",36,[[],["result",4]]],[11,"deserialize_identifier","","",36,[[],["result",4]]],[11,"deserialize_ignored_any","","",36,[[],["result",4]]],[11,"deserialize_any","","",36,[[],["result",4]]],[11,"deserialize_bool","","",37,[[],["result",4]]],[11,"deserialize_i8","","",37,[[],["result",4]]],[11,"deserialize_i16","","",37,[[],["result",4]]],[11,"deserialize_i32","","",37,[[],["result",4]]],[11,"deserialize_i64","","",37,[[],["result",4]]],[11,"deserialize_i128","","",37,[[],["result",4]]],[11,"deserialize_u8","","",37,[[],["result",4]]],[11,"deserialize_u16","","",37,[[],["result",4]]],[11,"deserialize_u32","","",37,[[],["result",4]]],[11,"deserialize_u64","","",37,[[],["result",4]]],[11,"deserialize_u128","","",37,[[],["result",4]]],[11,"deserialize_f32","","",37,[[],["result",4]]],[11,"deserialize_f64","","",37,[[],["result",4]]],[11,"deserialize_char","","",37,[[],["result",4]]],[11,"deserialize_str","","",37,[[],["result",4]]],[11,"deserialize_string","","",37,[[],["result",4]]],[11,"deserialize_bytes","","",37,[[],["result",4]]],[11,"deserialize_byte_buf","","",37,[[],["result",4]]],[11,"deserialize_option","","",37,[[],["result",4]]],[11,"deserialize_unit","","",37,[[],["result",4]]],[11,"deserialize_unit_struct","","",37,[[],["result",4]]],[11,"deserialize_newtype_struct","","",37,[[],["result",4]]],[11,"deserialize_seq","","",37,[[],["result",4]]],[11,"deserialize_tuple","","",37,[[],["result",4]]],[11,"deserialize_tuple_struct","","",37,[[],["result",4]]],[11,"deserialize_map","","",37,[[],["result",4]]],[11,"deserialize_struct","","",37,[[],["result",4]]],[11,"deserialize_enum","","",37,[[],["result",4]]],[11,"deserialize_identifier","","",37,[[],["result",4]]],[11,"deserialize_ignored_any","","",37,[[],["result",4]]],[11,"deserialize_any","","",37,[[],["result",4]]],[11,"deserialize_bool","","",38,[[],["result",4]]],[11,"deserialize_i8","","",38,[[],["result",4]]],[11,"deserialize_i16","","",38,[[],["result",4]]],[11,"deserialize_i32","","",38,[[],["result",4]]],[11,"deserialize_i64","","",38,[[],["result",4]]],[11,"deserialize_i128","","",38,[[],["result",4]]],[11,"deserialize_u8","","",38,[[],["result",4]]],[11,"deserialize_u16","","",38,[[],["result",4]]],[11,"deserialize_u32","","",38,[[],["result",4]]],[11,"deserialize_u64","","",38,[[],["result",4]]],[11,"deserialize_u128","","",38,[[],["result",4]]],[11,"deserialize_f32","","",38,[[],["result",4]]],[11,"deserialize_f64","","",38,[[],["result",4]]],[11,"deserialize_char","","",38,[[],["result",4]]],[11,"deserialize_str","","",38,[[],["result",4]]],[11,"deserialize_string","","",38,[[],["result",4]]],[11,"deserialize_bytes","","",38,[[],["result",4]]],[11,"deserialize_byte_buf","","",38,[[],["result",4]]],[11,"deserialize_option","","",38,[[],["result",4]]],[11,"deserialize_unit","","",38,[[],["result",4]]],[11,"deserialize_unit_struct","","",38,[[],["result",4]]],[11,"deserialize_newtype_struct","","",38,[[],["result",4]]],[11,"deserialize_seq","","",38,[[],["result",4]]],[11,"deserialize_tuple","","",38,[[],["result",4]]],[11,"deserialize_tuple_struct","","",38,[[],["result",4]]],[11,"deserialize_map","","",38,[[],["result",4]]],[11,"deserialize_struct","","",38,[[],["result",4]]],[11,"deserialize_enum","","",38,[[],["result",4]]],[11,"deserialize_identifier","","",38,[[],["result",4]]],[11,"deserialize_ignored_any","","",38,[[],["result",4]]],[11,"deserialize_any","","",38,[[],["result",4]]],[11,"deserialize_bool","","",39,[[],["result",4]]],[11,"deserialize_i8","","",39,[[],["result",4]]],[11,"deserialize_i16","","",39,[[],["result",4]]],[11,"deserialize_i32","","",39,[[],["result",4]]],[11,"deserialize_i64","","",39,[[],["result",4]]],[11,"deserialize_i128","","",39,[[],["result",4]]],[11,"deserialize_u8","","",39,[[],["result",4]]],[11,"deserialize_u16","","",39,[[],["result",4]]],[11,"deserialize_u32","","",39,[[],["result",4]]],[11,"deserialize_u64","","",39,[[],["result",4]]],[11,"deserialize_u128","","",39,[[],["result",4]]],[11,"deserialize_f32","","",39,[[],["result",4]]],[11,"deserialize_f64","","",39,[[],["result",4]]],[11,"deserialize_char","","",39,[[],["result",4]]],[11,"deserialize_str","","",39,[[],["result",4]]],[11,"deserialize_string","","",39,[[],["result",4]]],[11,"deserialize_bytes","","",39,[[],["result",4]]],[11,"deserialize_byte_buf","","",39,[[],["result",4]]],[11,"deserialize_option","","",39,[[],["result",4]]],[11,"deserialize_unit","","",39,[[],["result",4]]],[11,"deserialize_unit_struct","","",39,[[],["result",4]]],[11,"deserialize_newtype_struct","","",39,[[],["result",4]]],[11,"deserialize_seq","","",39,[[],["result",4]]],[11,"deserialize_tuple","","",39,[[],["result",4]]],[11,"deserialize_tuple_struct","","",39,[[],["result",4]]],[11,"deserialize_map","","",39,[[],["result",4]]],[11,"deserialize_struct","","",39,[[],["result",4]]],[11,"deserialize_enum","","",39,[[],["result",4]]],[11,"deserialize_identifier","","",39,[[],["result",4]]],[11,"deserialize_ignored_any","","",39,[[],["result",4]]],[11,"deserialize_any","","",39,[[],["result",4]]],[11,"deserialize_bool","","",40,[[],["result",4]]],[11,"deserialize_i8","","",40,[[],["result",4]]],[11,"deserialize_i16","","",40,[[],["result",4]]],[11,"deserialize_i32","","",40,[[],["result",4]]],[11,"deserialize_i64","","",40,[[],["result",4]]],[11,"deserialize_i128","","",40,[[],["result",4]]],[11,"deserialize_u8","","",40,[[],["result",4]]],[11,"deserialize_u16","","",40,[[],["result",4]]],[11,"deserialize_u32","","",40,[[],["result",4]]],[11,"deserialize_u64","","",40,[[],["result",4]]],[11,"deserialize_u128","","",40,[[],["result",4]]],[11,"deserialize_f32","","",40,[[],["result",4]]],[11,"deserialize_f64","","",40,[[],["result",4]]],[11,"deserialize_char","","",40,[[],["result",4]]],[11,"deserialize_str","","",40,[[],["result",4]]],[11,"deserialize_string","","",40,[[],["result",4]]],[11,"deserialize_bytes","","",40,[[],["result",4]]],[11,"deserialize_byte_buf","","",40,[[],["result",4]]],[11,"deserialize_option","","",40,[[],["result",4]]],[11,"deserialize_unit","","",40,[[],["result",4]]],[11,"deserialize_unit_struct","","",40,[[],["result",4]]],[11,"deserialize_newtype_struct","","",40,[[],["result",4]]],[11,"deserialize_seq","","",40,[[],["result",4]]],[11,"deserialize_tuple","","",40,[[],["result",4]]],[11,"deserialize_tuple_struct","","",40,[[],["result",4]]],[11,"deserialize_map","","",40,[[],["result",4]]],[11,"deserialize_struct","","",40,[[],["result",4]]],[11,"deserialize_enum","","",40,[[],["result",4]]],[11,"deserialize_identifier","","",40,[[],["result",4]]],[11,"deserialize_ignored_any","","",40,[[],["result",4]]],[11,"deserialize_any","","",40,[[],["result",4]]],[11,"deserialize_bool","","",41,[[],["result",4]]],[11,"deserialize_i8","","",41,[[],["result",4]]],[11,"deserialize_i16","","",41,[[],["result",4]]],[11,"deserialize_i32","","",41,[[],["result",4]]],[11,"deserialize_i64","","",41,[[],["result",4]]],[11,"deserialize_i128","","",41,[[],["result",4]]],[11,"deserialize_u8","","",41,[[],["result",4]]],[11,"deserialize_u16","","",41,[[],["result",4]]],[11,"deserialize_u32","","",41,[[],["result",4]]],[11,"deserialize_u64","","",41,[[],["result",4]]],[11,"deserialize_u128","","",41,[[],["result",4]]],[11,"deserialize_f32","","",41,[[],["result",4]]],[11,"deserialize_f64","","",41,[[],["result",4]]],[11,"deserialize_char","","",41,[[],["result",4]]],[11,"deserialize_str","","",41,[[],["result",4]]],[11,"deserialize_string","","",41,[[],["result",4]]],[11,"deserialize_bytes","","",41,[[],["result",4]]],[11,"deserialize_byte_buf","","",41,[[],["result",4]]],[11,"deserialize_option","","",41,[[],["result",4]]],[11,"deserialize_unit","","",41,[[],["result",4]]],[11,"deserialize_unit_struct","","",41,[[],["result",4]]],[11,"deserialize_newtype_struct","","",41,[[],["result",4]]],[11,"deserialize_seq","","",41,[[],["result",4]]],[11,"deserialize_tuple","","",41,[[],["result",4]]],[11,"deserialize_tuple_struct","","",41,[[],["result",4]]],[11,"deserialize_map","","",41,[[],["result",4]]],[11,"deserialize_struct","","",41,[[],["result",4]]],[11,"deserialize_enum","","",41,[[],["result",4]]],[11,"deserialize_identifier","","",41,[[],["result",4]]],[11,"deserialize_ignored_any","","",41,[[],["result",4]]],[11,"deserialize_any","","",41,[[],["result",4]]],[11,"deserialize_bool","","",42,[[],["result",4]]],[11,"deserialize_i8","","",42,[[],["result",4]]],[11,"deserialize_i16","","",42,[[],["result",4]]],[11,"deserialize_i32","","",42,[[],["result",4]]],[11,"deserialize_i64","","",42,[[],["result",4]]],[11,"deserialize_i128","","",42,[[],["result",4]]],[11,"deserialize_u8","","",42,[[],["result",4]]],[11,"deserialize_u16","","",42,[[],["result",4]]],[11,"deserialize_u32","","",42,[[],["result",4]]],[11,"deserialize_u64","","",42,[[],["result",4]]],[11,"deserialize_u128","","",42,[[],["result",4]]],[11,"deserialize_f32","","",42,[[],["result",4]]],[11,"deserialize_f64","","",42,[[],["result",4]]],[11,"deserialize_char","","",42,[[],["result",4]]],[11,"deserialize_str","","",42,[[],["result",4]]],[11,"deserialize_string","","",42,[[],["result",4]]],[11,"deserialize_bytes","","",42,[[],["result",4]]],[11,"deserialize_byte_buf","","",42,[[],["result",4]]],[11,"deserialize_option","","",42,[[],["result",4]]],[11,"deserialize_unit","","",42,[[],["result",4]]],[11,"deserialize_unit_struct","","",42,[[],["result",4]]],[11,"deserialize_newtype_struct","","",42,[[],["result",4]]],[11,"deserialize_seq","","",42,[[],["result",4]]],[11,"deserialize_tuple","","",42,[[],["result",4]]],[11,"deserialize_tuple_struct","","",42,[[],["result",4]]],[11,"deserialize_map","","",42,[[],["result",4]]],[11,"deserialize_struct","","",42,[[],["result",4]]],[11,"deserialize_enum","","",42,[[],["result",4]]],[11,"deserialize_identifier","","",42,[[],["result",4]]],[11,"deserialize_ignored_any","","",42,[[],["result",4]]],[11,"deserialize_any","","",42,[[],["result",4]]],[11,"deserialize_bool","","",43,[[],["result",4]]],[11,"deserialize_i8","","",43,[[],["result",4]]],[11,"deserialize_i16","","",43,[[],["result",4]]],[11,"deserialize_i32","","",43,[[],["result",4]]],[11,"deserialize_i64","","",43,[[],["result",4]]],[11,"deserialize_i128","","",43,[[],["result",4]]],[11,"deserialize_u8","","",43,[[],["result",4]]],[11,"deserialize_u16","","",43,[[],["result",4]]],[11,"deserialize_u32","","",43,[[],["result",4]]],[11,"deserialize_u64","","",43,[[],["result",4]]],[11,"deserialize_u128","","",43,[[],["result",4]]],[11,"deserialize_f32","","",43,[[],["result",4]]],[11,"deserialize_f64","","",43,[[],["result",4]]],[11,"deserialize_char","","",43,[[],["result",4]]],[11,"deserialize_str","","",43,[[],["result",4]]],[11,"deserialize_string","","",43,[[],["result",4]]],[11,"deserialize_bytes","","",43,[[],["result",4]]],[11,"deserialize_byte_buf","","",43,[[],["result",4]]],[11,"deserialize_option","","",43,[[],["result",4]]],[11,"deserialize_unit","","",43,[[],["result",4]]],[11,"deserialize_unit_struct","","",43,[[],["result",4]]],[11,"deserialize_newtype_struct","","",43,[[],["result",4]]],[11,"deserialize_seq","","",43,[[],["result",4]]],[11,"deserialize_tuple","","",43,[[],["result",4]]],[11,"deserialize_tuple_struct","","",43,[[],["result",4]]],[11,"deserialize_map","","",43,[[],["result",4]]],[11,"deserialize_struct","","",43,[[],["result",4]]],[11,"deserialize_enum","","",43,[[],["result",4]]],[11,"deserialize_identifier","","",43,[[],["result",4]]],[11,"deserialize_ignored_any","","",43,[[],["result",4]]],[11,"deserialize_any","","",43,[[],["result",4]]],[11,"deserialize_bool","","",44,[[],["result",4]]],[11,"deserialize_i8","","",44,[[],["result",4]]],[11,"deserialize_i16","","",44,[[],["result",4]]],[11,"deserialize_i32","","",44,[[],["result",4]]],[11,"deserialize_i64","","",44,[[],["result",4]]],[11,"deserialize_i128","","",44,[[],["result",4]]],[11,"deserialize_u8","","",44,[[],["result",4]]],[11,"deserialize_u16","","",44,[[],["result",4]]],[11,"deserialize_u32","","",44,[[],["result",4]]],[11,"deserialize_u64","","",44,[[],["result",4]]],[11,"deserialize_u128","","",44,[[],["result",4]]],[11,"deserialize_f32","","",44,[[],["result",4]]],[11,"deserialize_f64","","",44,[[],["result",4]]],[11,"deserialize_char","","",44,[[],["result",4]]],[11,"deserialize_str","","",44,[[],["result",4]]],[11,"deserialize_string","","",44,[[],["result",4]]],[11,"deserialize_bytes","","",44,[[],["result",4]]],[11,"deserialize_byte_buf","","",44,[[],["result",4]]],[11,"deserialize_option","","",44,[[],["result",4]]],[11,"deserialize_unit","","",44,[[],["result",4]]],[11,"deserialize_unit_struct","","",44,[[],["result",4]]],[11,"deserialize_newtype_struct","","",44,[[],["result",4]]],[11,"deserialize_seq","","",44,[[],["result",4]]],[11,"deserialize_tuple","","",44,[[],["result",4]]],[11,"deserialize_tuple_struct","","",44,[[],["result",4]]],[11,"deserialize_map","","",44,[[],["result",4]]],[11,"deserialize_struct","","",44,[[],["result",4]]],[11,"deserialize_enum","","",44,[[],["result",4]]],[11,"deserialize_identifier","","",44,[[],["result",4]]],[11,"deserialize_ignored_any","","",44,[[],["result",4]]],[11,"deserialize_any","","",44,[[],["result",4]]],[11,"deserialize_bool","","",45,[[],["result",4]]],[11,"deserialize_i8","","",45,[[],["result",4]]],[11,"deserialize_i16","","",45,[[],["result",4]]],[11,"deserialize_i32","","",45,[[],["result",4]]],[11,"deserialize_i64","","",45,[[],["result",4]]],[11,"deserialize_i128","","",45,[[],["result",4]]],[11,"deserialize_u8","","",45,[[],["result",4]]],[11,"deserialize_u16","","",45,[[],["result",4]]],[11,"deserialize_u32","","",45,[[],["result",4]]],[11,"deserialize_u64","","",45,[[],["result",4]]],[11,"deserialize_u128","","",45,[[],["result",4]]],[11,"deserialize_f32","","",45,[[],["result",4]]],[11,"deserialize_f64","","",45,[[],["result",4]]],[11,"deserialize_char","","",45,[[],["result",4]]],[11,"deserialize_str","","",45,[[],["result",4]]],[11,"deserialize_string","","",45,[[],["result",4]]],[11,"deserialize_bytes","","",45,[[],["result",4]]],[11,"deserialize_byte_buf","","",45,[[],["result",4]]],[11,"deserialize_option","","",45,[[],["result",4]]],[11,"deserialize_unit","","",45,[[],["result",4]]],[11,"deserialize_unit_struct","","",45,[[],["result",4]]],[11,"deserialize_newtype_struct","","",45,[[],["result",4]]],[11,"deserialize_seq","","",45,[[],["result",4]]],[11,"deserialize_tuple","","",45,[[],["result",4]]],[11,"deserialize_tuple_struct","","",45,[[],["result",4]]],[11,"deserialize_map","","",45,[[],["result",4]]],[11,"deserialize_struct","","",45,[[],["result",4]]],[11,"deserialize_enum","","",45,[[],["result",4]]],[11,"deserialize_identifier","","",45,[[],["result",4]]],[11,"deserialize_ignored_any","","",45,[[],["result",4]]],[11,"deserialize_any","","",45,[[],["result",4]]],[11,"deserialize_bool","","",46,[[],["result",4]]],[11,"deserialize_i8","","",46,[[],["result",4]]],[11,"deserialize_i16","","",46,[[],["result",4]]],[11,"deserialize_i32","","",46,[[],["result",4]]],[11,"deserialize_i64","","",46,[[],["result",4]]],[11,"deserialize_i128","","",46,[[],["result",4]]],[11,"deserialize_u8","","",46,[[],["result",4]]],[11,"deserialize_u16","","",46,[[],["result",4]]],[11,"deserialize_u32","","",46,[[],["result",4]]],[11,"deserialize_u64","","",46,[[],["result",4]]],[11,"deserialize_u128","","",46,[[],["result",4]]],[11,"deserialize_f32","","",46,[[],["result",4]]],[11,"deserialize_f64","","",46,[[],["result",4]]],[11,"deserialize_char","","",46,[[],["result",4]]],[11,"deserialize_str","","",46,[[],["result",4]]],[11,"deserialize_string","","",46,[[],["result",4]]],[11,"deserialize_bytes","","",46,[[],["result",4]]],[11,"deserialize_byte_buf","","",46,[[],["result",4]]],[11,"deserialize_option","","",46,[[],["result",4]]],[11,"deserialize_unit","","",46,[[],["result",4]]],[11,"deserialize_unit_struct","","",46,[[],["result",4]]],[11,"deserialize_newtype_struct","","",46,[[],["result",4]]],[11,"deserialize_seq","","",46,[[],["result",4]]],[11,"deserialize_tuple","","",46,[[],["result",4]]],[11,"deserialize_tuple_struct","","",46,[[],["result",4]]],[11,"deserialize_map","","",46,[[],["result",4]]],[11,"deserialize_struct","","",46,[[],["result",4]]],[11,"deserialize_identifier","","",46,[[],["result",4]]],[11,"deserialize_ignored_any","","",46,[[],["result",4]]],[11,"deserialize_any","","",46,[[],["result",4]]],[11,"deserialize_enum","","",46,[[],["result",4]]],[11,"deserialize_any","","",47,[[],["result",4]]],[11,"deserialize_enum","","",47,[[],["result",4]]],[11,"deserialize_bool","","",47,[[],["result",4]]],[11,"deserialize_i8","","",47,[[],["result",4]]],[11,"deserialize_i16","","",47,[[],["result",4]]],[11,"deserialize_i32","","",47,[[],["result",4]]],[11,"deserialize_i64","","",47,[[],["result",4]]],[11,"deserialize_i128","","",47,[[],["result",4]]],[11,"deserialize_u8","","",47,[[],["result",4]]],[11,"deserialize_u16","","",47,[[],["result",4]]],[11,"deserialize_u32","","",47,[[],["result",4]]],[11,"deserialize_u64","","",47,[[],["result",4]]],[11,"deserialize_u128","","",47,[[],["result",4]]],[11,"deserialize_f32","","",47,[[],["result",4]]],[11,"deserialize_f64","","",47,[[],["result",4]]],[11,"deserialize_char","","",47,[[],["result",4]]],[11,"deserialize_str","","",47,[[],["result",4]]],[11,"deserialize_string","","",47,[[],["result",4]]],[11,"deserialize_bytes","","",47,[[],["result",4]]],[11,"deserialize_byte_buf","","",47,[[],["result",4]]],[11,"deserialize_option","","",47,[[],["result",4]]],[11,"deserialize_unit","","",47,[[],["result",4]]],[11,"deserialize_unit_struct","","",47,[[],["result",4]]],[11,"deserialize_newtype_struct","","",47,[[],["result",4]]],[11,"deserialize_seq","","",47,[[],["result",4]]],[11,"deserialize_tuple","","",47,[[],["result",4]]],[11,"deserialize_tuple_struct","","",47,[[],["result",4]]],[11,"deserialize_map","","",47,[[],["result",4]]],[11,"deserialize_struct","","",47,[[],["result",4]]],[11,"deserialize_identifier","","",47,[[],["result",4]]],[11,"deserialize_ignored_any","","",47,[[],["result",4]]],[11,"deserialize_any","","",1,[[],["result",4]]],[11,"deserialize_enum","","",1,[[],["result",4]]],[11,"deserialize_bool","","",1,[[],["result",4]]],[11,"deserialize_i8","","",1,[[],["result",4]]],[11,"deserialize_i16","","",1,[[],["result",4]]],[11,"deserialize_i32","","",1,[[],["result",4]]],[11,"deserialize_i64","","",1,[[],["result",4]]],[11,"deserialize_i128","","",1,[[],["result",4]]],[11,"deserialize_u8","","",1,[[],["result",4]]],[11,"deserialize_u16","","",1,[[],["result",4]]],[11,"deserialize_u32","","",1,[[],["result",4]]],[11,"deserialize_u64","","",1,[[],["result",4]]],[11,"deserialize_u128","","",1,[[],["result",4]]],[11,"deserialize_f32","","",1,[[],["result",4]]],[11,"deserialize_f64","","",1,[[],["result",4]]],[11,"deserialize_char","","",1,[[],["result",4]]],[11,"deserialize_str","","",1,[[],["result",4]]],[11,"deserialize_string","","",1,[[],["result",4]]],[11,"deserialize_bytes","","",1,[[],["result",4]]],[11,"deserialize_byte_buf","","",1,[[],["result",4]]],[11,"deserialize_option","","",1,[[],["result",4]]],[11,"deserialize_unit","","",1,[[],["result",4]]],[11,"deserialize_unit_struct","","",1,[[],["result",4]]],[11,"deserialize_newtype_struct","","",1,[[],["result",4]]],[11,"deserialize_seq","","",1,[[],["result",4]]],[11,"deserialize_tuple","","",1,[[],["result",4]]],[11,"deserialize_tuple_struct","","",1,[[],["result",4]]],[11,"deserialize_map","","",1,[[],["result",4]]],[11,"deserialize_struct","","",1,[[],["result",4]]],[11,"deserialize_identifier","","",1,[[],["result",4]]],[11,"deserialize_ignored_any","","",1,[[],["result",4]]],[11,"deserialize_any","","",48,[[],["result",4]]],[11,"deserialize_enum","","",48,[[],["result",4]]],[11,"deserialize_bool","","",48,[[],["result",4]]],[11,"deserialize_i8","","",48,[[],["result",4]]],[11,"deserialize_i16","","",48,[[],["result",4]]],[11,"deserialize_i32","","",48,[[],["result",4]]],[11,"deserialize_i64","","",48,[[],["result",4]]],[11,"deserialize_i128","","",48,[[],["result",4]]],[11,"deserialize_u8","","",48,[[],["result",4]]],[11,"deserialize_u16","","",48,[[],["result",4]]],[11,"deserialize_u32","","",48,[[],["result",4]]],[11,"deserialize_u64","","",48,[[],["result",4]]],[11,"deserialize_u128","","",48,[[],["result",4]]],[11,"deserialize_f32","","",48,[[],["result",4]]],[11,"deserialize_f64","","",48,[[],["result",4]]],[11,"deserialize_char","","",48,[[],["result",4]]],[11,"deserialize_str","","",48,[[],["result",4]]],[11,"deserialize_string","","",48,[[],["result",4]]],[11,"deserialize_bytes","","",48,[[],["result",4]]],[11,"deserialize_byte_buf","","",48,[[],["result",4]]],[11,"deserialize_option","","",48,[[],["result",4]]],[11,"deserialize_unit","","",48,[[],["result",4]]],[11,"deserialize_unit_struct","","",48,[[],["result",4]]],[11,"deserialize_newtype_struct","","",48,[[],["result",4]]],[11,"deserialize_seq","","",48,[[],["result",4]]],[11,"deserialize_tuple","","",48,[[],["result",4]]],[11,"deserialize_tuple_struct","","",48,[[],["result",4]]],[11,"deserialize_map","","",48,[[],["result",4]]],[11,"deserialize_struct","","",48,[[],["result",4]]],[11,"deserialize_identifier","","",48,[[],["result",4]]],[11,"deserialize_ignored_any","","",48,[[],["result",4]]],[11,"deserialize_any","","",49,[[],["result",4]]],[11,"deserialize_enum","","",49,[[],["result",4]]],[11,"deserialize_bool","","",49,[[],["result",4]]],[11,"deserialize_i8","","",49,[[],["result",4]]],[11,"deserialize_i16","","",49,[[],["result",4]]],[11,"deserialize_i32","","",49,[[],["result",4]]],[11,"deserialize_i64","","",49,[[],["result",4]]],[11,"deserialize_i128","","",49,[[],["result",4]]],[11,"deserialize_u8","","",49,[[],["result",4]]],[11,"deserialize_u16","","",49,[[],["result",4]]],[11,"deserialize_u32","","",49,[[],["result",4]]],[11,"deserialize_u64","","",49,[[],["result",4]]],[11,"deserialize_u128","","",49,[[],["result",4]]],[11,"deserialize_f32","","",49,[[],["result",4]]],[11,"deserialize_f64","","",49,[[],["result",4]]],[11,"deserialize_char","","",49,[[],["result",4]]],[11,"deserialize_str","","",49,[[],["result",4]]],[11,"deserialize_string","","",49,[[],["result",4]]],[11,"deserialize_bytes","","",49,[[],["result",4]]],[11,"deserialize_byte_buf","","",49,[[],["result",4]]],[11,"deserialize_option","","",49,[[],["result",4]]],[11,"deserialize_unit","","",49,[[],["result",4]]],[11,"deserialize_unit_struct","","",49,[[],["result",4]]],[11,"deserialize_newtype_struct","","",49,[[],["result",4]]],[11,"deserialize_seq","","",49,[[],["result",4]]],[11,"deserialize_tuple","","",49,[[],["result",4]]],[11,"deserialize_tuple_struct","","",49,[[],["result",4]]],[11,"deserialize_map","","",49,[[],["result",4]]],[11,"deserialize_struct","","",49,[[],["result",4]]],[11,"deserialize_identifier","","",49,[[],["result",4]]],[11,"deserialize_ignored_any","","",49,[[],["result",4]]],[11,"deserialize_any","","",2,[[],["result",4]]],[11,"deserialize_bool","","",2,[[],["result",4]]],[11,"deserialize_i8","","",2,[[],["result",4]]],[11,"deserialize_i16","","",2,[[],["result",4]]],[11,"deserialize_i32","","",2,[[],["result",4]]],[11,"deserialize_i64","","",2,[[],["result",4]]],[11,"deserialize_i128","","",2,[[],["result",4]]],[11,"deserialize_u8","","",2,[[],["result",4]]],[11,"deserialize_u16","","",2,[[],["result",4]]],[11,"deserialize_u32","","",2,[[],["result",4]]],[11,"deserialize_u64","","",2,[[],["result",4]]],[11,"deserialize_u128","","",2,[[],["result",4]]],[11,"deserialize_f32","","",2,[[],["result",4]]],[11,"deserialize_f64","","",2,[[],["result",4]]],[11,"deserialize_char","","",2,[[],["result",4]]],[11,"deserialize_str","","",2,[[],["result",4]]],[11,"deserialize_string","","",2,[[],["result",4]]],[11,"deserialize_bytes","","",2,[[],["result",4]]],[11,"deserialize_byte_buf","","",2,[[],["result",4]]],[11,"deserialize_option","","",2,[[],["result",4]]],[11,"deserialize_unit","","",2,[[],["result",4]]],[11,"deserialize_unit_struct","","",2,[[],["result",4]]],[11,"deserialize_newtype_struct","","",2,[[],["result",4]]],[11,"deserialize_seq","","",2,[[],["result",4]]],[11,"deserialize_tuple","","",2,[[],["result",4]]],[11,"deserialize_tuple_struct","","",2,[[],["result",4]]],[11,"deserialize_map","","",2,[[],["result",4]]],[11,"deserialize_struct","","",2,[[],["result",4]]],[11,"deserialize_identifier","","",2,[[],["result",4]]],[11,"deserialize_ignored_any","","",2,[[],["result",4]]],[11,"deserialize_enum","","",2,[[],["result",4]]],[11,"deserialize_any","","",3,[[],["result",4]]],[11,"deserialize_bool","","",3,[[],["result",4]]],[11,"deserialize_i8","","",3,[[],["result",4]]],[11,"deserialize_i16","","",3,[[],["result",4]]],[11,"deserialize_i32","","",3,[[],["result",4]]],[11,"deserialize_i64","","",3,[[],["result",4]]],[11,"deserialize_i128","","",3,[[],["result",4]]],[11,"deserialize_u8","","",3,[[],["result",4]]],[11,"deserialize_u16","","",3,[[],["result",4]]],[11,"deserialize_u32","","",3,[[],["result",4]]],[11,"deserialize_u64","","",3,[[],["result",4]]],[11,"deserialize_u128","","",3,[[],["result",4]]],[11,"deserialize_f32","","",3,[[],["result",4]]],[11,"deserialize_f64","","",3,[[],["result",4]]],[11,"deserialize_char","","",3,[[],["result",4]]],[11,"deserialize_str","","",3,[[],["result",4]]],[11,"deserialize_string","","",3,[[],["result",4]]],[11,"deserialize_bytes","","",3,[[],["result",4]]],[11,"deserialize_byte_buf","","",3,[[],["result",4]]],[11,"deserialize_option","","",3,[[],["result",4]]],[11,"deserialize_unit","","",3,[[],["result",4]]],[11,"deserialize_unit_struct","","",3,[[],["result",4]]],[11,"deserialize_newtype_struct","","",3,[[],["result",4]]],[11,"deserialize_seq","","",3,[[],["result",4]]],[11,"deserialize_tuple","","",3,[[],["result",4]]],[11,"deserialize_tuple_struct","","",3,[[],["result",4]]],[11,"deserialize_map","","",3,[[],["result",4]]],[11,"deserialize_struct","","",3,[[],["result",4]]],[11,"deserialize_enum","","",3,[[],["result",4]]],[11,"deserialize_identifier","","",3,[[],["result",4]]],[11,"deserialize_ignored_any","","",3,[[],["result",4]]],[11,"deserialize_any","","",4,[[],["result",4]]],[11,"deserialize_bool","","",4,[[],["result",4]]],[11,"deserialize_i8","","",4,[[],["result",4]]],[11,"deserialize_i16","","",4,[[],["result",4]]],[11,"deserialize_i32","","",4,[[],["result",4]]],[11,"deserialize_i64","","",4,[[],["result",4]]],[11,"deserialize_i128","","",4,[[],["result",4]]],[11,"deserialize_u8","","",4,[[],["result",4]]],[11,"deserialize_u16","","",4,[[],["result",4]]],[11,"deserialize_u32","","",4,[[],["result",4]]],[11,"deserialize_u64","","",4,[[],["result",4]]],[11,"deserialize_u128","","",4,[[],["result",4]]],[11,"deserialize_f32","","",4,[[],["result",4]]],[11,"deserialize_f64","","",4,[[],["result",4]]],[11,"deserialize_char","","",4,[[],["result",4]]],[11,"deserialize_str","","",4,[[],["result",4]]],[11,"deserialize_string","","",4,[[],["result",4]]],[11,"deserialize_bytes","","",4,[[],["result",4]]],[11,"deserialize_byte_buf","","",4,[[],["result",4]]],[11,"deserialize_option","","",4,[[],["result",4]]],[11,"deserialize_unit","","",4,[[],["result",4]]],[11,"deserialize_unit_struct","","",4,[[],["result",4]]],[11,"deserialize_newtype_struct","","",4,[[],["result",4]]],[11,"deserialize_seq","","",4,[[],["result",4]]],[11,"deserialize_tuple","","",4,[[],["result",4]]],[11,"deserialize_tuple_struct","","",4,[[],["result",4]]],[11,"deserialize_map","","",4,[[],["result",4]]],[11,"deserialize_struct","","",4,[[],["result",4]]],[11,"deserialize_enum","","",4,[[],["result",4]]],[11,"deserialize_identifier","","",4,[[],["result",4]]],[11,"deserialize_ignored_any","","",4,[[],["result",4]]],[11,"deserialize_any","","",5,[[],["result",4]]],[11,"deserialize_seq","","",5,[[],["result",4]]],[11,"deserialize_tuple","","",5,[[],["result",4]]],[11,"deserialize_bool","","",5,[[],["result",4]]],[11,"deserialize_i8","","",5,[[],["result",4]]],[11,"deserialize_i16","","",5,[[],["result",4]]],[11,"deserialize_i32","","",5,[[],["result",4]]],[11,"deserialize_i64","","",5,[[],["result",4]]],[11,"deserialize_i128","","",5,[[],["result",4]]],[11,"deserialize_u8","","",5,[[],["result",4]]],[11,"deserialize_u16","","",5,[[],["result",4]]],[11,"deserialize_u32","","",5,[[],["result",4]]],[11,"deserialize_u64","","",5,[[],["result",4]]],[11,"deserialize_u128","","",5,[[],["result",4]]],[11,"deserialize_f32","","",5,[[],["result",4]]],[11,"deserialize_f64","","",5,[[],["result",4]]],[11,"deserialize_char","","",5,[[],["result",4]]],[11,"deserialize_str","","",5,[[],["result",4]]],[11,"deserialize_string","","",5,[[],["result",4]]],[11,"deserialize_bytes","","",5,[[],["result",4]]],[11,"deserialize_byte_buf","","",5,[[],["result",4]]],[11,"deserialize_option","","",5,[[],["result",4]]],[11,"deserialize_unit","","",5,[[],["result",4]]],[11,"deserialize_unit_struct","","",5,[[],["result",4]]],[11,"deserialize_newtype_struct","","",5,[[],["result",4]]],[11,"deserialize_tuple_struct","","",5,[[],["result",4]]],[11,"deserialize_map","","",5,[[],["result",4]]],[11,"deserialize_struct","","",5,[[],["result",4]]],[11,"deserialize_enum","","",5,[[],["result",4]]],[11,"deserialize_identifier","","",5,[[],["result",4]]],[11,"deserialize_ignored_any","","",5,[[],["result",4]]],[11,"deserialize_any","","",6,[[],["result",4]]],[11,"deserialize_enum","","",6,[[],["result",4]]],[11,"deserialize_bool","","",6,[[],["result",4]]],[11,"deserialize_i8","","",6,[[],["result",4]]],[11,"deserialize_i16","","",6,[[],["result",4]]],[11,"deserialize_i32","","",6,[[],["result",4]]],[11,"deserialize_i64","","",6,[[],["result",4]]],[11,"deserialize_i128","","",6,[[],["result",4]]],[11,"deserialize_u8","","",6,[[],["result",4]]],[11,"deserialize_u16","","",6,[[],["result",4]]],[11,"deserialize_u32","","",6,[[],["result",4]]],[11,"deserialize_u64","","",6,[[],["result",4]]],[11,"deserialize_u128","","",6,[[],["result",4]]],[11,"deserialize_f32","","",6,[[],["result",4]]],[11,"deserialize_f64","","",6,[[],["result",4]]],[11,"deserialize_char","","",6,[[],["result",4]]],[11,"deserialize_str","","",6,[[],["result",4]]],[11,"deserialize_string","","",6,[[],["result",4]]],[11,"deserialize_bytes","","",6,[[],["result",4]]],[11,"deserialize_byte_buf","","",6,[[],["result",4]]],[11,"deserialize_option","","",6,[[],["result",4]]],[11,"deserialize_unit","","",6,[[],["result",4]]],[11,"deserialize_unit_struct","","",6,[[],["result",4]]],[11,"deserialize_newtype_struct","","",6,[[],["result",4]]],[11,"deserialize_seq","","",6,[[],["result",4]]],[11,"deserialize_tuple","","",6,[[],["result",4]]],[11,"deserialize_tuple_struct","","",6,[[],["result",4]]],[11,"deserialize_map","","",6,[[],["result",4]]],[11,"deserialize_struct","","",6,[[],["result",4]]],[11,"deserialize_identifier","","",6,[[],["result",4]]],[11,"deserialize_ignored_any","","",6,[[],["result",4]]],[11,"expecting","serde::de","",28,[[["formatter",3]],["result",6]]],[11,"visit_bool","","",28,[[],["result",4]]],[11,"visit_i64","","",28,[[],["result",4]]],[11,"visit_u64","","",28,[[],["result",4]]],[11,"visit_f64","","",28,[[],["result",4]]],[11,"visit_str","","",28,[[],["result",4]]],[11,"visit_none","","",28,[[],["result",4]]],[11,"visit_some","","",28,[[],["result",4]]],[11,"visit_newtype_struct","","",28,[[],["result",4]]],[11,"visit_unit","","",28,[[],["result",4]]],[11,"visit_seq","","",28,[[],["result",4]]],[11,"visit_map","","",28,[[],["result",4]]],[11,"visit_bytes","","",28,[[],["result",4]]],[11,"visit_enum","","",28,[[],["result",4]]],[11,"next_element_seed","serde::de::value","",3,[[],[["option",4],["result",4]]]],[11,"size_hint","","",3,[[],["option",4]]],[11,"next_element_seed","","",5,[[],[["result",4],["option",4]]]],[11,"size_hint","","",5,[[],["option",4]]],[11,"next_key_seed","","",5,[[],[["result",4],["option",4]]]],[11,"next_value_seed","","",5,[[],["result",4]]],[11,"next_entry_seed","","",5,[[],[["result",4],["option",4]]]],[11,"size_hint","","",5,[[],["option",4]]],[11,"variant_seed","","",46,[[],["result",4]]],[11,"variant_seed","","",47,[[],["result",4]]],[11,"variant_seed","","",1,[[],["result",4]]],[11,"variant_seed","","",48,[[],["result",4]]],[11,"variant_seed","","",49,[[],["result",4]]],[11,"variant_seed","","",6,[[],["result",4]]],[11,"serialize_element","serde::ser","",50,[[],["result",4]]],[11,"end","","",50,[[],["result",4]]],[11,"serialize_element","","",50,[[],["result",4]]],[11,"end","","",50,[[],["result",4]]],[11,"serialize_field","","",50,[[],["result",4]]],[11,"end","","",50,[[],["result",4]]],[11,"serialize_field","","",50,[[],["result",4]]],[11,"end","","",50,[[],["result",4]]],[11,"serialize_key","","",50,[[],["result",4]]],[11,"serialize_value","","",50,[[],["result",4]]],[11,"end","","",50,[[],["result",4]]],[11,"serialize_field","","",50,[[],["result",4]]],[11,"end","","",50,[[],["result",4]]],[11,"serialize_field","","",50,[[],["result",4]]],[11,"end","","",50,[[],["result",4]]],[11,"custom","serde::de::value","",29,[[]]],[11,"custom","","",29,[[]]],[11,"clone","","",29,[[],["error",3]]],[11,"clone","","",30,[[]]],[11,"clone","","",31,[[]]],[11,"clone","","",32,[[]]],[11,"clone","","",33,[[]]],[11,"clone","","",34,[[]]],[11,"clone","","",35,[[]]],[11,"clone","","",36,[[]]],[11,"clone","","",37,[[]]],[11,"clone","","",38,[[]]],[11,"clone","","",39,[[]]],[11,"clone","","",40,[[]]],[11,"clone","","",41,[[]]],[11,"clone","","",42,[[]]],[11,"clone","","",43,[[]]],[11,"clone","","",44,[[]]],[11,"clone","","",45,[[]]],[11,"clone","","",46,[[]]],[11,"clone","","",47,[[]]],[11,"clone","","",1,[[]]],[11,"clone","","",48,[[]]],[11,"clone","","",49,[[]]],[11,"clone","","",2,[[]]],[11,"clone","","",3,[[],["seqdeserializer",3]]],[11,"clone","","",4,[[],["seqaccessdeserializer",3]]],[11,"clone","","",5,[[]]],[11,"clone","","",6,[[],["mapaccessdeserializer",3]]],[11,"clone","serde::de","",28,[[],["ignoredany",3]]],[11,"clone","","",0,[[],["unexpected",4]]],[11,"default","","",28,[[],["ignoredany",3]]],[11,"eq","serde::de::value","",29,[[["error",3]]]],[11,"ne","","",29,[[["error",3]]]],[11,"eq","serde::de","",0,[[["unexpected",4]]]],[11,"ne","","",0,[[["unexpected",4]]]],[11,"fmt","serde::de::value","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","serde::de","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","serde::de::value","",29,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","serde::de","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"description","serde::de::value","",29,[[]]]],"p":[[4,"Unexpected"],[3,"BorrowedStrDeserializer"],[3,"BorrowedBytesDeserializer"],[3,"SeqDeserializer"],[3,"SeqAccessDeserializer"],[3,"MapDeserializer"],[3,"MapAccessDeserializer"],[8,"Error"],[8,"Expected"],[8,"Deserialize"],[8,"DeserializeSeed"],[8,"Deserializer"],[8,"Visitor"],[8,"SeqAccess"],[8,"MapAccess"],[8,"EnumAccess"],[8,"VariantAccess"],[8,"IntoDeserializer"],[8,"Error"],[8,"Serialize"],[8,"Serializer"],[8,"SerializeSeq"],[8,"SerializeTuple"],[8,"SerializeTupleStruct"],[8,"SerializeTupleVariant"],[8,"SerializeMap"],[8,"SerializeStruct"],[8,"SerializeStructVariant"],[3,"IgnoredAny"],[3,"Error"],[3,"UnitDeserializer"],[3,"BoolDeserializer"],[3,"I8Deserializer"],[3,"I16Deserializer"],[3,"I32Deserializer"],[3,"I64Deserializer"],[3,"IsizeDeserializer"],[3,"U8Deserializer"],[3,"U16Deserializer"],[3,"U64Deserializer"],[3,"UsizeDeserializer"],[3,"F32Deserializer"],[3,"F64Deserializer"],[3,"CharDeserializer"],[3,"I128Deserializer"],[3,"U128Deserializer"],[3,"U32Deserializer"],[3,"StrDeserializer"],[3,"StringDeserializer"],[3,"CowStrDeserializer"],[3,"Impossible"]]},\
"serde_derive":{"doc":"This crate provides Serde\'s two derive macros.","i":[[24,"Serialize","serde_derive","",null,null],[24,"Deserialize","","",null,null]],"p":[]},\
"serde_json":{"doc":"Serde JSONJSON is a ubiquitous open-standard format that…","i":[[3,"Deserializer","serde_json","A structure that deserializes JSON into Rust values.",null,null],[3,"StreamDeserializer","","Iterator that deserializes a stream into multiple JSON…",null,null],[3,"Error","","This type represents all possible errors that can occur…",null,null],[3,"Serializer","","A structure for serializing Rust values into JSON.",null,null],[3,"Map","","Represents a JSON key/value type.",null,null],[3,"Number","","Represents a JSON number, whether integer or floating point.",null,null],[4,"Value","","Represents any valid JSON value.",null,null],[13,"Null","","Represents a JSON null value.",0,null],[13,"Bool","","Represents a JSON boolean.",0,null],[13,"Number","","Represents a JSON number, whether integer or floating point.",0,null],[13,"String","","Represents a JSON string.",0,null],[13,"Array","","Represents a JSON array.",0,null],[13,"Object","","Represents a JSON object.",0,null],[5,"from_reader","","Deserialize an instance of type `T` from an IO stream of…",null,[[],["result",6]]],[5,"from_slice","","Deserialize an instance of type `T` from bytes of JSON text.",null,[[],["result",6]]],[5,"from_str","","Deserialize an instance of type `T` from a string of JSON…",null,[[],["result",6]]],[5,"to_string","","Serialize the given data structure as a String of JSON.",null,[[],[["result",6],["string",3]]]],[5,"to_string_pretty","","Serialize the given data structure as a pretty-printed…",null,[[],[["result",6],["string",3]]]],[5,"to_vec","","Serialize the given data structure as a JSON byte vector.",null,[[],[["vec",3],["result",6]]]],[5,"to_vec_pretty","","Serialize the given data structure as a pretty-printed…",null,[[],[["vec",3],["result",6]]]],[5,"to_writer","","Serialize the given data structure as JSON into the IO…",null,[[],["result",6]]],[5,"to_writer_pretty","","Serialize the given data structure as pretty-printed JSON…",null,[[],["result",6]]],[5,"from_value","","Interpret a `serde_json::Value` as an instance of type `T`.",null,[[["value",4]],[["result",4],["error",3]]]],[5,"to_value","","Convert a `T` into `serde_json::Value` which is an enum…",null,[[],[["value",4],["result",4],["error",3]]]],[0,"de","","Deserialize JSON data to a Rust data structure.",null,null],[3,"SliceRead","serde_json::de","JSON input source that reads from a slice of bytes.",null,null],[3,"StrRead","","JSON input source that reads from a UTF-8 string.",null,null],[3,"IoRead","","JSON input source that reads from a std::io input stream.",null,null],[3,"Deserializer","","A structure that deserializes JSON into Rust values.",null,null],[3,"StreamDeserializer","","Iterator that deserializes a stream into multiple JSON…",null,null],[5,"from_reader","","Deserialize an instance of type `T` from an IO stream of…",null,[[],["result",6]]],[5,"from_slice","","Deserialize an instance of type `T` from bytes of JSON text.",null,[[],["result",6]]],[5,"from_str","","Deserialize an instance of type `T` from a string of JSON…",null,[[],["result",6]]],[8,"Read","","Trait used by the deserializer for iterating over input.…",null,null],[11,"new","","Create a JSON deserializer from one of the possible…",1,[[]]],[11,"from_reader","","Creates a JSON deserializer from an `io::Read`.",1,[[]]],[11,"from_slice","","Creates a JSON deserializer from a `&[u8]`.",1,[[]]],[11,"from_str","","Creates a JSON deserializer from a `&str`.",1,[[]]],[11,"end","","The `Deserializer::end` method should be called after a…",1,[[],["result",6]]],[11,"into_iter","","Turn a JSON deserializer into an iterator over values of…",1,[[],["streamdeserializer",3]]],[11,"new","","Create a JSON stream deserializer from one of the possible…",2,[[]]],[11,"byte_offset","","Returns the number of bytes so far deserialized into a…",2,[[]]],[0,"error","serde_json","When serializing or deserializing JSON goes wrong.",null,null],[3,"Error","serde_json::error","This type represents all possible errors that can occur…",null,null],[4,"Category","","Categorizes the cause of a `serde_json::Error`.",null,null],[13,"Io","","The error was caused by a failure to read or write bytes…",3,null],[13,"Syntax","","The error was caused by input that was not syntactically…",3,null],[13,"Data","","The error was caused by input data that was semantically…",3,null],[13,"Eof","","The error was caused by prematurely reaching the end of…",3,null],[6,"Result","","Alias for a `Result` with the error type…",null,null],[11,"line","","One-based line number at which the error was detected.",4,[[]]],[11,"column","","One-based column number at which the error was detected.",4,[[]]],[11,"classify","","Categorizes the cause of this error.",4,[[],["category",4]]],[11,"is_io","","Returns true if this error was caused by a failure to read…",4,[[]]],[11,"is_syntax","","Returns true if this error was caused by input that was…",4,[[]]],[11,"is_data","","Returns true if this error was caused by input data that…",4,[[]]],[11,"is_eof","","Returns true if this error was caused by prematurely…",4,[[]]],[0,"map","serde_json","A map of String to serde_json::Value.",null,null],[3,"Map","serde_json::map","Represents a JSON key/value type.",null,null],[3,"VacantEntry","","A vacant Entry. It is part of the `Entry` enum.",null,null],[3,"OccupiedEntry","","An occupied Entry. It is part of the `Entry` enum.",null,null],[3,"Iter","","An iterator over a serde_json::Map\'s entries.",null,null],[3,"IterMut","","A mutable iterator over a serde_json::Map\'s entries.",null,null],[3,"IntoIter","","An owning iterator over a serde_json::Map\'s entries.",null,null],[3,"Keys","","An iterator over a serde_json::Map\'s keys.",null,null],[3,"Values","","An iterator over a serde_json::Map\'s values.",null,null],[3,"ValuesMut","","A mutable iterator over a serde_json::Map\'s values.",null,null],[4,"Entry","","A view into a single entry in a map, which may either be…",null,null],[13,"Vacant","","A vacant Entry.",5,null],[13,"Occupied","","An occupied Entry.",5,null],[11,"new","","Makes a new empty Map.",6,[[]]],[11,"with_capacity","","Makes a new empty Map with the given initial capacity.",6,[[]]],[11,"clear","","Clears the map, removing all values.",6,[[]]],[11,"get","","Returns a reference to the value corresponding to the key.",6,[[],[["option",4],["value",4]]]],[11,"contains_key","","Returns true if the map contains a value for the specified…",6,[[]]],[11,"get_mut","","Returns a mutable reference to the value corresponding to…",6,[[],[["value",4],["option",4]]]],[11,"insert","","Inserts a key-value pair into the map.",6,[[["value",4],["string",3]],[["value",4],["option",4]]]],[11,"remove","","Removes a key from the map, returning the value at the key…",6,[[],[["value",4],["option",4]]]],[11,"remove_entry","","Removes a key from the map, returning the stored key and…",6,[[],["option",4]]],[11,"append","","Moves all elements from other into Self, leaving other…",6,[[]]],[11,"entry","","Gets the given key\'s corresponding entry in the map for…",6,[[],["entry",4]]],[11,"len","","Returns the number of elements in the map.",6,[[]]],[11,"is_empty","","Returns true if the map contains no elements.",6,[[]]],[11,"iter","","Gets an iterator over the entries of the map.",6,[[],["iter",3]]],[11,"iter_mut","","Gets a mutable iterator over the entries of the map.",6,[[],["itermut",3]]],[11,"keys","","Gets an iterator over the keys of the map.",6,[[],["keys",3]]],[11,"values","","Gets an iterator over the values of the map.",6,[[],["values",3]]],[11,"values_mut","","Gets an iterator over mutable values of the map.",6,[[],["valuesmut",3]]],[11,"key","","Returns a reference to this entry\'s key.",5,[[],["string",3]]],[11,"or_insert","","Ensures a value is in the entry by inserting the default…",5,[[["value",4]],["value",4]]],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of…",5,[[],["value",4]]],[11,"key","","Gets a reference to the key that would be used when…",7,[[],["string",3]]],[11,"insert","","Sets the value of the entry with the VacantEntry\'s key,…",7,[[["value",4]],["value",4]]],[11,"key","","Gets a reference to the key in the entry.",8,[[],["string",3]]],[11,"get","","Gets a reference to the value in the entry.",8,[[],["value",4]]],[11,"get_mut","","Gets a mutable reference to the value in the entry.",8,[[],["value",4]]],[11,"into_mut","","Converts the entry into a mutable reference to its value.",8,[[],["value",4]]],[11,"insert","","Sets the value of the entry with the `OccupiedEntry`\'s…",8,[[["value",4]],["value",4]]],[11,"remove","","Takes the value of the entry out of the map, and returns it.",8,[[],["value",4]]],[0,"ser","serde_json","Serialize a Rust data structure into JSON data.",null,null],[3,"Serializer","serde_json::ser","A structure for serializing Rust values into JSON.",null,null],[3,"CompactFormatter","","This structure compacts a JSON value with no extra…",null,null],[3,"PrettyFormatter","","This structure pretty prints a JSON value to make it human…",null,null],[4,"CharEscape","","Represents a character escape code in a type-safe manner.",null,null],[13,"Quote","","An escaped quote `\\\"`",9,null],[13,"ReverseSolidus","","An escaped reverse solidus `\\\\`",9,null],[13,"Solidus","","An escaped solidus `/`",9,null],[13,"Backspace","","An escaped backspace character (usually escaped as `\\\\b`)",9,null],[13,"FormFeed","","An escaped form feed character (usually escaped as `\\\\f`)",9,null],[13,"LineFeed","","An escaped line feed character (usually escaped as `\\\\n`)",9,null],[13,"CarriageReturn","","An escaped carriage return character (usually escaped as…",9,null],[13,"Tab","","An escaped tab character (usually escaped as `\\\\t`)",9,null],[13,"AsciiControl","","An escaped ASCII plane control character (usually escaped…",9,null],[5,"to_writer","","Serialize the given data structure as JSON into the IO…",null,[[],["result",6]]],[5,"to_writer_pretty","","Serialize the given data structure as pretty-printed JSON…",null,[[],["result",6]]],[5,"to_vec","","Serialize the given data structure as a JSON byte vector.",null,[[],[["vec",3],["result",6]]]],[5,"to_vec_pretty","","Serialize the given data structure as a pretty-printed…",null,[[],[["vec",3],["result",6]]]],[5,"to_string","","Serialize the given data structure as a String of JSON.",null,[[],[["result",6],["string",3]]]],[5,"to_string_pretty","","Serialize the given data structure as a pretty-printed…",null,[[],[["result",6],["string",3]]]],[8,"Formatter","","This trait abstracts away serializing the JSON control…",null,null],[11,"write_null","","Writes a `null` value to the specified writer.",10,[[],["result",6]]],[11,"write_bool","","Writes a `true` or `false` value to the specified writer.",10,[[],["result",6]]],[11,"write_i8","","Writes an integer value like `-123` to the specified writer.",10,[[],["result",6]]],[11,"write_i16","","Writes an integer value like `-123` to the specified writer.",10,[[],["result",6]]],[11,"write_i32","","Writes an integer value like `-123` to the specified writer.",10,[[],["result",6]]],[11,"write_i64","","Writes an integer value like `-123` to the specified writer.",10,[[],["result",6]]],[11,"write_u8","","Writes an integer value like `123` to the specified writer.",10,[[],["result",6]]],[11,"write_u16","","Writes an integer value like `123` to the specified writer.",10,[[],["result",6]]],[11,"write_u32","","Writes an integer value like `123` to the specified writer.",10,[[],["result",6]]],[11,"write_u64","","Writes an integer value like `123` to the specified writer.",10,[[],["result",6]]],[11,"write_f32","","Writes a floating point value like `-31.26e+12` to the…",10,[[],["result",6]]],[11,"write_f64","","Writes a floating point value like `-31.26e+12` to the…",10,[[],["result",6]]],[11,"write_number_str","","Writes a number that has already been rendered to a string.",10,[[],["result",6]]],[11,"begin_string","","Called before each series of `write_string_fragment` and…",10,[[],["result",6]]],[11,"end_string","","Called after each series of `write_string_fragment` and…",10,[[],["result",6]]],[11,"write_string_fragment","","Writes a string fragment that doesn\'t need any escaping to…",10,[[],["result",6]]],[11,"write_char_escape","","Writes a character escape code to the specified writer.",10,[[["charescape",4]],["result",6]]],[11,"begin_array","","Called before every array. Writes a `[` to the specified…",10,[[],["result",6]]],[11,"end_array","","Called after every array. Writes a `]` to the specified…",10,[[],["result",6]]],[11,"begin_array_value","","Called before every array value. Writes a `,` if needed to…",10,[[],["result",6]]],[11,"end_array_value","","Called after every array value.",10,[[],["result",6]]],[11,"begin_object","","Called before every object. Writes a `{` to the specified…",10,[[],["result",6]]],[11,"end_object","","Called after every object. Writes a `}` to the specified…",10,[[],["result",6]]],[11,"begin_object_key","","Called before every object key.",10,[[],["result",6]]],[11,"end_object_key","","Called after every object key. A `:` should be written to…",10,[[],["result",6]]],[11,"begin_object_value","","Called before every object value. A `:` should be written…",10,[[],["result",6]]],[11,"end_object_value","","Called after every object value.",10,[[],["result",6]]],[11,"write_raw_fragment","","Writes a raw JSON fragment that doesn\'t need any escaping…",10,[[],["result",6]]],[11,"new","","Creates a new JSON serializer.",11,[[]]],[11,"pretty","","Creates a new JSON pretty print serializer.",11,[[]]],[11,"with_formatter","","Creates a new JSON visitor whose output will be written to…",11,[[]]],[11,"into_inner","","Unwrap the `Writer` from the `Serializer`.",11,[[]]],[11,"new","","Construct a pretty printer formatter that defaults to…",12,[[]]],[11,"with_indent","","Construct a pretty printer formatter that uses the…",12,[[]]],[0,"value","serde_json","The Value enum, a loosely typed way of representing any…",null,null],[3,"Serializer","serde_json::value","Serializer whose output is a `Value`.",null,null],[3,"Number","","Represents a JSON number, whether integer or floating point.",null,null],[4,"Value","","Represents any valid JSON value.",null,null],[13,"Null","","Represents a JSON null value.",0,null],[13,"Bool","","Represents a JSON boolean.",0,null],[13,"Number","","Represents a JSON number, whether integer or floating point.",0,null],[13,"String","","Represents a JSON string.",0,null],[13,"Array","","Represents a JSON array.",0,null],[13,"Object","","Represents a JSON object.",0,null],[5,"to_value","","Convert a `T` into `serde_json::Value` which is an enum…",null,[[],[["value",4],["result",4],["error",3]]]],[5,"from_value","","Interpret a `serde_json::Value` as an instance of type `T`.",null,[[["value",4]],[["result",4],["error",3]]]],[8,"Index","","A type that can be used to index into a `serde_json::Value`.",null,null],[11,"get","","Index into a JSON array or map. A string index can be used…",0,[[["index",8]],[["option",4],["value",4]]]],[11,"get_mut","","Mutably index into a JSON array or map. A string index can…",0,[[["index",8]],[["value",4],["option",4]]]],[11,"is_object","","Returns true if the `Value` is an Object. Returns false…",0,[[]]],[11,"as_object","","If the `Value` is an Object, returns the associated Map.…",0,[[],[["option",4],["map",3]]]],[11,"as_object_mut","","If the `Value` is an Object, returns the associated…",0,[[],[["map",3],["option",4]]]],[11,"is_array","","Returns true if the `Value` is an Array. Returns false…",0,[[]]],[11,"as_array","","If the `Value` is an Array, returns the associated vector.…",0,[[],[["vec",3],["option",4]]]],[11,"as_array_mut","","If the `Value` is an Array, returns the associated mutable…",0,[[],[["option",4],["vec",3]]]],[11,"is_string","","Returns true if the `Value` is a String. Returns false…",0,[[]]],[11,"as_str","","If the `Value` is a String, returns the associated str.…",0,[[],["option",4]]],[11,"is_number","","Returns true if the `Value` is a Number. Returns false…",0,[[]]],[11,"is_i64","","Returns true if the `Value` is an integer between…",0,[[]]],[11,"is_u64","","Returns true if the `Value` is an integer between zero and…",0,[[]]],[11,"is_f64","","Returns true if the `Value` is a number that can be…",0,[[]]],[11,"as_i64","","If the `Value` is an integer, represent it as i64 if…",0,[[],["option",4]]],[11,"as_u64","","If the `Value` is an integer, represent it as u64 if…",0,[[],["option",4]]],[11,"as_f64","","If the `Value` is a number, represent it as f64 if…",0,[[],["option",4]]],[11,"is_boolean","","Returns true if the `Value` is a Boolean. Returns false…",0,[[]]],[11,"as_bool","","If the `Value` is a Boolean, returns the associated bool.…",0,[[],["option",4]]],[11,"is_null","","Returns true if the `Value` is a Null. Returns false…",0,[[]]],[11,"as_null","","If the `Value` is a Null, returns (). Returns None…",0,[[],["option",4]]],[11,"pointer","","Looks up a value by a JSON Pointer.",0,[[],[["option",4],["value",4]]]],[11,"pointer_mut","","Looks up a value by a JSON Pointer and returns a mutable…",0,[[],[["value",4],["option",4]]]],[11,"take","","Takes the value out of the `Value`, leaving a `Null` in…",0,[[],["value",4]]],[11,"is_i64","serde_json","Returns true if the `Number` is an integer between…",13,[[]]],[11,"is_u64","","Returns true if the `Number` is an integer between zero…",13,[[]]],[11,"is_f64","","Returns true if the `Number` can be represented by f64.",13,[[]]],[11,"as_i64","","If the `Number` is an integer, represent it as i64 if…",13,[[],["option",4]]],[11,"as_u64","","If the `Number` is an integer, represent it as u64 if…",13,[[],["option",4]]],[11,"as_f64","","Represents the number as f64 if possible. Returns None…",13,[[],["option",4]]],[11,"from_f64","","Converts a finite `f64` to a `Number`. Infinite or NaN…",13,[[],[["option",4],["number",3]]]],[11,"new","serde_json::de","Create a JSON input source to read from a std::io input…",14,[[]]],[11,"new","","Create a JSON input source to read from a slice of bytes.",15,[[]]],[11,"new","","Create a JSON input source to read from a UTF-8 string.",16,[[]]],[6,"Result","serde_json","Alias for a `Result` with the error type…",null,null],[14,"json","","Construct a `serde_json::Value` from a JSON literal.",null,null],[11,"from","serde_json::de","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"into_iter","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","serde_json::error","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","serde_json::ser","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","serde_json::map","",6,[[]]],[11,"into","","",6,[[]]],[11,"into_iter","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","serde_json","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"to_string","","",13,[[],["string",3]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","serde_json::value","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","serde_json::de","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","serde_json::error","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","serde_json::map","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"into_iter","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"into_iter","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"into_iter","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"into_iter","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"into_iter","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"into_iter","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","serde_json::ser","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","serde_json::value","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"begin_array","serde_json::ser","",12,[[],["result",6]]],[11,"end_array","","",12,[[],["result",6]]],[11,"begin_array_value","","",12,[[],["result",6]]],[11,"end_array_value","","",12,[[],["result",6]]],[11,"begin_object","","",12,[[],["result",6]]],[11,"end_object","","",12,[[],["result",6]]],[11,"begin_object_key","","",12,[[],["result",6]]],[11,"begin_object_value","","",12,[[],["result",6]]],[11,"end_object_value","","",12,[[],["result",6]]],[11,"next","serde_json::de","",14,[[],[["result",6],["option",4]]]],[11,"peek","","",14,[[],[["result",6],["option",4]]]],[11,"discard","","",14,[[]]],[11,"position","","",14,[[],["position",3]]],[11,"peek_position","","",14,[[],["position",3]]],[11,"byte_offset","","",14,[[]]],[11,"parse_str","","",14,[[["vec",3]],[["result",6],["reference",4]]]],[11,"parse_str_raw","","",14,[[["vec",3]],[["result",6],["reference",4]]]],[11,"ignore_str","","",14,[[],["result",6]]],[11,"decode_hex_escape","","",14,[[],["result",6]]],[11,"set_failed","","",14,[[]]],[11,"next","","",15,[[],[["result",6],["option",4]]]],[11,"peek","","",15,[[],[["result",6],["option",4]]]],[11,"discard","","",15,[[]]],[11,"position","","",15,[[],["position",3]]],[11,"peek_position","","",15,[[],["position",3]]],[11,"byte_offset","","",15,[[]]],[11,"parse_str","","",15,[[["vec",3]],[["result",6],["reference",4]]]],[11,"parse_str_raw","","",15,[[["vec",3]],[["result",6],["reference",4]]]],[11,"ignore_str","","",15,[[],["result",6]]],[11,"decode_hex_escape","","",15,[[],["result",6]]],[11,"set_failed","","",15,[[]]],[11,"next","","",16,[[],[["result",6],["option",4]]]],[11,"peek","","",16,[[],[["result",6],["option",4]]]],[11,"discard","","",16,[[]]],[11,"position","","",16,[[],["position",3]]],[11,"peek_position","","",16,[[],["position",3]]],[11,"byte_offset","","",16,[[]]],[11,"parse_str","","",16,[[["vec",3]],[["result",6],["reference",4]]]],[11,"parse_str_raw","","",16,[[["vec",3]],[["result",6],["reference",4]]]],[11,"ignore_str","","",16,[[],["result",6]]],[11,"decode_hex_escape","","",16,[[],["result",6]]],[11,"set_failed","","",16,[[]]],[11,"from","serde_json::value","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","Convert 32-bit floating point number to `Value`",0,[[]]],[11,"from","","Convert 64-bit floating point number to `Value`",0,[[]]],[11,"from","","Convert boolean to `Value`",0,[[]]],[11,"from","","Convert `String` to `Value`",0,[[["string",3]]]],[11,"from","","Convert string slice to `Value`",0,[[]]],[11,"from","","Convert copy-on-write string to `Value`",0,[[["cow",4]]]],[11,"from","","Convert map (with string keys) to `Value`",0,[[["value",4],["map",3],["string",3]]]],[11,"from","","Convert a `Vec` to `Value`",0,[[["vec",3]]]],[11,"from","","Convert a slice to `Value`",0,[[]]],[11,"from","","Convert `()` to `Value`",0,[[]]],[11,"from","serde_json","",13,[[]]],[11,"from","","",13,[[]]],[11,"from","","",13,[[]]],[11,"from","","",13,[[]]],[11,"from","","",13,[[]]],[11,"from","","",13,[[]]],[11,"from","","",13,[[]]],[11,"from","","",13,[[]]],[11,"from","","",13,[[]]],[11,"from","","",13,[[]]],[11,"next_back","serde_json::map","",17,[[],["option",4]]],[11,"next_back","","",18,[[],["option",4]]],[11,"next_back","","",19,[[],["option",4]]],[11,"next_back","","",20,[[],["option",4]]],[11,"next_back","","",21,[[],["option",4]]],[11,"next_back","","",22,[[],["option",4]]],[11,"len","","",17,[[]]],[11,"len","","",18,[[]]],[11,"len","","",19,[[]]],[11,"len","","",20,[[]]],[11,"len","","",21,[[]]],[11,"len","","",22,[[]]],[11,"extend","","",6,[[]]],[11,"into_iter","","",6,[[]]],[11,"next","serde_json::de","",2,[[],[["option",4],["result",6]]]],[11,"next","serde_json::map","",17,[[],["option",4]]],[11,"size_hint","","",17,[[]]],[11,"next","","",18,[[],["option",4]]],[11,"size_hint","","",18,[[]]],[11,"next","","",19,[[],["option",4]]],[11,"size_hint","","",19,[[]]],[11,"next","","",20,[[],["option",4]]],[11,"size_hint","","",20,[[]]],[11,"next","","",21,[[],["option",4]]],[11,"size_hint","","",21,[[]]],[11,"next","","",22,[[],["option",4]]],[11,"size_hint","","",22,[[]]],[11,"clone","serde_json::error","",3,[[],["category",4]]],[11,"clone","serde_json::map","",6,[[]]],[11,"clone","serde_json::ser","",23,[[],["compactformatter",3]]],[11,"clone","","",12,[[],["prettyformatter",3]]],[11,"clone","serde_json::value","",0,[[],["value",4]]],[11,"clone","serde_json","",13,[[],["number",3]]],[11,"default","serde_json::map","",6,[[]]],[11,"default","serde_json::ser","",12,[[]]],[11,"default","serde_json::value","",0,[[],["value",4]]],[11,"eq","serde_json::error","",3,[[["category",4]]]],[11,"eq","serde_json::map","",6,[[]]],[11,"eq","serde_json::value","",0,[[["value",4]]]],[11,"ne","","",0,[[["value",4]]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[["string",3]]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","serde_json","",13,[[["number",3]]]],[11,"ne","","",13,[[["number",3]]]],[11,"fmt","serde_json::error","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","serde_json::map","",6,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","serde_json::ser","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","serde_json::value","",0,[[["formatter",3]],["result",6]]],[11,"fmt","serde_json","",13,[[["formatter",3]],["result",6]]],[11,"fmt","serde_json::error","",4,[[["formatter",3]],["result",6]]],[11,"fmt","serde_json::value","Display a JSON value as a string.",0,[[["formatter",3]],["result",6]]],[11,"fmt","serde_json","",13,[[["formatter",3]],["result",6]]],[11,"index","serde_json::map","",6,[[],["value",4]]],[11,"index","serde_json::value","Index into a `serde_json::Value` using the syntax…",0,[[],["value",4]]],[11,"index_mut","serde_json::map","",6,[[],["value",4]]],[11,"index_mut","serde_json::value","Write into a `serde_json::Value` using the syntax…",0,[[],["value",4]]],[11,"from_str","serde_json","",13,[[],["result",4]]],[11,"from_str","serde_json::value","",0,[[],[["value",4],["result",4],["error",3]]]],[11,"from_iter","serde_json::map","",6,[[]]],[11,"from_iter","serde_json::value","Convert an iteratable type to a `Value`",0,[[["intoiterator",8]]]],[11,"source","serde_json::error","",4,[[],[["option",4],["error",8]]]],[11,"deserialize_any","serde_json::value","",0,[[],[["error",3],["result",4]]]],[11,"deserialize_i8","","",0,[[],[["error",3],["result",4]]]],[11,"deserialize_i16","","",0,[[],[["error",3],["result",4]]]],[11,"deserialize_i32","","",0,[[],[["error",3],["result",4]]]],[11,"deserialize_i64","","",0,[[],[["error",3],["result",4]]]],[11,"deserialize_u8","","",0,[[],[["error",3],["result",4]]]],[11,"deserialize_u16","","",0,[[],[["error",3],["result",4]]]],[11,"deserialize_u32","","",0,[[],[["error",3],["result",4]]]],[11,"deserialize_u64","","",0,[[],[["error",3],["result",4]]]],[11,"deserialize_f32","","",0,[[],[["error",3],["result",4]]]],[11,"deserialize_f64","","",0,[[],[["error",3],["result",4]]]],[11,"deserialize_i128","","",0,[[],[["error",3],["result",4]]]],[11,"deserialize_u128","","",0,[[],[["error",3],["result",4]]]],[11,"deserialize_option","","",0,[[],[["error",3],["result",4]]]],[11,"deserialize_enum","","",0,[[],[["error",3],["result",4]]]],[11,"deserialize_newtype_struct","","",0,[[],[["error",3],["result",4]]]],[11,"deserialize_bool","","",0,[[],[["error",3],["result",4]]]],[11,"deserialize_char","","",0,[[],[["error",3],["result",4]]]],[11,"deserialize_str","","",0,[[],[["error",3],["result",4]]]],[11,"deserialize_string","","",0,[[],[["error",3],["result",4]]]],[11,"deserialize_bytes","","",0,[[],[["error",3],["result",4]]]],[11,"deserialize_byte_buf","","",0,[[],[["error",3],["result",4]]]],[11,"deserialize_unit","","",0,[[],[["error",3],["result",4]]]],[11,"deserialize_unit_struct","","",0,[[],[["error",3],["result",4]]]],[11,"deserialize_seq","","",0,[[],[["error",3],["result",4]]]],[11,"deserialize_tuple","","",0,[[],[["error",3],["result",4]]]],[11,"deserialize_tuple_struct","","",0,[[],[["error",3],["result",4]]]],[11,"deserialize_map","","",0,[[],[["error",3],["result",4]]]],[11,"deserialize_struct","","",0,[[],[["error",3],["result",4]]]],[11,"deserialize_identifier","","",0,[[],[["error",3],["result",4]]]],[11,"deserialize_ignored_any","","",0,[[],[["error",3],["result",4]]]],[11,"deserialize_any","serde_json","",13,[[],[["error",3],["result",4]]]],[11,"deserialize_i8","","",13,[[],[["error",3],["result",4]]]],[11,"deserialize_i16","","",13,[[],[["error",3],["result",4]]]],[11,"deserialize_i32","","",13,[[],[["error",3],["result",4]]]],[11,"deserialize_i64","","",13,[[],[["error",3],["result",4]]]],[11,"deserialize_u8","","",13,[[],[["error",3],["result",4]]]],[11,"deserialize_u16","","",13,[[],[["error",3],["result",4]]]],[11,"deserialize_u32","","",13,[[],[["error",3],["result",4]]]],[11,"deserialize_u64","","",13,[[],[["error",3],["result",4]]]],[11,"deserialize_f32","","",13,[[],[["error",3],["result",4]]]],[11,"deserialize_f64","","",13,[[],[["error",3],["result",4]]]],[11,"deserialize_i128","","",13,[[],[["error",3],["result",4]]]],[11,"deserialize_u128","","",13,[[],[["error",3],["result",4]]]],[11,"deserialize_bool","","",13,[[],["result",4]]],[11,"deserialize_char","","",13,[[],["result",4]]],[11,"deserialize_str","","",13,[[],["result",4]]],[11,"deserialize_string","","",13,[[],["result",4]]],[11,"deserialize_bytes","","",13,[[],["result",4]]],[11,"deserialize_byte_buf","","",13,[[],["result",4]]],[11,"deserialize_option","","",13,[[],["result",4]]],[11,"deserialize_unit","","",13,[[],["result",4]]],[11,"deserialize_unit_struct","","",13,[[],["result",4]]],[11,"deserialize_newtype_struct","","",13,[[],["result",4]]],[11,"deserialize_seq","","",13,[[],["result",4]]],[11,"deserialize_tuple","","",13,[[],["result",4]]],[11,"deserialize_tuple_struct","","",13,[[],["result",4]]],[11,"deserialize_map","","",13,[[],["result",4]]],[11,"deserialize_struct","","",13,[[],["result",4]]],[11,"deserialize_enum","","",13,[[],["result",4]]],[11,"deserialize_identifier","","",13,[[],["result",4]]],[11,"deserialize_ignored_any","","",13,[[],["result",4]]],[11,"into_deserializer","serde_json::value","",0,[[]]],[11,"custom","serde_json::error","",4,[[["display",8]],["error",3]]],[11,"serialize","serde_json::map","",6,[[],["result",4]]],[11,"serialize","serde_json::value","",0,[[],["result",4]]],[11,"serialize","serde_json","",13,[[],["result",4]]],[11,"serialize_bool","serde_json::value","",24,[[],[["value",4],["result",6]]]],[11,"serialize_i8","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_i16","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_i32","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_i64","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_u8","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_u16","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_u32","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_u64","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_f32","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_f64","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_char","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_str","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_bytes","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_unit","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_unit_struct","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_unit_variant","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_newtype_struct","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_newtype_variant","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_none","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_some","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_seq","","",24,[[["option",4]],["result",6]]],[11,"serialize_tuple","","",24,[[],["result",6]]],[11,"serialize_tuple_struct","","",24,[[],["result",6]]],[11,"serialize_tuple_variant","","",24,[[],["result",6]]],[11,"serialize_map","","",24,[[["option",4]],["result",6]]],[11,"serialize_struct","","",24,[[],["result",6]]],[11,"serialize_struct_variant","","",24,[[],["result",6]]],[11,"collect_str","","",24,[[],[["value",4],["result",6]]]],[11,"deserialize","serde_json::map","",6,[[],["result",4]]],[11,"deserialize","serde_json::value","",0,[[],[["result",4],["value",4]]]],[11,"deserialize","serde_json","",13,[[],[["result",4],["number",3]]]],[11,"custom","serde_json::error","",4,[[["display",8]],["error",3]]],[11,"invalid_type","","",4,[[["expected",8],["unexpected",4]]]]],"p":[[4,"Value"],[3,"Deserializer"],[3,"StreamDeserializer"],[4,"Category"],[3,"Error"],[4,"Entry"],[3,"Map"],[3,"VacantEntry"],[3,"OccupiedEntry"],[4,"CharEscape"],[8,"Formatter"],[3,"Serializer"],[3,"PrettyFormatter"],[3,"Number"],[3,"IoRead"],[3,"SliceRead"],[3,"StrRead"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Keys"],[3,"Values"],[3,"ValuesMut"],[3,"CompactFormatter"],[3,"Serializer"]]},\
"smallvec":{"doc":"Small vectors in various sizes. These store a certain…","i":[[3,"Drain","smallvec","An iterator that removes the items from a `SmallVec` and…",null,null],[3,"SmallVec","","A `Vec`-like container that can store a small number of…",null,null],[3,"IntoIter","","An iterator that consumes a `SmallVec` and yields its…",null,null],[4,"CollectionAllocErr","","Error type for APIs with fallible heap allocation",null,null],[13,"CapacityOverflow","","Overflow `usize::MAX` or other error during size computation",0,null],[13,"AllocErr","","The allocator return an error",0,null],[12,"layout","smallvec::CollectionAllocErr","The layout that was passed to the allocator",1,null],[8,"Array","smallvec","Types that can be used as the backing store for a SmallVec",null,null],[16,"Item","","The type of the array\'s elements.",2,null],[10,"size","","Returns the number of items the array can hold.",2,[[]]],[8,"ToSmallVec","","Convenience trait for constructing a `SmallVec`",null,null],[10,"to_smallvec","","Construct a new `SmallVec` from a slice.",3,[[],["smallvec",3]]],[11,"new","","Construct an empty vector",4,[[],["smallvec",3]]],[11,"with_capacity","","Construct an empty vector with enough capacity…",4,[[]]],[11,"from_vec","","Construct a new `SmallVec` from a `Vec<A::Item>`.",4,[[["vec",3]],["smallvec",3]]],[11,"from_buf","","Constructs a new `SmallVec` on the stack from an `A`…",4,[[],["smallvec",3]]],[11,"from_buf_and_len","","Constructs a new `SmallVec` on the stack from an `A`…",4,[[],["smallvec",3]]],[11,"from_buf_and_len_unchecked","","Constructs a new `SmallVec` on the stack from an `A`…",4,[[["maybeuninit",19]],["smallvec",3]]],[11,"set_len","","Sets the length of a vector.",4,[[]]],[11,"inline_size","","The maximum number of elements this vector can hold inline",4,[[]]],[11,"len","","The number of elements stored in the vector",4,[[]]],[11,"is_empty","","Returns `true` if the vector is empty",4,[[]]],[11,"capacity","","The number of items the vector can hold without reallocating",4,[[]]],[11,"spilled","","Returns `true` if the data has spilled into a separate…",4,[[]]],[11,"drain","","Creates a draining iterator that removes the specified…",4,[[],["drain",3]]],[11,"push","","Append an item to the vector.",4,[[]]],[11,"pop","","Remove an item from the end of the vector and return it,…",4,[[],["option",4]]],[11,"grow","","Re-allocate to set the capacity to `max(new_cap,…",4,[[]]],[11,"try_grow","","Re-allocate to set the capacity to `max(new_cap,…",4,[[],[["result",4],["collectionallocerr",4]]]],[11,"reserve","","Reserve capacity for `additional` more elements to be…",4,[[]]],[11,"try_reserve","","Reserve capacity for `additional` more elements to be…",4,[[],[["result",4],["collectionallocerr",4]]]],[11,"reserve_exact","","Reserve the minimum capacity for `additional` more…",4,[[]]],[11,"try_reserve_exact","","Reserve the minimum capacity for `additional` more…",4,[[],[["result",4],["collectionallocerr",4]]]],[11,"shrink_to_fit","","Shrink the capacity of the vector as much as possible.",4,[[]]],[11,"truncate","","Shorten the vector, keeping the first `len` elements and…",4,[[]]],[11,"as_slice","","Extracts a slice containing the entire vector.",4,[[]]],[11,"as_mut_slice","","Extracts a mutable slice of the entire vector.",4,[[]]],[11,"swap_remove","","Remove the element at position `index`, replacing it with…",4,[[]]],[11,"clear","","Remove all elements from the vector.",4,[[]]],[11,"remove","","Remove and return the element at position `index`,…",4,[[]]],[11,"insert","","Insert an element at position `index`, shifting all…",4,[[]]],[11,"insert_many","","Insert multiple elements at position `index`, shifting all…",4,[[["intoiterator",8]]]],[11,"into_vec","","Convert a SmallVec to a Vec, without reallocating if the…",4,[[],["vec",3]]],[11,"into_boxed_slice","","Converts a `SmallVec` into a `Box<[T]>` without…",4,[[],["box",3]]],[11,"into_inner","","Convert the SmallVec into an `A` if possible. Otherwise…",4,[[],["result",4]]],[11,"retain","","Retains only the elements specified by the predicate.",4,[[["fnmut",8]]]],[11,"dedup","","Removes consecutive duplicate elements.",4,[[]]],[11,"dedup_by","","Removes consecutive duplicate elements using the given…",4,[[]]],[11,"dedup_by_key","","Removes consecutive elements that map to the same key.",4,[[]]],[11,"resize_with","","Resizes the `SmallVec` in-place so that `len` is equal to…",4,[[]]],[11,"from_raw_parts","","Creates a `SmallVec` directly from the raw components of…",4,[[],["smallvec",3]]],[11,"as_ptr","","Returns a raw pointer to the vector\'s buffer.",4,[[]]],[11,"as_mut_ptr","","Returns a raw mutable pointer to the vector\'s buffer.",4,[[]]],[11,"from_slice","","Copy the elements from a slice into a new `SmallVec`.",4,[[]]],[11,"insert_from_slice","","Copy elements from a slice into the vector at position…",4,[[]]],[11,"extend_from_slice","","Copy elements from a slice and append them to the vector.",4,[[]]],[11,"resize","","Resizes the vector so that its length is equal to `len`.",4,[[]]],[11,"from_elem","","Creates a `SmallVec` with `n` copies of `elem`.",4,[[]]],[11,"as_slice","","Returns the remaining items of this iterator as a slice.",5,[[]]],[11,"as_mut_slice","","Returns the remaining items of this iterator as a mutable…",5,[[]]],[14,"smallvec","","Creates a [`SmallVec`] containing the arguments.",null,null],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"into_iter","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"into_iter","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"into_iter","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"from","","",0,[[["layouterr",3]]]],[11,"from","","",4,[[],["smallvec",3]]],[11,"from","","",4,[[["vec",3]],["smallvec",3]]],[11,"from","","",4,[[],["smallvec",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"eq","","",4,[[["smallvec",3]]]],[11,"cmp","","",4,[[["smallvec",3]],["ordering",4]]],[11,"partial_cmp","","",4,[[["smallvec",3]],[["ordering",4],["option",4]]]],[11,"drop","","",6,[[]]],[11,"drop","","",4,[[]]],[11,"drop","","",5,[[]]],[11,"index","","",4,[[]]],[11,"index_mut","","",4,[[]]],[11,"hash","","",4,[[]]],[11,"len","","",6,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"from_iter","","",4,[[["intoiterator",8]],["smallvec",3]]],[11,"as_ref","","",4,[[]]],[11,"as_mut","","",4,[[]]],[11,"next_back","","",6,[[],["option",4]]],[11,"next_back","","",5,[[],["option",4]]],[11,"next","","",6,[[],["option",4]]],[11,"size_hint","","",6,[[]]],[11,"next","","",5,[[],["option",4]]],[11,"size_hint","","",5,[[]]],[11,"into_iter","","",4,[[]]],[11,"extend","","",4,[[["intoiterator",8]]]],[11,"clone","","",4,[[],["smallvec",3]]],[11,"clone","","",5,[[],["intoiter",3]]],[11,"default","","",4,[[],["smallvec",3]]]],"p":[[4,"CollectionAllocErr"],[13,"AllocErr"],[8,"Array"],[8,"ToSmallVec"],[3,"SmallVec"],[3,"IntoIter"],[3,"Drain"]]},\
"strsim":{"doc":"This library implements string similarity metrics.","i":[[4,"StrSimError","strsim","",null,null],[13,"DifferentLengthArgs","","",0,null],[5,"hamming","","Calculates the number of positions in the two strings…",null,[[],["hammingresult",6]]],[5,"jaro","","Calculates the Jaro similarity between two strings. The…",null,[[]]],[5,"jaro_winkler","","Like Jaro but gives a boost to strings that have a common…",null,[[]]],[5,"levenshtein","","Calculates the minimum number of insertions, deletions,…",null,[[]]],[5,"normalized_levenshtein","","Calculates a normalized score of the Levenshtein algorithm…",null,[[]]],[5,"osa_distance","","Like Levenshtein but allows for adjacent transpositions.…",null,[[]]],[5,"damerau_levenshtein","","Like optimal string alignment, but substrings can be…",null,[[]]],[5,"normalized_damerau_levenshtein","","Calculates a normalized score of the Damerau–Levenshtein…",null,[[]]],[6,"HammingResult","","",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"eq","","",0,[[["strsimerror",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]]],"p":[[4,"StrSimError"]]},\
"symbolic_expressions":{"doc":"symbolic-expressions parsing and generating library","i":[[3,"ParseError","symbolic_expressions","detailed symbolic-expression parse error information",null,null],[4,"SexpError","","errors that can happen in this library",null,null],[13,"Parse","","parse error",0,null],[13,"Other","","other error",0,null],[13,"Io","","IO Error",0,null],[13,"FromUtf8","","Utf8 Error parsing error",0,null],[13,"Float","","floating point parsing error",0,null],[13,"Int","","integer parsing error",0,null],[4,"Sexp","","a symbolic-expression structure Can be a string or a list…",null,null],[13,"String","","plain String symbolic-expression",1,null],[13,"List","","list symbolic-expression",1,null],[13,"Empty","","empty, trivial symbolic-expression",1,null],[5,"parse_error","","utility function that creates a symbolic-expressions Error…",null,[[["string",3]],[["sexperror",4],["result",4]]]],[5,"encode_string","","encode a string according to the guidelines given by Kicad",null,[[],["string",3]]],[11,"new_empty","","create an empty symbolic-expression",1,[[],["sexp",4]]],[11,"new_string","","create a String type symbolic-expression",1,[[],["sexp",4]]],[11,"new_list","","create a list type symbolic-expression",1,[[["vec",3],["sexp",4]],["sexp",4]]],[11,"start","","create an empty list type symbolic-expression",1,[[],["sexp",4]]],[11,"push","","push an element in a list",1,[[["sexp",4],["into",8]]]],[11,"new_named_list","","create a list type symbolic-expression where the first…",1,[[],["sexp",4]]],[11,"new_named","","create a list type symbolic-expression where the first…",1,[[],["sexp",4]]],[11,"new_named_sexp","","create a list type symbolic-expression where the first…",1,[[],["sexp",4]]],[11,"take_list","","if the expression is a list, extract the `Vec<Sexp>` from…",1,[[],[["sexperror",4],["result",4],["vec",3]]]],[11,"take_string","","if the expression is a `String`, take it out and swap it…",1,[[],[["sexperror",4],["result",4],["string",3]]]],[11,"from","","create a symbolic-expression via the `IntoSexp` trait",1,[[],["sexp",4]]],[11,"list","","access the symbolic-expression as if it is a List",1,[[],[["sexperror",4],["result",4],["vec",3]]]],[11,"string","","access the symbolic-expression as if it is an `&String`",1,[[],[["result",4],["sexperror",4],["string",3]]]],[11,"s","","access the symbolic-expression as if it is a `String`",1,[[],[["sexperror",4],["result",4],["string",3]]]],[11,"is_string","","is this expression a string",1,[[]]],[11,"is_list","","is this expression a list",1,[[]]],[11,"f","","access the symbolic-expression as if it is a String that…",1,[[],[["sexperror",4],["result",4]]]],[11,"i","","access the symbolic-expression as if it is a String that…",1,[[],[["sexperror",4],["result",4]]]],[11,"list_name","","access the symbolic-expression as if it is a List assuming…",1,[[],[["result",4],["sexperror",4],["string",3]]]],[11,"slice_atom","","access the symbolic-expression as if it is a named List…",1,[[],[["sexperror",4],["result",4]]]],[11,"named_value","","access the symbolic-expression as if it is a named List…",1,[[],[["sexperror",4],["result",4],["sexp",4]]]],[11,"named_value_i","","as named_value but converted to i64",1,[[],[["sexperror",4],["result",4]]]],[11,"named_value_f","","as named_value but converted to f64",1,[[],[["sexperror",4],["result",4]]]],[11,"named_value_string","","as named_value but converted to `&String`",1,[[],[["result",4],["sexperror",4],["string",3]]]],[11,"named_value_s","","as named_value but converted to `String`",1,[[],[["sexperror",4],["result",4],["string",3]]]],[11,"slice_atom_num","","get the symbolic-expression as a list which starts with a…",1,[[],[["sexperror",4],["result",4]]]],[0,"parser","","symbolic-expression parser code: data -> symbolic-expression",null,null],[5,"parse_str","symbolic_expressions::parser","parse a &str to a symbolic-expression",null,[[],[["sexperror",4],["result",4],["sexp",4]]]],[5,"parse_file","","parse a file as a symbolic-expression",null,[[],[["sexperror",4],["result",4],["sexp",4]]]],[0,"ser","symbolic_expressions","symbolic-expression serialization code:…",null,null],[5,"to_writer","symbolic_expressions::ser","serialize a symbolic-expression to a Writer",null,[[["sexp",4]],[["sexperror",4],["result",4]]]],[5,"to_writer_with_formatter","","serialize a symbolic-expression to a Writer using a…",null,[[["sexp",4]],[["sexperror",4],["result",4]]]],[5,"to_writer_with_rules","","serialize a symbolic-expression to a Writer using a Rules…",null,[[["rules",6],["sexp",4]],[["sexperror",4],["result",4]]]],[5,"to_vec","","serialize a symbolic-expression to a Vec",null,[[["sexp",4]],[["vec",3],["result",4],["sexperror",4]]]],[5,"to_vec_with_rules","","serialize a symbolic-expression to a Vec using Rules",null,[[["rules",6],["sexp",4]],[["vec",3],["result",4],["sexperror",4]]]],[5,"to_vec_with_formatter","","serialize a symbolic-expression to a Vec using a Formatter",null,[[["sexp",4]],[["vec",3],["result",4],["sexperror",4]]]],[5,"to_string","","serialize a symbolic-expression to a String",null,[[["sexp",4]],[["sexperror",4],["result",4],["string",3]]]],[5,"to_string_with_rules","","serialize a symbolic-expression to a String using Rules",null,[[["rules",6],["sexp",4]],[["sexperror",4],["result",4],["string",3]]]],[5,"to_string_with_formatter","","serialize a symbolic-expression to a String using a…",null,[[["sexp",4]],[["sexperror",4],["result",4],["string",3]]]],[0,"iteratom","symbolic_expressions","high-level API for deconstructing symbolic-expressions",null,null],[3,"IterAtom","symbolic_expressions::iteratom","Atom iterator wrapper",null,null],[12,"iter","","containing iterable (pub for now)",2,null],[5,"from_sexp","","convert from a symbolic-expression to something (dispatcher)",null,[[["sexp",4]],[["sexperror",4],["fromsexp",8],["result",4]]]],[8,"FromSexp","","convert an `&Sexp` to something",null,null],[10,"from_sexp","","convert from a symbolic-expression to something",3,[[["sexp",4]],[["sexperror",4],["result",4]]]],[11,"new","","deconstruct a `Sexp` that is a list and starts with \'name\'",2,[[["sexp",4]],[["sexperror",4],["result",4],["iteratom",3]]]],[11,"new_nameless","","deconstruct a `Sexp` that is a list and doesn\'t start with…",2,[[["sexp",4]],[["sexperror",4],["result",4],["iteratom",3]]]],[11,"i","","expect an integer while iterating a `Sexp` list",2,[[],[["sexperror",4],["result",4]]]],[11,"f","","expect a float while iterating a `Sexp` list",2,[[],[["sexperror",4],["result",4]]]],[11,"s","","expect a String while iterating a `Sexp` list",2,[[],[["sexperror",4],["result",4],["string",3]]]],[11,"s_in_list","","expect a list contained String while iterating a `Sexp` list",2,[[],[["sexperror",4],["result",4],["string",3]]]],[11,"i_in_list","","expect a list contained i64 while iterating a `Sexp` list",2,[[],[["sexperror",4],["result",4]]]],[11,"f_in_list","","expect a list contained f64 while iterating a `Sexp` list",2,[[],[["sexperror",4],["result",4]]]],[11,"t","","expect a `Sexp` while iterating a `Sexp` list",2,[[],[["sexperror",4],["fromsexp",8],["result",4]]]],[11,"t_in_list","","expect a list containing a `Sexp` while iterating a `Sexp`…",2,[[],[["sexperror",4],["fromsexp",8],["result",4]]]],[11,"vec","","expect remainder of iterator to be a `Vec<T>`",2,[[],[["result",4],["sexperror",4],["vec",3]]]],[11,"maybe_t","","maybe a `FromSexp` while iterating a `Sexp` list",2,[[],[["option",4],["fromsexp",8]]]],[11,"maybe_s","","maybe a `String` while iterating a `Sexp` list",2,[[],[["string",3],["option",4]]]],[11,"maybe_literal_s","","maybe a `String` while iterating a `Sexp` list",2,[[],[["string",3],["option",4]]]],[11,"maybe_i","","maybe an `i64` while iterating a `Sexp` list",2,[[],["option",4]]],[11,"maybe_f","","maybe an `f64` while iterating a `Sexp` list",2,[[],["option",4]]],[11,"maybe_s_in_list","","maybe a list containing a `String` while iterating a…",2,[[],[["string",3],["option",4]]]],[11,"maybe_i_in_list","","maybe a list containing an `i64` while iterating a `Sexp`…",2,[[],["option",4]]],[11,"maybe_f_in_list","","maybe a list containing an `f64` while iterating a `Sexp`…",2,[[],["option",4]]],[11,"close","","make sure we consumed all of the iterator",2,[[],[["sexperror",4],["result",4]]]],[6,"Rules","symbolic_expressions","datatype used by the example Formatter `RulesFormatter`",null,null],[8,"IntoSexp","","like Into trait but works from a ref avoiding consumption…",null,null],[10,"into_sexp","","convert self into a Sexp",4,[[],["sexp",4]]],[8,"Formatter","","trait for formatting the serialization of a…",null,null],[10,"open","","Called when serializing a \'(\'.",5,[[["option",4],["sexp",4]],[["sexperror",4],["result",4]]]],[10,"element","","Called when serializing a \' VAL\'.",5,[[["sexp",4]],[["sexperror",4],["result",4]]]],[10,"close","","Called when serializing a \')\'.",5,[[],[["sexperror",4],["result",4]]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","symbolic_expressions::iteratom","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","symbolic_expressions","",0,[[["error",3]],["sexperror",4]]],[11,"from","","",0,[[["string",3]],["sexperror",4]]],[11,"from","","",0,[[],["sexperror",4]]],[11,"from","","",0,[[["fromutf8error",3]],["sexperror",4]]],[11,"from","","",0,[[["parsefloaterror",3]],["sexperror",4]]],[11,"from","","",0,[[["parseinterror",3]],["sexperror",4]]],[11,"from","","",1,[[],["sexp",4]]],[11,"from","","",1,[[["string",3]],["sexp",4]]],[11,"from","","",1,[[],["sexp",4]]],[11,"from","","",1,[[],["sexp",4]]],[11,"clone","","",1,[[],["sexp",4]]],[11,"default","","",1,[[],["sexp",4]]],[11,"eq","","",1,[[["sexp",4]]]],[11,"ne","","",1,[[["sexp",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"description","","",0,[[]]],[11,"cause","","",0,[[],[["option",4],["error",8]]]]],"p":[[4,"SexpError"],[4,"Sexp"],[3,"IterAtom"],[8,"FromSexp"],[8,"IntoSexp"],[8,"Formatter"],[3,"ParseError"]]},\
"syn":{"doc":"github crates-io docs-rs","i":[[3,"Ident","syn","A word of Rust code, which may be a keyword or legal…",null,null],[3,"Attribute","","An attribute like `#[repr(transparent)]`.",null,null],[12,"pound_token","","",0,null],[12,"style","","",0,null],[12,"bracket_token","","",0,null],[12,"path","","",0,null],[12,"tokens","","",0,null],[3,"MetaList","","A structured list within an attribute, like `derive(Copy,…",null,null],[12,"path","","",1,null],[12,"paren_token","","",1,null],[12,"nested","","",1,null],[3,"MetaNameValue","","A name-value pair within an attribute, like `feature =…",null,null],[12,"path","","",2,null],[12,"eq_token","","",2,null],[12,"lit","","",2,null],[3,"Field","","A field of a struct or enum variant.",null,null],[12,"attrs","","Attributes tagged on the field.",3,null],[12,"vis","","Visibility of the field.",3,null],[12,"ident","","Name of the field, if any.",3,null],[12,"colon_token","","",3,null],[12,"ty","","Type of the field.",3,null],[3,"FieldsNamed","","Named fields of a struct or struct variant such as `Point…",null,null],[12,"brace_token","","",4,null],[12,"named","","",4,null],[3,"FieldsUnnamed","","Unnamed fields of a tuple struct or tuple variant such as…",null,null],[12,"paren_token","","",5,null],[12,"unnamed","","",5,null],[3,"Variant","","An enum variant.",null,null],[12,"attrs","","Attributes tagged on the variant.",6,null],[12,"ident","","Name of the variant.",6,null],[12,"fields","","Content stored in the variant.",6,null],[12,"discriminant","","Explicit discriminant: `Variant = 1`",6,null],[3,"VisCrate","","A crate-level visibility: `crate`.",null,null],[12,"crate_token","","",7,null],[3,"VisPublic","","A public visibility level: `pub`.",null,null],[12,"pub_token","","",8,null],[3,"VisRestricted","","A visibility level restricted to some path: `pub(self)` or…",null,null],[12,"pub_token","","",9,null],[12,"paren_token","","",9,null],[12,"in_token","","",9,null],[12,"path","","",9,null],[3,"Arm","","One arm of a `match` expression: `0...10 => { return true;…",null,null],[12,"attrs","","",10,null],[12,"pat","","",10,null],[12,"guard","","",10,null],[12,"fat_arrow_token","","",10,null],[12,"body","","",10,null],[12,"comma","","",10,null],[3,"FieldValue","","A field-value pair in a struct literal.",null,null],[12,"attrs","","Attributes tagged on the field.",11,null],[12,"member","","Name or index of the field.",11,null],[12,"colon_token","","The colon in `Struct { x: x }`. If written in shorthand…",11,null],[12,"expr","","Value of the field.",11,null],[3,"Label","","A lifetime labeling a `for`, `while`, or `loop`.",null,null],[12,"name","","",12,null],[12,"colon_token","","",12,null],[3,"MethodTurbofish","","The `::<>` explicit type parameters passed to a method…",null,null],[12,"colon2_token","","",13,null],[12,"lt_token","","",13,null],[12,"args","","",13,null],[12,"gt_token","","",13,null],[3,"ExprArray","","A slice literal expression: `[a, b, c, d]`.",null,null],[12,"attrs","","",14,null],[12,"bracket_token","","",14,null],[12,"elems","","",14,null],[3,"ExprAssign","","An assignment expression: `a = compute()`.",null,null],[12,"attrs","","",15,null],[12,"left","","",15,null],[12,"eq_token","","",15,null],[12,"right","","",15,null],[3,"ExprAssignOp","","A compound assignment expression: `counter += 1`.",null,null],[12,"attrs","","",16,null],[12,"left","","",16,null],[12,"op","","",16,null],[12,"right","","",16,null],[3,"ExprAsync","","An async block: `async { ... }`.",null,null],[12,"attrs","","",17,null],[12,"async_token","","",17,null],[12,"capture","","",17,null],[12,"block","","",17,null],[3,"ExprAwait","","An await expression: `fut.await`.",null,null],[12,"attrs","","",18,null],[12,"base","","",18,null],[12,"dot_token","","",18,null],[12,"await_token","","",18,null],[3,"ExprBinary","","A binary operation: `a + b`, `a * b`.",null,null],[12,"attrs","","",19,null],[12,"left","","",19,null],[12,"op","","",19,null],[12,"right","","",19,null],[3,"ExprBlock","","A blocked scope: `{ ... }`.",null,null],[12,"attrs","","",20,null],[12,"label","","",20,null],[12,"block","","",20,null],[3,"ExprBox","","A box expression: `box f`.",null,null],[12,"attrs","","",21,null],[12,"box_token","","",21,null],[12,"expr","","",21,null],[3,"ExprBreak","","A `break`, with an optional label to break and an optional…",null,null],[12,"attrs","","",22,null],[12,"break_token","","",22,null],[12,"label","","",22,null],[12,"expr","","",22,null],[3,"ExprCall","","A function call expression: `invoke(a, b)`.",null,null],[12,"attrs","","",23,null],[12,"func","","",23,null],[12,"paren_token","","",23,null],[12,"args","","",23,null],[3,"ExprCast","","A cast expression: `foo as f64`.",null,null],[12,"attrs","","",24,null],[12,"expr","","",24,null],[12,"as_token","","",24,null],[12,"ty","","",24,null],[3,"ExprClosure","","A closure expression: `|a, b| a + b`.",null,null],[12,"attrs","","",25,null],[12,"asyncness","","",25,null],[12,"movability","","",25,null],[12,"capture","","",25,null],[12,"or1_token","","",25,null],[12,"inputs","","",25,null],[12,"or2_token","","",25,null],[12,"output","","",25,null],[12,"body","","",25,null],[3,"ExprContinue","","A `continue`, with an optional label.",null,null],[12,"attrs","","",26,null],[12,"continue_token","","",26,null],[12,"label","","",26,null],[3,"ExprField","","Access of a named struct field (`obj.k`) or unnamed tuple…",null,null],[12,"attrs","","",27,null],[12,"base","","",27,null],[12,"dot_token","","",27,null],[12,"member","","",27,null],[3,"ExprForLoop","","A for loop: `for pat in expr { ... }`.",null,null],[12,"attrs","","",28,null],[12,"label","","",28,null],[12,"for_token","","",28,null],[12,"pat","","",28,null],[12,"in_token","","",28,null],[12,"expr","","",28,null],[12,"body","","",28,null],[3,"ExprGroup","","An expression contained within invisible delimiters.",null,null],[12,"attrs","","",29,null],[12,"group_token","","",29,null],[12,"expr","","",29,null],[3,"ExprIf","","An `if` expression with an optional `else` block: `if expr…",null,null],[12,"attrs","","",30,null],[12,"if_token","","",30,null],[12,"cond","","",30,null],[12,"then_branch","","",30,null],[12,"else_branch","","",30,null],[3,"ExprIndex","","A square bracketed indexing expression: `vector[2]`.",null,null],[12,"attrs","","",31,null],[12,"expr","","",31,null],[12,"bracket_token","","",31,null],[12,"index","","",31,null],[3,"ExprLet","","A `let` guard: `let Some(x) = opt`.",null,null],[12,"attrs","","",32,null],[12,"let_token","","",32,null],[12,"pat","","",32,null],[12,"eq_token","","",32,null],[12,"expr","","",32,null],[3,"ExprLit","","A literal in place of an expression: `1`, `\\\"foo\\\"`.",null,null],[12,"attrs","","",33,null],[12,"lit","","",33,null],[3,"ExprLoop","","Conditionless loop: `loop { ... }`.",null,null],[12,"attrs","","",34,null],[12,"label","","",34,null],[12,"loop_token","","",34,null],[12,"body","","",34,null],[3,"ExprMacro","","A macro invocation expression: `format!(\\\"{}\\\", q)`.",null,null],[12,"attrs","","",35,null],[12,"mac","","",35,null],[3,"ExprMatch","","A `match` expression: `match n { Some(n) => {}, None => {}…",null,null],[12,"attrs","","",36,null],[12,"match_token","","",36,null],[12,"expr","","",36,null],[12,"brace_token","","",36,null],[12,"arms","","",36,null],[3,"ExprMethodCall","","A method call expression: `x.foo::<T>(a, b)`.",null,null],[12,"attrs","","",37,null],[12,"receiver","","",37,null],[12,"dot_token","","",37,null],[12,"method","","",37,null],[12,"turbofish","","",37,null],[12,"paren_token","","",37,null],[12,"args","","",37,null],[3,"ExprParen","","A parenthesized expression: `(a + b)`.",null,null],[12,"attrs","","",38,null],[12,"paren_token","","",38,null],[12,"expr","","",38,null],[3,"ExprPath","","A path like `std::mem::replace` possibly containing…",null,null],[12,"attrs","","",39,null],[12,"qself","","",39,null],[12,"path","","",39,null],[3,"ExprRange","","A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.",null,null],[12,"attrs","","",40,null],[12,"from","","",40,null],[12,"limits","","",40,null],[12,"to","","",40,null],[3,"ExprReference","","A referencing operation: `&a` or `&mut a`.",null,null],[12,"attrs","","",41,null],[12,"and_token","","",41,null],[12,"raw","","",41,null],[12,"mutability","","",41,null],[12,"expr","","",41,null],[3,"ExprRepeat","","An array literal constructed from one repeated element:…",null,null],[12,"attrs","","",42,null],[12,"bracket_token","","",42,null],[12,"expr","","",42,null],[12,"semi_token","","",42,null],[12,"len","","",42,null],[3,"ExprReturn","","A `return`, with an optional value to be returned.",null,null],[12,"attrs","","",43,null],[12,"return_token","","",43,null],[12,"expr","","",43,null],[3,"ExprStruct","","A struct literal expression: `Point { x: 1, y: 1 }`.",null,null],[12,"attrs","","",44,null],[12,"path","","",44,null],[12,"brace_token","","",44,null],[12,"fields","","",44,null],[12,"dot2_token","","",44,null],[12,"rest","","",44,null],[3,"ExprTry","","A try-expression: `expr?`.",null,null],[12,"attrs","","",45,null],[12,"expr","","",45,null],[12,"question_token","","",45,null],[3,"ExprTryBlock","","A try block: `try { ... }`.",null,null],[12,"attrs","","",46,null],[12,"try_token","","",46,null],[12,"block","","",46,null],[3,"ExprTuple","","A tuple expression: `(a, b, c, d)`.",null,null],[12,"attrs","","",47,null],[12,"paren_token","","",47,null],[12,"elems","","",47,null],[3,"ExprType","","A type ascription expression: `foo: f64`.",null,null],[12,"attrs","","",48,null],[12,"expr","","",48,null],[12,"colon_token","","",48,null],[12,"ty","","",48,null],[3,"ExprUnary","","A unary operation: `!x`, `*x`.",null,null],[12,"attrs","","",49,null],[12,"op","","",49,null],[12,"expr","","",49,null],[3,"ExprUnsafe","","An unsafe block: `unsafe { ... }`.",null,null],[12,"attrs","","",50,null],[12,"unsafe_token","","",50,null],[12,"block","","",50,null],[3,"ExprWhile","","A while loop: `while expr { ... }`.",null,null],[12,"attrs","","",51,null],[12,"label","","",51,null],[12,"while_token","","",51,null],[12,"cond","","",51,null],[12,"body","","",51,null],[3,"ExprYield","","A yield expression: `yield expr`.",null,null],[12,"attrs","","",52,null],[12,"yield_token","","",52,null],[12,"expr","","",52,null],[3,"Index","","The index of an unnamed tuple struct field.",null,null],[12,"index","","",53,null],[12,"span","","",53,null],[3,"BoundLifetimes","","A set of bound lifetimes: `for<\'a, \'b, \'c>`.",null,null],[12,"for_token","","",54,null],[12,"lt_token","","",54,null],[12,"lifetimes","","",54,null],[12,"gt_token","","",54,null],[3,"ConstParam","","A const generic parameter: `const LENGTH: usize`.",null,null],[12,"attrs","","",55,null],[12,"const_token","","",55,null],[12,"ident","","",55,null],[12,"colon_token","","",55,null],[12,"ty","","",55,null],[12,"eq_token","","",55,null],[12,"default","","",55,null],[3,"Generics","","Lifetimes and type parameters attached to a declaration of…",null,null],[12,"lt_token","","",56,null],[12,"params","","",56,null],[12,"gt_token","","",56,null],[12,"where_clause","","",56,null],[3,"LifetimeDef","","A lifetime definition: `\'a: \'b + \'c + \'d`.",null,null],[12,"attrs","","",57,null],[12,"lifetime","","",57,null],[12,"colon_token","","",57,null],[12,"bounds","","",57,null],[3,"PredicateEq","","An equality predicate in a `where` clause (unsupported).",null,null],[12,"lhs_ty","","",58,null],[12,"eq_token","","",58,null],[12,"rhs_ty","","",58,null],[3,"PredicateLifetime","","A lifetime predicate in a `where` clause: `\'a: \'b + \'c`.",null,null],[12,"lifetime","","",59,null],[12,"colon_token","","",59,null],[12,"bounds","","",59,null],[3,"PredicateType","","A type predicate in a `where` clause: `for<\'c> Foo<\'c>:…",null,null],[12,"lifetimes","","Any lifetimes from a `for` binding",60,null],[12,"bounded_ty","","The type being bounded",60,null],[12,"colon_token","","",60,null],[12,"bounds","","Trait and lifetime bounds (`Clone+Send+\'static`)",60,null],[3,"TraitBound","","A trait used as a bound on a type parameter.",null,null],[12,"paren_token","","",61,null],[12,"modifier","","",61,null],[12,"lifetimes","","The `for<\'a>` in `for<\'a> Foo<&\'a T>`",61,null],[12,"path","","The `Foo<&\'a T>` in `for<\'a> Foo<&\'a T>`",61,null],[3,"TypeParam","","A generic type parameter: `T: Into<String>`.",null,null],[12,"attrs","","",62,null],[12,"ident","","",62,null],[12,"colon_token","","",62,null],[12,"bounds","","",62,null],[12,"eq_token","","",62,null],[12,"default","","",62,null],[3,"WhereClause","","A `where` clause in a definition: `where T:…",null,null],[12,"where_token","","",63,null],[12,"predicates","","",63,null],[3,"ImplGenerics","","Returned by `Generics::split_for_impl`.",null,null],[3,"Turbofish","","Returned by `TypeGenerics::as_turbofish`.",null,null],[3,"TypeGenerics","","Returned by `Generics::split_for_impl`.",null,null],[3,"ForeignItemFn","","A foreign function in an `extern` block.",null,null],[12,"attrs","","",64,null],[12,"vis","","",64,null],[12,"sig","","",64,null],[12,"semi_token","","",64,null],[3,"ForeignItemMacro","","A macro invocation within an extern block.",null,null],[12,"attrs","","",65,null],[12,"mac","","",65,null],[12,"semi_token","","",65,null],[3,"ForeignItemStatic","","A foreign static item in an `extern` block: `static ext:…",null,null],[12,"attrs","","",66,null],[12,"vis","","",66,null],[12,"static_token","","",66,null],[12,"mutability","","",66,null],[12,"ident","","",66,null],[12,"colon_token","","",66,null],[12,"ty","","",66,null],[12,"semi_token","","",66,null],[3,"ForeignItemType","","A foreign type in an `extern` block: `type void`.",null,null],[12,"attrs","","",67,null],[12,"vis","","",67,null],[12,"type_token","","",67,null],[12,"ident","","",67,null],[12,"semi_token","","",67,null],[3,"ImplItemConst","","An associated constant within an impl block.",null,null],[12,"attrs","","",68,null],[12,"vis","","",68,null],[12,"defaultness","","",68,null],[12,"const_token","","",68,null],[12,"ident","","",68,null],[12,"colon_token","","",68,null],[12,"ty","","",68,null],[12,"eq_token","","",68,null],[12,"expr","","",68,null],[12,"semi_token","","",68,null],[3,"ImplItemMacro","","A macro invocation within an impl block.",null,null],[12,"attrs","","",69,null],[12,"mac","","",69,null],[12,"semi_token","","",69,null],[3,"ImplItemMethod","","A method within an impl block.",null,null],[12,"attrs","","",70,null],[12,"vis","","",70,null],[12,"defaultness","","",70,null],[12,"sig","","",70,null],[12,"block","","",70,null],[3,"ImplItemType","","An associated type within an impl block.",null,null],[12,"attrs","","",71,null],[12,"vis","","",71,null],[12,"defaultness","","",71,null],[12,"type_token","","",71,null],[12,"ident","","",71,null],[12,"generics","","",71,null],[12,"eq_token","","",71,null],[12,"ty","","",71,null],[12,"semi_token","","",71,null],[3,"ItemConst","","A constant item: `const MAX: u16 = 65535`.",null,null],[12,"attrs","","",72,null],[12,"vis","","",72,null],[12,"const_token","","",72,null],[12,"ident","","",72,null],[12,"colon_token","","",72,null],[12,"ty","","",72,null],[12,"eq_token","","",72,null],[12,"expr","","",72,null],[12,"semi_token","","",72,null],[3,"ItemEnum","","An enum definition: `enum Foo<A, B> { A(A), B(B) }`.",null,null],[12,"attrs","","",73,null],[12,"vis","","",73,null],[12,"enum_token","","",73,null],[12,"ident","","",73,null],[12,"generics","","",73,null],[12,"brace_token","","",73,null],[12,"variants","","",73,null],[3,"ItemExternCrate","","An `extern crate` item: `extern crate serde`.",null,null],[12,"attrs","","",74,null],[12,"vis","","",74,null],[12,"extern_token","","",74,null],[12,"crate_token","","",74,null],[12,"ident","","",74,null],[12,"rename","","",74,null],[12,"semi_token","","",74,null],[3,"ItemFn","","A free-standing function: `fn process(n: usize) ->…",null,null],[12,"attrs","","",75,null],[12,"vis","","",75,null],[12,"sig","","",75,null],[12,"block","","",75,null],[3,"ItemForeignMod","","A block of foreign items: `extern \\\"C\\\" { ... }`.",null,null],[12,"attrs","","",76,null],[12,"abi","","",76,null],[12,"brace_token","","",76,null],[12,"items","","",76,null],[3,"ItemImpl","","An impl block providing trait or associated items:…",null,null],[12,"attrs","","",77,null],[12,"defaultness","","",77,null],[12,"unsafety","","",77,null],[12,"impl_token","","",77,null],[12,"generics","","",77,null],[12,"trait_","","Trait this impl implements.",77,null],[12,"self_ty","","The Self type of the impl.",77,null],[12,"brace_token","","",77,null],[12,"items","","",77,null],[3,"ItemMacro","","A macro invocation, which includes `macro_rules!`…",null,null],[12,"attrs","","",78,null],[12,"ident","","The `example` in `macro_rules! example { ... }`.",78,null],[12,"mac","","",78,null],[12,"semi_token","","",78,null],[3,"ItemMacro2","","A 2.0-style declarative macro introduced by the `macro`…",null,null],[12,"attrs","","",79,null],[12,"vis","","",79,null],[12,"macro_token","","",79,null],[12,"ident","","",79,null],[12,"rules","","",79,null],[3,"ItemMod","","A module or module declaration: `mod m` or `mod m { ... }`.",null,null],[12,"attrs","","",80,null],[12,"vis","","",80,null],[12,"mod_token","","",80,null],[12,"ident","","",80,null],[12,"content","","",80,null],[12,"semi","","",80,null],[3,"ItemStatic","","A static item: `static BIKE: Shed = Shed(42)`.",null,null],[12,"attrs","","",81,null],[12,"vis","","",81,null],[12,"static_token","","",81,null],[12,"mutability","","",81,null],[12,"ident","","",81,null],[12,"colon_token","","",81,null],[12,"ty","","",81,null],[12,"eq_token","","",81,null],[12,"expr","","",81,null],[12,"semi_token","","",81,null],[3,"ItemStruct","","A struct definition: `struct Foo<A> { x: A }`.",null,null],[12,"attrs","","",82,null],[12,"vis","","",82,null],[12,"struct_token","","",82,null],[12,"ident","","",82,null],[12,"generics","","",82,null],[12,"fields","","",82,null],[12,"semi_token","","",82,null],[3,"ItemTrait","","A trait definition: `pub trait Iterator { ... }`.",null,null],[12,"attrs","","",83,null],[12,"vis","","",83,null],[12,"unsafety","","",83,null],[12,"auto_token","","",83,null],[12,"trait_token","","",83,null],[12,"ident","","",83,null],[12,"generics","","",83,null],[12,"colon_token","","",83,null],[12,"supertraits","","",83,null],[12,"brace_token","","",83,null],[12,"items","","",83,null],[3,"ItemTraitAlias","","A trait alias: `pub trait SharableIterator = Iterator +…",null,null],[12,"attrs","","",84,null],[12,"vis","","",84,null],[12,"trait_token","","",84,null],[12,"ident","","",84,null],[12,"generics","","",84,null],[12,"eq_token","","",84,null],[12,"bounds","","",84,null],[12,"semi_token","","",84,null],[3,"ItemType","","A type alias: `type Result<T> = std::result::Result<T,…",null,null],[12,"attrs","","",85,null],[12,"vis","","",85,null],[12,"type_token","","",85,null],[12,"ident","","",85,null],[12,"generics","","",85,null],[12,"eq_token","","",85,null],[12,"ty","","",85,null],[12,"semi_token","","",85,null],[3,"ItemUnion","","A union definition: `union Foo<A, B> { x: A, y: B }`.",null,null],[12,"attrs","","",86,null],[12,"vis","","",86,null],[12,"union_token","","",86,null],[12,"ident","","",86,null],[12,"generics","","",86,null],[12,"fields","","",86,null],[3,"ItemUse","","A use declaration: `use std::collections::HashMap`.",null,null],[12,"attrs","","",87,null],[12,"vis","","",87,null],[12,"use_token","","",87,null],[12,"leading_colon","","",87,null],[12,"tree","","",87,null],[12,"semi_token","","",87,null],[3,"Receiver","","The `self` argument of an associated method, whether taken…",null,null],[12,"attrs","","",88,null],[12,"reference","","",88,null],[12,"mutability","","",88,null],[12,"self_token","","",88,null],[3,"Signature","","A function signature in a trait or implementation: `unsafe…",null,null],[12,"constness","","",89,null],[12,"asyncness","","",89,null],[12,"unsafety","","",89,null],[12,"abi","","",89,null],[12,"fn_token","","",89,null],[12,"ident","","",89,null],[12,"generics","","",89,null],[12,"paren_token","","",89,null],[12,"inputs","","",89,null],[12,"variadic","","",89,null],[12,"output","","",89,null],[3,"TraitItemConst","","An associated constant within the definition of a trait.",null,null],[12,"attrs","","",90,null],[12,"const_token","","",90,null],[12,"ident","","",90,null],[12,"colon_token","","",90,null],[12,"ty","","",90,null],[12,"default","","",90,null],[12,"semi_token","","",90,null],[3,"TraitItemMacro","","A macro invocation within the definition of a trait.",null,null],[12,"attrs","","",91,null],[12,"mac","","",91,null],[12,"semi_token","","",91,null],[3,"TraitItemMethod","","A trait method within the definition of a trait.",null,null],[12,"attrs","","",92,null],[12,"sig","","",92,null],[12,"default","","",92,null],[12,"semi_token","","",92,null],[3,"TraitItemType","","An associated type within the definition of a trait.",null,null],[12,"attrs","","",93,null],[12,"type_token","","",93,null],[12,"ident","","",93,null],[12,"generics","","",93,null],[12,"colon_token","","",93,null],[12,"bounds","","",93,null],[12,"default","","",93,null],[12,"semi_token","","",93,null],[3,"UseGlob","","A glob import in a `use` item: `*`.",null,null],[12,"star_token","","",94,null],[3,"UseGroup","","A braced group of imports in a `use` item: `{A, B, C}`.",null,null],[12,"brace_token","","",95,null],[12,"items","","",95,null],[3,"UseName","","An identifier imported by a `use` item: `HashMap`.",null,null],[12,"ident","","",96,null],[3,"UsePath","","A path prefix of imports in a `use` item: `std::...`.",null,null],[12,"ident","","",97,null],[12,"colon2_token","","",97,null],[12,"tree","","",97,null],[3,"UseRename","","An renamed identifier imported by a `use` item: `HashMap…",null,null],[12,"ident","","",98,null],[12,"as_token","","",98,null],[12,"rename","","",98,null],[3,"File","","A complete file of Rust source code.",null,null],[12,"shebang","","",99,null],[12,"attrs","","",99,null],[12,"items","","",99,null],[3,"Lifetime","","A Rust lifetime: `\'a`.",null,null],[12,"apostrophe","","",100,null],[12,"ident","","",100,null],[3,"LitBool","","A boolean literal: `true` or `false`.",null,null],[12,"value","","",101,null],[12,"span","","",101,null],[3,"LitByte","","A byte literal: `b\'f\'`.",null,null],[3,"LitByteStr","","A byte string literal: `b\\\"foo\\\"`.",null,null],[3,"LitChar","","A character literal: `\'a\'`.",null,null],[3,"LitFloat","","A floating point literal: `1f64` or `1.0e10f64`.",null,null],[3,"LitInt","","An integer literal: `1` or `1u16`.",null,null],[3,"LitStr","","A UTF-8 string literal: `\\\"foo\\\"`.",null,null],[3,"Macro","","A macro invocation: `println!(\\\"{}\\\", mac)`.",null,null],[12,"path","","",102,null],[12,"bang_token","","",102,null],[12,"delimiter","","",102,null],[12,"tokens","","",102,null],[3,"DataEnum","","An enum input to a `proc_macro_derive` macro.",null,null],[12,"enum_token","","",103,null],[12,"brace_token","","",103,null],[12,"variants","","",103,null],[3,"DataStruct","","A struct input to a `proc_macro_derive` macro.",null,null],[12,"struct_token","","",104,null],[12,"fields","","",104,null],[12,"semi_token","","",104,null],[3,"DataUnion","","An untagged union input to a `proc_macro_derive` macro.",null,null],[12,"union_token","","",105,null],[12,"fields","","",105,null],[3,"DeriveInput","","Data structure sent to a `proc_macro_derive` macro.",null,null],[12,"attrs","","Attributes tagged on the whole struct or enum.",106,null],[12,"vis","","Visibility of the struct or enum.",106,null],[12,"ident","","Name of the struct or enum.",106,null],[12,"generics","","Generics required to complete the definition.",106,null],[12,"data","","Data within the struct or enum.",106,null],[3,"Block","","A braced block containing Rust statements.",null,null],[12,"brace_token","","",107,null],[12,"stmts","","Statements in a block",107,null],[3,"Local","","A local `let` binding: `let x: u64 = s.parse()?`.",null,null],[12,"attrs","","",108,null],[12,"let_token","","",108,null],[12,"pat","","",108,null],[12,"init","","",108,null],[12,"semi_token","","",108,null],[3,"Abi","","The binary interface of a function: `extern \\\"C\\\"`.",null,null],[12,"extern_token","","",109,null],[12,"name","","",109,null],[3,"BareFnArg","","An argument in a function type: the `usize` in `fn(usize)…",null,null],[12,"attrs","","",110,null],[12,"name","","",110,null],[12,"ty","","",110,null],[3,"TypeArray","","A fixed size array type: `[T; n]`.",null,null],[12,"bracket_token","","",111,null],[12,"elem","","",111,null],[12,"semi_token","","",111,null],[12,"len","","",111,null],[3,"TypeBareFn","","A bare function type: `fn(usize) -> bool`.",null,null],[12,"lifetimes","","",112,null],[12,"unsafety","","",112,null],[12,"abi","","",112,null],[12,"fn_token","","",112,null],[12,"paren_token","","",112,null],[12,"inputs","","",112,null],[12,"variadic","","",112,null],[12,"output","","",112,null],[3,"TypeGroup","","A type contained within invisible delimiters.",null,null],[12,"group_token","","",113,null],[12,"elem","","",113,null],[3,"TypeImplTrait","","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a…",null,null],[12,"impl_token","","",114,null],[12,"bounds","","",114,null],[3,"TypeInfer","","Indication that a type should be inferred by the compiler:…",null,null],[12,"underscore_token","","",115,null],[3,"TypeMacro","","A macro in the type position.",null,null],[12,"mac","","",116,null],[3,"TypeNever","","The never type: `!`.",null,null],[12,"bang_token","","",117,null],[3,"TypeParen","","A parenthesized type equivalent to the inner type.",null,null],[12,"paren_token","","",118,null],[12,"elem","","",118,null],[3,"TypePath","","A path like `std::slice::Iter`, optionally qualified with…",null,null],[12,"qself","","",119,null],[12,"path","","",119,null],[3,"TypePtr","","A raw pointer type: `*const T` or `*mut T`.",null,null],[12,"star_token","","",120,null],[12,"const_token","","",120,null],[12,"mutability","","",120,null],[12,"elem","","",120,null],[3,"TypeReference","","A reference type: `&\'a T` or `&\'a mut T`.",null,null],[12,"and_token","","",121,null],[12,"lifetime","","",121,null],[12,"mutability","","",121,null],[12,"elem","","",121,null],[3,"TypeSlice","","A dynamically sized slice type: `[T]`.",null,null],[12,"bracket_token","","",122,null],[12,"elem","","",122,null],[3,"TypeTraitObject","","A trait object type `Bound1 + Bound2 + Bound3` where…",null,null],[12,"dyn_token","","",123,null],[12,"bounds","","",123,null],[3,"TypeTuple","","A tuple type: `(A, B, C, String)`.",null,null],[12,"paren_token","","",124,null],[12,"elems","","",124,null],[3,"Variadic","","The variadic argument of a foreign function.",null,null],[12,"attrs","","",125,null],[12,"dots","","",125,null],[3,"FieldPat","","A single field in a struct pattern.",null,null],[12,"attrs","","",126,null],[12,"member","","",126,null],[12,"colon_token","","",126,null],[12,"pat","","",126,null],[3,"PatBox","","A box pattern: `box v`.",null,null],[12,"attrs","","",127,null],[12,"box_token","","",127,null],[12,"pat","","",127,null],[3,"PatIdent","","A pattern that binds a new variable: `ref mut binding @…",null,null],[12,"attrs","","",128,null],[12,"by_ref","","",128,null],[12,"mutability","","",128,null],[12,"ident","","",128,null],[12,"subpat","","",128,null],[3,"PatLit","","A literal pattern: `0`.",null,null],[12,"attrs","","",129,null],[12,"expr","","",129,null],[3,"PatMacro","","A macro in pattern position.",null,null],[12,"attrs","","",130,null],[12,"mac","","",130,null],[3,"PatOr","","A pattern that matches any one of a set of cases.",null,null],[12,"attrs","","",131,null],[12,"leading_vert","","",131,null],[12,"cases","","",131,null],[3,"PatPath","","A path pattern like `Color::Red`, optionally qualified…",null,null],[12,"attrs","","",132,null],[12,"qself","","",132,null],[12,"path","","",132,null],[3,"PatRange","","A range pattern: `1..=2`.",null,null],[12,"attrs","","",133,null],[12,"lo","","",133,null],[12,"limits","","",133,null],[12,"hi","","",133,null],[3,"PatReference","","A reference pattern: `&mut var`.",null,null],[12,"attrs","","",134,null],[12,"and_token","","",134,null],[12,"mutability","","",134,null],[12,"pat","","",134,null],[3,"PatRest","","The dots in a tuple or slice pattern: `[0, 1, ..]`",null,null],[12,"attrs","","",135,null],[12,"dot2_token","","",135,null],[3,"PatSlice","","A dynamically sized slice pattern: `[a, b, ref i @ .., y,…",null,null],[12,"attrs","","",136,null],[12,"bracket_token","","",136,null],[12,"elems","","",136,null],[3,"PatStruct","","A struct or struct variant pattern: `Variant { x, y, .. }`.",null,null],[12,"attrs","","",137,null],[12,"path","","",137,null],[12,"brace_token","","",137,null],[12,"fields","","",137,null],[12,"dot2_token","","",137,null],[3,"PatTuple","","A tuple pattern: `(a, b)`.",null,null],[12,"attrs","","",138,null],[12,"paren_token","","",138,null],[12,"elems","","",138,null],[3,"PatTupleStruct","","A tuple struct or tuple variant pattern: `Variant(x, y,…",null,null],[12,"attrs","","",139,null],[12,"path","","",139,null],[12,"pat","","",139,null],[3,"PatType","","A type ascription pattern: `foo: f64`.",null,null],[12,"attrs","","",140,null],[12,"pat","","",140,null],[12,"colon_token","","",140,null],[12,"ty","","",140,null],[3,"PatWild","","A pattern that matches any value: `_`.",null,null],[12,"attrs","","",141,null],[12,"underscore_token","","",141,null],[3,"AngleBracketedGenericArguments","","Angle bracketed arguments of a path segment: the `<K, V>`…",null,null],[12,"colon2_token","","",142,null],[12,"lt_token","","",142,null],[12,"args","","",142,null],[12,"gt_token","","",142,null],[3,"Binding","","A binding (equality constraint) on an associated type:…",null,null],[12,"ident","","",143,null],[12,"eq_token","","",143,null],[12,"ty","","",143,null],[3,"Constraint","","An associated type bound: `Iterator<Item: Display>`.",null,null],[12,"ident","","",144,null],[12,"colon_token","","",144,null],[12,"bounds","","",144,null],[3,"ParenthesizedGenericArguments","","Arguments of a function path segment: the `(A, B) -> C` in…",null,null],[12,"paren_token","","",145,null],[12,"inputs","","`(A, B)`",145,null],[12,"output","","`C`",145,null],[3,"Path","","A path at which a named item is exported (e.g.…",null,null],[12,"leading_colon","","",146,null],[12,"segments","","",146,null],[3,"PathSegment","","A segment of a path together with any path arguments on…",null,null],[12,"ident","","",147,null],[12,"arguments","","",147,null],[3,"QSelf","","The explicit Self type in a qualified path: the `T` in `<T…",null,null],[12,"lt_token","","",148,null],[12,"ty","","",148,null],[12,"position","","",148,null],[12,"as_token","","",148,null],[12,"gt_token","","",148,null],[3,"Error","","Error returned when a Syn parser cannot parse the input…",null,null],[4,"AttrStyle","","Distinguishes between attributes that decorate an item and…",null,null],[13,"Outer","","",149,null],[13,"Inner","","",149,null],[4,"Meta","","Content of a compile-time structured attribute.",null,null],[13,"Path","","",150,null],[13,"List","","A structured list within an attribute, like `derive(Copy,…",150,null],[13,"NameValue","","A name-value pair within an attribute, like `feature =…",150,null],[4,"NestedMeta","","Element of a compile-time attribute list.",null,null],[13,"Meta","","A structured meta item, like the `Copy` in…",151,null],[13,"Lit","","A Rust literal, like the `\\\"new_name\\\"` in…",151,null],[4,"Fields","","Data stored within an enum variant or struct.",null,null],[13,"Named","","Named fields of a struct or struct variant such as `Point…",152,null],[13,"Unnamed","","Unnamed fields of a tuple struct or tuple variant such as…",152,null],[13,"Unit","","Unit struct or unit variant such as `None`.",152,null],[4,"Visibility","","The visibility level of an item: inherited or `pub` or…",null,null],[13,"Public","","A public visibility level: `pub`.",153,null],[13,"Crate","","A crate-level visibility: `crate`.",153,null],[13,"Restricted","","A visibility level restricted to some path: `pub(self)` or…",153,null],[13,"Inherited","","An inherited visibility, which usually means private.",153,null],[4,"GenericMethodArgument","","An individual generic argument to a method, like `T`.",null,null],[13,"Type","","A type argument.",154,null],[13,"Const","","A const expression. Must be inside of a block.",154,null],[4,"RangeLimits","","Limit types of a range, inclusive or exclusive.",null,null],[13,"HalfOpen","","Inclusive at the beginning, exclusive at the end.",155,null],[13,"Closed","","Inclusive at the beginning and end.",155,null],[4,"Expr","","A Rust expression.",null,null],[13,"Array","","A slice literal expression: `[a, b, c, d]`.",156,null],[13,"Assign","","An assignment expression: `a = compute()`.",156,null],[13,"AssignOp","","A compound assignment expression: `counter += 1`.",156,null],[13,"Async","","An async block: `async { ... }`.",156,null],[13,"Await","","An await expression: `fut.await`.",156,null],[13,"Binary","","A binary operation: `a + b`, `a * b`.",156,null],[13,"Block","","A blocked scope: `{ ... }`.",156,null],[13,"Box","","A box expression: `box f`.",156,null],[13,"Break","","A `break`, with an optional label to break and an optional…",156,null],[13,"Call","","A function call expression: `invoke(a, b)`.",156,null],[13,"Cast","","A cast expression: `foo as f64`.",156,null],[13,"Closure","","A closure expression: `|a, b| a + b`.",156,null],[13,"Continue","","A `continue`, with an optional label.",156,null],[13,"Field","","Access of a named struct field (`obj.k`) or unnamed tuple…",156,null],[13,"ForLoop","","A for loop: `for pat in expr { ... }`.",156,null],[13,"Group","","An expression contained within invisible delimiters.",156,null],[13,"If","","An `if` expression with an optional `else` block: `if expr…",156,null],[13,"Index","","A square bracketed indexing expression: `vector[2]`.",156,null],[13,"Let","","A `let` guard: `let Some(x) = opt`.",156,null],[13,"Lit","","A literal in place of an expression: `1`, `\\\"foo\\\"`.",156,null],[13,"Loop","","Conditionless loop: `loop { ... }`.",156,null],[13,"Macro","","A macro invocation expression: `format!(\\\"{}\\\", q)`.",156,null],[13,"Match","","A `match` expression: `match n { Some(n) => {}, None => {}…",156,null],[13,"MethodCall","","A method call expression: `x.foo::<T>(a, b)`.",156,null],[13,"Paren","","A parenthesized expression: `(a + b)`.",156,null],[13,"Path","","A path like `std::mem::replace` possibly containing…",156,null],[13,"Range","","A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.",156,null],[13,"Reference","","A referencing operation: `&a` or `&mut a`.",156,null],[13,"Repeat","","An array literal constructed from one repeated element:…",156,null],[13,"Return","","A `return`, with an optional value to be returned.",156,null],[13,"Struct","","A struct literal expression: `Point { x: 1, y: 1 }`.",156,null],[13,"Try","","A try-expression: `expr?`.",156,null],[13,"TryBlock","","A try block: `try { ... }`.",156,null],[13,"Tuple","","A tuple expression: `(a, b, c, d)`.",156,null],[13,"Type","","A type ascription expression: `foo: f64`.",156,null],[13,"Unary","","A unary operation: `!x`, `*x`.",156,null],[13,"Unsafe","","An unsafe block: `unsafe { ... }`.",156,null],[13,"Verbatim","","Tokens in expression position not interpreted by Syn.",156,null],[13,"While","","A while loop: `while expr { ... }`.",156,null],[13,"Yield","","A yield expression: `yield expr`.",156,null],[4,"Member","","A struct or tuple struct field accessed in a struct…",null,null],[13,"Named","","A named field like `self.x`.",157,null],[13,"Unnamed","","An unnamed field like `self.0`.",157,null],[4,"GenericParam","","A generic type parameter, lifetime, or const generic: `T:…",null,null],[13,"Type","","A generic type parameter: `T: Into<String>`.",158,null],[13,"Lifetime","","A lifetime definition: `\'a: \'b + \'c + \'d`.",158,null],[13,"Const","","A const generic parameter: `const LENGTH: usize`.",158,null],[4,"TraitBoundModifier","","A modifier on a trait bound, currently only used for the…",null,null],[13,"None","","",159,null],[13,"Maybe","","",159,null],[4,"TypeParamBound","","A trait or lifetime used as a bound on a type parameter.",null,null],[13,"Trait","","",160,null],[13,"Lifetime","","",160,null],[4,"WherePredicate","","A single predicate in a `where` clause: `T:…",null,null],[13,"Type","","A type predicate in a `where` clause: `for<\'c> Foo<\'c>:…",161,null],[13,"Lifetime","","A lifetime predicate in a `where` clause: `\'a: \'b + \'c`.",161,null],[13,"Eq","","An equality predicate in a `where` clause (unsupported).",161,null],[4,"FnArg","","An argument in a function signature: the `n: usize` in `fn…",null,null],[13,"Receiver","","The `self` argument of an associated method, whether taken…",162,null],[13,"Typed","","A function argument accepted by pattern and type.",162,null],[4,"ForeignItem","","An item within an `extern` block.",null,null],[13,"Fn","","A foreign function in an `extern` block.",163,null],[13,"Static","","A foreign static item in an `extern` block: `static ext:…",163,null],[13,"Type","","A foreign type in an `extern` block: `type void`.",163,null],[13,"Macro","","A macro invocation within an extern block.",163,null],[13,"Verbatim","","Tokens in an `extern` block not interpreted by Syn.",163,null],[4,"ImplItem","","An item within an impl block.",null,null],[13,"Const","","An associated constant within an impl block.",164,null],[13,"Method","","A method within an impl block.",164,null],[13,"Type","","An associated type within an impl block.",164,null],[13,"Macro","","A macro invocation within an impl block.",164,null],[13,"Verbatim","","Tokens within an impl block not interpreted by Syn.",164,null],[4,"Item","","Things that can appear directly inside of a module or scope.",null,null],[13,"Const","","A constant item: `const MAX: u16 = 65535`.",165,null],[13,"Enum","","An enum definition: `enum Foo<A, B> { A(A), B(B) }`.",165,null],[13,"ExternCrate","","An `extern crate` item: `extern crate serde`.",165,null],[13,"Fn","","A free-standing function: `fn process(n: usize) ->…",165,null],[13,"ForeignMod","","A block of foreign items: `extern \\\"C\\\" { ... }`.",165,null],[13,"Impl","","An impl block providing trait or associated items:…",165,null],[13,"Macro","","A macro invocation, which includes `macro_rules!`…",165,null],[13,"Macro2","","A 2.0-style declarative macro introduced by the `macro`…",165,null],[13,"Mod","","A module or module declaration: `mod m` or `mod m { ... }`.",165,null],[13,"Static","","A static item: `static BIKE: Shed = Shed(42)`.",165,null],[13,"Struct","","A struct definition: `struct Foo<A> { x: A }`.",165,null],[13,"Trait","","A trait definition: `pub trait Iterator { ... }`.",165,null],[13,"TraitAlias","","A trait alias: `pub trait SharableIterator = Iterator +…",165,null],[13,"Type","","A type alias: `type Result<T> = std::result::Result<T,…",165,null],[13,"Union","","A union definition: `union Foo<A, B> { x: A, y: B }`.",165,null],[13,"Use","","A use declaration: `use std::collections::HashMap`.",165,null],[13,"Verbatim","","Tokens forming an item not interpreted by Syn.",165,null],[4,"TraitItem","","An item declaration within the definition of a trait.",null,null],[13,"Const","","An associated constant within the definition of a trait.",166,null],[13,"Method","","A trait method within the definition of a trait.",166,null],[13,"Type","","An associated type within the definition of a trait.",166,null],[13,"Macro","","A macro invocation within the definition of a trait.",166,null],[13,"Verbatim","","Tokens within the definition of a trait not interpreted by…",166,null],[4,"UseTree","","A suffix of an import tree in a `use` item: `Type as…",null,null],[13,"Path","","A path prefix of imports in a `use` item: `std::...`.",167,null],[13,"Name","","An identifier imported by a `use` item: `HashMap`.",167,null],[13,"Rename","","An renamed identifier imported by a `use` item: `HashMap…",167,null],[13,"Glob","","A glob import in a `use` item: `*`.",167,null],[13,"Group","","A braced group of imports in a `use` item: `{A, B, C}`.",167,null],[4,"Lit","","A Rust literal such as a string or integer or boolean.",null,null],[13,"Str","","A UTF-8 string literal: `\\\"foo\\\"`.",168,null],[13,"ByteStr","","A byte string literal: `b\\\"foo\\\"`.",168,null],[13,"Byte","","A byte literal: `b\'f\'`.",168,null],[13,"Char","","A character literal: `\'a\'`.",168,null],[13,"Int","","An integer literal: `1` or `1u16`.",168,null],[13,"Float","","A floating point literal: `1f64` or `1.0e10f64`.",168,null],[13,"Bool","","A boolean literal: `true` or `false`.",168,null],[13,"Verbatim","","A raw token literal not interpreted by Syn.",168,null],[4,"StrStyle","","The style of a string literal, either plain quoted or a…",null,null],[13,"Cooked","","An ordinary string like `\\\"data\\\"`.",169,null],[13,"Raw","","A raw string like `r##\\\"data\\\"##`.",169,null],[4,"MacroDelimiter","","A grouping token that surrounds a macro body: `m!(...)` or…",null,null],[13,"Paren","","",170,null],[13,"Brace","","",170,null],[13,"Bracket","","",170,null],[4,"Data","","The storage of a struct, enum or union data structure.",null,null],[13,"Struct","","A struct input to a `proc_macro_derive` macro.",171,null],[13,"Enum","","An enum input to a `proc_macro_derive` macro.",171,null],[13,"Union","","An untagged union input to a `proc_macro_derive` macro.",171,null],[4,"BinOp","","A binary operator: `+`, `+=`, `&`.",null,null],[13,"Add","","The `+` operator (addition)",172,null],[13,"Sub","","The `-` operator (subtraction)",172,null],[13,"Mul","","The `*` operator (multiplication)",172,null],[13,"Div","","The `/` operator (division)",172,null],[13,"Rem","","The `%` operator (modulus)",172,null],[13,"And","","The `&&` operator (logical and)",172,null],[13,"Or","","The `||` operator (logical or)",172,null],[13,"BitXor","","The `^` operator (bitwise xor)",172,null],[13,"BitAnd","","The `&` operator (bitwise and)",172,null],[13,"BitOr","","The `|` operator (bitwise or)",172,null],[13,"Shl","","The `<<` operator (shift left)",172,null],[13,"Shr","","The `>>` operator (shift right)",172,null],[13,"Eq","","The `==` operator (equality)",172,null],[13,"Lt","","The `<` operator (less than)",172,null],[13,"Le","","The `<=` operator (less than or equal to)",172,null],[13,"Ne","","The `!=` operator (not equal to)",172,null],[13,"Ge","","The `>=` operator (greater than or equal to)",172,null],[13,"Gt","","The `>` operator (greater than)",172,null],[13,"AddEq","","The `+=` operator",172,null],[13,"SubEq","","The `-=` operator",172,null],[13,"MulEq","","The `*=` operator",172,null],[13,"DivEq","","The `/=` operator",172,null],[13,"RemEq","","The `%=` operator",172,null],[13,"BitXorEq","","The `^=` operator",172,null],[13,"BitAndEq","","The `&=` operator",172,null],[13,"BitOrEq","","The `|=` operator",172,null],[13,"ShlEq","","The `<<=` operator",172,null],[13,"ShrEq","","The `>>=` operator",172,null],[4,"UnOp","","A unary operator: `*`, `!`, `-`.",null,null],[13,"Deref","","The `*` operator for dereferencing",173,null],[13,"Not","","The `!` operator for logical inversion",173,null],[13,"Neg","","The `-` operator for negation",173,null],[4,"Stmt","","A statement, usually ending in a semicolon.",null,null],[13,"Local","","A local (let) binding.",174,null],[13,"Item","","An item definition.",174,null],[13,"Expr","","Expr without trailing semicolon.",174,null],[13,"Semi","","Expression with trailing semicolon.",174,null],[4,"ReturnType","","Return type of a function signature.",null,null],[13,"Default","","Return type is not specified.",175,null],[13,"Type","","A particular type is returned.",175,null],[4,"Type","","The possible types that a Rust value could have.",null,null],[13,"Array","","A fixed size array type: `[T; n]`.",176,null],[13,"BareFn","","A bare function type: `fn(usize) -> bool`.",176,null],[13,"Group","","A type contained within invisible delimiters.",176,null],[13,"ImplTrait","","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a…",176,null],[13,"Infer","","Indication that a type should be inferred by the compiler:…",176,null],[13,"Macro","","A macro in the type position.",176,null],[13,"Never","","The never type: `!`.",176,null],[13,"Paren","","A parenthesized type equivalent to the inner type.",176,null],[13,"Path","","A path like `std::slice::Iter`, optionally qualified with…",176,null],[13,"Ptr","","A raw pointer type: `*const T` or `*mut T`.",176,null],[13,"Reference","","A reference type: `&\'a T` or `&\'a mut T`.",176,null],[13,"Slice","","A dynamically sized slice type: `[T]`.",176,null],[13,"TraitObject","","A trait object type `Bound1 + Bound2 + Bound3` where…",176,null],[13,"Tuple","","A tuple type: `(A, B, C, String)`.",176,null],[13,"Verbatim","","Tokens in type position not interpreted by Syn.",176,null],[4,"Pat","","A pattern in a local binding, function signature, match…",null,null],[13,"Box","","A box pattern: `box v`.",177,null],[13,"Ident","","A pattern that binds a new variable: `ref mut binding @…",177,null],[13,"Lit","","A literal pattern: `0`.",177,null],[13,"Macro","","A macro in pattern position.",177,null],[13,"Or","","A pattern that matches any one of a set of cases.",177,null],[13,"Path","","A path pattern like `Color::Red`, optionally qualified…",177,null],[13,"Range","","A range pattern: `1..=2`.",177,null],[13,"Reference","","A reference pattern: `&mut var`.",177,null],[13,"Rest","","The dots in a tuple or slice pattern: `[0, 1, ..]`",177,null],[13,"Slice","","A dynamically sized slice pattern: `[a, b, ref i @ .., y,…",177,null],[13,"Struct","","A struct or struct variant pattern: `Variant { x, y, .. }`.",177,null],[13,"Tuple","","A tuple pattern: `(a, b)`.",177,null],[13,"TupleStruct","","A tuple struct or tuple variant pattern: `Variant(x, y,…",177,null],[13,"Type","","A type ascription pattern: `foo: f64`.",177,null],[13,"Verbatim","","Tokens in pattern position not interpreted by Syn.",177,null],[13,"Wild","","A pattern that matches any value: `_`.",177,null],[4,"GenericArgument","","An individual generic argument, like `\'a`, `T`, or `Item =…",null,null],[13,"Lifetime","","A lifetime argument.",178,null],[13,"Type","","A type argument.",178,null],[13,"Binding","","A binding (equality constraint) on an associated type: the…",178,null],[13,"Constraint","","An associated type bound: `Iterator<Item: Display>`.",178,null],[13,"Const","","A const expression. Must be inside of a block.",178,null],[4,"PathArguments","","Angle bracketed or parenthesized arguments of a path…",null,null],[13,"None","","",179,null],[13,"AngleBracketed","","The `<\'a, T>` in `std::slice::iter<\'a, T>`.",179,null],[13,"Parenthesized","","The `(A, B) -> C` in `Fn(A, B) -> C`.",179,null],[5,"parse","","Parse tokens of source code into the chosen syntax tree…",null,[[["tokenstream",3]],[["result",6],["parse",8]]]],[5,"parse2","","Parse a proc-macro2 token stream into the chosen syntax…",null,[[["tokenstream",3]],[["result",6],["parse",8]]]],[5,"parse_str","","Parse a string of Rust code into the chosen syntax tree…",null,[[],[["result",6],["parse",8]]]],[5,"parse_file","","Parse the content of a file of Rust code.",null,[[],[["result",6],["file",3]]]],[0,"token","","Tokens representing Rust punctuation, keywords, and…",null,null],[3,"Underscore","syn::token","`_`",null,null],[12,"spans","","",180,null],[3,"Abstract","","`abstract`",null,null],[12,"span","","",181,null],[3,"As","","`as`",null,null],[12,"span","","",182,null],[3,"Async","","`async`",null,null],[12,"span","","",183,null],[3,"Auto","","`auto`",null,null],[12,"span","","",184,null],[3,"Await","","`await`",null,null],[12,"span","","",185,null],[3,"Become","","`become`",null,null],[12,"span","","",186,null],[3,"Box","","`box`",null,null],[12,"span","","",187,null],[3,"Break","","`break`",null,null],[12,"span","","",188,null],[3,"Const","","`const`",null,null],[12,"span","","",189,null],[3,"Continue","","`continue`",null,null],[12,"span","","",190,null],[3,"Crate","","`crate`",null,null],[12,"span","","",191,null],[3,"Default","","`default`",null,null],[12,"span","","",192,null],[3,"Do","","`do`",null,null],[12,"span","","",193,null],[3,"Dyn","","`dyn`",null,null],[12,"span","","",194,null],[3,"Else","","`else`",null,null],[12,"span","","",195,null],[3,"Enum","","`enum`",null,null],[12,"span","","",196,null],[3,"Extern","","`extern`",null,null],[12,"span","","",197,null],[3,"Final","","`final`",null,null],[12,"span","","",198,null],[3,"Fn","","`fn`",null,null],[12,"span","","",199,null],[3,"For","","`for`",null,null],[12,"span","","",200,null],[3,"If","","`if`",null,null],[12,"span","","",201,null],[3,"Impl","","`impl`",null,null],[12,"span","","",202,null],[3,"In","","`in`",null,null],[12,"span","","",203,null],[3,"Let","","`let`",null,null],[12,"span","","",204,null],[3,"Loop","","`loop`",null,null],[12,"span","","",205,null],[3,"Macro","","`macro`",null,null],[12,"span","","",206,null],[3,"Match","","`match`",null,null],[12,"span","","",207,null],[3,"Mod","","`mod`",null,null],[12,"span","","",208,null],[3,"Move","","`move`",null,null],[12,"span","","",209,null],[3,"Mut","","`mut`",null,null],[12,"span","","",210,null],[3,"Override","","`override`",null,null],[12,"span","","",211,null],[3,"Priv","","`priv`",null,null],[12,"span","","",212,null],[3,"Pub","","`pub`",null,null],[12,"span","","",213,null],[3,"Ref","","`ref`",null,null],[12,"span","","",214,null],[3,"Return","","`return`",null,null],[12,"span","","",215,null],[3,"SelfType","","`Self`",null,null],[12,"span","","",216,null],[3,"SelfValue","","`self`",null,null],[12,"span","","",217,null],[3,"Static","","`static`",null,null],[12,"span","","",218,null],[3,"Struct","","`struct`",null,null],[12,"span","","",219,null],[3,"Super","","`super`",null,null],[12,"span","","",220,null],[3,"Trait","","`trait`",null,null],[12,"span","","",221,null],[3,"Try","","`try`",null,null],[12,"span","","",222,null],[3,"Type","","`type`",null,null],[12,"span","","",223,null],[3,"Typeof","","`typeof`",null,null],[12,"span","","",224,null],[3,"Union","","`union`",null,null],[12,"span","","",225,null],[3,"Unsafe","","`unsafe`",null,null],[12,"span","","",226,null],[3,"Unsized","","`unsized`",null,null],[12,"span","","",227,null],[3,"Use","","`use`",null,null],[12,"span","","",228,null],[3,"Virtual","","`virtual`",null,null],[12,"span","","",229,null],[3,"Where","","`where`",null,null],[12,"span","","",230,null],[3,"While","","`while`",null,null],[12,"span","","",231,null],[3,"Yield","","`yield`",null,null],[12,"span","","",232,null],[3,"Add","","`+`",null,null],[12,"spans","","",233,null],[3,"AddEq","","`+=`",null,null],[12,"spans","","",234,null],[3,"And","","`&`",null,null],[12,"spans","","",235,null],[3,"AndAnd","","`&&`",null,null],[12,"spans","","",236,null],[3,"AndEq","","`&=`",null,null],[12,"spans","","",237,null],[3,"At","","`@`",null,null],[12,"spans","","",238,null],[3,"Bang","","`!`",null,null],[12,"spans","","",239,null],[3,"Caret","","`^`",null,null],[12,"spans","","",240,null],[3,"CaretEq","","`^=`",null,null],[12,"spans","","",241,null],[3,"Colon","","`:`",null,null],[12,"spans","","",242,null],[3,"Colon2","","`::`",null,null],[12,"spans","","",243,null],[3,"Comma","","`,`",null,null],[12,"spans","","",244,null],[3,"Div","","`/`",null,null],[12,"spans","","",245,null],[3,"DivEq","","`/=`",null,null],[12,"spans","","",246,null],[3,"Dollar","","`$`",null,null],[12,"spans","","",247,null],[3,"Dot","","`.`",null,null],[12,"spans","","",248,null],[3,"Dot2","","`..`",null,null],[12,"spans","","",249,null],[3,"Dot3","","`...`",null,null],[12,"spans","","",250,null],[3,"DotDotEq","","`..=`",null,null],[12,"spans","","",251,null],[3,"Eq","","`=`",null,null],[12,"spans","","",252,null],[3,"EqEq","","`==`",null,null],[12,"spans","","",253,null],[3,"Ge","","`>=`",null,null],[12,"spans","","",254,null],[3,"Gt","","`>`",null,null],[12,"spans","","",255,null],[3,"Le","","`<=`",null,null],[12,"spans","","",256,null],[3,"Lt","","`<`",null,null],[12,"spans","","",257,null],[3,"MulEq","","`*=`",null,null],[12,"spans","","",258,null],[3,"Ne","","`!=`",null,null],[12,"spans","","",259,null],[3,"Or","","`|`",null,null],[12,"spans","","",260,null],[3,"OrEq","","`|=`",null,null],[12,"spans","","",261,null],[3,"OrOr","","`||`",null,null],[12,"spans","","",262,null],[3,"Pound","","`#`",null,null],[12,"spans","","",263,null],[3,"Question","","`?`",null,null],[12,"spans","","",264,null],[3,"RArrow","","`->`",null,null],[12,"spans","","",265,null],[3,"LArrow","","`<-`",null,null],[12,"spans","","",266,null],[3,"Rem","","`%`",null,null],[12,"spans","","",267,null],[3,"RemEq","","`%=`",null,null],[12,"spans","","",268,null],[3,"FatArrow","","`=>`",null,null],[12,"spans","","",269,null],[3,"Semi","","`;`",null,null],[12,"spans","","",270,null],[3,"Shl","","`<<`",null,null],[12,"spans","","",271,null],[3,"ShlEq","","`<<=`",null,null],[12,"spans","","",272,null],[3,"Shr","","`>>`",null,null],[12,"spans","","",273,null],[3,"ShrEq","","`>>=`",null,null],[12,"spans","","",274,null],[3,"Star","","`*`",null,null],[12,"spans","","",275,null],[3,"Sub","","`-`",null,null],[12,"spans","","",276,null],[3,"SubEq","","`-=`",null,null],[12,"spans","","",277,null],[3,"Tilde","","`~`",null,null],[12,"spans","","",278,null],[3,"Brace","","`{...}`",null,null],[12,"span","","",279,null],[3,"Bracket","","`[...]`",null,null],[12,"span","","",280,null],[3,"Paren","","`(...)`",null,null],[12,"span","","",281,null],[3,"Group","","None-delimited group",null,null],[12,"span","","",282,null],[8,"Token","","Marker trait for types that represent single tokens.",null,null],[11,"surround","","",279,[[["tokenstream",3]]]],[11,"surround","","",280,[[["tokenstream",3]]]],[11,"surround","","",281,[[["tokenstream",3]]]],[11,"surround","","",282,[[["tokenstream",3]]]],[11,"parse_meta","syn","Parses the content of the attribute, consisting of the…",0,[[],[["meta",4],["result",6]]]],[11,"parse_args","","Parse the arguments to the attribute as a syntax tree.",0,[[],[["result",6],["parse",8]]]],[11,"parse_args_with","","Parse the arguments to the attribute using the given parser.",0,[[["parser",8]],["result",6]]],[11,"parse_outer","","Parses zero or more outer attributes from the stream.",0,[[["parsestream",6]],[["result",6],["vec",3]]]],[11,"parse_inner","","Parses zero or more inner attributes from the stream.",0,[[["parsestream",6]],[["result",6],["vec",3]]]],[11,"path","","Returns the identifier that begins this structured meta…",150,[[],["path",3]]],[11,"parse_named","","Parses a named (braced struct) field.",3,[[["parsestream",6]],["result",6]]],[11,"parse_unnamed","","Parses an unnamed (tuple struct) field.",3,[[["parsestream",6]],["result",6]]],[11,"iter","","Get an iterator over the borrowed [`Field`] items in this…",152,[[],[["iter",3],["field",3]]]],[11,"iter_mut","","Get an iterator over the mutably borrowed [`Field`] items…",152,[[],[["itermut",3],["field",3]]]],[11,"len","","Returns the number of fields.",152,[[]]],[11,"is_empty","","Returns `true` if there are zero fields.",152,[[]]],[11,"parse_without_eager_brace","","An alternative to the primary `Expr::parse` parser (from…",156,[[["parsestream",6]],[["result",6],["expr",4]]]],[11,"type_params","","Returns an Iterator<Item = &TypeParam> over the type…",56,[[],["typeparams",3]]],[11,"type_params_mut","","Returns an Iterator<Item = &mut TypeParam> over the type…",56,[[],["typeparamsmut",3]]],[11,"lifetimes","","Returns an Iterator<Item = &LifetimeDef> over the lifetime…",56,[[],["lifetimes",3]]],[11,"lifetimes_mut","","Returns an Iterator<Item = &mut LifetimeDef> over the…",56,[[],["lifetimesmut",3]]],[11,"const_params","","Returns an Iterator<Item = &ConstParam> over the constant…",56,[[],["constparams",3]]],[11,"const_params_mut","","Returns an Iterator<Item = &mut ConstParam> over the…",56,[[],["constparamsmut",3]]],[11,"make_where_clause","","Initializes an empty `where`-clause if there is not one…",56,[[],["whereclause",3]]],[11,"split_for_impl","","Split a type\'s generics into the pieces required for…",56,[[]]],[11,"as_turbofish","","Turn a type\'s generics like `<X, Y>` into a turbofish like…",283,[[],["turbofish",3]]],[11,"new","","",57,[[["lifetime",3]]]],[11,"receiver","","A method\'s `self` receiver, such as `&self` or `self:…",89,[[],[["option",4],["fnarg",4]]]],[11,"lifetime","","",88,[[],[["lifetime",3],["option",4]]]],[11,"new","","PanicsPanics if the lifetime does not conform to the…",100,[[["span",3]]]],[11,"new","","Interpret a Syn literal from a proc-macro2 literal.",168,[[["literal",3]]]],[11,"suffix","","",168,[[]]],[11,"span","","",168,[[],["span",3]]],[11,"set_span","","",168,[[["span",3]]]],[11,"new","","",284,[[["span",3]]]],[11,"value","","",284,[[],["string",3]]],[11,"parse","","Parse a syntax tree node from the content of this string…",284,[[],[["result",6],["parse",8]]]],[11,"parse_with","","Invoke parser on the content of this string literal.",284,[[["parser",8]],["result",6]]],[11,"span","","",284,[[],["span",3]]],[11,"set_span","","",284,[[["span",3]]]],[11,"suffix","","",284,[[]]],[11,"new","","",285,[[["span",3]]]],[11,"value","","",285,[[],["vec",3]]],[11,"span","","",285,[[],["span",3]]],[11,"set_span","","",285,[[["span",3]]]],[11,"suffix","","",285,[[]]],[11,"new","","",286,[[["span",3]]]],[11,"value","","",286,[[]]],[11,"span","","",286,[[],["span",3]]],[11,"set_span","","",286,[[["span",3]]]],[11,"suffix","","",286,[[]]],[11,"new","","",287,[[["span",3]]]],[11,"value","","",287,[[]]],[11,"span","","",287,[[],["span",3]]],[11,"set_span","","",287,[[["span",3]]]],[11,"suffix","","",287,[[]]],[11,"new","","",288,[[["span",3]]]],[11,"base10_digits","","",288,[[]]],[11,"base10_parse","","Parses the literal into a selected number type.",288,[[],["result",6]]],[11,"suffix","","",288,[[]]],[11,"span","","",288,[[],["span",3]]],[11,"set_span","","",288,[[["span",3]]]],[11,"new","","",289,[[["span",3]]]],[11,"base10_digits","","",289,[[]]],[11,"base10_parse","","",289,[[],["result",6]]],[11,"suffix","","",289,[[]]],[11,"span","","",289,[[],["span",3]]],[11,"set_span","","",289,[[["span",3]]]],[11,"parse_body","","Parse the tokens within the macro invocation\'s delimiters…",102,[[],[["result",6],["parse",8]]]],[11,"parse_body_with","","Parse the tokens within the macro invocation\'s delimiters…",102,[[["parser",8]],["result",6]]],[11,"parse_within","","Parse the body of a block as zero or more statements,…",107,[[["parsestream",6]],[["vec",3],["result",6]]]],[11,"without_plus","","In some positions, types may not contain the `+`…",176,[[["parsestream",6]],["result",6]]],[11,"without_plus","","",175,[[["parsestream",6]],["result",6]]],[11,"without_plus","","",123,[[["parsestream",6]],["result",6]]],[11,"parse_mod_style","","Parse a `Path` containing no path arguments on any of its…",146,[[["parsestream",6]],["result",6]]],[11,"is_ident","","Determines whether this is a path of length 1 equal to the…",146,[[]]],[11,"get_ident","","If this path consists of a single ident, returns the ident.",146,[[],[["ident",3],["option",4]]]],[11,"is_empty","","",179,[[]]],[0,"buffer","","A stably addressed token buffer supporting efficient…",null,null],[3,"TokenBuffer","syn::buffer","A buffer that can be efficiently traversed multiple times,…",null,null],[3,"Cursor","","A cheaply copyable cursor into a `TokenBuffer`.",null,null],[11,"new","","Creates a `TokenBuffer` containing all the tokens from the…",290,[[["tokenstream",3]],["tokenbuffer",3]]],[11,"new2","","Creates a `TokenBuffer` containing all the tokens from the…",290,[[["tokenstream",3]],["tokenbuffer",3]]],[11,"begin","","Creates a cursor referencing the first token in the buffer…",290,[[],["cursor",3]]],[11,"empty","","Creates a cursor referencing a static empty TokenStream.",291,[[]]],[11,"eof","","Checks whether the cursor is currently pointing at the end…",291,[[]]],[11,"group","","If the cursor is pointing at a `Group` with the given…",291,[[["delimiter",4]],["option",4]]],[11,"ident","","If the cursor is pointing at a `Ident`, returns it along…",291,[[],["option",4]]],[11,"punct","","If the cursor is pointing at an `Punct`, returns it along…",291,[[],["option",4]]],[11,"literal","","If the cursor is pointing at a `Literal`, return it along…",291,[[],["option",4]]],[11,"lifetime","","If the cursor is pointing at a `Lifetime`, returns it…",291,[[],["option",4]]],[11,"token_stream","","Copies all remaining tokens visible from this cursor into…",291,[[],["tokenstream",3]]],[11,"token_tree","","If the cursor is pointing at a `TokenTree`, returns it…",291,[[],["option",4]]],[11,"span","","Returns the `Span` of the current token, or…",291,[[],["span",3]]],[0,"ext","syn","Extension traits to provide parsing methods on foreign…",null,null],[8,"IdentExt","syn::ext","Additional methods for `Ident` not provided by proc-macro2…",null,null],[10,"parse_any","","Parses any identifier including keywords.",292,[[["parsestream",6]],["result",6]]],[18,"peek_any","","Peeks any identifier including keywords. Usage:…",292,null],[10,"unraw","","Strips the raw marker `r#`, if any, from the beginning of…",292,[[],["ident",3]]],[0,"punctuated","syn","A punctuated sequence of syntax tree nodes separated by…",null,null],[3,"Punctuated","syn::punctuated","A punctuated sequence of syntax tree nodes of type `T`…",null,null],[3,"Pairs","","An iterator over borrowed pairs of type `Pair<&T, &P>`.",null,null],[3,"PairsMut","","An iterator over mutably borrowed pairs of type `Pair<&mut…",null,null],[3,"IntoPairs","","An iterator over owned pairs of type `Pair<T, P>`.",null,null],[3,"IntoIter","","An iterator over owned values of type `T`.",null,null],[3,"Iter","","An iterator over borrowed values of type `&T`.",null,null],[3,"IterMut","","An iterator over mutably borrowed values of type `&mut T`.",null,null],[4,"Pair","","A single syntax tree node of type `T` followed by its…",null,null],[13,"Punctuated","","",293,null],[13,"End","","",293,null],[11,"new","","Creates an empty punctuated sequence.",294,[[],["punctuated",3]]],[11,"is_empty","","Determines whether this punctuated sequence is empty,…",294,[[]]],[11,"len","","Returns the number of syntax tree nodes in this punctuated…",294,[[]]],[11,"first","","Borrows the first element in this sequence.",294,[[],["option",4]]],[11,"first_mut","","Mutably borrows the first element in this sequence.",294,[[],["option",4]]],[11,"last","","Borrows the last element in this sequence.",294,[[],["option",4]]],[11,"last_mut","","Mutably borrows the last element in this sequence.",294,[[],["option",4]]],[11,"iter","","Returns an iterator over borrowed syntax tree nodes of…",294,[[],["iter",3]]],[11,"iter_mut","","Returns an iterator over mutably borrowed syntax tree…",294,[[],["itermut",3]]],[11,"pairs","","Returns an iterator over the contents of this sequence as…",294,[[],["pairs",3]]],[11,"pairs_mut","","Returns an iterator over the contents of this sequence as…",294,[[],["pairsmut",3]]],[11,"into_pairs","","Returns an iterator over the contents of this sequence as…",294,[[],["intopairs",3]]],[11,"push_value","","Appends a syntax tree node onto the end of this punctuated…",294,[[]]],[11,"push_punct","","Appends a trailing punctuation onto the end of this…",294,[[]]],[11,"pop","","Removes the last punctuated pair from this sequence, or…",294,[[],[["pair",4],["option",4]]]],[11,"trailing_punct","","Determines whether this punctuated sequence ends with a…",294,[[]]],[11,"empty_or_trailing","","Returns true if either this `Punctuated` is empty, or it…",294,[[]]],[11,"push","","Appends a syntax tree node onto the end of this punctuated…",294,[[]]],[11,"insert","","Inserts an element at position `index`.",294,[[]]],[11,"clear","","Clears the sequence of all values and punctuation, making…",294,[[]]],[11,"parse_terminated","","Parses zero or more occurrences of `T` separated by…",294,[[["parsestream",6]],["result",6]]],[11,"parse_terminated_with","","Parses zero or more occurrences of `T` using the given…",294,[[["parsestream",6]],["result",6]]],[11,"parse_separated_nonempty","","Parses one or more occurrences of `T` separated by…",294,[[["parsestream",6]],["result",6]]],[11,"parse_separated_nonempty_with","","Parses one or more occurrences of `T` using the given…",294,[[["parsestream",6]],["result",6]]],[11,"into_value","","Extracts the syntax tree node from this punctuated pair,…",293,[[]]],[11,"value","","Borrows the syntax tree node from this punctuated pair.",293,[[]]],[11,"value_mut","","Mutably borrows the syntax tree node from this punctuated…",293,[[]]],[11,"punct","","Borrows the punctuation from this punctuated pair, unless…",293,[[],["option",4]]],[11,"new","","Creates a punctuated pair out of a syntax tree node and an…",293,[[["option",4]]]],[11,"into_tuple","","Produces this punctuated pair as a tuple of syntax tree…",293,[[]]],[0,"spanned","syn","A trait that can provide the `Span` of the complete…",null,null],[8,"Spanned","syn::spanned","A trait that can provide the `Span` of the complete…",null,null],[10,"span","","Returns a `Span` covering the complete contents of this…",295,[[],["span",3]]],[0,"visit","syn","Syntax tree traversal to walk a shared borrow of a syntax…",null,null],[5,"visit_abi","syn::visit","",null,[[["abi",3]]]],[5,"visit_angle_bracketed_generic_arguments","","",null,[[["anglebracketedgenericarguments",3]]]],[5,"visit_arm","","",null,[[["arm",3]]]],[5,"visit_attr_style","","",null,[[["attrstyle",4]]]],[5,"visit_attribute","","",null,[[["attribute",3]]]],[5,"visit_bare_fn_arg","","",null,[[["barefnarg",3]]]],[5,"visit_bin_op","","",null,[[["binop",4]]]],[5,"visit_binding","","",null,[[["binding",3]]]],[5,"visit_block","","",null,[[["block",3]]]],[5,"visit_bound_lifetimes","","",null,[[["boundlifetimes",3]]]],[5,"visit_const_param","","",null,[[["constparam",3]]]],[5,"visit_constraint","","",null,[[["constraint",3]]]],[5,"visit_data","","",null,[[["data",4]]]],[5,"visit_data_enum","","",null,[[["dataenum",3]]]],[5,"visit_data_struct","","",null,[[["datastruct",3]]]],[5,"visit_data_union","","",null,[[["dataunion",3]]]],[5,"visit_derive_input","","",null,[[["deriveinput",3]]]],[5,"visit_expr","","",null,[[["expr",4]]]],[5,"visit_expr_array","","",null,[[["exprarray",3]]]],[5,"visit_expr_assign","","",null,[[["exprassign",3]]]],[5,"visit_expr_assign_op","","",null,[[["exprassignop",3]]]],[5,"visit_expr_async","","",null,[[["exprasync",3]]]],[5,"visit_expr_await","","",null,[[["exprawait",3]]]],[5,"visit_expr_binary","","",null,[[["exprbinary",3]]]],[5,"visit_expr_block","","",null,[[["exprblock",3]]]],[5,"visit_expr_box","","",null,[[["exprbox",3]]]],[5,"visit_expr_break","","",null,[[["exprbreak",3]]]],[5,"visit_expr_call","","",null,[[["exprcall",3]]]],[5,"visit_expr_cast","","",null,[[["exprcast",3]]]],[5,"visit_expr_closure","","",null,[[["exprclosure",3]]]],[5,"visit_expr_continue","","",null,[[["exprcontinue",3]]]],[5,"visit_expr_field","","",null,[[["exprfield",3]]]],[5,"visit_expr_for_loop","","",null,[[["exprforloop",3]]]],[5,"visit_expr_group","","",null,[[["exprgroup",3]]]],[5,"visit_expr_if","","",null,[[["exprif",3]]]],[5,"visit_expr_index","","",null,[[["exprindex",3]]]],[5,"visit_expr_let","","",null,[[["exprlet",3]]]],[5,"visit_expr_lit","","",null,[[["exprlit",3]]]],[5,"visit_expr_loop","","",null,[[["exprloop",3]]]],[5,"visit_expr_macro","","",null,[[["exprmacro",3]]]],[5,"visit_expr_match","","",null,[[["exprmatch",3]]]],[5,"visit_expr_method_call","","",null,[[["exprmethodcall",3]]]],[5,"visit_expr_paren","","",null,[[["exprparen",3]]]],[5,"visit_expr_path","","",null,[[["exprpath",3]]]],[5,"visit_expr_range","","",null,[[["exprrange",3]]]],[5,"visit_expr_reference","","",null,[[["exprreference",3]]]],[5,"visit_expr_repeat","","",null,[[["exprrepeat",3]]]],[5,"visit_expr_return","","",null,[[["exprreturn",3]]]],[5,"visit_expr_struct","","",null,[[["exprstruct",3]]]],[5,"visit_expr_try","","",null,[[["exprtry",3]]]],[5,"visit_expr_try_block","","",null,[[["exprtryblock",3]]]],[5,"visit_expr_tuple","","",null,[[["exprtuple",3]]]],[5,"visit_expr_type","","",null,[[["exprtype",3]]]],[5,"visit_expr_unary","","",null,[[["exprunary",3]]]],[5,"visit_expr_unsafe","","",null,[[["exprunsafe",3]]]],[5,"visit_expr_while","","",null,[[["exprwhile",3]]]],[5,"visit_expr_yield","","",null,[[["expryield",3]]]],[5,"visit_field","","",null,[[["field",3]]]],[5,"visit_field_pat","","",null,[[["fieldpat",3]]]],[5,"visit_field_value","","",null,[[["fieldvalue",3]]]],[5,"visit_fields","","",null,[[["fields",4]]]],[5,"visit_fields_named","","",null,[[["fieldsnamed",3]]]],[5,"visit_fields_unnamed","","",null,[[["fieldsunnamed",3]]]],[5,"visit_file","","",null,[[["file",3]]]],[5,"visit_fn_arg","","",null,[[["fnarg",4]]]],[5,"visit_foreign_item","","",null,[[["foreignitem",4]]]],[5,"visit_foreign_item_fn","","",null,[[["foreignitemfn",3]]]],[5,"visit_foreign_item_macro","","",null,[[["foreignitemmacro",3]]]],[5,"visit_foreign_item_static","","",null,[[["foreignitemstatic",3]]]],[5,"visit_foreign_item_type","","",null,[[["foreignitemtype",3]]]],[5,"visit_generic_argument","","",null,[[["genericargument",4]]]],[5,"visit_generic_method_argument","","",null,[[["genericmethodargument",4]]]],[5,"visit_generic_param","","",null,[[["genericparam",4]]]],[5,"visit_generics","","",null,[[["generics",3]]]],[5,"visit_ident","","",null,[[["ident",3]]]],[5,"visit_impl_item","","",null,[[["implitem",4]]]],[5,"visit_impl_item_const","","",null,[[["implitemconst",3]]]],[5,"visit_impl_item_macro","","",null,[[["implitemmacro",3]]]],[5,"visit_impl_item_method","","",null,[[["implitemmethod",3]]]],[5,"visit_impl_item_type","","",null,[[["implitemtype",3]]]],[5,"visit_index","","",null,[[["index",3]]]],[5,"visit_item","","",null,[[["item",4]]]],[5,"visit_item_const","","",null,[[["itemconst",3]]]],[5,"visit_item_enum","","",null,[[["itemenum",3]]]],[5,"visit_item_extern_crate","","",null,[[["itemexterncrate",3]]]],[5,"visit_item_fn","","",null,[[["itemfn",3]]]],[5,"visit_item_foreign_mod","","",null,[[["itemforeignmod",3]]]],[5,"visit_item_impl","","",null,[[["itemimpl",3]]]],[5,"visit_item_macro","","",null,[[["itemmacro",3]]]],[5,"visit_item_macro2","","",null,[[["itemmacro2",3]]]],[5,"visit_item_mod","","",null,[[["itemmod",3]]]],[5,"visit_item_static","","",null,[[["itemstatic",3]]]],[5,"visit_item_struct","","",null,[[["itemstruct",3]]]],[5,"visit_item_trait","","",null,[[["itemtrait",3]]]],[5,"visit_item_trait_alias","","",null,[[["itemtraitalias",3]]]],[5,"visit_item_type","","",null,[[["itemtype",3]]]],[5,"visit_item_union","","",null,[[["itemunion",3]]]],[5,"visit_item_use","","",null,[[["itemuse",3]]]],[5,"visit_label","","",null,[[["label",3]]]],[5,"visit_lifetime","","",null,[[["lifetime",3]]]],[5,"visit_lifetime_def","","",null,[[["lifetimedef",3]]]],[5,"visit_lit","","",null,[[["lit",4]]]],[5,"visit_lit_bool","","",null,[[["litbool",3]]]],[5,"visit_lit_byte","","",null,[[["litbyte",3]]]],[5,"visit_lit_byte_str","","",null,[[["litbytestr",3]]]],[5,"visit_lit_char","","",null,[[["litchar",3]]]],[5,"visit_lit_float","","",null,[[["litfloat",3]]]],[5,"visit_lit_int","","",null,[[["litint",3]]]],[5,"visit_lit_str","","",null,[[["litstr",3]]]],[5,"visit_local","","",null,[[["local",3]]]],[5,"visit_macro","","",null,[[["macro",3]]]],[5,"visit_macro_delimiter","","",null,[[["macrodelimiter",4]]]],[5,"visit_member","","",null,[[["member",4]]]],[5,"visit_meta","","",null,[[["meta",4]]]],[5,"visit_meta_list","","",null,[[["metalist",3]]]],[5,"visit_meta_name_value","","",null,[[["metanamevalue",3]]]],[5,"visit_method_turbofish","","",null,[[["methodturbofish",3]]]],[5,"visit_nested_meta","","",null,[[["nestedmeta",4]]]],[5,"visit_parenthesized_generic_arguments","","",null,[[["parenthesizedgenericarguments",3]]]],[5,"visit_pat","","",null,[[["pat",4]]]],[5,"visit_pat_box","","",null,[[["patbox",3]]]],[5,"visit_pat_ident","","",null,[[["patident",3]]]],[5,"visit_pat_lit","","",null,[[["patlit",3]]]],[5,"visit_pat_macro","","",null,[[["patmacro",3]]]],[5,"visit_pat_or","","",null,[[["pator",3]]]],[5,"visit_pat_path","","",null,[[["patpath",3]]]],[5,"visit_pat_range","","",null,[[["patrange",3]]]],[5,"visit_pat_reference","","",null,[[["patreference",3]]]],[5,"visit_pat_rest","","",null,[[["patrest",3]]]],[5,"visit_pat_slice","","",null,[[["patslice",3]]]],[5,"visit_pat_struct","","",null,[[["patstruct",3]]]],[5,"visit_pat_tuple","","",null,[[["pattuple",3]]]],[5,"visit_pat_tuple_struct","","",null,[[["pattuplestruct",3]]]],[5,"visit_pat_type","","",null,[[["pattype",3]]]],[5,"visit_pat_wild","","",null,[[["patwild",3]]]],[5,"visit_path","","",null,[[["path",3]]]],[5,"visit_path_arguments","","",null,[[["patharguments",4]]]],[5,"visit_path_segment","","",null,[[["pathsegment",3]]]],[5,"visit_predicate_eq","","",null,[[["predicateeq",3]]]],[5,"visit_predicate_lifetime","","",null,[[["predicatelifetime",3]]]],[5,"visit_predicate_type","","",null,[[["predicatetype",3]]]],[5,"visit_qself","","",null,[[["qself",3]]]],[5,"visit_range_limits","","",null,[[["rangelimits",4]]]],[5,"visit_receiver","","",null,[[["receiver",3]]]],[5,"visit_return_type","","",null,[[["returntype",4]]]],[5,"visit_signature","","",null,[[["signature",3]]]],[5,"visit_span","","",null,[[["span",3]]]],[5,"visit_stmt","","",null,[[["stmt",4]]]],[5,"visit_trait_bound","","",null,[[["traitbound",3]]]],[5,"visit_trait_bound_modifier","","",null,[[["traitboundmodifier",4]]]],[5,"visit_trait_item","","",null,[[["traititem",4]]]],[5,"visit_trait_item_const","","",null,[[["traititemconst",3]]]],[5,"visit_trait_item_macro","","",null,[[["traititemmacro",3]]]],[5,"visit_trait_item_method","","",null,[[["traititemmethod",3]]]],[5,"visit_trait_item_type","","",null,[[["traititemtype",3]]]],[5,"visit_type","","",null,[[["type",4]]]],[5,"visit_type_array","","",null,[[["typearray",3]]]],[5,"visit_type_bare_fn","","",null,[[["typebarefn",3]]]],[5,"visit_type_group","","",null,[[["typegroup",3]]]],[5,"visit_type_impl_trait","","",null,[[["typeimpltrait",3]]]],[5,"visit_type_infer","","",null,[[["typeinfer",3]]]],[5,"visit_type_macro","","",null,[[["typemacro",3]]]],[5,"visit_type_never","","",null,[[["typenever",3]]]],[5,"visit_type_param","","",null,[[["typeparam",3]]]],[5,"visit_type_param_bound","","",null,[[["typeparambound",4]]]],[5,"visit_type_paren","","",null,[[["typeparen",3]]]],[5,"visit_type_path","","",null,[[["typepath",3]]]],[5,"visit_type_ptr","","",null,[[["typeptr",3]]]],[5,"visit_type_reference","","",null,[[["typereference",3]]]],[5,"visit_type_slice","","",null,[[["typeslice",3]]]],[5,"visit_type_trait_object","","",null,[[["typetraitobject",3]]]],[5,"visit_type_tuple","","",null,[[["typetuple",3]]]],[5,"visit_un_op","","",null,[[["unop",4]]]],[5,"visit_use_glob","","",null,[[["useglob",3]]]],[5,"visit_use_group","","",null,[[["usegroup",3]]]],[5,"visit_use_name","","",null,[[["usename",3]]]],[5,"visit_use_path","","",null,[[["usepath",3]]]],[5,"visit_use_rename","","",null,[[["userename",3]]]],[5,"visit_use_tree","","",null,[[["usetree",4]]]],[5,"visit_variadic","","",null,[[["variadic",3]]]],[5,"visit_variant","","",null,[[["variant",3]]]],[5,"visit_vis_crate","","",null,[[["viscrate",3]]]],[5,"visit_vis_public","","",null,[[["vispublic",3]]]],[5,"visit_vis_restricted","","",null,[[["visrestricted",3]]]],[5,"visit_visibility","","",null,[[["visibility",4]]]],[5,"visit_where_clause","","",null,[[["whereclause",3]]]],[5,"visit_where_predicate","","",null,[[["wherepredicate",4]]]],[8,"Visit","","Syntax tree traversal to walk a shared borrow of a syntax…",null,null],[11,"visit_abi","","",296,[[["abi",3]]]],[11,"visit_angle_bracketed_generic_arguments","","",296,[[["anglebracketedgenericarguments",3]]]],[11,"visit_arm","","",296,[[["arm",3]]]],[11,"visit_attr_style","","",296,[[["attrstyle",4]]]],[11,"visit_attribute","","",296,[[["attribute",3]]]],[11,"visit_bare_fn_arg","","",296,[[["barefnarg",3]]]],[11,"visit_bin_op","","",296,[[["binop",4]]]],[11,"visit_binding","","",296,[[["binding",3]]]],[11,"visit_block","","",296,[[["block",3]]]],[11,"visit_bound_lifetimes","","",296,[[["boundlifetimes",3]]]],[11,"visit_const_param","","",296,[[["constparam",3]]]],[11,"visit_constraint","","",296,[[["constraint",3]]]],[11,"visit_data","","",296,[[["data",4]]]],[11,"visit_data_enum","","",296,[[["dataenum",3]]]],[11,"visit_data_struct","","",296,[[["datastruct",3]]]],[11,"visit_data_union","","",296,[[["dataunion",3]]]],[11,"visit_derive_input","","",296,[[["deriveinput",3]]]],[11,"visit_expr","","",296,[[["expr",4]]]],[11,"visit_expr_array","","",296,[[["exprarray",3]]]],[11,"visit_expr_assign","","",296,[[["exprassign",3]]]],[11,"visit_expr_assign_op","","",296,[[["exprassignop",3]]]],[11,"visit_expr_async","","",296,[[["exprasync",3]]]],[11,"visit_expr_await","","",296,[[["exprawait",3]]]],[11,"visit_expr_binary","","",296,[[["exprbinary",3]]]],[11,"visit_expr_block","","",296,[[["exprblock",3]]]],[11,"visit_expr_box","","",296,[[["exprbox",3]]]],[11,"visit_expr_break","","",296,[[["exprbreak",3]]]],[11,"visit_expr_call","","",296,[[["exprcall",3]]]],[11,"visit_expr_cast","","",296,[[["exprcast",3]]]],[11,"visit_expr_closure","","",296,[[["exprclosure",3]]]],[11,"visit_expr_continue","","",296,[[["exprcontinue",3]]]],[11,"visit_expr_field","","",296,[[["exprfield",3]]]],[11,"visit_expr_for_loop","","",296,[[["exprforloop",3]]]],[11,"visit_expr_group","","",296,[[["exprgroup",3]]]],[11,"visit_expr_if","","",296,[[["exprif",3]]]],[11,"visit_expr_index","","",296,[[["exprindex",3]]]],[11,"visit_expr_let","","",296,[[["exprlet",3]]]],[11,"visit_expr_lit","","",296,[[["exprlit",3]]]],[11,"visit_expr_loop","","",296,[[["exprloop",3]]]],[11,"visit_expr_macro","","",296,[[["exprmacro",3]]]],[11,"visit_expr_match","","",296,[[["exprmatch",3]]]],[11,"visit_expr_method_call","","",296,[[["exprmethodcall",3]]]],[11,"visit_expr_paren","","",296,[[["exprparen",3]]]],[11,"visit_expr_path","","",296,[[["exprpath",3]]]],[11,"visit_expr_range","","",296,[[["exprrange",3]]]],[11,"visit_expr_reference","","",296,[[["exprreference",3]]]],[11,"visit_expr_repeat","","",296,[[["exprrepeat",3]]]],[11,"visit_expr_return","","",296,[[["exprreturn",3]]]],[11,"visit_expr_struct","","",296,[[["exprstruct",3]]]],[11,"visit_expr_try","","",296,[[["exprtry",3]]]],[11,"visit_expr_try_block","","",296,[[["exprtryblock",3]]]],[11,"visit_expr_tuple","","",296,[[["exprtuple",3]]]],[11,"visit_expr_type","","",296,[[["exprtype",3]]]],[11,"visit_expr_unary","","",296,[[["exprunary",3]]]],[11,"visit_expr_unsafe","","",296,[[["exprunsafe",3]]]],[11,"visit_expr_while","","",296,[[["exprwhile",3]]]],[11,"visit_expr_yield","","",296,[[["expryield",3]]]],[11,"visit_field","","",296,[[["field",3]]]],[11,"visit_field_pat","","",296,[[["fieldpat",3]]]],[11,"visit_field_value","","",296,[[["fieldvalue",3]]]],[11,"visit_fields","","",296,[[["fields",4]]]],[11,"visit_fields_named","","",296,[[["fieldsnamed",3]]]],[11,"visit_fields_unnamed","","",296,[[["fieldsunnamed",3]]]],[11,"visit_file","","",296,[[["file",3]]]],[11,"visit_fn_arg","","",296,[[["fnarg",4]]]],[11,"visit_foreign_item","","",296,[[["foreignitem",4]]]],[11,"visit_foreign_item_fn","","",296,[[["foreignitemfn",3]]]],[11,"visit_foreign_item_macro","","",296,[[["foreignitemmacro",3]]]],[11,"visit_foreign_item_static","","",296,[[["foreignitemstatic",3]]]],[11,"visit_foreign_item_type","","",296,[[["foreignitemtype",3]]]],[11,"visit_generic_argument","","",296,[[["genericargument",4]]]],[11,"visit_generic_method_argument","","",296,[[["genericmethodargument",4]]]],[11,"visit_generic_param","","",296,[[["genericparam",4]]]],[11,"visit_generics","","",296,[[["generics",3]]]],[11,"visit_ident","","",296,[[["ident",3]]]],[11,"visit_impl_item","","",296,[[["implitem",4]]]],[11,"visit_impl_item_const","","",296,[[["implitemconst",3]]]],[11,"visit_impl_item_macro","","",296,[[["implitemmacro",3]]]],[11,"visit_impl_item_method","","",296,[[["implitemmethod",3]]]],[11,"visit_impl_item_type","","",296,[[["implitemtype",3]]]],[11,"visit_index","","",296,[[["index",3]]]],[11,"visit_item","","",296,[[["item",4]]]],[11,"visit_item_const","","",296,[[["itemconst",3]]]],[11,"visit_item_enum","","",296,[[["itemenum",3]]]],[11,"visit_item_extern_crate","","",296,[[["itemexterncrate",3]]]],[11,"visit_item_fn","","",296,[[["itemfn",3]]]],[11,"visit_item_foreign_mod","","",296,[[["itemforeignmod",3]]]],[11,"visit_item_impl","","",296,[[["itemimpl",3]]]],[11,"visit_item_macro","","",296,[[["itemmacro",3]]]],[11,"visit_item_macro2","","",296,[[["itemmacro2",3]]]],[11,"visit_item_mod","","",296,[[["itemmod",3]]]],[11,"visit_item_static","","",296,[[["itemstatic",3]]]],[11,"visit_item_struct","","",296,[[["itemstruct",3]]]],[11,"visit_item_trait","","",296,[[["itemtrait",3]]]],[11,"visit_item_trait_alias","","",296,[[["itemtraitalias",3]]]],[11,"visit_item_type","","",296,[[["itemtype",3]]]],[11,"visit_item_union","","",296,[[["itemunion",3]]]],[11,"visit_item_use","","",296,[[["itemuse",3]]]],[11,"visit_label","","",296,[[["label",3]]]],[11,"visit_lifetime","","",296,[[["lifetime",3]]]],[11,"visit_lifetime_def","","",296,[[["lifetimedef",3]]]],[11,"visit_lit","","",296,[[["lit",4]]]],[11,"visit_lit_bool","","",296,[[["litbool",3]]]],[11,"visit_lit_byte","","",296,[[["litbyte",3]]]],[11,"visit_lit_byte_str","","",296,[[["litbytestr",3]]]],[11,"visit_lit_char","","",296,[[["litchar",3]]]],[11,"visit_lit_float","","",296,[[["litfloat",3]]]],[11,"visit_lit_int","","",296,[[["litint",3]]]],[11,"visit_lit_str","","",296,[[["litstr",3]]]],[11,"visit_local","","",296,[[["local",3]]]],[11,"visit_macro","","",296,[[["macro",3]]]],[11,"visit_macro_delimiter","","",296,[[["macrodelimiter",4]]]],[11,"visit_member","","",296,[[["member",4]]]],[11,"visit_meta","","",296,[[["meta",4]]]],[11,"visit_meta_list","","",296,[[["metalist",3]]]],[11,"visit_meta_name_value","","",296,[[["metanamevalue",3]]]],[11,"visit_method_turbofish","","",296,[[["methodturbofish",3]]]],[11,"visit_nested_meta","","",296,[[["nestedmeta",4]]]],[11,"visit_parenthesized_generic_arguments","","",296,[[["parenthesizedgenericarguments",3]]]],[11,"visit_pat","","",296,[[["pat",4]]]],[11,"visit_pat_box","","",296,[[["patbox",3]]]],[11,"visit_pat_ident","","",296,[[["patident",3]]]],[11,"visit_pat_lit","","",296,[[["patlit",3]]]],[11,"visit_pat_macro","","",296,[[["patmacro",3]]]],[11,"visit_pat_or","","",296,[[["pator",3]]]],[11,"visit_pat_path","","",296,[[["patpath",3]]]],[11,"visit_pat_range","","",296,[[["patrange",3]]]],[11,"visit_pat_reference","","",296,[[["patreference",3]]]],[11,"visit_pat_rest","","",296,[[["patrest",3]]]],[11,"visit_pat_slice","","",296,[[["patslice",3]]]],[11,"visit_pat_struct","","",296,[[["patstruct",3]]]],[11,"visit_pat_tuple","","",296,[[["pattuple",3]]]],[11,"visit_pat_tuple_struct","","",296,[[["pattuplestruct",3]]]],[11,"visit_pat_type","","",296,[[["pattype",3]]]],[11,"visit_pat_wild","","",296,[[["patwild",3]]]],[11,"visit_path","","",296,[[["path",3]]]],[11,"visit_path_arguments","","",296,[[["patharguments",4]]]],[11,"visit_path_segment","","",296,[[["pathsegment",3]]]],[11,"visit_predicate_eq","","",296,[[["predicateeq",3]]]],[11,"visit_predicate_lifetime","","",296,[[["predicatelifetime",3]]]],[11,"visit_predicate_type","","",296,[[["predicatetype",3]]]],[11,"visit_qself","","",296,[[["qself",3]]]],[11,"visit_range_limits","","",296,[[["rangelimits",4]]]],[11,"visit_receiver","","",296,[[["receiver",3]]]],[11,"visit_return_type","","",296,[[["returntype",4]]]],[11,"visit_signature","","",296,[[["signature",3]]]],[11,"visit_span","","",296,[[["span",3]]]],[11,"visit_stmt","","",296,[[["stmt",4]]]],[11,"visit_trait_bound","","",296,[[["traitbound",3]]]],[11,"visit_trait_bound_modifier","","",296,[[["traitboundmodifier",4]]]],[11,"visit_trait_item","","",296,[[["traititem",4]]]],[11,"visit_trait_item_const","","",296,[[["traititemconst",3]]]],[11,"visit_trait_item_macro","","",296,[[["traititemmacro",3]]]],[11,"visit_trait_item_method","","",296,[[["traititemmethod",3]]]],[11,"visit_trait_item_type","","",296,[[["traititemtype",3]]]],[11,"visit_type","","",296,[[["type",4]]]],[11,"visit_type_array","","",296,[[["typearray",3]]]],[11,"visit_type_bare_fn","","",296,[[["typebarefn",3]]]],[11,"visit_type_group","","",296,[[["typegroup",3]]]],[11,"visit_type_impl_trait","","",296,[[["typeimpltrait",3]]]],[11,"visit_type_infer","","",296,[[["typeinfer",3]]]],[11,"visit_type_macro","","",296,[[["typemacro",3]]]],[11,"visit_type_never","","",296,[[["typenever",3]]]],[11,"visit_type_param","","",296,[[["typeparam",3]]]],[11,"visit_type_param_bound","","",296,[[["typeparambound",4]]]],[11,"visit_type_paren","","",296,[[["typeparen",3]]]],[11,"visit_type_path","","",296,[[["typepath",3]]]],[11,"visit_type_ptr","","",296,[[["typeptr",3]]]],[11,"visit_type_reference","","",296,[[["typereference",3]]]],[11,"visit_type_slice","","",296,[[["typeslice",3]]]],[11,"visit_type_trait_object","","",296,[[["typetraitobject",3]]]],[11,"visit_type_tuple","","",296,[[["typetuple",3]]]],[11,"visit_un_op","","",296,[[["unop",4]]]],[11,"visit_use_glob","","",296,[[["useglob",3]]]],[11,"visit_use_group","","",296,[[["usegroup",3]]]],[11,"visit_use_name","","",296,[[["usename",3]]]],[11,"visit_use_path","","",296,[[["usepath",3]]]],[11,"visit_use_rename","","",296,[[["userename",3]]]],[11,"visit_use_tree","","",296,[[["usetree",4]]]],[11,"visit_variadic","","",296,[[["variadic",3]]]],[11,"visit_variant","","",296,[[["variant",3]]]],[11,"visit_vis_crate","","",296,[[["viscrate",3]]]],[11,"visit_vis_public","","",296,[[["vispublic",3]]]],[11,"visit_vis_restricted","","",296,[[["visrestricted",3]]]],[11,"visit_visibility","","",296,[[["visibility",4]]]],[11,"visit_where_clause","","",296,[[["whereclause",3]]]],[11,"visit_where_predicate","","",296,[[["wherepredicate",4]]]],[0,"parse","syn","Parsing interface for parsing a token stream into a syntax…",null,null],[3,"Error","syn::parse","Error returned when a Syn parser cannot parse the input…",null,null],[3,"Lookahead1","","Support for checking the next token in a stream to decide…",null,null],[3,"ParseBuffer","","Cursor position within a buffered token stream.",null,null],[3,"StepCursor","","Cursor state associated with speculative parsing.",null,null],[3,"Nothing","","An empty syntax tree node that consumes no tokens when…",null,null],[0,"discouraged","","Extensions to the parsing API with niche applicability.",null,null],[8,"Speculative","syn::parse::discouraged","Extensions to the `ParseStream` API to support speculative…",null,null],[10,"advance_to","","Advance this parse stream to the position of a forked…",297,[[]]],[6,"Result","syn::parse","The result of a Syn parser.",null,null],[6,"ParseStream","","Input to a Syn parser function.",null,null],[8,"Peek","","Types that can be parsed by looking at just one token.",null,null],[8,"Parse","","Parsing interface implemented by all types that can be…",null,null],[10,"parse","","",298,[[["parsestream",6]],["result",6]]],[8,"Parser","","Parser that can parse Rust tokens into a particular syntax…",null,null],[16,"Output","","",299,null],[10,"parse2","","Parse a proc-macro2 token stream into the chosen syntax…",299,[[["tokenstream",3]],["result",6]]],[11,"parse","","Parse tokens of source code into the chosen syntax tree…",299,[[["tokenstream",3]],["result",6]]],[11,"parse_str","","Parse a string of Rust code into the chosen syntax tree…",299,[[],["result",6]]],[11,"error","","Triggers an error at the current position of the parse…",300,[[["display",8]],["error",3]]],[11,"parse","","Parses a syntax tree node of type `T`, advancing the…",301,[[],[["result",6],["parse",8]]]],[11,"call","","Calls the given parser function to parse a syntax tree…",301,[[],["result",6]]],[11,"peek","","Looks at the next token in the parse stream to determine…",301,[[["peek",8]]]],[11,"peek2","","Looks at the second-next token in the parse stream.",301,[[["peek",8]]]],[11,"peek3","","Looks at the third-next token in the parse stream.",301,[[["peek",8]]]],[11,"parse_terminated","","Parses zero or more occurrences of `T` separated by…",301,[[],[["punctuated",3],["result",6]]]],[11,"is_empty","","Returns whether there are tokens remaining in this stream.",301,[[]]],[11,"lookahead1","","Constructs a helper for peeking at the next token in this…",301,[[],["lookahead1",3]]],[11,"fork","","Forks a parse stream so that parsing tokens out of either…",301,[[]]],[11,"error","","Triggers an error at the current position of the parse…",301,[[["display",8]],["error",3]]],[11,"step","","Speculatively parses tokens from this parse stream,…",301,[[],["result",6]]],[11,"span","","Returns the `Span` of the next token in the parse stream,…",301,[[],["span",3]]],[11,"cursor","","Provides low-level access to the token representation…",301,[[],["cursor",3]]],[11,"new","syn","Usually the `ParseStream::error` method will be used…",302,[[["display",8],["span",3]]]],[11,"new_spanned","","Creates an error with the specified message spanning the…",302,[[["display",8],["totokens",8]]]],[11,"span","","The source location of the error.",302,[[],["span",3]]],[11,"to_compile_error","","Render the error as an invocation of `compile_error!`.",302,[[],["tokenstream",3]]],[11,"combine","","Add another error message to self such that when…",302,[[["error",3]]]],[6,"AttributeArgs","","Conventional argument type associated with an invocation…",null,null],[6,"Result","","The result of a Syn parser.",null,null],[14,"parenthesized","","Parse a set of parentheses and expose their content to…",null,null],[14,"braced","","Parse a set of curly braces and expose their content to…",null,null],[14,"bracketed","","Parse a set of square brackets and expose their content to…",null,null],[14,"Token","","A type-macro that expands to the name of the Rust type…",null,null],[14,"parse_quote","","Quasi-quotation macro that accepts input like the `quote!`…",null,null],[14,"parse_macro_input","","Parse the input TokenStream of a macro, triggering a…",null,null],[14,"custom_keyword","","Define a type that supports parsing and printing a given…",null,null],[14,"custom_punctuation","","Define a type that supports parsing and printing a…",null,null],[11,"peek","","",303,[[["cursor",3]]]],[11,"display","","",303,[[]]],[11,"span","","",303,[[],["span",3]]],[11,"from","","",303,[[]]],[11,"into","","",303,[[]]],[11,"to_owned","","",303,[[]]],[11,"clone_into","","",303,[[]]],[11,"to_string","","",303,[[],["string",3]]],[11,"borrow","","",303,[[]]],[11,"borrow_mut","","",303,[[]]],[11,"try_from","","",303,[[],["result",4]]],[11,"try_into","","",303,[[],["result",4]]],[11,"type_id","","",303,[[],["typeid",3]]],[11,"span","","",0,[[],["span",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"span","","",1,[[],["span",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"span","","",2,[[],["span",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"span","","",3,[[],["span",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"span","","",4,[[],["span",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"span","","",5,[[],["span",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"span","","",6,[[],["span",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"span","","",7,[[],["span",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"span","","",8,[[],["span",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"span","","",9,[[],["span",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"span","","",10,[[],["span",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"span","","",11,[[],["span",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"span","","",12,[[],["span",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"span","","",13,[[],["span",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"span","","",14,[[],["span",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"span","","",15,[[],["span",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"span","","",16,[[],["span",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"span","","",17,[[],["span",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"span","","",18,[[],["span",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"span","","",19,[[],["span",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"span","","",20,[[],["span",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"span","","",21,[[],["span",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"span","","",22,[[],["span",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"span","","",23,[[],["span",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"span","","",24,[[],["span",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"span","","",25,[[],["span",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"span","","",26,[[],["span",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"span","","",27,[[],["span",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"span","","",28,[[],["span",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"span","","",29,[[],["span",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"span","","",30,[[],["span",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"span","","",31,[[],["span",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"span","","",32,[[],["span",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"span","","",33,[[],["span",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"span","","",34,[[],["span",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"span","","",35,[[],["span",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"span","","",36,[[],["span",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"span","","",37,[[],["span",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"span","","",38,[[],["span",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"span","","",39,[[],["span",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"span","","",40,[[],["span",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"span","","",41,[[],["span",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"span","","",42,[[],["span",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"span","","",43,[[],["span",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"span","","",44,[[],["span",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"span","","",45,[[],["span",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"span","","",46,[[],["span",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"span","","",47,[[],["span",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"span","","",48,[[],["span",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"span","","",49,[[],["span",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"span","","",50,[[],["span",3]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"span","","",51,[[],["span",3]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"span","","",52,[[],["span",3]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"span","","",53,[[],["span",3]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"span","","",54,[[],["span",3]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"span","","",55,[[],["span",3]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"span","","",56,[[],["span",3]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"span","","",57,[[],["span",3]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"span","","",58,[[],["span",3]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"span","","",59,[[],["span",3]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"span","","",60,[[],["span",3]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"span","","",61,[[],["span",3]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"span","","",62,[[],["span",3]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"span","","",63,[[],["span",3]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"span","","",304,[[],["span",3]]],[11,"from","","",304,[[]]],[11,"into","","",304,[[]]],[11,"to_owned","","",304,[[]]],[11,"clone_into","","",304,[[]]],[11,"borrow","","",304,[[]]],[11,"borrow_mut","","",304,[[]]],[11,"try_from","","",304,[[],["result",4]]],[11,"try_into","","",304,[[],["result",4]]],[11,"type_id","","",304,[[],["typeid",3]]],[11,"span","","",305,[[],["span",3]]],[11,"from","","",305,[[]]],[11,"into","","",305,[[]]],[11,"to_owned","","",305,[[]]],[11,"clone_into","","",305,[[]]],[11,"borrow","","",305,[[]]],[11,"borrow_mut","","",305,[[]]],[11,"try_from","","",305,[[],["result",4]]],[11,"try_into","","",305,[[],["result",4]]],[11,"type_id","","",305,[[],["typeid",3]]],[11,"span","","",283,[[],["span",3]]],[11,"from","","",283,[[]]],[11,"into","","",283,[[]]],[11,"to_owned","","",283,[[]]],[11,"clone_into","","",283,[[]]],[11,"borrow","","",283,[[]]],[11,"borrow_mut","","",283,[[]]],[11,"try_from","","",283,[[],["result",4]]],[11,"try_into","","",283,[[],["result",4]]],[11,"type_id","","",283,[[],["typeid",3]]],[11,"span","","",64,[[],["span",3]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"span","","",65,[[],["span",3]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"span","","",66,[[],["span",3]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"span","","",67,[[],["span",3]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"span","","",68,[[],["span",3]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"span","","",69,[[],["span",3]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"span","","",70,[[],["span",3]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"span","","",71,[[],["span",3]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"span","","",72,[[],["span",3]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"span","","",73,[[],["span",3]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"span","","",74,[[],["span",3]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"span","","",75,[[],["span",3]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"span","","",76,[[],["span",3]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"span","","",77,[[],["span",3]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"span","","",78,[[],["span",3]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"span","","",79,[[],["span",3]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"span","","",80,[[],["span",3]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"span","","",81,[[],["span",3]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"span","","",82,[[],["span",3]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"span","","",83,[[],["span",3]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"span","","",84,[[],["span",3]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"span","","",85,[[],["span",3]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"to_owned","","",85,[[]]],[11,"clone_into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"span","","",86,[[],["span",3]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"span","","",87,[[],["span",3]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"span","","",88,[[],["span",3]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"to_owned","","",88,[[]]],[11,"clone_into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"span","","",89,[[],["span",3]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"span","","",90,[[],["span",3]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"span","","",91,[[],["span",3]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"span","","",92,[[],["span",3]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"to_owned","","",92,[[]]],[11,"clone_into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"span","","",93,[[],["span",3]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"to_owned","","",93,[[]]],[11,"clone_into","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"span","","",94,[[],["span",3]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"to_owned","","",94,[[]]],[11,"clone_into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"span","","",95,[[],["span",3]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"to_owned","","",95,[[]]],[11,"clone_into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"span","","",96,[[],["span",3]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"to_owned","","",96,[[]]],[11,"clone_into","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"span","","",97,[[],["span",3]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"to_owned","","",97,[[]]],[11,"clone_into","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"span","","",98,[[],["span",3]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"to_owned","","",98,[[]]],[11,"clone_into","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"span","","",99,[[],["span",3]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"to_owned","","",99,[[]]],[11,"clone_into","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"peek","","",100,[[["cursor",3]]]],[11,"display","","",100,[[]]],[11,"span","","",100,[[],["span",3]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"to_owned","","",100,[[]]],[11,"clone_into","","",100,[[]]],[11,"to_string","","",100,[[],["string",3]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"peek","","",101,[[["cursor",3]]]],[11,"display","","",101,[[]]],[11,"span","","",101,[[],["span",3]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"to_owned","","",101,[[]]],[11,"clone_into","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"peek","","",286,[[["cursor",3]]]],[11,"display","","",286,[[]]],[11,"span","","",286,[[],["span",3]]],[11,"from","","",286,[[]]],[11,"into","","",286,[[]]],[11,"to_owned","","",286,[[]]],[11,"clone_into","","",286,[[]]],[11,"borrow","","",286,[[]]],[11,"borrow_mut","","",286,[[]]],[11,"try_from","","",286,[[],["result",4]]],[11,"try_into","","",286,[[],["result",4]]],[11,"type_id","","",286,[[],["typeid",3]]],[11,"peek","","",285,[[["cursor",3]]]],[11,"display","","",285,[[]]],[11,"span","","",285,[[],["span",3]]],[11,"from","","",285,[[]]],[11,"into","","",285,[[]]],[11,"to_owned","","",285,[[]]],[11,"clone_into","","",285,[[]]],[11,"borrow","","",285,[[]]],[11,"borrow_mut","","",285,[[]]],[11,"try_from","","",285,[[],["result",4]]],[11,"try_into","","",285,[[],["result",4]]],[11,"type_id","","",285,[[],["typeid",3]]],[11,"peek","","",287,[[["cursor",3]]]],[11,"display","","",287,[[]]],[11,"span","","",287,[[],["span",3]]],[11,"from","","",287,[[]]],[11,"into","","",287,[[]]],[11,"to_owned","","",287,[[]]],[11,"clone_into","","",287,[[]]],[11,"borrow","","",287,[[]]],[11,"borrow_mut","","",287,[[]]],[11,"try_from","","",287,[[],["result",4]]],[11,"try_into","","",287,[[],["result",4]]],[11,"type_id","","",287,[[],["typeid",3]]],[11,"peek","","",289,[[["cursor",3]]]],[11,"display","","",289,[[]]],[11,"span","","",289,[[],["span",3]]],[11,"from","","",289,[[]]],[11,"into","","",289,[[]]],[11,"to_owned","","",289,[[]]],[11,"clone_into","","",289,[[]]],[11,"to_string","","",289,[[],["string",3]]],[11,"borrow","","",289,[[]]],[11,"borrow_mut","","",289,[[]]],[11,"try_from","","",289,[[],["result",4]]],[11,"try_into","","",289,[[],["result",4]]],[11,"type_id","","",289,[[],["typeid",3]]],[11,"peek","","",288,[[["cursor",3]]]],[11,"display","","",288,[[]]],[11,"span","","",288,[[],["span",3]]],[11,"from","","",288,[[]]],[11,"into","","",288,[[]]],[11,"to_owned","","",288,[[]]],[11,"clone_into","","",288,[[]]],[11,"to_string","","",288,[[],["string",3]]],[11,"borrow","","",288,[[]]],[11,"borrow_mut","","",288,[[]]],[11,"try_from","","",288,[[],["result",4]]],[11,"try_into","","",288,[[],["result",4]]],[11,"type_id","","",288,[[],["typeid",3]]],[11,"peek","","",284,[[["cursor",3]]]],[11,"display","","",284,[[]]],[11,"span","","",284,[[],["span",3]]],[11,"from","","",284,[[]]],[11,"into","","",284,[[]]],[11,"to_owned","","",284,[[]]],[11,"clone_into","","",284,[[]]],[11,"borrow","","",284,[[]]],[11,"borrow_mut","","",284,[[]]],[11,"try_from","","",284,[[],["result",4]]],[11,"try_into","","",284,[[],["result",4]]],[11,"type_id","","",284,[[],["typeid",3]]],[11,"span","","",102,[[],["span",3]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"to_owned","","",102,[[]]],[11,"clone_into","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"to_owned","","",103,[[]]],[11,"clone_into","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"to_owned","","",104,[[]]],[11,"clone_into","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"from","","",105,[[]]],[11,"into","","",105,[[]]],[11,"to_owned","","",105,[[]]],[11,"clone_into","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"span","","",106,[[],["span",3]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"to_owned","","",106,[[]]],[11,"clone_into","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"span","","",107,[[],["span",3]]],[11,"from","","",107,[[]]],[11,"into","","",107,[[]]],[11,"to_owned","","",107,[[]]],[11,"clone_into","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"span","","",108,[[],["span",3]]],[11,"from","","",108,[[]]],[11,"into","","",108,[[]]],[11,"to_owned","","",108,[[]]],[11,"clone_into","","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"span","","",109,[[],["span",3]]],[11,"from","","",109,[[]]],[11,"into","","",109,[[]]],[11,"to_owned","","",109,[[]]],[11,"clone_into","","",109,[[]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"span","","",110,[[],["span",3]]],[11,"from","","",110,[[]]],[11,"into","","",110,[[]]],[11,"to_owned","","",110,[[]]],[11,"clone_into","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"span","","",111,[[],["span",3]]],[11,"from","","",111,[[]]],[11,"into","","",111,[[]]],[11,"to_owned","","",111,[[]]],[11,"clone_into","","",111,[[]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"span","","",112,[[],["span",3]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"to_owned","","",112,[[]]],[11,"clone_into","","",112,[[]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"span","","",113,[[],["span",3]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"to_owned","","",113,[[]]],[11,"clone_into","","",113,[[]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"span","","",114,[[],["span",3]]],[11,"from","","",114,[[]]],[11,"into","","",114,[[]]],[11,"to_owned","","",114,[[]]],[11,"clone_into","","",114,[[]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"span","","",115,[[],["span",3]]],[11,"from","","",115,[[]]],[11,"into","","",115,[[]]],[11,"to_owned","","",115,[[]]],[11,"clone_into","","",115,[[]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"span","","",116,[[],["span",3]]],[11,"from","","",116,[[]]],[11,"into","","",116,[[]]],[11,"to_owned","","",116,[[]]],[11,"clone_into","","",116,[[]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"span","","",117,[[],["span",3]]],[11,"from","","",117,[[]]],[11,"into","","",117,[[]]],[11,"to_owned","","",117,[[]]],[11,"clone_into","","",117,[[]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"span","","",118,[[],["span",3]]],[11,"from","","",118,[[]]],[11,"into","","",118,[[]]],[11,"to_owned","","",118,[[]]],[11,"clone_into","","",118,[[]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"span","","",119,[[],["span",3]]],[11,"from","","",119,[[]]],[11,"into","","",119,[[]]],[11,"to_owned","","",119,[[]]],[11,"clone_into","","",119,[[]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"span","","",120,[[],["span",3]]],[11,"from","","",120,[[]]],[11,"into","","",120,[[]]],[11,"to_owned","","",120,[[]]],[11,"clone_into","","",120,[[]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"span","","",121,[[],["span",3]]],[11,"from","","",121,[[]]],[11,"into","","",121,[[]]],[11,"to_owned","","",121,[[]]],[11,"clone_into","","",121,[[]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"try_into","","",121,[[],["result",4]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"span","","",122,[[],["span",3]]],[11,"from","","",122,[[]]],[11,"into","","",122,[[]]],[11,"to_owned","","",122,[[]]],[11,"clone_into","","",122,[[]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"try_into","","",122,[[],["result",4]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"span","","",123,[[],["span",3]]],[11,"from","","",123,[[]]],[11,"into","","",123,[[]]],[11,"to_owned","","",123,[[]]],[11,"clone_into","","",123,[[]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"span","","",124,[[],["span",3]]],[11,"from","","",124,[[]]],[11,"into","","",124,[[]]],[11,"to_owned","","",124,[[]]],[11,"clone_into","","",124,[[]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"span","","",125,[[],["span",3]]],[11,"from","","",125,[[]]],[11,"into","","",125,[[]]],[11,"to_owned","","",125,[[]]],[11,"clone_into","","",125,[[]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"try_into","","",125,[[],["result",4]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"span","","",126,[[],["span",3]]],[11,"from","","",126,[[]]],[11,"into","","",126,[[]]],[11,"to_owned","","",126,[[]]],[11,"clone_into","","",126,[[]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"span","","",127,[[],["span",3]]],[11,"from","","",127,[[]]],[11,"into","","",127,[[]]],[11,"to_owned","","",127,[[]]],[11,"clone_into","","",127,[[]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"try_into","","",127,[[],["result",4]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"span","","",128,[[],["span",3]]],[11,"from","","",128,[[]]],[11,"into","","",128,[[]]],[11,"to_owned","","",128,[[]]],[11,"clone_into","","",128,[[]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"try_into","","",128,[[],["result",4]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"span","","",129,[[],["span",3]]],[11,"from","","",129,[[]]],[11,"into","","",129,[[]]],[11,"to_owned","","",129,[[]]],[11,"clone_into","","",129,[[]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"try_into","","",129,[[],["result",4]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"span","","",130,[[],["span",3]]],[11,"from","","",130,[[]]],[11,"into","","",130,[[]]],[11,"to_owned","","",130,[[]]],[11,"clone_into","","",130,[[]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"try_into","","",130,[[],["result",4]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"span","","",131,[[],["span",3]]],[11,"from","","",131,[[]]],[11,"into","","",131,[[]]],[11,"to_owned","","",131,[[]]],[11,"clone_into","","",131,[[]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"try_into","","",131,[[],["result",4]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"span","","",132,[[],["span",3]]],[11,"from","","",132,[[]]],[11,"into","","",132,[[]]],[11,"to_owned","","",132,[[]]],[11,"clone_into","","",132,[[]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"try_into","","",132,[[],["result",4]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"span","","",133,[[],["span",3]]],[11,"from","","",133,[[]]],[11,"into","","",133,[[]]],[11,"to_owned","","",133,[[]]],[11,"clone_into","","",133,[[]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"try_into","","",133,[[],["result",4]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"span","","",134,[[],["span",3]]],[11,"from","","",134,[[]]],[11,"into","","",134,[[]]],[11,"to_owned","","",134,[[]]],[11,"clone_into","","",134,[[]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"try_into","","",134,[[],["result",4]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"span","","",135,[[],["span",3]]],[11,"from","","",135,[[]]],[11,"into","","",135,[[]]],[11,"to_owned","","",135,[[]]],[11,"clone_into","","",135,[[]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"try_into","","",135,[[],["result",4]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"span","","",136,[[],["span",3]]],[11,"from","","",136,[[]]],[11,"into","","",136,[[]]],[11,"to_owned","","",136,[[]]],[11,"clone_into","","",136,[[]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"try_into","","",136,[[],["result",4]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"span","","",137,[[],["span",3]]],[11,"from","","",137,[[]]],[11,"into","","",137,[[]]],[11,"to_owned","","",137,[[]]],[11,"clone_into","","",137,[[]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"try_into","","",137,[[],["result",4]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"span","","",138,[[],["span",3]]],[11,"from","","",138,[[]]],[11,"into","","",138,[[]]],[11,"to_owned","","",138,[[]]],[11,"clone_into","","",138,[[]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"try_into","","",138,[[],["result",4]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"span","","",139,[[],["span",3]]],[11,"from","","",139,[[]]],[11,"into","","",139,[[]]],[11,"to_owned","","",139,[[]]],[11,"clone_into","","",139,[[]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"try_into","","",139,[[],["result",4]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"span","","",140,[[],["span",3]]],[11,"from","","",140,[[]]],[11,"into","","",140,[[]]],[11,"to_owned","","",140,[[]]],[11,"clone_into","","",140,[[]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"try_into","","",140,[[],["result",4]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"span","","",141,[[],["span",3]]],[11,"from","","",141,[[]]],[11,"into","","",141,[[]]],[11,"to_owned","","",141,[[]]],[11,"clone_into","","",141,[[]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"try_into","","",141,[[],["result",4]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"span","","",142,[[],["span",3]]],[11,"from","","",142,[[]]],[11,"into","","",142,[[]]],[11,"to_owned","","",142,[[]]],[11,"clone_into","","",142,[[]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"try_into","","",142,[[],["result",4]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"span","","",143,[[],["span",3]]],[11,"from","","",143,[[]]],[11,"into","","",143,[[]]],[11,"to_owned","","",143,[[]]],[11,"clone_into","","",143,[[]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"try_into","","",143,[[],["result",4]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"span","","",144,[[],["span",3]]],[11,"from","","",144,[[]]],[11,"into","","",144,[[]]],[11,"to_owned","","",144,[[]]],[11,"clone_into","","",144,[[]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"try_into","","",144,[[],["result",4]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"span","","",145,[[],["span",3]]],[11,"from","","",145,[[]]],[11,"into","","",145,[[]]],[11,"to_owned","","",145,[[]]],[11,"clone_into","","",145,[[]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"try_into","","",145,[[],["result",4]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"span","","",146,[[],["span",3]]],[11,"from","","",146,[[]]],[11,"into","","",146,[[]]],[11,"to_owned","","",146,[[]]],[11,"clone_into","","",146,[[]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"try_into","","",146,[[],["result",4]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"span","","",147,[[],["span",3]]],[11,"from","","",147,[[]]],[11,"into","","",147,[[]]],[11,"to_owned","","",147,[[]]],[11,"clone_into","","",147,[[]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"try_into","","",147,[[],["result",4]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"from","","",148,[[]]],[11,"into","","",148,[[]]],[11,"to_owned","","",148,[[]]],[11,"clone_into","","",148,[[]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"try_into","","",148,[[],["result",4]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"from","","",302,[[]]],[11,"into","","",302,[[]]],[11,"into_iter","","",302,[[]]],[11,"to_owned","","",302,[[]]],[11,"clone_into","","",302,[[]]],[11,"to_string","","",302,[[],["string",3]]],[11,"borrow","","",302,[[]]],[11,"borrow_mut","","",302,[[]]],[11,"try_from","","",302,[[],["result",4]]],[11,"try_into","","",302,[[],["result",4]]],[11,"type_id","","",302,[[],["typeid",3]]],[11,"from","","",149,[[]]],[11,"into","","",149,[[]]],[11,"to_owned","","",149,[[]]],[11,"clone_into","","",149,[[]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"try_into","","",149,[[],["result",4]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"span","","",150,[[],["span",3]]],[11,"from","","",150,[[]]],[11,"into","","",150,[[]]],[11,"to_owned","","",150,[[]]],[11,"clone_into","","",150,[[]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"try_into","","",150,[[],["result",4]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"span","","",151,[[],["span",3]]],[11,"from","","",151,[[]]],[11,"into","","",151,[[]]],[11,"to_owned","","",151,[[]]],[11,"clone_into","","",151,[[]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"try_into","","",151,[[],["result",4]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"span","","",152,[[],["span",3]]],[11,"from","","",152,[[]]],[11,"into","","",152,[[]]],[11,"into_iter","","",152,[[]]],[11,"to_owned","","",152,[[]]],[11,"clone_into","","",152,[[]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"try_into","","",152,[[],["result",4]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"span","","",153,[[],["span",3]]],[11,"from","","",153,[[]]],[11,"into","","",153,[[]]],[11,"to_owned","","",153,[[]]],[11,"clone_into","","",153,[[]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"try_into","","",153,[[],["result",4]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"span","","",154,[[],["span",3]]],[11,"from","","",154,[[]]],[11,"into","","",154,[[]]],[11,"to_owned","","",154,[[]]],[11,"clone_into","","",154,[[]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"try_into","","",154,[[],["result",4]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"from","","",155,[[]]],[11,"into","","",155,[[]]],[11,"to_owned","","",155,[[]]],[11,"clone_into","","",155,[[]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"try_into","","",155,[[],["result",4]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"span","","",156,[[],["span",3]]],[11,"from","","",156,[[]]],[11,"into","","",156,[[]]],[11,"to_owned","","",156,[[]]],[11,"clone_into","","",156,[[]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"try_into","","",156,[[],["result",4]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"span","","",157,[[],["span",3]]],[11,"from","","",157,[[]]],[11,"into","","",157,[[]]],[11,"to_owned","","",157,[[]]],[11,"clone_into","","",157,[[]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"try_into","","",157,[[],["result",4]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"span","","",158,[[],["span",3]]],[11,"from","","",158,[[]]],[11,"into","","",158,[[]]],[11,"to_owned","","",158,[[]]],[11,"clone_into","","",158,[[]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"try_into","","",158,[[],["result",4]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"span","","",159,[[],["span",3]]],[11,"from","","",159,[[]]],[11,"into","","",159,[[]]],[11,"to_owned","","",159,[[]]],[11,"clone_into","","",159,[[]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"try_into","","",159,[[],["result",4]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"span","","",160,[[],["span",3]]],[11,"from","","",160,[[]]],[11,"into","","",160,[[]]],[11,"to_owned","","",160,[[]]],[11,"clone_into","","",160,[[]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"try_into","","",160,[[],["result",4]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"span","","",161,[[],["span",3]]],[11,"from","","",161,[[]]],[11,"into","","",161,[[]]],[11,"to_owned","","",161,[[]]],[11,"clone_into","","",161,[[]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"try_into","","",161,[[],["result",4]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"span","","",162,[[],["span",3]]],[11,"from","","",162,[[]]],[11,"into","","",162,[[]]],[11,"to_owned","","",162,[[]]],[11,"clone_into","","",162,[[]]],[11,"borrow","","",162,[[]]],[11,"borrow_mut","","",162,[[]]],[11,"try_from","","",162,[[],["result",4]]],[11,"try_into","","",162,[[],["result",4]]],[11,"type_id","","",162,[[],["typeid",3]]],[11,"span","","",163,[[],["span",3]]],[11,"from","","",163,[[]]],[11,"into","","",163,[[]]],[11,"to_owned","","",163,[[]]],[11,"clone_into","","",163,[[]]],[11,"borrow","","",163,[[]]],[11,"borrow_mut","","",163,[[]]],[11,"try_from","","",163,[[],["result",4]]],[11,"try_into","","",163,[[],["result",4]]],[11,"type_id","","",163,[[],["typeid",3]]],[11,"span","","",164,[[],["span",3]]],[11,"from","","",164,[[]]],[11,"into","","",164,[[]]],[11,"to_owned","","",164,[[]]],[11,"clone_into","","",164,[[]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"try_from","","",164,[[],["result",4]]],[11,"try_into","","",164,[[],["result",4]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"span","","",165,[[],["span",3]]],[11,"from","","",165,[[]]],[11,"into","","",165,[[]]],[11,"to_owned","","",165,[[]]],[11,"clone_into","","",165,[[]]],[11,"borrow","","",165,[[]]],[11,"borrow_mut","","",165,[[]]],[11,"try_from","","",165,[[],["result",4]]],[11,"try_into","","",165,[[],["result",4]]],[11,"type_id","","",165,[[],["typeid",3]]],[11,"span","","",166,[[],["span",3]]],[11,"from","","",166,[[]]],[11,"into","","",166,[[]]],[11,"to_owned","","",166,[[]]],[11,"clone_into","","",166,[[]]],[11,"borrow","","",166,[[]]],[11,"borrow_mut","","",166,[[]]],[11,"try_from","","",166,[[],["result",4]]],[11,"try_into","","",166,[[],["result",4]]],[11,"type_id","","",166,[[],["typeid",3]]],[11,"span","","",167,[[],["span",3]]],[11,"from","","",167,[[]]],[11,"into","","",167,[[]]],[11,"to_owned","","",167,[[]]],[11,"clone_into","","",167,[[]]],[11,"borrow","","",167,[[]]],[11,"borrow_mut","","",167,[[]]],[11,"try_from","","",167,[[],["result",4]]],[11,"try_into","","",167,[[],["result",4]]],[11,"type_id","","",167,[[],["typeid",3]]],[11,"peek","","",168,[[["cursor",3]]]],[11,"display","","",168,[[]]],[11,"span","","",168,[[],["span",3]]],[11,"from","","",168,[[]]],[11,"into","","",168,[[]]],[11,"to_owned","","",168,[[]]],[11,"clone_into","","",168,[[]]],[11,"borrow","","",168,[[]]],[11,"borrow_mut","","",168,[[]]],[11,"try_from","","",168,[[],["result",4]]],[11,"try_into","","",168,[[],["result",4]]],[11,"type_id","","",168,[[],["typeid",3]]],[11,"from","","",169,[[]]],[11,"into","","",169,[[]]],[11,"borrow","","",169,[[]]],[11,"borrow_mut","","",169,[[]]],[11,"try_from","","",169,[[],["result",4]]],[11,"try_into","","",169,[[],["result",4]]],[11,"type_id","","",169,[[],["typeid",3]]],[11,"from","","",170,[[]]],[11,"into","","",170,[[]]],[11,"to_owned","","",170,[[]]],[11,"clone_into","","",170,[[]]],[11,"borrow","","",170,[[]]],[11,"borrow_mut","","",170,[[]]],[11,"try_from","","",170,[[],["result",4]]],[11,"try_into","","",170,[[],["result",4]]],[11,"type_id","","",170,[[],["typeid",3]]],[11,"from","","",171,[[]]],[11,"into","","",171,[[]]],[11,"to_owned","","",171,[[]]],[11,"clone_into","","",171,[[]]],[11,"borrow","","",171,[[]]],[11,"borrow_mut","","",171,[[]]],[11,"try_from","","",171,[[],["result",4]]],[11,"try_into","","",171,[[],["result",4]]],[11,"type_id","","",171,[[],["typeid",3]]],[11,"span","","",172,[[],["span",3]]],[11,"from","","",172,[[]]],[11,"into","","",172,[[]]],[11,"to_owned","","",172,[[]]],[11,"clone_into","","",172,[[]]],[11,"borrow","","",172,[[]]],[11,"borrow_mut","","",172,[[]]],[11,"try_from","","",172,[[],["result",4]]],[11,"try_into","","",172,[[],["result",4]]],[11,"type_id","","",172,[[],["typeid",3]]],[11,"span","","",173,[[],["span",3]]],[11,"from","","",173,[[]]],[11,"into","","",173,[[]]],[11,"to_owned","","",173,[[]]],[11,"clone_into","","",173,[[]]],[11,"borrow","","",173,[[]]],[11,"borrow_mut","","",173,[[]]],[11,"try_from","","",173,[[],["result",4]]],[11,"try_into","","",173,[[],["result",4]]],[11,"type_id","","",173,[[],["typeid",3]]],[11,"span","","",174,[[],["span",3]]],[11,"from","","",174,[[]]],[11,"into","","",174,[[]]],[11,"to_owned","","",174,[[]]],[11,"clone_into","","",174,[[]]],[11,"borrow","","",174,[[]]],[11,"borrow_mut","","",174,[[]]],[11,"try_from","","",174,[[],["result",4]]],[11,"try_into","","",174,[[],["result",4]]],[11,"type_id","","",174,[[],["typeid",3]]],[11,"span","","",175,[[],["span",3]]],[11,"from","","",175,[[]]],[11,"into","","",175,[[]]],[11,"to_owned","","",175,[[]]],[11,"clone_into","","",175,[[]]],[11,"borrow","","",175,[[]]],[11,"borrow_mut","","",175,[[]]],[11,"try_from","","",175,[[],["result",4]]],[11,"try_into","","",175,[[],["result",4]]],[11,"type_id","","",175,[[],["typeid",3]]],[11,"span","","",176,[[],["span",3]]],[11,"from","","",176,[[]]],[11,"into","","",176,[[]]],[11,"to_owned","","",176,[[]]],[11,"clone_into","","",176,[[]]],[11,"borrow","","",176,[[]]],[11,"borrow_mut","","",176,[[]]],[11,"try_from","","",176,[[],["result",4]]],[11,"try_into","","",176,[[],["result",4]]],[11,"type_id","","",176,[[],["typeid",3]]],[11,"span","","",177,[[],["span",3]]],[11,"from","","",177,[[]]],[11,"into","","",177,[[]]],[11,"to_owned","","",177,[[]]],[11,"clone_into","","",177,[[]]],[11,"borrow","","",177,[[]]],[11,"borrow_mut","","",177,[[]]],[11,"try_from","","",177,[[],["result",4]]],[11,"try_into","","",177,[[],["result",4]]],[11,"type_id","","",177,[[],["typeid",3]]],[11,"span","","",178,[[],["span",3]]],[11,"from","","",178,[[]]],[11,"into","","",178,[[]]],[11,"to_owned","","",178,[[]]],[11,"clone_into","","",178,[[]]],[11,"borrow","","",178,[[]]],[11,"borrow_mut","","",178,[[]]],[11,"try_from","","",178,[[],["result",4]]],[11,"try_into","","",178,[[],["result",4]]],[11,"type_id","","",178,[[],["typeid",3]]],[11,"span","","",179,[[],["span",3]]],[11,"from","","",179,[[]]],[11,"into","","",179,[[]]],[11,"to_owned","","",179,[[]]],[11,"clone_into","","",179,[[]]],[11,"borrow","","",179,[[]]],[11,"borrow_mut","","",179,[[]]],[11,"try_from","","",179,[[],["result",4]]],[11,"try_into","","",179,[[],["result",4]]],[11,"type_id","","",179,[[],["typeid",3]]],[11,"peek","syn::token","",180,[[["cursor",3]]]],[11,"display","","",180,[[]]],[11,"span","","",180,[[],["span",3]]],[11,"from","","",180,[[]]],[11,"into","","",180,[[]]],[11,"to_owned","","",180,[[]]],[11,"clone_into","","",180,[[]]],[11,"borrow","","",180,[[]]],[11,"borrow_mut","","",180,[[]]],[11,"try_from","","",180,[[],["result",4]]],[11,"try_into","","",180,[[],["result",4]]],[11,"type_id","","",180,[[],["typeid",3]]],[11,"peek","","",181,[[["cursor",3]]]],[11,"display","","",181,[[]]],[11,"span","","",181,[[],["span",3]]],[11,"from","","",181,[[]]],[11,"into","","",181,[[]]],[11,"to_owned","","",181,[[]]],[11,"clone_into","","",181,[[]]],[11,"borrow","","",181,[[]]],[11,"borrow_mut","","",181,[[]]],[11,"try_from","","",181,[[],["result",4]]],[11,"try_into","","",181,[[],["result",4]]],[11,"type_id","","",181,[[],["typeid",3]]],[11,"peek","","",182,[[["cursor",3]]]],[11,"display","","",182,[[]]],[11,"span","","",182,[[],["span",3]]],[11,"from","","",182,[[]]],[11,"into","","",182,[[]]],[11,"to_owned","","",182,[[]]],[11,"clone_into","","",182,[[]]],[11,"borrow","","",182,[[]]],[11,"borrow_mut","","",182,[[]]],[11,"try_from","","",182,[[],["result",4]]],[11,"try_into","","",182,[[],["result",4]]],[11,"type_id","","",182,[[],["typeid",3]]],[11,"peek","","",183,[[["cursor",3]]]],[11,"display","","",183,[[]]],[11,"span","","",183,[[],["span",3]]],[11,"from","","",183,[[]]],[11,"into","","",183,[[]]],[11,"to_owned","","",183,[[]]],[11,"clone_into","","",183,[[]]],[11,"borrow","","",183,[[]]],[11,"borrow_mut","","",183,[[]]],[11,"try_from","","",183,[[],["result",4]]],[11,"try_into","","",183,[[],["result",4]]],[11,"type_id","","",183,[[],["typeid",3]]],[11,"peek","","",184,[[["cursor",3]]]],[11,"display","","",184,[[]]],[11,"span","","",184,[[],["span",3]]],[11,"from","","",184,[[]]],[11,"into","","",184,[[]]],[11,"to_owned","","",184,[[]]],[11,"clone_into","","",184,[[]]],[11,"borrow","","",184,[[]]],[11,"borrow_mut","","",184,[[]]],[11,"try_from","","",184,[[],["result",4]]],[11,"try_into","","",184,[[],["result",4]]],[11,"type_id","","",184,[[],["typeid",3]]],[11,"peek","","",185,[[["cursor",3]]]],[11,"display","","",185,[[]]],[11,"span","","",185,[[],["span",3]]],[11,"from","","",185,[[]]],[11,"into","","",185,[[]]],[11,"to_owned","","",185,[[]]],[11,"clone_into","","",185,[[]]],[11,"borrow","","",185,[[]]],[11,"borrow_mut","","",185,[[]]],[11,"try_from","","",185,[[],["result",4]]],[11,"try_into","","",185,[[],["result",4]]],[11,"type_id","","",185,[[],["typeid",3]]],[11,"peek","","",186,[[["cursor",3]]]],[11,"display","","",186,[[]]],[11,"span","","",186,[[],["span",3]]],[11,"from","","",186,[[]]],[11,"into","","",186,[[]]],[11,"to_owned","","",186,[[]]],[11,"clone_into","","",186,[[]]],[11,"borrow","","",186,[[]]],[11,"borrow_mut","","",186,[[]]],[11,"try_from","","",186,[[],["result",4]]],[11,"try_into","","",186,[[],["result",4]]],[11,"type_id","","",186,[[],["typeid",3]]],[11,"peek","","",187,[[["cursor",3]]]],[11,"display","","",187,[[]]],[11,"span","","",187,[[],["span",3]]],[11,"from","","",187,[[]]],[11,"into","","",187,[[]]],[11,"to_owned","","",187,[[]]],[11,"clone_into","","",187,[[]]],[11,"borrow","","",187,[[]]],[11,"borrow_mut","","",187,[[]]],[11,"try_from","","",187,[[],["result",4]]],[11,"try_into","","",187,[[],["result",4]]],[11,"type_id","","",187,[[],["typeid",3]]],[11,"peek","","",188,[[["cursor",3]]]],[11,"display","","",188,[[]]],[11,"span","","",188,[[],["span",3]]],[11,"from","","",188,[[]]],[11,"into","","",188,[[]]],[11,"to_owned","","",188,[[]]],[11,"clone_into","","",188,[[]]],[11,"borrow","","",188,[[]]],[11,"borrow_mut","","",188,[[]]],[11,"try_from","","",188,[[],["result",4]]],[11,"try_into","","",188,[[],["result",4]]],[11,"type_id","","",188,[[],["typeid",3]]],[11,"peek","","",189,[[["cursor",3]]]],[11,"display","","",189,[[]]],[11,"span","","",189,[[],["span",3]]],[11,"from","","",189,[[]]],[11,"into","","",189,[[]]],[11,"to_owned","","",189,[[]]],[11,"clone_into","","",189,[[]]],[11,"borrow","","",189,[[]]],[11,"borrow_mut","","",189,[[]]],[11,"try_from","","",189,[[],["result",4]]],[11,"try_into","","",189,[[],["result",4]]],[11,"type_id","","",189,[[],["typeid",3]]],[11,"peek","","",190,[[["cursor",3]]]],[11,"display","","",190,[[]]],[11,"span","","",190,[[],["span",3]]],[11,"from","","",190,[[]]],[11,"into","","",190,[[]]],[11,"to_owned","","",190,[[]]],[11,"clone_into","","",190,[[]]],[11,"borrow","","",190,[[]]],[11,"borrow_mut","","",190,[[]]],[11,"try_from","","",190,[[],["result",4]]],[11,"try_into","","",190,[[],["result",4]]],[11,"type_id","","",190,[[],["typeid",3]]],[11,"peek","","",191,[[["cursor",3]]]],[11,"display","","",191,[[]]],[11,"span","","",191,[[],["span",3]]],[11,"from","","",191,[[]]],[11,"into","","",191,[[]]],[11,"to_owned","","",191,[[]]],[11,"clone_into","","",191,[[]]],[11,"borrow","","",191,[[]]],[11,"borrow_mut","","",191,[[]]],[11,"try_from","","",191,[[],["result",4]]],[11,"try_into","","",191,[[],["result",4]]],[11,"type_id","","",191,[[],["typeid",3]]],[11,"peek","","",192,[[["cursor",3]]]],[11,"display","","",192,[[]]],[11,"span","","",192,[[],["span",3]]],[11,"from","","",192,[[]]],[11,"into","","",192,[[]]],[11,"to_owned","","",192,[[]]],[11,"clone_into","","",192,[[]]],[11,"borrow","","",192,[[]]],[11,"borrow_mut","","",192,[[]]],[11,"try_from","","",192,[[],["result",4]]],[11,"try_into","","",192,[[],["result",4]]],[11,"type_id","","",192,[[],["typeid",3]]],[11,"peek","","",193,[[["cursor",3]]]],[11,"display","","",193,[[]]],[11,"span","","",193,[[],["span",3]]],[11,"from","","",193,[[]]],[11,"into","","",193,[[]]],[11,"to_owned","","",193,[[]]],[11,"clone_into","","",193,[[]]],[11,"borrow","","",193,[[]]],[11,"borrow_mut","","",193,[[]]],[11,"try_from","","",193,[[],["result",4]]],[11,"try_into","","",193,[[],["result",4]]],[11,"type_id","","",193,[[],["typeid",3]]],[11,"peek","","",194,[[["cursor",3]]]],[11,"display","","",194,[[]]],[11,"span","","",194,[[],["span",3]]],[11,"from","","",194,[[]]],[11,"into","","",194,[[]]],[11,"to_owned","","",194,[[]]],[11,"clone_into","","",194,[[]]],[11,"borrow","","",194,[[]]],[11,"borrow_mut","","",194,[[]]],[11,"try_from","","",194,[[],["result",4]]],[11,"try_into","","",194,[[],["result",4]]],[11,"type_id","","",194,[[],["typeid",3]]],[11,"peek","","",195,[[["cursor",3]]]],[11,"display","","",195,[[]]],[11,"span","","",195,[[],["span",3]]],[11,"from","","",195,[[]]],[11,"into","","",195,[[]]],[11,"to_owned","","",195,[[]]],[11,"clone_into","","",195,[[]]],[11,"borrow","","",195,[[]]],[11,"borrow_mut","","",195,[[]]],[11,"try_from","","",195,[[],["result",4]]],[11,"try_into","","",195,[[],["result",4]]],[11,"type_id","","",195,[[],["typeid",3]]],[11,"peek","","",196,[[["cursor",3]]]],[11,"display","","",196,[[]]],[11,"span","","",196,[[],["span",3]]],[11,"from","","",196,[[]]],[11,"into","","",196,[[]]],[11,"to_owned","","",196,[[]]],[11,"clone_into","","",196,[[]]],[11,"borrow","","",196,[[]]],[11,"borrow_mut","","",196,[[]]],[11,"try_from","","",196,[[],["result",4]]],[11,"try_into","","",196,[[],["result",4]]],[11,"type_id","","",196,[[],["typeid",3]]],[11,"peek","","",197,[[["cursor",3]]]],[11,"display","","",197,[[]]],[11,"span","","",197,[[],["span",3]]],[11,"from","","",197,[[]]],[11,"into","","",197,[[]]],[11,"to_owned","","",197,[[]]],[11,"clone_into","","",197,[[]]],[11,"borrow","","",197,[[]]],[11,"borrow_mut","","",197,[[]]],[11,"try_from","","",197,[[],["result",4]]],[11,"try_into","","",197,[[],["result",4]]],[11,"type_id","","",197,[[],["typeid",3]]],[11,"peek","","",198,[[["cursor",3]]]],[11,"display","","",198,[[]]],[11,"span","","",198,[[],["span",3]]],[11,"from","","",198,[[]]],[11,"into","","",198,[[]]],[11,"to_owned","","",198,[[]]],[11,"clone_into","","",198,[[]]],[11,"borrow","","",198,[[]]],[11,"borrow_mut","","",198,[[]]],[11,"try_from","","",198,[[],["result",4]]],[11,"try_into","","",198,[[],["result",4]]],[11,"type_id","","",198,[[],["typeid",3]]],[11,"peek","","",199,[[["cursor",3]]]],[11,"display","","",199,[[]]],[11,"span","","",199,[[],["span",3]]],[11,"from","","",199,[[]]],[11,"into","","",199,[[]]],[11,"to_owned","","",199,[[]]],[11,"clone_into","","",199,[[]]],[11,"borrow","","",199,[[]]],[11,"borrow_mut","","",199,[[]]],[11,"try_from","","",199,[[],["result",4]]],[11,"try_into","","",199,[[],["result",4]]],[11,"type_id","","",199,[[],["typeid",3]]],[11,"peek","","",200,[[["cursor",3]]]],[11,"display","","",200,[[]]],[11,"span","","",200,[[],["span",3]]],[11,"from","","",200,[[]]],[11,"into","","",200,[[]]],[11,"to_owned","","",200,[[]]],[11,"clone_into","","",200,[[]]],[11,"borrow","","",200,[[]]],[11,"borrow_mut","","",200,[[]]],[11,"try_from","","",200,[[],["result",4]]],[11,"try_into","","",200,[[],["result",4]]],[11,"type_id","","",200,[[],["typeid",3]]],[11,"peek","","",201,[[["cursor",3]]]],[11,"display","","",201,[[]]],[11,"span","","",201,[[],["span",3]]],[11,"from","","",201,[[]]],[11,"into","","",201,[[]]],[11,"to_owned","","",201,[[]]],[11,"clone_into","","",201,[[]]],[11,"borrow","","",201,[[]]],[11,"borrow_mut","","",201,[[]]],[11,"try_from","","",201,[[],["result",4]]],[11,"try_into","","",201,[[],["result",4]]],[11,"type_id","","",201,[[],["typeid",3]]],[11,"peek","","",202,[[["cursor",3]]]],[11,"display","","",202,[[]]],[11,"span","","",202,[[],["span",3]]],[11,"from","","",202,[[]]],[11,"into","","",202,[[]]],[11,"to_owned","","",202,[[]]],[11,"clone_into","","",202,[[]]],[11,"borrow","","",202,[[]]],[11,"borrow_mut","","",202,[[]]],[11,"try_from","","",202,[[],["result",4]]],[11,"try_into","","",202,[[],["result",4]]],[11,"type_id","","",202,[[],["typeid",3]]],[11,"peek","","",203,[[["cursor",3]]]],[11,"display","","",203,[[]]],[11,"span","","",203,[[],["span",3]]],[11,"from","","",203,[[]]],[11,"into","","",203,[[]]],[11,"to_owned","","",203,[[]]],[11,"clone_into","","",203,[[]]],[11,"borrow","","",203,[[]]],[11,"borrow_mut","","",203,[[]]],[11,"try_from","","",203,[[],["result",4]]],[11,"try_into","","",203,[[],["result",4]]],[11,"type_id","","",203,[[],["typeid",3]]],[11,"peek","","",204,[[["cursor",3]]]],[11,"display","","",204,[[]]],[11,"span","","",204,[[],["span",3]]],[11,"from","","",204,[[]]],[11,"into","","",204,[[]]],[11,"to_owned","","",204,[[]]],[11,"clone_into","","",204,[[]]],[11,"borrow","","",204,[[]]],[11,"borrow_mut","","",204,[[]]],[11,"try_from","","",204,[[],["result",4]]],[11,"try_into","","",204,[[],["result",4]]],[11,"type_id","","",204,[[],["typeid",3]]],[11,"peek","","",205,[[["cursor",3]]]],[11,"display","","",205,[[]]],[11,"span","","",205,[[],["span",3]]],[11,"from","","",205,[[]]],[11,"into","","",205,[[]]],[11,"to_owned","","",205,[[]]],[11,"clone_into","","",205,[[]]],[11,"borrow","","",205,[[]]],[11,"borrow_mut","","",205,[[]]],[11,"try_from","","",205,[[],["result",4]]],[11,"try_into","","",205,[[],["result",4]]],[11,"type_id","","",205,[[],["typeid",3]]],[11,"peek","","",206,[[["cursor",3]]]],[11,"display","","",206,[[]]],[11,"span","","",206,[[],["span",3]]],[11,"from","","",206,[[]]],[11,"into","","",206,[[]]],[11,"to_owned","","",206,[[]]],[11,"clone_into","","",206,[[]]],[11,"borrow","","",206,[[]]],[11,"borrow_mut","","",206,[[]]],[11,"try_from","","",206,[[],["result",4]]],[11,"try_into","","",206,[[],["result",4]]],[11,"type_id","","",206,[[],["typeid",3]]],[11,"peek","","",207,[[["cursor",3]]]],[11,"display","","",207,[[]]],[11,"span","","",207,[[],["span",3]]],[11,"from","","",207,[[]]],[11,"into","","",207,[[]]],[11,"to_owned","","",207,[[]]],[11,"clone_into","","",207,[[]]],[11,"borrow","","",207,[[]]],[11,"borrow_mut","","",207,[[]]],[11,"try_from","","",207,[[],["result",4]]],[11,"try_into","","",207,[[],["result",4]]],[11,"type_id","","",207,[[],["typeid",3]]],[11,"peek","","",208,[[["cursor",3]]]],[11,"display","","",208,[[]]],[11,"span","","",208,[[],["span",3]]],[11,"from","","",208,[[]]],[11,"into","","",208,[[]]],[11,"to_owned","","",208,[[]]],[11,"clone_into","","",208,[[]]],[11,"borrow","","",208,[[]]],[11,"borrow_mut","","",208,[[]]],[11,"try_from","","",208,[[],["result",4]]],[11,"try_into","","",208,[[],["result",4]]],[11,"type_id","","",208,[[],["typeid",3]]],[11,"peek","","",209,[[["cursor",3]]]],[11,"display","","",209,[[]]],[11,"span","","",209,[[],["span",3]]],[11,"from","","",209,[[]]],[11,"into","","",209,[[]]],[11,"to_owned","","",209,[[]]],[11,"clone_into","","",209,[[]]],[11,"borrow","","",209,[[]]],[11,"borrow_mut","","",209,[[]]],[11,"try_from","","",209,[[],["result",4]]],[11,"try_into","","",209,[[],["result",4]]],[11,"type_id","","",209,[[],["typeid",3]]],[11,"peek","","",210,[[["cursor",3]]]],[11,"display","","",210,[[]]],[11,"span","","",210,[[],["span",3]]],[11,"from","","",210,[[]]],[11,"into","","",210,[[]]],[11,"to_owned","","",210,[[]]],[11,"clone_into","","",210,[[]]],[11,"borrow","","",210,[[]]],[11,"borrow_mut","","",210,[[]]],[11,"try_from","","",210,[[],["result",4]]],[11,"try_into","","",210,[[],["result",4]]],[11,"type_id","","",210,[[],["typeid",3]]],[11,"peek","","",211,[[["cursor",3]]]],[11,"display","","",211,[[]]],[11,"span","","",211,[[],["span",3]]],[11,"from","","",211,[[]]],[11,"into","","",211,[[]]],[11,"to_owned","","",211,[[]]],[11,"clone_into","","",211,[[]]],[11,"borrow","","",211,[[]]],[11,"borrow_mut","","",211,[[]]],[11,"try_from","","",211,[[],["result",4]]],[11,"try_into","","",211,[[],["result",4]]],[11,"type_id","","",211,[[],["typeid",3]]],[11,"peek","","",212,[[["cursor",3]]]],[11,"display","","",212,[[]]],[11,"span","","",212,[[],["span",3]]],[11,"from","","",212,[[]]],[11,"into","","",212,[[]]],[11,"to_owned","","",212,[[]]],[11,"clone_into","","",212,[[]]],[11,"borrow","","",212,[[]]],[11,"borrow_mut","","",212,[[]]],[11,"try_from","","",212,[[],["result",4]]],[11,"try_into","","",212,[[],["result",4]]],[11,"type_id","","",212,[[],["typeid",3]]],[11,"peek","","",213,[[["cursor",3]]]],[11,"display","","",213,[[]]],[11,"span","","",213,[[],["span",3]]],[11,"from","","",213,[[]]],[11,"into","","",213,[[]]],[11,"to_owned","","",213,[[]]],[11,"clone_into","","",213,[[]]],[11,"borrow","","",213,[[]]],[11,"borrow_mut","","",213,[[]]],[11,"try_from","","",213,[[],["result",4]]],[11,"try_into","","",213,[[],["result",4]]],[11,"type_id","","",213,[[],["typeid",3]]],[11,"peek","","",214,[[["cursor",3]]]],[11,"display","","",214,[[]]],[11,"span","","",214,[[],["span",3]]],[11,"from","","",214,[[]]],[11,"into","","",214,[[]]],[11,"to_owned","","",214,[[]]],[11,"clone_into","","",214,[[]]],[11,"borrow","","",214,[[]]],[11,"borrow_mut","","",214,[[]]],[11,"try_from","","",214,[[],["result",4]]],[11,"try_into","","",214,[[],["result",4]]],[11,"type_id","","",214,[[],["typeid",3]]],[11,"peek","","",215,[[["cursor",3]]]],[11,"display","","",215,[[]]],[11,"span","","",215,[[],["span",3]]],[11,"from","","",215,[[]]],[11,"into","","",215,[[]]],[11,"to_owned","","",215,[[]]],[11,"clone_into","","",215,[[]]],[11,"borrow","","",215,[[]]],[11,"borrow_mut","","",215,[[]]],[11,"try_from","","",215,[[],["result",4]]],[11,"try_into","","",215,[[],["result",4]]],[11,"type_id","","",215,[[],["typeid",3]]],[11,"peek","","",216,[[["cursor",3]]]],[11,"display","","",216,[[]]],[11,"span","","",216,[[],["span",3]]],[11,"from","","",216,[[]]],[11,"into","","",216,[[]]],[11,"to_owned","","",216,[[]]],[11,"clone_into","","",216,[[]]],[11,"borrow","","",216,[[]]],[11,"borrow_mut","","",216,[[]]],[11,"try_from","","",216,[[],["result",4]]],[11,"try_into","","",216,[[],["result",4]]],[11,"type_id","","",216,[[],["typeid",3]]],[11,"peek","","",217,[[["cursor",3]]]],[11,"display","","",217,[[]]],[11,"span","","",217,[[],["span",3]]],[11,"from","","",217,[[]]],[11,"into","","",217,[[]]],[11,"to_owned","","",217,[[]]],[11,"clone_into","","",217,[[]]],[11,"borrow","","",217,[[]]],[11,"borrow_mut","","",217,[[]]],[11,"try_from","","",217,[[],["result",4]]],[11,"try_into","","",217,[[],["result",4]]],[11,"type_id","","",217,[[],["typeid",3]]],[11,"peek","","",218,[[["cursor",3]]]],[11,"display","","",218,[[]]],[11,"span","","",218,[[],["span",3]]],[11,"from","","",218,[[]]],[11,"into","","",218,[[]]],[11,"to_owned","","",218,[[]]],[11,"clone_into","","",218,[[]]],[11,"borrow","","",218,[[]]],[11,"borrow_mut","","",218,[[]]],[11,"try_from","","",218,[[],["result",4]]],[11,"try_into","","",218,[[],["result",4]]],[11,"type_id","","",218,[[],["typeid",3]]],[11,"peek","","",219,[[["cursor",3]]]],[11,"display","","",219,[[]]],[11,"span","","",219,[[],["span",3]]],[11,"from","","",219,[[]]],[11,"into","","",219,[[]]],[11,"to_owned","","",219,[[]]],[11,"clone_into","","",219,[[]]],[11,"borrow","","",219,[[]]],[11,"borrow_mut","","",219,[[]]],[11,"try_from","","",219,[[],["result",4]]],[11,"try_into","","",219,[[],["result",4]]],[11,"type_id","","",219,[[],["typeid",3]]],[11,"peek","","",220,[[["cursor",3]]]],[11,"display","","",220,[[]]],[11,"span","","",220,[[],["span",3]]],[11,"from","","",220,[[]]],[11,"into","","",220,[[]]],[11,"to_owned","","",220,[[]]],[11,"clone_into","","",220,[[]]],[11,"borrow","","",220,[[]]],[11,"borrow_mut","","",220,[[]]],[11,"try_from","","",220,[[],["result",4]]],[11,"try_into","","",220,[[],["result",4]]],[11,"type_id","","",220,[[],["typeid",3]]],[11,"peek","","",221,[[["cursor",3]]]],[11,"display","","",221,[[]]],[11,"span","","",221,[[],["span",3]]],[11,"from","","",221,[[]]],[11,"into","","",221,[[]]],[11,"to_owned","","",221,[[]]],[11,"clone_into","","",221,[[]]],[11,"borrow","","",221,[[]]],[11,"borrow_mut","","",221,[[]]],[11,"try_from","","",221,[[],["result",4]]],[11,"try_into","","",221,[[],["result",4]]],[11,"type_id","","",221,[[],["typeid",3]]],[11,"peek","","",222,[[["cursor",3]]]],[11,"display","","",222,[[]]],[11,"span","","",222,[[],["span",3]]],[11,"from","","",222,[[]]],[11,"into","","",222,[[]]],[11,"to_owned","","",222,[[]]],[11,"clone_into","","",222,[[]]],[11,"borrow","","",222,[[]]],[11,"borrow_mut","","",222,[[]]],[11,"try_from","","",222,[[],["result",4]]],[11,"try_into","","",222,[[],["result",4]]],[11,"type_id","","",222,[[],["typeid",3]]],[11,"peek","","",223,[[["cursor",3]]]],[11,"display","","",223,[[]]],[11,"span","","",223,[[],["span",3]]],[11,"from","","",223,[[]]],[11,"into","","",223,[[]]],[11,"to_owned","","",223,[[]]],[11,"clone_into","","",223,[[]]],[11,"borrow","","",223,[[]]],[11,"borrow_mut","","",223,[[]]],[11,"try_from","","",223,[[],["result",4]]],[11,"try_into","","",223,[[],["result",4]]],[11,"type_id","","",223,[[],["typeid",3]]],[11,"peek","","",224,[[["cursor",3]]]],[11,"display","","",224,[[]]],[11,"span","","",224,[[],["span",3]]],[11,"from","","",224,[[]]],[11,"into","","",224,[[]]],[11,"to_owned","","",224,[[]]],[11,"clone_into","","",224,[[]]],[11,"borrow","","",224,[[]]],[11,"borrow_mut","","",224,[[]]],[11,"try_from","","",224,[[],["result",4]]],[11,"try_into","","",224,[[],["result",4]]],[11,"type_id","","",224,[[],["typeid",3]]],[11,"peek","","",225,[[["cursor",3]]]],[11,"display","","",225,[[]]],[11,"span","","",225,[[],["span",3]]],[11,"from","","",225,[[]]],[11,"into","","",225,[[]]],[11,"to_owned","","",225,[[]]],[11,"clone_into","","",225,[[]]],[11,"borrow","","",225,[[]]],[11,"borrow_mut","","",225,[[]]],[11,"try_from","","",225,[[],["result",4]]],[11,"try_into","","",225,[[],["result",4]]],[11,"type_id","","",225,[[],["typeid",3]]],[11,"peek","","",226,[[["cursor",3]]]],[11,"display","","",226,[[]]],[11,"span","","",226,[[],["span",3]]],[11,"from","","",226,[[]]],[11,"into","","",226,[[]]],[11,"to_owned","","",226,[[]]],[11,"clone_into","","",226,[[]]],[11,"borrow","","",226,[[]]],[11,"borrow_mut","","",226,[[]]],[11,"try_from","","",226,[[],["result",4]]],[11,"try_into","","",226,[[],["result",4]]],[11,"type_id","","",226,[[],["typeid",3]]],[11,"peek","","",227,[[["cursor",3]]]],[11,"display","","",227,[[]]],[11,"span","","",227,[[],["span",3]]],[11,"from","","",227,[[]]],[11,"into","","",227,[[]]],[11,"to_owned","","",227,[[]]],[11,"clone_into","","",227,[[]]],[11,"borrow","","",227,[[]]],[11,"borrow_mut","","",227,[[]]],[11,"try_from","","",227,[[],["result",4]]],[11,"try_into","","",227,[[],["result",4]]],[11,"type_id","","",227,[[],["typeid",3]]],[11,"peek","","",228,[[["cursor",3]]]],[11,"display","","",228,[[]]],[11,"span","","",228,[[],["span",3]]],[11,"from","","",228,[[]]],[11,"into","","",228,[[]]],[11,"to_owned","","",228,[[]]],[11,"clone_into","","",228,[[]]],[11,"borrow","","",228,[[]]],[11,"borrow_mut","","",228,[[]]],[11,"try_from","","",228,[[],["result",4]]],[11,"try_into","","",228,[[],["result",4]]],[11,"type_id","","",228,[[],["typeid",3]]],[11,"peek","","",229,[[["cursor",3]]]],[11,"display","","",229,[[]]],[11,"span","","",229,[[],["span",3]]],[11,"from","","",229,[[]]],[11,"into","","",229,[[]]],[11,"to_owned","","",229,[[]]],[11,"clone_into","","",229,[[]]],[11,"borrow","","",229,[[]]],[11,"borrow_mut","","",229,[[]]],[11,"try_from","","",229,[[],["result",4]]],[11,"try_into","","",229,[[],["result",4]]],[11,"type_id","","",229,[[],["typeid",3]]],[11,"peek","","",230,[[["cursor",3]]]],[11,"display","","",230,[[]]],[11,"span","","",230,[[],["span",3]]],[11,"from","","",230,[[]]],[11,"into","","",230,[[]]],[11,"to_owned","","",230,[[]]],[11,"clone_into","","",230,[[]]],[11,"borrow","","",230,[[]]],[11,"borrow_mut","","",230,[[]]],[11,"try_from","","",230,[[],["result",4]]],[11,"try_into","","",230,[[],["result",4]]],[11,"type_id","","",230,[[],["typeid",3]]],[11,"peek","","",231,[[["cursor",3]]]],[11,"display","","",231,[[]]],[11,"span","","",231,[[],["span",3]]],[11,"from","","",231,[[]]],[11,"into","","",231,[[]]],[11,"to_owned","","",231,[[]]],[11,"clone_into","","",231,[[]]],[11,"borrow","","",231,[[]]],[11,"borrow_mut","","",231,[[]]],[11,"try_from","","",231,[[],["result",4]]],[11,"try_into","","",231,[[],["result",4]]],[11,"type_id","","",231,[[],["typeid",3]]],[11,"peek","","",232,[[["cursor",3]]]],[11,"display","","",232,[[]]],[11,"span","","",232,[[],["span",3]]],[11,"from","","",232,[[]]],[11,"into","","",232,[[]]],[11,"to_owned","","",232,[[]]],[11,"clone_into","","",232,[[]]],[11,"borrow","","",232,[[]]],[11,"borrow_mut","","",232,[[]]],[11,"try_from","","",232,[[],["result",4]]],[11,"try_into","","",232,[[],["result",4]]],[11,"type_id","","",232,[[],["typeid",3]]],[11,"peek","","",233,[[["cursor",3]]]],[11,"display","","",233,[[]]],[11,"span","","",233,[[],["span",3]]],[11,"from","","",233,[[]]],[11,"into","","",233,[[]]],[11,"to_owned","","",233,[[]]],[11,"clone_into","","",233,[[]]],[11,"borrow","","",233,[[]]],[11,"borrow_mut","","",233,[[]]],[11,"try_from","","",233,[[],["result",4]]],[11,"try_into","","",233,[[],["result",4]]],[11,"type_id","","",233,[[],["typeid",3]]],[11,"peek","","",234,[[["cursor",3]]]],[11,"display","","",234,[[]]],[11,"span","","",234,[[],["span",3]]],[11,"from","","",234,[[]]],[11,"into","","",234,[[]]],[11,"to_owned","","",234,[[]]],[11,"clone_into","","",234,[[]]],[11,"borrow","","",234,[[]]],[11,"borrow_mut","","",234,[[]]],[11,"try_from","","",234,[[],["result",4]]],[11,"try_into","","",234,[[],["result",4]]],[11,"type_id","","",234,[[],["typeid",3]]],[11,"peek","","",235,[[["cursor",3]]]],[11,"display","","",235,[[]]],[11,"span","","",235,[[],["span",3]]],[11,"from","","",235,[[]]],[11,"into","","",235,[[]]],[11,"to_owned","","",235,[[]]],[11,"clone_into","","",235,[[]]],[11,"borrow","","",235,[[]]],[11,"borrow_mut","","",235,[[]]],[11,"try_from","","",235,[[],["result",4]]],[11,"try_into","","",235,[[],["result",4]]],[11,"type_id","","",235,[[],["typeid",3]]],[11,"peek","","",236,[[["cursor",3]]]],[11,"display","","",236,[[]]],[11,"span","","",236,[[],["span",3]]],[11,"from","","",236,[[]]],[11,"into","","",236,[[]]],[11,"to_owned","","",236,[[]]],[11,"clone_into","","",236,[[]]],[11,"borrow","","",236,[[]]],[11,"borrow_mut","","",236,[[]]],[11,"try_from","","",236,[[],["result",4]]],[11,"try_into","","",236,[[],["result",4]]],[11,"type_id","","",236,[[],["typeid",3]]],[11,"peek","","",237,[[["cursor",3]]]],[11,"display","","",237,[[]]],[11,"span","","",237,[[],["span",3]]],[11,"from","","",237,[[]]],[11,"into","","",237,[[]]],[11,"to_owned","","",237,[[]]],[11,"clone_into","","",237,[[]]],[11,"borrow","","",237,[[]]],[11,"borrow_mut","","",237,[[]]],[11,"try_from","","",237,[[],["result",4]]],[11,"try_into","","",237,[[],["result",4]]],[11,"type_id","","",237,[[],["typeid",3]]],[11,"peek","","",238,[[["cursor",3]]]],[11,"display","","",238,[[]]],[11,"span","","",238,[[],["span",3]]],[11,"from","","",238,[[]]],[11,"into","","",238,[[]]],[11,"to_owned","","",238,[[]]],[11,"clone_into","","",238,[[]]],[11,"borrow","","",238,[[]]],[11,"borrow_mut","","",238,[[]]],[11,"try_from","","",238,[[],["result",4]]],[11,"try_into","","",238,[[],["result",4]]],[11,"type_id","","",238,[[],["typeid",3]]],[11,"peek","","",239,[[["cursor",3]]]],[11,"display","","",239,[[]]],[11,"span","","",239,[[],["span",3]]],[11,"from","","",239,[[]]],[11,"into","","",239,[[]]],[11,"to_owned","","",239,[[]]],[11,"clone_into","","",239,[[]]],[11,"borrow","","",239,[[]]],[11,"borrow_mut","","",239,[[]]],[11,"try_from","","",239,[[],["result",4]]],[11,"try_into","","",239,[[],["result",4]]],[11,"type_id","","",239,[[],["typeid",3]]],[11,"peek","","",240,[[["cursor",3]]]],[11,"display","","",240,[[]]],[11,"span","","",240,[[],["span",3]]],[11,"from","","",240,[[]]],[11,"into","","",240,[[]]],[11,"to_owned","","",240,[[]]],[11,"clone_into","","",240,[[]]],[11,"borrow","","",240,[[]]],[11,"borrow_mut","","",240,[[]]],[11,"try_from","","",240,[[],["result",4]]],[11,"try_into","","",240,[[],["result",4]]],[11,"type_id","","",240,[[],["typeid",3]]],[11,"peek","","",241,[[["cursor",3]]]],[11,"display","","",241,[[]]],[11,"span","","",241,[[],["span",3]]],[11,"from","","",241,[[]]],[11,"into","","",241,[[]]],[11,"to_owned","","",241,[[]]],[11,"clone_into","","",241,[[]]],[11,"borrow","","",241,[[]]],[11,"borrow_mut","","",241,[[]]],[11,"try_from","","",241,[[],["result",4]]],[11,"try_into","","",241,[[],["result",4]]],[11,"type_id","","",241,[[],["typeid",3]]],[11,"peek","","",242,[[["cursor",3]]]],[11,"display","","",242,[[]]],[11,"span","","",242,[[],["span",3]]],[11,"from","","",242,[[]]],[11,"into","","",242,[[]]],[11,"to_owned","","",242,[[]]],[11,"clone_into","","",242,[[]]],[11,"borrow","","",242,[[]]],[11,"borrow_mut","","",242,[[]]],[11,"try_from","","",242,[[],["result",4]]],[11,"try_into","","",242,[[],["result",4]]],[11,"type_id","","",242,[[],["typeid",3]]],[11,"peek","","",243,[[["cursor",3]]]],[11,"display","","",243,[[]]],[11,"span","","",243,[[],["span",3]]],[11,"from","","",243,[[]]],[11,"into","","",243,[[]]],[11,"to_owned","","",243,[[]]],[11,"clone_into","","",243,[[]]],[11,"borrow","","",243,[[]]],[11,"borrow_mut","","",243,[[]]],[11,"try_from","","",243,[[],["result",4]]],[11,"try_into","","",243,[[],["result",4]]],[11,"type_id","","",243,[[],["typeid",3]]],[11,"peek","","",244,[[["cursor",3]]]],[11,"display","","",244,[[]]],[11,"span","","",244,[[],["span",3]]],[11,"from","","",244,[[]]],[11,"into","","",244,[[]]],[11,"to_owned","","",244,[[]]],[11,"clone_into","","",244,[[]]],[11,"borrow","","",244,[[]]],[11,"borrow_mut","","",244,[[]]],[11,"try_from","","",244,[[],["result",4]]],[11,"try_into","","",244,[[],["result",4]]],[11,"type_id","","",244,[[],["typeid",3]]],[11,"peek","","",245,[[["cursor",3]]]],[11,"display","","",245,[[]]],[11,"span","","",245,[[],["span",3]]],[11,"from","","",245,[[]]],[11,"into","","",245,[[]]],[11,"to_owned","","",245,[[]]],[11,"clone_into","","",245,[[]]],[11,"borrow","","",245,[[]]],[11,"borrow_mut","","",245,[[]]],[11,"try_from","","",245,[[],["result",4]]],[11,"try_into","","",245,[[],["result",4]]],[11,"type_id","","",245,[[],["typeid",3]]],[11,"peek","","",246,[[["cursor",3]]]],[11,"display","","",246,[[]]],[11,"span","","",246,[[],["span",3]]],[11,"from","","",246,[[]]],[11,"into","","",246,[[]]],[11,"to_owned","","",246,[[]]],[11,"clone_into","","",246,[[]]],[11,"borrow","","",246,[[]]],[11,"borrow_mut","","",246,[[]]],[11,"try_from","","",246,[[],["result",4]]],[11,"try_into","","",246,[[],["result",4]]],[11,"type_id","","",246,[[],["typeid",3]]],[11,"peek","","",247,[[["cursor",3]]]],[11,"display","","",247,[[]]],[11,"span","","",247,[[],["span",3]]],[11,"from","","",247,[[]]],[11,"into","","",247,[[]]],[11,"to_owned","","",247,[[]]],[11,"clone_into","","",247,[[]]],[11,"borrow","","",247,[[]]],[11,"borrow_mut","","",247,[[]]],[11,"try_from","","",247,[[],["result",4]]],[11,"try_into","","",247,[[],["result",4]]],[11,"type_id","","",247,[[],["typeid",3]]],[11,"peek","","",248,[[["cursor",3]]]],[11,"display","","",248,[[]]],[11,"span","","",248,[[],["span",3]]],[11,"from","","",248,[[]]],[11,"into","","",248,[[]]],[11,"to_owned","","",248,[[]]],[11,"clone_into","","",248,[[]]],[11,"borrow","","",248,[[]]],[11,"borrow_mut","","",248,[[]]],[11,"try_from","","",248,[[],["result",4]]],[11,"try_into","","",248,[[],["result",4]]],[11,"type_id","","",248,[[],["typeid",3]]],[11,"peek","","",249,[[["cursor",3]]]],[11,"display","","",249,[[]]],[11,"span","","",249,[[],["span",3]]],[11,"from","","",249,[[]]],[11,"into","","",249,[[]]],[11,"to_owned","","",249,[[]]],[11,"clone_into","","",249,[[]]],[11,"borrow","","",249,[[]]],[11,"borrow_mut","","",249,[[]]],[11,"try_from","","",249,[[],["result",4]]],[11,"try_into","","",249,[[],["result",4]]],[11,"type_id","","",249,[[],["typeid",3]]],[11,"peek","","",250,[[["cursor",3]]]],[11,"display","","",250,[[]]],[11,"span","","",250,[[],["span",3]]],[11,"from","","",250,[[]]],[11,"into","","",250,[[]]],[11,"to_owned","","",250,[[]]],[11,"clone_into","","",250,[[]]],[11,"borrow","","",250,[[]]],[11,"borrow_mut","","",250,[[]]],[11,"try_from","","",250,[[],["result",4]]],[11,"try_into","","",250,[[],["result",4]]],[11,"type_id","","",250,[[],["typeid",3]]],[11,"peek","","",251,[[["cursor",3]]]],[11,"display","","",251,[[]]],[11,"span","","",251,[[],["span",3]]],[11,"from","","",251,[[]]],[11,"into","","",251,[[]]],[11,"to_owned","","",251,[[]]],[11,"clone_into","","",251,[[]]],[11,"borrow","","",251,[[]]],[11,"borrow_mut","","",251,[[]]],[11,"try_from","","",251,[[],["result",4]]],[11,"try_into","","",251,[[],["result",4]]],[11,"type_id","","",251,[[],["typeid",3]]],[11,"peek","","",252,[[["cursor",3]]]],[11,"display","","",252,[[]]],[11,"span","","",252,[[],["span",3]]],[11,"from","","",252,[[]]],[11,"into","","",252,[[]]],[11,"to_owned","","",252,[[]]],[11,"clone_into","","",252,[[]]],[11,"borrow","","",252,[[]]],[11,"borrow_mut","","",252,[[]]],[11,"try_from","","",252,[[],["result",4]]],[11,"try_into","","",252,[[],["result",4]]],[11,"type_id","","",252,[[],["typeid",3]]],[11,"peek","","",253,[[["cursor",3]]]],[11,"display","","",253,[[]]],[11,"span","","",253,[[],["span",3]]],[11,"from","","",253,[[]]],[11,"into","","",253,[[]]],[11,"to_owned","","",253,[[]]],[11,"clone_into","","",253,[[]]],[11,"borrow","","",253,[[]]],[11,"borrow_mut","","",253,[[]]],[11,"try_from","","",253,[[],["result",4]]],[11,"try_into","","",253,[[],["result",4]]],[11,"type_id","","",253,[[],["typeid",3]]],[11,"peek","","",254,[[["cursor",3]]]],[11,"display","","",254,[[]]],[11,"span","","",254,[[],["span",3]]],[11,"from","","",254,[[]]],[11,"into","","",254,[[]]],[11,"to_owned","","",254,[[]]],[11,"clone_into","","",254,[[]]],[11,"borrow","","",254,[[]]],[11,"borrow_mut","","",254,[[]]],[11,"try_from","","",254,[[],["result",4]]],[11,"try_into","","",254,[[],["result",4]]],[11,"type_id","","",254,[[],["typeid",3]]],[11,"peek","","",255,[[["cursor",3]]]],[11,"display","","",255,[[]]],[11,"span","","",255,[[],["span",3]]],[11,"from","","",255,[[]]],[11,"into","","",255,[[]]],[11,"to_owned","","",255,[[]]],[11,"clone_into","","",255,[[]]],[11,"borrow","","",255,[[]]],[11,"borrow_mut","","",255,[[]]],[11,"try_from","","",255,[[],["result",4]]],[11,"try_into","","",255,[[],["result",4]]],[11,"type_id","","",255,[[],["typeid",3]]],[11,"peek","","",256,[[["cursor",3]]]],[11,"display","","",256,[[]]],[11,"span","","",256,[[],["span",3]]],[11,"from","","",256,[[]]],[11,"into","","",256,[[]]],[11,"to_owned","","",256,[[]]],[11,"clone_into","","",256,[[]]],[11,"borrow","","",256,[[]]],[11,"borrow_mut","","",256,[[]]],[11,"try_from","","",256,[[],["result",4]]],[11,"try_into","","",256,[[],["result",4]]],[11,"type_id","","",256,[[],["typeid",3]]],[11,"peek","","",257,[[["cursor",3]]]],[11,"display","","",257,[[]]],[11,"span","","",257,[[],["span",3]]],[11,"from","","",257,[[]]],[11,"into","","",257,[[]]],[11,"to_owned","","",257,[[]]],[11,"clone_into","","",257,[[]]],[11,"borrow","","",257,[[]]],[11,"borrow_mut","","",257,[[]]],[11,"try_from","","",257,[[],["result",4]]],[11,"try_into","","",257,[[],["result",4]]],[11,"type_id","","",257,[[],["typeid",3]]],[11,"peek","","",258,[[["cursor",3]]]],[11,"display","","",258,[[]]],[11,"span","","",258,[[],["span",3]]],[11,"from","","",258,[[]]],[11,"into","","",258,[[]]],[11,"to_owned","","",258,[[]]],[11,"clone_into","","",258,[[]]],[11,"borrow","","",258,[[]]],[11,"borrow_mut","","",258,[[]]],[11,"try_from","","",258,[[],["result",4]]],[11,"try_into","","",258,[[],["result",4]]],[11,"type_id","","",258,[[],["typeid",3]]],[11,"peek","","",259,[[["cursor",3]]]],[11,"display","","",259,[[]]],[11,"span","","",259,[[],["span",3]]],[11,"from","","",259,[[]]],[11,"into","","",259,[[]]],[11,"to_owned","","",259,[[]]],[11,"clone_into","","",259,[[]]],[11,"borrow","","",259,[[]]],[11,"borrow_mut","","",259,[[]]],[11,"try_from","","",259,[[],["result",4]]],[11,"try_into","","",259,[[],["result",4]]],[11,"type_id","","",259,[[],["typeid",3]]],[11,"peek","","",260,[[["cursor",3]]]],[11,"display","","",260,[[]]],[11,"span","","",260,[[],["span",3]]],[11,"from","","",260,[[]]],[11,"into","","",260,[[]]],[11,"to_owned","","",260,[[]]],[11,"clone_into","","",260,[[]]],[11,"borrow","","",260,[[]]],[11,"borrow_mut","","",260,[[]]],[11,"try_from","","",260,[[],["result",4]]],[11,"try_into","","",260,[[],["result",4]]],[11,"type_id","","",260,[[],["typeid",3]]],[11,"peek","","",261,[[["cursor",3]]]],[11,"display","","",261,[[]]],[11,"span","","",261,[[],["span",3]]],[11,"from","","",261,[[]]],[11,"into","","",261,[[]]],[11,"to_owned","","",261,[[]]],[11,"clone_into","","",261,[[]]],[11,"borrow","","",261,[[]]],[11,"borrow_mut","","",261,[[]]],[11,"try_from","","",261,[[],["result",4]]],[11,"try_into","","",261,[[],["result",4]]],[11,"type_id","","",261,[[],["typeid",3]]],[11,"peek","","",262,[[["cursor",3]]]],[11,"display","","",262,[[]]],[11,"span","","",262,[[],["span",3]]],[11,"from","","",262,[[]]],[11,"into","","",262,[[]]],[11,"to_owned","","",262,[[]]],[11,"clone_into","","",262,[[]]],[11,"borrow","","",262,[[]]],[11,"borrow_mut","","",262,[[]]],[11,"try_from","","",262,[[],["result",4]]],[11,"try_into","","",262,[[],["result",4]]],[11,"type_id","","",262,[[],["typeid",3]]],[11,"peek","","",263,[[["cursor",3]]]],[11,"display","","",263,[[]]],[11,"span","","",263,[[],["span",3]]],[11,"from","","",263,[[]]],[11,"into","","",263,[[]]],[11,"to_owned","","",263,[[]]],[11,"clone_into","","",263,[[]]],[11,"borrow","","",263,[[]]],[11,"borrow_mut","","",263,[[]]],[11,"try_from","","",263,[[],["result",4]]],[11,"try_into","","",263,[[],["result",4]]],[11,"type_id","","",263,[[],["typeid",3]]],[11,"peek","","",264,[[["cursor",3]]]],[11,"display","","",264,[[]]],[11,"span","","",264,[[],["span",3]]],[11,"from","","",264,[[]]],[11,"into","","",264,[[]]],[11,"to_owned","","",264,[[]]],[11,"clone_into","","",264,[[]]],[11,"borrow","","",264,[[]]],[11,"borrow_mut","","",264,[[]]],[11,"try_from","","",264,[[],["result",4]]],[11,"try_into","","",264,[[],["result",4]]],[11,"type_id","","",264,[[],["typeid",3]]],[11,"peek","","",265,[[["cursor",3]]]],[11,"display","","",265,[[]]],[11,"span","","",265,[[],["span",3]]],[11,"from","","",265,[[]]],[11,"into","","",265,[[]]],[11,"to_owned","","",265,[[]]],[11,"clone_into","","",265,[[]]],[11,"borrow","","",265,[[]]],[11,"borrow_mut","","",265,[[]]],[11,"try_from","","",265,[[],["result",4]]],[11,"try_into","","",265,[[],["result",4]]],[11,"type_id","","",265,[[],["typeid",3]]],[11,"peek","","",266,[[["cursor",3]]]],[11,"display","","",266,[[]]],[11,"span","","",266,[[],["span",3]]],[11,"from","","",266,[[]]],[11,"into","","",266,[[]]],[11,"to_owned","","",266,[[]]],[11,"clone_into","","",266,[[]]],[11,"borrow","","",266,[[]]],[11,"borrow_mut","","",266,[[]]],[11,"try_from","","",266,[[],["result",4]]],[11,"try_into","","",266,[[],["result",4]]],[11,"type_id","","",266,[[],["typeid",3]]],[11,"peek","","",267,[[["cursor",3]]]],[11,"display","","",267,[[]]],[11,"span","","",267,[[],["span",3]]],[11,"from","","",267,[[]]],[11,"into","","",267,[[]]],[11,"to_owned","","",267,[[]]],[11,"clone_into","","",267,[[]]],[11,"borrow","","",267,[[]]],[11,"borrow_mut","","",267,[[]]],[11,"try_from","","",267,[[],["result",4]]],[11,"try_into","","",267,[[],["result",4]]],[11,"type_id","","",267,[[],["typeid",3]]],[11,"peek","","",268,[[["cursor",3]]]],[11,"display","","",268,[[]]],[11,"span","","",268,[[],["span",3]]],[11,"from","","",268,[[]]],[11,"into","","",268,[[]]],[11,"to_owned","","",268,[[]]],[11,"clone_into","","",268,[[]]],[11,"borrow","","",268,[[]]],[11,"borrow_mut","","",268,[[]]],[11,"try_from","","",268,[[],["result",4]]],[11,"try_into","","",268,[[],["result",4]]],[11,"type_id","","",268,[[],["typeid",3]]],[11,"peek","","",269,[[["cursor",3]]]],[11,"display","","",269,[[]]],[11,"span","","",269,[[],["span",3]]],[11,"from","","",269,[[]]],[11,"into","","",269,[[]]],[11,"to_owned","","",269,[[]]],[11,"clone_into","","",269,[[]]],[11,"borrow","","",269,[[]]],[11,"borrow_mut","","",269,[[]]],[11,"try_from","","",269,[[],["result",4]]],[11,"try_into","","",269,[[],["result",4]]],[11,"type_id","","",269,[[],["typeid",3]]],[11,"peek","","",270,[[["cursor",3]]]],[11,"display","","",270,[[]]],[11,"span","","",270,[[],["span",3]]],[11,"from","","",270,[[]]],[11,"into","","",270,[[]]],[11,"to_owned","","",270,[[]]],[11,"clone_into","","",270,[[]]],[11,"borrow","","",270,[[]]],[11,"borrow_mut","","",270,[[]]],[11,"try_from","","",270,[[],["result",4]]],[11,"try_into","","",270,[[],["result",4]]],[11,"type_id","","",270,[[],["typeid",3]]],[11,"peek","","",271,[[["cursor",3]]]],[11,"display","","",271,[[]]],[11,"span","","",271,[[],["span",3]]],[11,"from","","",271,[[]]],[11,"into","","",271,[[]]],[11,"to_owned","","",271,[[]]],[11,"clone_into","","",271,[[]]],[11,"borrow","","",271,[[]]],[11,"borrow_mut","","",271,[[]]],[11,"try_from","","",271,[[],["result",4]]],[11,"try_into","","",271,[[],["result",4]]],[11,"type_id","","",271,[[],["typeid",3]]],[11,"peek","","",272,[[["cursor",3]]]],[11,"display","","",272,[[]]],[11,"span","","",272,[[],["span",3]]],[11,"from","","",272,[[]]],[11,"into","","",272,[[]]],[11,"to_owned","","",272,[[]]],[11,"clone_into","","",272,[[]]],[11,"borrow","","",272,[[]]],[11,"borrow_mut","","",272,[[]]],[11,"try_from","","",272,[[],["result",4]]],[11,"try_into","","",272,[[],["result",4]]],[11,"type_id","","",272,[[],["typeid",3]]],[11,"peek","","",273,[[["cursor",3]]]],[11,"display","","",273,[[]]],[11,"span","","",273,[[],["span",3]]],[11,"from","","",273,[[]]],[11,"into","","",273,[[]]],[11,"to_owned","","",273,[[]]],[11,"clone_into","","",273,[[]]],[11,"borrow","","",273,[[]]],[11,"borrow_mut","","",273,[[]]],[11,"try_from","","",273,[[],["result",4]]],[11,"try_into","","",273,[[],["result",4]]],[11,"type_id","","",273,[[],["typeid",3]]],[11,"peek","","",274,[[["cursor",3]]]],[11,"display","","",274,[[]]],[11,"span","","",274,[[],["span",3]]],[11,"from","","",274,[[]]],[11,"into","","",274,[[]]],[11,"to_owned","","",274,[[]]],[11,"clone_into","","",274,[[]]],[11,"borrow","","",274,[[]]],[11,"borrow_mut","","",274,[[]]],[11,"try_from","","",274,[[],["result",4]]],[11,"try_into","","",274,[[],["result",4]]],[11,"type_id","","",274,[[],["typeid",3]]],[11,"peek","","",275,[[["cursor",3]]]],[11,"display","","",275,[[]]],[11,"span","","",275,[[],["span",3]]],[11,"from","","",275,[[]]],[11,"into","","",275,[[]]],[11,"to_owned","","",275,[[]]],[11,"clone_into","","",275,[[]]],[11,"borrow","","",275,[[]]],[11,"borrow_mut","","",275,[[]]],[11,"try_from","","",275,[[],["result",4]]],[11,"try_into","","",275,[[],["result",4]]],[11,"type_id","","",275,[[],["typeid",3]]],[11,"peek","","",276,[[["cursor",3]]]],[11,"display","","",276,[[]]],[11,"span","","",276,[[],["span",3]]],[11,"from","","",276,[[]]],[11,"into","","",276,[[]]],[11,"to_owned","","",276,[[]]],[11,"clone_into","","",276,[[]]],[11,"borrow","","",276,[[]]],[11,"borrow_mut","","",276,[[]]],[11,"try_from","","",276,[[],["result",4]]],[11,"try_into","","",276,[[],["result",4]]],[11,"type_id","","",276,[[],["typeid",3]]],[11,"peek","","",277,[[["cursor",3]]]],[11,"display","","",277,[[]]],[11,"span","","",277,[[],["span",3]]],[11,"from","","",277,[[]]],[11,"into","","",277,[[]]],[11,"to_owned","","",277,[[]]],[11,"clone_into","","",277,[[]]],[11,"borrow","","",277,[[]]],[11,"borrow_mut","","",277,[[]]],[11,"try_from","","",277,[[],["result",4]]],[11,"try_into","","",277,[[],["result",4]]],[11,"type_id","","",277,[[],["typeid",3]]],[11,"peek","","",278,[[["cursor",3]]]],[11,"display","","",278,[[]]],[11,"span","","",278,[[],["span",3]]],[11,"from","","",278,[[]]],[11,"into","","",278,[[]]],[11,"to_owned","","",278,[[]]],[11,"clone_into","","",278,[[]]],[11,"borrow","","",278,[[]]],[11,"borrow_mut","","",278,[[]]],[11,"try_from","","",278,[[],["result",4]]],[11,"try_into","","",278,[[],["result",4]]],[11,"type_id","","",278,[[],["typeid",3]]],[11,"peek","","",279,[[["cursor",3]]]],[11,"display","","",279,[[]]],[11,"from","","",279,[[]]],[11,"into","","",279,[[]]],[11,"to_owned","","",279,[[]]],[11,"clone_into","","",279,[[]]],[11,"borrow","","",279,[[]]],[11,"borrow_mut","","",279,[[]]],[11,"try_from","","",279,[[],["result",4]]],[11,"try_into","","",279,[[],["result",4]]],[11,"type_id","","",279,[[],["typeid",3]]],[11,"peek","","",280,[[["cursor",3]]]],[11,"display","","",280,[[]]],[11,"from","","",280,[[]]],[11,"into","","",280,[[]]],[11,"to_owned","","",280,[[]]],[11,"clone_into","","",280,[[]]],[11,"borrow","","",280,[[]]],[11,"borrow_mut","","",280,[[]]],[11,"try_from","","",280,[[],["result",4]]],[11,"try_into","","",280,[[],["result",4]]],[11,"type_id","","",280,[[],["typeid",3]]],[11,"peek","","",281,[[["cursor",3]]]],[11,"display","","",281,[[]]],[11,"from","","",281,[[]]],[11,"into","","",281,[[]]],[11,"to_owned","","",281,[[]]],[11,"clone_into","","",281,[[]]],[11,"borrow","","",281,[[]]],[11,"borrow_mut","","",281,[[]]],[11,"try_from","","",281,[[],["result",4]]],[11,"try_into","","",281,[[],["result",4]]],[11,"type_id","","",281,[[],["typeid",3]]],[11,"peek","","",282,[[["cursor",3]]]],[11,"display","","",282,[[]]],[11,"from","","",282,[[]]],[11,"into","","",282,[[]]],[11,"to_owned","","",282,[[]]],[11,"clone_into","","",282,[[]]],[11,"borrow","","",282,[[]]],[11,"borrow_mut","","",282,[[]]],[11,"try_from","","",282,[[],["result",4]]],[11,"try_into","","",282,[[],["result",4]]],[11,"type_id","","",282,[[],["typeid",3]]],[11,"from","syn::buffer","",290,[[]]],[11,"into","","",290,[[]]],[11,"borrow","","",290,[[]]],[11,"borrow_mut","","",290,[[]]],[11,"try_from","","",290,[[],["result",4]]],[11,"try_into","","",290,[[],["result",4]]],[11,"type_id","","",290,[[],["typeid",3]]],[11,"from","","",291,[[]]],[11,"into","","",291,[[]]],[11,"to_owned","","",291,[[]]],[11,"clone_into","","",291,[[]]],[11,"borrow","","",291,[[]]],[11,"borrow_mut","","",291,[[]]],[11,"try_from","","",291,[[],["result",4]]],[11,"try_into","","",291,[[],["result",4]]],[11,"type_id","","",291,[[],["typeid",3]]],[11,"span","syn::punctuated","",294,[[],["span",3]]],[11,"from","","",294,[[]]],[11,"into","","",294,[[]]],[11,"into_iter","","",294,[[]]],[11,"to_owned","","",294,[[]]],[11,"clone_into","","",294,[[]]],[11,"borrow","","",294,[[]]],[11,"borrow_mut","","",294,[[]]],[11,"try_from","","",294,[[],["result",4]]],[11,"try_into","","",294,[[],["result",4]]],[11,"type_id","","",294,[[],["typeid",3]]],[11,"from","","",306,[[]]],[11,"into","","",306,[[]]],[11,"into_iter","","",306,[[]]],[11,"to_owned","","",306,[[]]],[11,"clone_into","","",306,[[]]],[11,"borrow","","",306,[[]]],[11,"borrow_mut","","",306,[[]]],[11,"try_from","","",306,[[],["result",4]]],[11,"try_into","","",306,[[],["result",4]]],[11,"type_id","","",306,[[],["typeid",3]]],[11,"from","","",307,[[]]],[11,"into","","",307,[[]]],[11,"into_iter","","",307,[[]]],[11,"borrow","","",307,[[]]],[11,"borrow_mut","","",307,[[]]],[11,"try_from","","",307,[[],["result",4]]],[11,"try_into","","",307,[[],["result",4]]],[11,"type_id","","",307,[[],["typeid",3]]],[11,"from","","",308,[[]]],[11,"into","","",308,[[]]],[11,"into_iter","","",308,[[]]],[11,"to_owned","","",308,[[]]],[11,"clone_into","","",308,[[]]],[11,"borrow","","",308,[[]]],[11,"borrow_mut","","",308,[[]]],[11,"try_from","","",308,[[],["result",4]]],[11,"try_into","","",308,[[],["result",4]]],[11,"type_id","","",308,[[],["typeid",3]]],[11,"from","","",309,[[]]],[11,"into","","",309,[[]]],[11,"into_iter","","",309,[[]]],[11,"to_owned","","",309,[[]]],[11,"clone_into","","",309,[[]]],[11,"borrow","","",309,[[]]],[11,"borrow_mut","","",309,[[]]],[11,"try_from","","",309,[[],["result",4]]],[11,"try_into","","",309,[[],["result",4]]],[11,"type_id","","",309,[[],["typeid",3]]],[11,"from","","",310,[[]]],[11,"into","","",310,[[]]],[11,"into_iter","","",310,[[]]],[11,"to_owned","","",310,[[]]],[11,"clone_into","","",310,[[]]],[11,"borrow","","",310,[[]]],[11,"borrow_mut","","",310,[[]]],[11,"try_from","","",310,[[],["result",4]]],[11,"try_into","","",310,[[],["result",4]]],[11,"type_id","","",310,[[],["typeid",3]]],[11,"from","","",311,[[]]],[11,"into","","",311,[[]]],[11,"into_iter","","",311,[[]]],[11,"borrow","","",311,[[]]],[11,"borrow_mut","","",311,[[]]],[11,"try_from","","",311,[[],["result",4]]],[11,"try_into","","",311,[[],["result",4]]],[11,"type_id","","",311,[[],["typeid",3]]],[11,"span","","",293,[[],["span",3]]],[11,"from","","",293,[[]]],[11,"into","","",293,[[]]],[11,"to_owned","","",293,[[]]],[11,"clone_into","","",293,[[]]],[11,"borrow","","",293,[[]]],[11,"borrow_mut","","",293,[[]]],[11,"try_from","","",293,[[],["result",4]]],[11,"try_into","","",293,[[],["result",4]]],[11,"type_id","","",293,[[],["typeid",3]]],[11,"from","syn::parse","",312,[[]]],[11,"into","","",312,[[]]],[11,"borrow","","",312,[[]]],[11,"borrow_mut","","",312,[[]]],[11,"try_from","","",312,[[],["result",4]]],[11,"try_into","","",312,[[],["result",4]]],[11,"type_id","","",312,[[],["typeid",3]]],[11,"from","","",301,[[]]],[11,"into","","",301,[[]]],[11,"to_string","","",301,[[],["string",3]]],[11,"borrow","","",301,[[]]],[11,"borrow_mut","","",301,[[]]],[11,"try_from","","",301,[[],["result",4]]],[11,"try_into","","",301,[[],["result",4]]],[11,"type_id","","",301,[[],["typeid",3]]],[11,"from","","",300,[[]]],[11,"into","","",300,[[]]],[11,"to_owned","","",300,[[]]],[11,"clone_into","","",300,[[]]],[11,"borrow","","",300,[[]]],[11,"borrow_mut","","",300,[[]]],[11,"try_from","","",300,[[],["result",4]]],[11,"try_into","","",300,[[],["result",4]]],[11,"type_id","","",300,[[],["typeid",3]]],[11,"from","","",313,[[]]],[11,"into","","",313,[[]]],[11,"borrow","","",313,[[]]],[11,"borrow_mut","","",313,[[]]],[11,"try_from","","",313,[[],["result",4]]],[11,"try_into","","",313,[[],["result",4]]],[11,"type_id","","",313,[[],["typeid",3]]],[11,"partial_cmp","syn","",303,[[["ident",3]],[["option",4],["ordering",4]]]],[11,"fmt","","",303,[[["formatter",3]],[["error",3],["result",4]]]],[11,"hash","","",303,[[]]],[11,"clone","","",303,[[],["ident",3]]],[11,"fmt","","",303,[[["formatter",3]],[["error",3],["result",4]]]],[11,"eq","","",303,[[["ident",3]]]],[11,"eq","","",303,[[]]],[11,"cmp","","",303,[[["ident",3]],["ordering",4]]],[11,"span","","",303,[[],[["option",4],["span",3]]]],[11,"fmt","","",303,[[["formatter",3]],[["error",3],["result",4]]]],[11,"to_tokens","","",303,[[["tokenstream",3]]]],[11,"peek","","",100,[[["cursor",3]]]],[11,"display","","",100,[[]]],[11,"peek","","",168,[[["cursor",3]]]],[11,"display","","",168,[[]]],[11,"peek","","",284,[[["cursor",3]]]],[11,"display","","",284,[[]]],[11,"peek","","",285,[[["cursor",3]]]],[11,"display","","",285,[[]]],[11,"peek","","",286,[[["cursor",3]]]],[11,"display","","",286,[[]]],[11,"peek","","",287,[[["cursor",3]]]],[11,"display","","",287,[[]]],[11,"peek","","",288,[[["cursor",3]]]],[11,"display","","",288,[[]]],[11,"peek","","",289,[[["cursor",3]]]],[11,"display","","",289,[[]]],[11,"peek","","",101,[[["cursor",3]]]],[11,"display","","",101,[[]]],[11,"peek","syn::token","",180,[[["cursor",3]]]],[11,"display","","",180,[[]]],[11,"peek","","",281,[[["cursor",3]]]],[11,"display","","",281,[[]]],[11,"peek","","",279,[[["cursor",3]]]],[11,"display","","",279,[[]]],[11,"peek","","",280,[[["cursor",3]]]],[11,"display","","",280,[[]]],[11,"peek","","",282,[[["cursor",3]]]],[11,"display","","",282,[[]]],[11,"peek","","",181,[[["cursor",3]]]],[11,"display","","",181,[[]]],[11,"peek","","",182,[[["cursor",3]]]],[11,"display","","",182,[[]]],[11,"peek","","",183,[[["cursor",3]]]],[11,"display","","",183,[[]]],[11,"peek","","",184,[[["cursor",3]]]],[11,"display","","",184,[[]]],[11,"peek","","",185,[[["cursor",3]]]],[11,"display","","",185,[[]]],[11,"peek","","",186,[[["cursor",3]]]],[11,"display","","",186,[[]]],[11,"peek","","",187,[[["cursor",3]]]],[11,"display","","",187,[[]]],[11,"peek","","",188,[[["cursor",3]]]],[11,"display","","",188,[[]]],[11,"peek","","",189,[[["cursor",3]]]],[11,"display","","",189,[[]]],[11,"peek","","",190,[[["cursor",3]]]],[11,"display","","",190,[[]]],[11,"peek","","",191,[[["cursor",3]]]],[11,"display","","",191,[[]]],[11,"peek","","",192,[[["cursor",3]]]],[11,"display","","",192,[[]]],[11,"peek","","",193,[[["cursor",3]]]],[11,"display","","",193,[[]]],[11,"peek","","",194,[[["cursor",3]]]],[11,"display","","",194,[[]]],[11,"peek","","",195,[[["cursor",3]]]],[11,"display","","",195,[[]]],[11,"peek","","",196,[[["cursor",3]]]],[11,"display","","",196,[[]]],[11,"peek","","",197,[[["cursor",3]]]],[11,"display","","",197,[[]]],[11,"peek","","",198,[[["cursor",3]]]],[11,"display","","",198,[[]]],[11,"peek","","",199,[[["cursor",3]]]],[11,"display","","",199,[[]]],[11,"peek","","",200,[[["cursor",3]]]],[11,"display","","",200,[[]]],[11,"peek","","",201,[[["cursor",3]]]],[11,"display","","",201,[[]]],[11,"peek","","",202,[[["cursor",3]]]],[11,"display","","",202,[[]]],[11,"peek","","",203,[[["cursor",3]]]],[11,"display","","",203,[[]]],[11,"peek","","",204,[[["cursor",3]]]],[11,"display","","",204,[[]]],[11,"peek","","",205,[[["cursor",3]]]],[11,"display","","",205,[[]]],[11,"peek","","",206,[[["cursor",3]]]],[11,"display","","",206,[[]]],[11,"peek","","",207,[[["cursor",3]]]],[11,"display","","",207,[[]]],[11,"peek","","",208,[[["cursor",3]]]],[11,"display","","",208,[[]]],[11,"peek","","",209,[[["cursor",3]]]],[11,"display","","",209,[[]]],[11,"peek","","",210,[[["cursor",3]]]],[11,"display","","",210,[[]]],[11,"peek","","",211,[[["cursor",3]]]],[11,"display","","",211,[[]]],[11,"peek","","",212,[[["cursor",3]]]],[11,"display","","",212,[[]]],[11,"peek","","",213,[[["cursor",3]]]],[11,"display","","",213,[[]]],[11,"peek","","",214,[[["cursor",3]]]],[11,"display","","",214,[[]]],[11,"peek","","",215,[[["cursor",3]]]],[11,"display","","",215,[[]]],[11,"peek","","",216,[[["cursor",3]]]],[11,"display","","",216,[[]]],[11,"peek","","",217,[[["cursor",3]]]],[11,"display","","",217,[[]]],[11,"peek","","",218,[[["cursor",3]]]],[11,"display","","",218,[[]]],[11,"peek","","",219,[[["cursor",3]]]],[11,"display","","",219,[[]]],[11,"peek","","",220,[[["cursor",3]]]],[11,"display","","",220,[[]]],[11,"peek","","",221,[[["cursor",3]]]],[11,"display","","",221,[[]]],[11,"peek","","",222,[[["cursor",3]]]],[11,"display","","",222,[[]]],[11,"peek","","",223,[[["cursor",3]]]],[11,"display","","",223,[[]]],[11,"peek","","",224,[[["cursor",3]]]],[11,"display","","",224,[[]]],[11,"peek","","",225,[[["cursor",3]]]],[11,"display","","",225,[[]]],[11,"peek","","",226,[[["cursor",3]]]],[11,"display","","",226,[[]]],[11,"peek","","",227,[[["cursor",3]]]],[11,"display","","",227,[[]]],[11,"peek","","",228,[[["cursor",3]]]],[11,"display","","",228,[[]]],[11,"peek","","",229,[[["cursor",3]]]],[11,"display","","",229,[[]]],[11,"peek","","",230,[[["cursor",3]]]],[11,"display","","",230,[[]]],[11,"peek","","",231,[[["cursor",3]]]],[11,"display","","",231,[[]]],[11,"peek","","",232,[[["cursor",3]]]],[11,"display","","",232,[[]]],[11,"peek","","",233,[[["cursor",3]]]],[11,"display","","",233,[[]]],[11,"peek","","",234,[[["cursor",3]]]],[11,"display","","",234,[[]]],[11,"peek","","",235,[[["cursor",3]]]],[11,"display","","",235,[[]]],[11,"peek","","",236,[[["cursor",3]]]],[11,"display","","",236,[[]]],[11,"peek","","",237,[[["cursor",3]]]],[11,"display","","",237,[[]]],[11,"peek","","",238,[[["cursor",3]]]],[11,"display","","",238,[[]]],[11,"peek","","",239,[[["cursor",3]]]],[11,"display","","",239,[[]]],[11,"peek","","",240,[[["cursor",3]]]],[11,"display","","",240,[[]]],[11,"peek","","",241,[[["cursor",3]]]],[11,"display","","",241,[[]]],[11,"peek","","",242,[[["cursor",3]]]],[11,"display","","",242,[[]]],[11,"peek","","",243,[[["cursor",3]]]],[11,"display","","",243,[[]]],[11,"peek","","",244,[[["cursor",3]]]],[11,"display","","",244,[[]]],[11,"peek","","",245,[[["cursor",3]]]],[11,"display","","",245,[[]]],[11,"peek","","",246,[[["cursor",3]]]],[11,"display","","",246,[[]]],[11,"peek","","",247,[[["cursor",3]]]],[11,"display","","",247,[[]]],[11,"peek","","",248,[[["cursor",3]]]],[11,"display","","",248,[[]]],[11,"peek","","",249,[[["cursor",3]]]],[11,"display","","",249,[[]]],[11,"peek","","",250,[[["cursor",3]]]],[11,"display","","",250,[[]]],[11,"peek","","",251,[[["cursor",3]]]],[11,"display","","",251,[[]]],[11,"peek","","",252,[[["cursor",3]]]],[11,"display","","",252,[[]]],[11,"peek","","",253,[[["cursor",3]]]],[11,"display","","",253,[[]]],[11,"peek","","",254,[[["cursor",3]]]],[11,"display","","",254,[[]]],[11,"peek","","",255,[[["cursor",3]]]],[11,"display","","",255,[[]]],[11,"peek","","",256,[[["cursor",3]]]],[11,"display","","",256,[[]]],[11,"peek","","",257,[[["cursor",3]]]],[11,"display","","",257,[[]]],[11,"peek","","",258,[[["cursor",3]]]],[11,"display","","",258,[[]]],[11,"peek","","",259,[[["cursor",3]]]],[11,"display","","",259,[[]]],[11,"peek","","",260,[[["cursor",3]]]],[11,"display","","",260,[[]]],[11,"peek","","",261,[[["cursor",3]]]],[11,"display","","",261,[[]]],[11,"peek","","",262,[[["cursor",3]]]],[11,"display","","",262,[[]]],[11,"peek","","",263,[[["cursor",3]]]],[11,"display","","",263,[[]]],[11,"peek","","",264,[[["cursor",3]]]],[11,"display","","",264,[[]]],[11,"peek","","",265,[[["cursor",3]]]],[11,"display","","",265,[[]]],[11,"peek","","",266,[[["cursor",3]]]],[11,"display","","",266,[[]]],[11,"peek","","",267,[[["cursor",3]]]],[11,"display","","",267,[[]]],[11,"peek","","",268,[[["cursor",3]]]],[11,"display","","",268,[[]]],[11,"peek","","",269,[[["cursor",3]]]],[11,"display","","",269,[[]]],[11,"peek","","",270,[[["cursor",3]]]],[11,"display","","",270,[[]]],[11,"peek","","",271,[[["cursor",3]]]],[11,"display","","",271,[[]]],[11,"peek","","",272,[[["cursor",3]]]],[11,"display","","",272,[[]]],[11,"peek","","",273,[[["cursor",3]]]],[11,"display","","",273,[[]]],[11,"peek","","",274,[[["cursor",3]]]],[11,"display","","",274,[[]]],[11,"peek","","",275,[[["cursor",3]]]],[11,"display","","",275,[[]]],[11,"peek","","",276,[[["cursor",3]]]],[11,"display","","",276,[[]]],[11,"peek","","",277,[[["cursor",3]]]],[11,"display","","",277,[[]]],[11,"peek","","",278,[[["cursor",3]]]],[11,"display","","",278,[[]]],[11,"peek","syn","",303,[[["cursor",3]]]],[11,"display","","",303,[[]]],[11,"parse_any","","",303,[[["parsestream",6]],["result",6]]],[11,"unraw","","",303,[[],["ident",3]]],[11,"advance_to","syn::parse","",301,[[]]],[11,"parse","syn::token","",180,[[["parsestream",6]],["result",6]]],[11,"parse","","",181,[[["parsestream",6]],["result",6]]],[11,"parse","","",182,[[["parsestream",6]],["result",6]]],[11,"parse","","",183,[[["parsestream",6]],["result",6]]],[11,"parse","","",184,[[["parsestream",6]],["result",6]]],[11,"parse","","",185,[[["parsestream",6]],["result",6]]],[11,"parse","","",186,[[["parsestream",6]],["result",6]]],[11,"parse","","",187,[[["parsestream",6]],["result",6]]],[11,"parse","","",188,[[["parsestream",6]],["result",6]]],[11,"parse","","",189,[[["parsestream",6]],["result",6]]],[11,"parse","","",190,[[["parsestream",6]],["result",6]]],[11,"parse","","",191,[[["parsestream",6]],["result",6]]],[11,"parse","","",192,[[["parsestream",6]],["result",6]]],[11,"parse","","",193,[[["parsestream",6]],["result",6]]],[11,"parse","","",194,[[["parsestream",6]],["result",6]]],[11,"parse","","",195,[[["parsestream",6]],["result",6]]],[11,"parse","","",196,[[["parsestream",6]],["result",6]]],[11,"parse","","",197,[[["parsestream",6]],["result",6]]],[11,"parse","","",198,[[["parsestream",6]],["result",6]]],[11,"parse","","",199,[[["parsestream",6]],["result",6]]],[11,"parse","","",200,[[["parsestream",6]],["result",6]]],[11,"parse","","",201,[[["parsestream",6]],["result",6]]],[11,"parse","","",202,[[["parsestream",6]],["result",6]]],[11,"parse","","",203,[[["parsestream",6]],["result",6]]],[11,"parse","","",204,[[["parsestream",6]],["result",6]]],[11,"parse","","",205,[[["parsestream",6]],["result",6]]],[11,"parse","","",206,[[["parsestream",6]],["result",6]]],[11,"parse","","",207,[[["parsestream",6]],["result",6]]],[11,"parse","","",208,[[["parsestream",6]],["result",6]]],[11,"parse","","",209,[[["parsestream",6]],["result",6]]],[11,"parse","","",210,[[["parsestream",6]],["result",6]]],[11,"parse","","",211,[[["parsestream",6]],["result",6]]],[11,"parse","","",212,[[["parsestream",6]],["result",6]]],[11,"parse","","",213,[[["parsestream",6]],["result",6]]],[11,"parse","","",214,[[["parsestream",6]],["result",6]]],[11,"parse","","",215,[[["parsestream",6]],["result",6]]],[11,"parse","","",216,[[["parsestream",6]],["result",6]]],[11,"parse","","",217,[[["parsestream",6]],["result",6]]],[11,"parse","","",218,[[["parsestream",6]],["result",6]]],[11,"parse","","",219,[[["parsestream",6]],["result",6]]],[11,"parse","","",220,[[["parsestream",6]],["result",6]]],[11,"parse","","",221,[[["parsestream",6]],["result",6]]],[11,"parse","","",222,[[["parsestream",6]],["result",6]]],[11,"parse","","",223,[[["parsestream",6]],["result",6]]],[11,"parse","","",224,[[["parsestream",6]],["result",6]]],[11,"parse","","",225,[[["parsestream",6]],["result",6]]],[11,"parse","","",226,[[["parsestream",6]],["result",6]]],[11,"parse","","",227,[[["parsestream",6]],["result",6]]],[11,"parse","","",228,[[["parsestream",6]],["result",6]]],[11,"parse","","",229,[[["parsestream",6]],["result",6]]],[11,"parse","","",230,[[["parsestream",6]],["result",6]]],[11,"parse","","",231,[[["parsestream",6]],["result",6]]],[11,"parse","","",232,[[["parsestream",6]],["result",6]]],[11,"parse","","",233,[[["parsestream",6]],["result",6]]],[11,"parse","","",234,[[["parsestream",6]],["result",6]]],[11,"parse","","",235,[[["parsestream",6]],["result",6]]],[11,"parse","","",236,[[["parsestream",6]],["result",6]]],[11,"parse","","",237,[[["parsestream",6]],["result",6]]],[11,"parse","","",238,[[["parsestream",6]],["result",6]]],[11,"parse","","",239,[[["parsestream",6]],["result",6]]],[11,"parse","","",240,[[["parsestream",6]],["result",6]]],[11,"parse","","",241,[[["parsestream",6]],["result",6]]],[11,"parse","","",242,[[["parsestream",6]],["result",6]]],[11,"parse","","",243,[[["parsestream",6]],["result",6]]],[11,"parse","","",244,[[["parsestream",6]],["result",6]]],[11,"parse","","",245,[[["parsestream",6]],["result",6]]],[11,"parse","","",246,[[["parsestream",6]],["result",6]]],[11,"parse","","",247,[[["parsestream",6]],["result",6]]],[11,"parse","","",248,[[["parsestream",6]],["result",6]]],[11,"parse","","",249,[[["parsestream",6]],["result",6]]],[11,"parse","","",250,[[["parsestream",6]],["result",6]]],[11,"parse","","",251,[[["parsestream",6]],["result",6]]],[11,"parse","","",252,[[["parsestream",6]],["result",6]]],[11,"parse","","",253,[[["parsestream",6]],["result",6]]],[11,"parse","","",254,[[["parsestream",6]],["result",6]]],[11,"parse","","",255,[[["parsestream",6]],["result",6]]],[11,"parse","","",256,[[["parsestream",6]],["result",6]]],[11,"parse","","",257,[[["parsestream",6]],["result",6]]],[11,"parse","","",258,[[["parsestream",6]],["result",6]]],[11,"parse","","",259,[[["parsestream",6]],["result",6]]],[11,"parse","","",260,[[["parsestream",6]],["result",6]]],[11,"parse","","",261,[[["parsestream",6]],["result",6]]],[11,"parse","","",262,[[["parsestream",6]],["result",6]]],[11,"parse","","",263,[[["parsestream",6]],["result",6]]],[11,"parse","","",264,[[["parsestream",6]],["result",6]]],[11,"parse","","",265,[[["parsestream",6]],["result",6]]],[11,"parse","","",266,[[["parsestream",6]],["result",6]]],[11,"parse","","",267,[[["parsestream",6]],["result",6]]],[11,"parse","","",268,[[["parsestream",6]],["result",6]]],[11,"parse","","",269,[[["parsestream",6]],["result",6]]],[11,"parse","","",270,[[["parsestream",6]],["result",6]]],[11,"parse","","",271,[[["parsestream",6]],["result",6]]],[11,"parse","","",272,[[["parsestream",6]],["result",6]]],[11,"parse","","",273,[[["parsestream",6]],["result",6]]],[11,"parse","","",274,[[["parsestream",6]],["result",6]]],[11,"parse","","",275,[[["parsestream",6]],["result",6]]],[11,"parse","","",276,[[["parsestream",6]],["result",6]]],[11,"parse","","",277,[[["parsestream",6]],["result",6]]],[11,"parse","","",278,[[["parsestream",6]],["result",6]]],[11,"parse","syn","",303,[[["parsestream",6]],["result",6]]],[11,"parse","","",150,[[["parsestream",6]],["result",6]]],[11,"parse","","",1,[[["parsestream",6]],["result",6]]],[11,"parse","","",2,[[["parsestream",6]],["result",6]]],[11,"parse","","",151,[[["parsestream",6]],["result",6]]],[11,"parse","","",6,[[["parsestream",6]],["result",6]]],[11,"parse","","",4,[[["parsestream",6]],["result",6]]],[11,"parse","","",5,[[["parsestream",6]],["result",6]]],[11,"parse","","",153,[[["parsestream",6]],["result",6]]],[11,"parse","","",156,[[["parsestream",6]],["result",6]]],[11,"parse","","",33,[[["parsestream",6]],["result",6]]],[11,"parse","","",30,[[["parsestream",6]],["result",6]]],[11,"parse","","",28,[[["parsestream",6]],["result",6]]],[11,"parse","","",34,[[["parsestream",6]],["result",6]]],[11,"parse","","",36,[[["parsestream",6]],["result",6]]],[11,"parse","","",21,[[["parsestream",6]],["result",6]]],[11,"parse","","",14,[[["parsestream",6]],["result",6]]],[11,"parse","","",23,[[["parsestream",6]],["result",6]]],[11,"parse","","",37,[[["parsestream",6]],["result",6]]],[11,"parse","","",47,[[["parsestream",6]],["result",6]]],[11,"parse","","",19,[[["parsestream",6]],["result",6]]],[11,"parse","","",49,[[["parsestream",6]],["result",6]]],[11,"parse","","",24,[[["parsestream",6]],["result",6]]],[11,"parse","","",48,[[["parsestream",6]],["result",6]]],[11,"parse","","",32,[[["parsestream",6]],["result",6]]],[11,"parse","","",25,[[["parsestream",6]],["result",6]]],[11,"parse","","",50,[[["parsestream",6]],["result",6]]],[11,"parse","","",20,[[["parsestream",6]],["result",6]]],[11,"parse","","",15,[[["parsestream",6]],["result",6]]],[11,"parse","","",16,[[["parsestream",6]],["result",6]]],[11,"parse","","",27,[[["parsestream",6]],["result",6]]],[11,"parse","","",31,[[["parsestream",6]],["result",6]]],[11,"parse","","",40,[[["parsestream",6]],["result",6]]],[11,"parse","","",41,[[["parsestream",6]],["result",6]]],[11,"parse","","",22,[[["parsestream",6]],["result",6]]],[11,"parse","","",26,[[["parsestream",6]],["result",6]]],[11,"parse","","",43,[[["parsestream",6]],["result",6]]],[11,"parse","","",35,[[["parsestream",6]],["result",6]]],[11,"parse","","",44,[[["parsestream",6]],["result",6]]],[11,"parse","","",42,[[["parsestream",6]],["result",6]]],[11,"parse","","",38,[[["parsestream",6]],["result",6]]],[11,"parse","","",45,[[["parsestream",6]],["result",6]]],[11,"parse","","",17,[[["parsestream",6]],["result",6]]],[11,"parse","","",46,[[["parsestream",6]],["result",6]]],[11,"parse","","",52,[[["parsestream",6]],["result",6]]],[11,"parse","","",51,[[["parsestream",6]],["result",6]]],[11,"parse","","",12,[[["parsestream",6]],["result",6]]],[11,"parse","","",11,[[["parsestream",6]],["result",6]]],[11,"parse","","",155,[[["parsestream",6]],["result",6]]],[11,"parse","","",39,[[["parsestream",6]],["result",6]]],[11,"parse","","",157,[[["parsestream",6]],["result",6]]],[11,"parse","","",10,[[["parsestream",6]],[["arm",3],["result",6]]]],[11,"parse","","",53,[[["parsestream",6]],["result",6]]],[11,"parse","","",56,[[["parsestream",6]],["result",6]]],[11,"parse","","",158,[[["parsestream",6]],["result",6]]],[11,"parse","","",57,[[["parsestream",6]],["result",6]]],[11,"parse","","",54,[[["parsestream",6]],["result",6]]],[11,"parse","","",62,[[["parsestream",6]],["result",6]]],[11,"parse","","",160,[[["parsestream",6]],["result",6]]],[11,"parse","","",61,[[["parsestream",6]],["result",6]]],[11,"parse","","",159,[[["parsestream",6]],["result",6]]],[11,"parse","","",55,[[["parsestream",6]],["result",6]]],[11,"parse","","",63,[[["parsestream",6]],["result",6]]],[11,"parse","","",161,[[["parsestream",6]],["result",6]]],[11,"parse","","",165,[[["parsestream",6]],["result",6]]],[11,"parse","","",78,[[["parsestream",6]],["result",6]]],[11,"parse","","",79,[[["parsestream",6]],["result",6]]],[11,"parse","","",74,[[["parsestream",6]],["result",6]]],[11,"parse","","",87,[[["parsestream",6]],["result",6]]],[11,"parse","","",167,[[["parsestream",6]],[["result",6],["usetree",4]]]],[11,"parse","","",81,[[["parsestream",6]],["result",6]]],[11,"parse","","",72,[[["parsestream",6]],["result",6]]],[11,"parse","","",75,[[["parsestream",6]],["result",6]]],[11,"parse","","",162,[[["parsestream",6]],["result",6]]],[11,"parse","","",88,[[["parsestream",6]],["result",6]]],[11,"parse","","",80,[[["parsestream",6]],["result",6]]],[11,"parse","","",76,[[["parsestream",6]],["result",6]]],[11,"parse","","",163,[[["parsestream",6]],["result",6]]],[11,"parse","","",64,[[["parsestream",6]],["result",6]]],[11,"parse","","",66,[[["parsestream",6]],["result",6]]],[11,"parse","","",67,[[["parsestream",6]],["result",6]]],[11,"parse","","",65,[[["parsestream",6]],["result",6]]],[11,"parse","","",85,[[["parsestream",6]],["result",6]]],[11,"parse","","",82,[[["parsestream",6]],["result",6]]],[11,"parse","","",73,[[["parsestream",6]],["result",6]]],[11,"parse","","",86,[[["parsestream",6]],["result",6]]],[11,"parse","","",83,[[["parsestream",6]],["result",6]]],[11,"parse","","",84,[[["parsestream",6]],["result",6]]],[11,"parse","","",166,[[["parsestream",6]],["result",6]]],[11,"parse","","",90,[[["parsestream",6]],["result",6]]],[11,"parse","","",92,[[["parsestream",6]],["result",6]]],[11,"parse","","",93,[[["parsestream",6]],["result",6]]],[11,"parse","","",91,[[["parsestream",6]],["result",6]]],[11,"parse","","",77,[[["parsestream",6]],["result",6]]],[11,"parse","","",164,[[["parsestream",6]],["result",6]]],[11,"parse","","",68,[[["parsestream",6]],["result",6]]],[11,"parse","","",70,[[["parsestream",6]],["result",6]]],[11,"parse","","",71,[[["parsestream",6]],["result",6]]],[11,"parse","","",69,[[["parsestream",6]],["result",6]]],[11,"parse","","",99,[[["parsestream",6]],["result",6]]],[11,"parse","","",100,[[["parsestream",6]],["result",6]]],[11,"parse","","",168,[[["parsestream",6]],["result",6]]],[11,"parse","","",284,[[["parsestream",6]],["result",6]]],[11,"parse","","",285,[[["parsestream",6]],["result",6]]],[11,"parse","","",286,[[["parsestream",6]],["result",6]]],[11,"parse","","",287,[[["parsestream",6]],["result",6]]],[11,"parse","","",288,[[["parsestream",6]],["result",6]]],[11,"parse","","",289,[[["parsestream",6]],["result",6]]],[11,"parse","","",101,[[["parsestream",6]],["result",6]]],[11,"parse","","",102,[[["parsestream",6]],["result",6]]],[11,"parse","","",106,[[["parsestream",6]],["result",6]]],[11,"parse","","",172,[[["parsestream",6]],["result",6]]],[11,"parse","","",173,[[["parsestream",6]],["result",6]]],[11,"parse","","",107,[[["parsestream",6]],["result",6]]],[11,"parse","","",174,[[["parsestream",6]],["result",6]]],[11,"parse","","",176,[[["parsestream",6]],["result",6]]],[11,"parse","","",122,[[["parsestream",6]],["result",6]]],[11,"parse","","",111,[[["parsestream",6]],["result",6]]],[11,"parse","","",120,[[["parsestream",6]],["result",6]]],[11,"parse","","",121,[[["parsestream",6]],["result",6]]],[11,"parse","","",112,[[["parsestream",6]],["result",6]]],[11,"parse","","",117,[[["parsestream",6]],["result",6]]],[11,"parse","","",115,[[["parsestream",6]],["result",6]]],[11,"parse","","",124,[[["parsestream",6]],["result",6]]],[11,"parse","","",116,[[["parsestream",6]],["result",6]]],[11,"parse","","",119,[[["parsestream",6]],["result",6]]],[11,"parse","","",175,[[["parsestream",6]],["result",6]]],[11,"parse","","",123,[[["parsestream",6]],["result",6]]],[11,"parse","","",114,[[["parsestream",6]],["result",6]]],[11,"parse","","",113,[[["parsestream",6]],["result",6]]],[11,"parse","","",118,[[["parsestream",6]],["result",6]]],[11,"parse","","",110,[[["parsestream",6]],["result",6]]],[11,"parse","","",109,[[["parsestream",6]],["result",6]]],[11,"parse","","",177,[[["parsestream",6]],["result",6]]],[11,"parse","","",146,[[["parsestream",6]],["result",6]]],[11,"parse","","",178,[[["parsestream",6]],["result",6]]],[11,"parse","","",142,[[["parsestream",6]],["result",6]]],[11,"parse","","",145,[[["parsestream",6]],["result",6]]],[11,"parse","","",147,[[["parsestream",6]],["result",6]]],[11,"parse","","",143,[[["parsestream",6]],["result",6]]],[11,"parse","","",144,[[["parsestream",6]],["result",6]]],[11,"parse","syn::parse","",313,[[["parsestream",6]],["result",6]]],[11,"drop","","",301,[[]]],[11,"from","syn","",303,[[["selfvalue",3]],["ident",3]]],[11,"from","","",303,[[["selftype",3]],["ident",3]]],[11,"from","","",303,[[["super",3]],["ident",3]]],[11,"from","","",303,[[["crate",3]],["ident",3]]],[11,"from","","",303,[[["extern",3]],["ident",3]]],[11,"from","","",303,[[["underscore",3]],["ident",3]]],[11,"from","","",150,[[["path",3]],["meta",4]]],[11,"from","","",150,[[["metalist",3]],["meta",4]]],[11,"from","","",150,[[["metanamevalue",3]],["meta",4]]],[11,"from","","",151,[[["meta",4]],["nestedmeta",4]]],[11,"from","","",151,[[["lit",4]],["nestedmeta",4]]],[11,"from","","",152,[[["fieldsnamed",3]],["fields",4]]],[11,"from","","",152,[[["fieldsunnamed",3]],["fields",4]]],[11,"from","","",153,[[["vispublic",3]],["visibility",4]]],[11,"from","","",153,[[["viscrate",3]],["visibility",4]]],[11,"from","","",153,[[["visrestricted",3]],["visibility",4]]],[11,"from","","",156,[[["exprarray",3]],["expr",4]]],[11,"from","","",156,[[["exprassign",3]],["expr",4]]],[11,"from","","",156,[[["exprassignop",3]],["expr",4]]],[11,"from","","",156,[[["exprasync",3]],["expr",4]]],[11,"from","","",156,[[["exprawait",3]],["expr",4]]],[11,"from","","",156,[[["exprbinary",3]],["expr",4]]],[11,"from","","",156,[[["exprblock",3]],["expr",4]]],[11,"from","","",156,[[["exprbox",3]],["expr",4]]],[11,"from","","",156,[[["exprbreak",3]],["expr",4]]],[11,"from","","",156,[[["exprcall",3]],["expr",4]]],[11,"from","","",156,[[["exprcast",3]],["expr",4]]],[11,"from","","",156,[[["exprclosure",3]],["expr",4]]],[11,"from","","",156,[[["exprcontinue",3]],["expr",4]]],[11,"from","","",156,[[["exprfield",3]],["expr",4]]],[11,"from","","",156,[[["exprforloop",3]],["expr",4]]],[11,"from","","",156,[[["exprgroup",3]],["expr",4]]],[11,"from","","",156,[[["exprif",3]],["expr",4]]],[11,"from","","",156,[[["exprindex",3]],["expr",4]]],[11,"from","","",156,[[["exprlet",3]],["expr",4]]],[11,"from","","",156,[[["exprlit",3]],["expr",4]]],[11,"from","","",156,[[["exprloop",3]],["expr",4]]],[11,"from","","",156,[[["exprmacro",3]],["expr",4]]],[11,"from","","",156,[[["exprmatch",3]],["expr",4]]],[11,"from","","",156,[[["exprmethodcall",3]],["expr",4]]],[11,"from","","",156,[[["exprparen",3]],["expr",4]]],[11,"from","","",156,[[["exprpath",3]],["expr",4]]],[11,"from","","",156,[[["exprrange",3]],["expr",4]]],[11,"from","","",156,[[["exprreference",3]],["expr",4]]],[11,"from","","",156,[[["exprrepeat",3]],["expr",4]]],[11,"from","","",156,[[["exprreturn",3]],["expr",4]]],[11,"from","","",156,[[["exprstruct",3]],["expr",4]]],[11,"from","","",156,[[["exprtry",3]],["expr",4]]],[11,"from","","",156,[[["exprtryblock",3]],["expr",4]]],[11,"from","","",156,[[["exprtuple",3]],["expr",4]]],[11,"from","","",156,[[["exprtype",3]],["expr",4]]],[11,"from","","",156,[[["exprunary",3]],["expr",4]]],[11,"from","","",156,[[["exprunsafe",3]],["expr",4]]],[11,"from","","",156,[[["exprwhile",3]],["expr",4]]],[11,"from","","",156,[[["expryield",3]],["expr",4]]],[11,"from","","",53,[[],["index",3]]],[11,"from","","",158,[[["typeparam",3]],["genericparam",4]]],[11,"from","","",158,[[["lifetimedef",3]],["genericparam",4]]],[11,"from","","",158,[[["constparam",3]],["genericparam",4]]],[11,"from","","",62,[[["ident",3]]]],[11,"from","","",160,[[["traitbound",3]],["typeparambound",4]]],[11,"from","","",160,[[["lifetime",3]],["typeparambound",4]]],[11,"from","","",161,[[["predicatetype",3]],["wherepredicate",4]]],[11,"from","","",161,[[["predicatelifetime",3]],["wherepredicate",4]]],[11,"from","","",161,[[["predicateeq",3]],["wherepredicate",4]]],[11,"from","","",165,[[["itemconst",3]],["item",4]]],[11,"from","","",165,[[["itemenum",3]],["item",4]]],[11,"from","","",165,[[["itemexterncrate",3]],["item",4]]],[11,"from","","",165,[[["itemfn",3]],["item",4]]],[11,"from","","",165,[[["itemforeignmod",3]],["item",4]]],[11,"from","","",165,[[["itemimpl",3]],["item",4]]],[11,"from","","",165,[[["itemmacro",3]],["item",4]]],[11,"from","","",165,[[["itemmacro2",3]],["item",4]]],[11,"from","","",165,[[["itemmod",3]],["item",4]]],[11,"from","","",165,[[["itemstatic",3]],["item",4]]],[11,"from","","",165,[[["itemstruct",3]],["item",4]]],[11,"from","","",165,[[["itemtrait",3]],["item",4]]],[11,"from","","",165,[[["itemtraitalias",3]],["item",4]]],[11,"from","","",165,[[["itemtype",3]],["item",4]]],[11,"from","","",165,[[["itemunion",3]],["item",4]]],[11,"from","","",165,[[["itemuse",3]],["item",4]]],[11,"from","","",165,[[["deriveinput",3]],["item",4]]],[11,"from","","",106,[[["itemstruct",3]],["deriveinput",3]]],[11,"from","","",106,[[["itemenum",3]],["deriveinput",3]]],[11,"from","","",106,[[["itemunion",3]],["deriveinput",3]]],[11,"from","","",167,[[["usepath",3]],["usetree",4]]],[11,"from","","",167,[[["usename",3]],["usetree",4]]],[11,"from","","",167,[[["userename",3]],["usetree",4]]],[11,"from","","",167,[[["useglob",3]],["usetree",4]]],[11,"from","","",167,[[["usegroup",3]],["usetree",4]]],[11,"from","","",163,[[["foreignitemfn",3]],["foreignitem",4]]],[11,"from","","",163,[[["foreignitemstatic",3]],["foreignitem",4]]],[11,"from","","",163,[[["foreignitemtype",3]],["foreignitem",4]]],[11,"from","","",163,[[["foreignitemmacro",3]],["foreignitem",4]]],[11,"from","","",166,[[["traititemconst",3]],["traititem",4]]],[11,"from","","",166,[[["traititemmethod",3]],["traititem",4]]],[11,"from","","",166,[[["traititemtype",3]],["traititem",4]]],[11,"from","","",166,[[["traititemmacro",3]],["traititem",4]]],[11,"from","","",164,[[["implitemconst",3]],["implitem",4]]],[11,"from","","",164,[[["implitemmethod",3]],["implitem",4]]],[11,"from","","",164,[[["implitemtype",3]],["implitem",4]]],[11,"from","","",164,[[["implitemmacro",3]],["implitem",4]]],[11,"from","","",162,[[["receiver",3]],["fnarg",4]]],[11,"from","","",162,[[["pattype",3]],["fnarg",4]]],[11,"from","","",168,[[["litstr",3]],["lit",4]]],[11,"from","","",168,[[["litbytestr",3]],["lit",4]]],[11,"from","","",168,[[["litbyte",3]],["lit",4]]],[11,"from","","",168,[[["litchar",3]],["lit",4]]],[11,"from","","",168,[[["litint",3]],["lit",4]]],[11,"from","","",168,[[["litfloat",3]],["lit",4]]],[11,"from","","",168,[[["litbool",3]],["lit",4]]],[11,"from","","",288,[[["literal",3]]]],[11,"from","","",289,[[["literal",3]]]],[11,"from","","",171,[[["datastruct",3]],["data",4]]],[11,"from","","",171,[[["dataenum",3]],["data",4]]],[11,"from","","",171,[[["dataunion",3]],["data",4]]],[11,"from","","",176,[[["typearray",3]],["type",4]]],[11,"from","","",176,[[["typebarefn",3]],["type",4]]],[11,"from","","",176,[[["typegroup",3]],["type",4]]],[11,"from","","",176,[[["typeimpltrait",3]],["type",4]]],[11,"from","","",176,[[["typeinfer",3]],["type",4]]],[11,"from","","",176,[[["typemacro",3]],["type",4]]],[11,"from","","",176,[[["typenever",3]],["type",4]]],[11,"from","","",176,[[["typeparen",3]],["type",4]]],[11,"from","","",176,[[["typepath",3]],["type",4]]],[11,"from","","",176,[[["typeptr",3]],["type",4]]],[11,"from","","",176,[[["typereference",3]],["type",4]]],[11,"from","","",176,[[["typeslice",3]],["type",4]]],[11,"from","","",176,[[["typetraitobject",3]],["type",4]]],[11,"from","","",176,[[["typetuple",3]],["type",4]]],[11,"from","","",177,[[["patbox",3]],["pat",4]]],[11,"from","","",177,[[["patident",3]],["pat",4]]],[11,"from","","",177,[[["patlit",3]],["pat",4]]],[11,"from","","",177,[[["patmacro",3]],["pat",4]]],[11,"from","","",177,[[["pator",3]],["pat",4]]],[11,"from","","",177,[[["patpath",3]],["pat",4]]],[11,"from","","",177,[[["patrange",3]],["pat",4]]],[11,"from","","",177,[[["patreference",3]],["pat",4]]],[11,"from","","",177,[[["patrest",3]],["pat",4]]],[11,"from","","",177,[[["patslice",3]],["pat",4]]],[11,"from","","",177,[[["patstruct",3]],["pat",4]]],[11,"from","","",177,[[["pattuple",3]],["pat",4]]],[11,"from","","",177,[[["pattuplestruct",3]],["pat",4]]],[11,"from","","",177,[[["pattype",3]],["pat",4]]],[11,"from","","",177,[[["patwild",3]],["pat",4]]],[11,"from","","",146,[[]]],[11,"from","","",147,[[]]],[11,"from","","",302,[[["lexerror",3]]]],[11,"next_back","syn::punctuated","",306,[[],["option",4]]],[11,"next_back","","",307,[[],["option",4]]],[11,"next_back","","",308,[[],["option",4]]],[11,"next_back","","",309,[[],["option",4]]],[11,"next_back","","",310,[[],["option",4]]],[11,"next_back","","",311,[[],["option",4]]],[11,"len","","",306,[[]]],[11,"len","","",307,[[]]],[11,"len","","",308,[[]]],[11,"len","","",309,[[]]],[11,"len","","",310,[[]]],[11,"len","","",311,[[]]],[11,"extend","","",294,[[["intoiterator",8]]]],[11,"extend","","",294,[[["intoiterator",8]]]],[11,"extend","syn","",302,[[["intoiterator",8]]]],[11,"into_iter","","",152,[[]]],[11,"into_iter","syn::punctuated","",294,[[]]],[11,"into_iter","syn","",302,[[]]],[11,"next","syn::punctuated","",306,[[],["option",4]]],[11,"size_hint","","",306,[[]]],[11,"next","","",307,[[],["option",4]]],[11,"size_hint","","",307,[[]]],[11,"next","","",308,[[],["option",4]]],[11,"size_hint","","",308,[[]]],[11,"next","","",309,[[],["option",4]]],[11,"size_hint","","",309,[[]]],[11,"next","","",310,[[],["option",4]]],[11,"size_hint","","",310,[[]]],[11,"next","","",311,[[],["option",4]]],[11,"size_hint","","",311,[[]]],[11,"clone","syn::token","",180,[[]]],[11,"clone","","",181,[[]]],[11,"clone","","",182,[[]]],[11,"clone","","",183,[[]]],[11,"clone","","",184,[[]]],[11,"clone","","",185,[[]]],[11,"clone","","",186,[[]]],[11,"clone","","",187,[[]]],[11,"clone","","",188,[[]]],[11,"clone","","",189,[[]]],[11,"clone","","",190,[[]]],[11,"clone","","",191,[[]]],[11,"clone","","",192,[[]]],[11,"clone","","",193,[[]]],[11,"clone","","",194,[[]]],[11,"clone","","",195,[[]]],[11,"clone","","",196,[[]]],[11,"clone","","",197,[[]]],[11,"clone","","",198,[[]]],[11,"clone","","",199,[[]]],[11,"clone","","",200,[[]]],[11,"clone","","",201,[[]]],[11,"clone","","",202,[[]]],[11,"clone","","",203,[[]]],[11,"clone","","",204,[[]]],[11,"clone","","",205,[[]]],[11,"clone","","",206,[[]]],[11,"clone","","",207,[[]]],[11,"clone","","",208,[[]]],[11,"clone","","",209,[[]]],[11,"clone","","",210,[[]]],[11,"clone","","",211,[[]]],[11,"clone","","",212,[[]]],[11,"clone","","",213,[[]]],[11,"clone","","",214,[[]]],[11,"clone","","",215,[[]]],[11,"clone","","",216,[[]]],[11,"clone","","",217,[[]]],[11,"clone","","",218,[[]]],[11,"clone","","",219,[[]]],[11,"clone","","",220,[[]]],[11,"clone","","",221,[[]]],[11,"clone","","",222,[[]]],[11,"clone","","",223,[[]]],[11,"clone","","",224,[[]]],[11,"clone","","",225,[[]]],[11,"clone","","",226,[[]]],[11,"clone","","",227,[[]]],[11,"clone","","",228,[[]]],[11,"clone","","",229,[[]]],[11,"clone","","",230,[[]]],[11,"clone","","",231,[[]]],[11,"clone","","",232,[[]]],[11,"clone","","",233,[[]]],[11,"clone","","",234,[[]]],[11,"clone","","",235,[[]]],[11,"clone","","",236,[[]]],[11,"clone","","",237,[[]]],[11,"clone","","",238,[[]]],[11,"clone","","",239,[[]]],[11,"clone","","",240,[[]]],[11,"clone","","",241,[[]]],[11,"clone","","",242,[[]]],[11,"clone","","",243,[[]]],[11,"clone","","",244,[[]]],[11,"clone","","",245,[[]]],[11,"clone","","",246,[[]]],[11,"clone","","",247,[[]]],[11,"clone","","",248,[[]]],[11,"clone","","",249,[[]]],[11,"clone","","",250,[[]]],[11,"clone","","",251,[[]]],[11,"clone","","",252,[[]]],[11,"clone","","",253,[[]]],[11,"clone","","",254,[[]]],[11,"clone","","",255,[[]]],[11,"clone","","",256,[[]]],[11,"clone","","",257,[[]]],[11,"clone","","",258,[[]]],[11,"clone","","",259,[[]]],[11,"clone","","",260,[[]]],[11,"clone","","",261,[[]]],[11,"clone","","",262,[[]]],[11,"clone","","",263,[[]]],[11,"clone","","",264,[[]]],[11,"clone","","",265,[[]]],[11,"clone","","",266,[[]]],[11,"clone","","",267,[[]]],[11,"clone","","",268,[[]]],[11,"clone","","",269,[[]]],[11,"clone","","",270,[[]]],[11,"clone","","",271,[[]]],[11,"clone","","",272,[[]]],[11,"clone","","",273,[[]]],[11,"clone","","",274,[[]]],[11,"clone","","",275,[[]]],[11,"clone","","",276,[[]]],[11,"clone","","",277,[[]]],[11,"clone","","",278,[[]]],[11,"clone","","",279,[[]]],[11,"clone","","",280,[[]]],[11,"clone","","",281,[[]]],[11,"clone","","",282,[[]]],[11,"clone","syn","",304,[[]]],[11,"clone","","",283,[[]]],[11,"clone","","",305,[[]]],[11,"clone","","",100,[[]]],[11,"clone","","",284,[[]]],[11,"clone","","",285,[[]]],[11,"clone","","",286,[[]]],[11,"clone","","",287,[[]]],[11,"clone","","",288,[[]]],[11,"clone","","",289,[[]]],[11,"clone","syn::buffer","",291,[[]]],[11,"clone","syn::punctuated","",294,[[]]],[11,"clone","","",306,[[]]],[11,"clone","","",308,[[]]],[11,"clone","","",309,[[]]],[11,"clone","","",310,[[]]],[11,"clone","","",293,[[]]],[11,"clone","syn","",109,[[]]],[11,"clone","","",142,[[]]],[11,"clone","","",10,[[]]],[11,"clone","","",149,[[]]],[11,"clone","","",0,[[]]],[11,"clone","","",110,[[]]],[11,"clone","","",172,[[]]],[11,"clone","","",143,[[]]],[11,"clone","","",107,[[]]],[11,"clone","","",54,[[]]],[11,"clone","","",55,[[]]],[11,"clone","","",144,[[]]],[11,"clone","","",171,[[]]],[11,"clone","","",103,[[]]],[11,"clone","","",104,[[]]],[11,"clone","","",105,[[]]],[11,"clone","","",106,[[]]],[11,"clone","","",156,[[]]],[11,"clone","","",14,[[]]],[11,"clone","","",15,[[]]],[11,"clone","","",16,[[]]],[11,"clone","","",17,[[]]],[11,"clone","","",18,[[]]],[11,"clone","","",19,[[]]],[11,"clone","","",20,[[]]],[11,"clone","","",21,[[]]],[11,"clone","","",22,[[]]],[11,"clone","","",23,[[]]],[11,"clone","","",24,[[]]],[11,"clone","","",25,[[]]],[11,"clone","","",26,[[]]],[11,"clone","","",27,[[]]],[11,"clone","","",28,[[]]],[11,"clone","","",29,[[]]],[11,"clone","","",30,[[]]],[11,"clone","","",31,[[]]],[11,"clone","","",32,[[]]],[11,"clone","","",33,[[]]],[11,"clone","","",34,[[]]],[11,"clone","","",35,[[]]],[11,"clone","","",36,[[]]],[11,"clone","","",37,[[]]],[11,"clone","","",38,[[]]],[11,"clone","","",39,[[]]],[11,"clone","","",40,[[]]],[11,"clone","","",41,[[]]],[11,"clone","","",42,[[]]],[11,"clone","","",43,[[]]],[11,"clone","","",44,[[]]],[11,"clone","","",45,[[]]],[11,"clone","","",46,[[]]],[11,"clone","","",47,[[]]],[11,"clone","","",48,[[]]],[11,"clone","","",49,[[]]],[11,"clone","","",50,[[]]],[11,"clone","","",51,[[]]],[11,"clone","","",52,[[]]],[11,"clone","","",3,[[]]],[11,"clone","","",126,[[]]],[11,"clone","","",11,[[]]],[11,"clone","","",152,[[]]],[11,"clone","","",4,[[]]],[11,"clone","","",5,[[]]],[11,"clone","","",99,[[]]],[11,"clone","","",162,[[]]],[11,"clone","","",163,[[]]],[11,"clone","","",64,[[]]],[11,"clone","","",65,[[]]],[11,"clone","","",66,[[]]],[11,"clone","","",67,[[]]],[11,"clone","","",178,[[]]],[11,"clone","","",154,[[]]],[11,"clone","","",158,[[]]],[11,"clone","","",56,[[]]],[11,"clone","","",164,[[]]],[11,"clone","","",68,[[]]],[11,"clone","","",69,[[]]],[11,"clone","","",70,[[]]],[11,"clone","","",71,[[]]],[11,"clone","","",53,[[]]],[11,"clone","","",165,[[]]],[11,"clone","","",72,[[]]],[11,"clone","","",73,[[]]],[11,"clone","","",74,[[]]],[11,"clone","","",75,[[]]],[11,"clone","","",76,[[]]],[11,"clone","","",77,[[]]],[11,"clone","","",78,[[]]],[11,"clone","","",79,[[]]],[11,"clone","","",80,[[]]],[11,"clone","","",81,[[]]],[11,"clone","","",82,[[]]],[11,"clone","","",83,[[]]],[11,"clone","","",84,[[]]],[11,"clone","","",85,[[]]],[11,"clone","","",86,[[]]],[11,"clone","","",87,[[]]],[11,"clone","","",12,[[]]],[11,"clone","","",57,[[]]],[11,"clone","","",168,[[]]],[11,"clone","","",101,[[]]],[11,"clone","","",108,[[]]],[11,"clone","","",102,[[]]],[11,"clone","","",170,[[]]],[11,"clone","","",157,[[]]],[11,"clone","","",150,[[]]],[11,"clone","","",1,[[]]],[11,"clone","","",2,[[]]],[11,"clone","","",13,[[]]],[11,"clone","","",151,[[]]],[11,"clone","","",145,[[]]],[11,"clone","","",177,[[]]],[11,"clone","","",127,[[]]],[11,"clone","","",128,[[]]],[11,"clone","","",129,[[]]],[11,"clone","","",130,[[]]],[11,"clone","","",131,[[]]],[11,"clone","","",132,[[]]],[11,"clone","","",133,[[]]],[11,"clone","","",134,[[]]],[11,"clone","","",135,[[]]],[11,"clone","","",136,[[]]],[11,"clone","","",137,[[]]],[11,"clone","","",138,[[]]],[11,"clone","","",139,[[]]],[11,"clone","","",140,[[]]],[11,"clone","","",141,[[]]],[11,"clone","","",146,[[]]],[11,"clone","","",179,[[]]],[11,"clone","","",147,[[]]],[11,"clone","","",58,[[]]],[11,"clone","","",59,[[]]],[11,"clone","","",60,[[]]],[11,"clone","","",148,[[]]],[11,"clone","","",155,[[]]],[11,"clone","","",88,[[]]],[11,"clone","","",175,[[]]],[11,"clone","","",89,[[]]],[11,"clone","","",174,[[]]],[11,"clone","","",61,[[]]],[11,"clone","","",159,[[]]],[11,"clone","","",166,[[]]],[11,"clone","","",90,[[]]],[11,"clone","","",91,[[]]],[11,"clone","","",92,[[]]],[11,"clone","","",93,[[]]],[11,"clone","","",176,[[]]],[11,"clone","","",111,[[]]],[11,"clone","","",112,[[]]],[11,"clone","","",113,[[]]],[11,"clone","","",114,[[]]],[11,"clone","","",115,[[]]],[11,"clone","","",116,[[]]],[11,"clone","","",117,[[]]],[11,"clone","","",62,[[]]],[11,"clone","","",160,[[]]],[11,"clone","","",118,[[]]],[11,"clone","","",119,[[]]],[11,"clone","","",120,[[]]],[11,"clone","","",121,[[]]],[11,"clone","","",122,[[]]],[11,"clone","","",123,[[]]],[11,"clone","","",124,[[]]],[11,"clone","","",173,[[]]],[11,"clone","","",94,[[]]],[11,"clone","","",95,[[]]],[11,"clone","","",96,[[]]],[11,"clone","","",97,[[]]],[11,"clone","","",98,[[]]],[11,"clone","","",167,[[]]],[11,"clone","","",125,[[]]],[11,"clone","","",6,[[]]],[11,"clone","","",7,[[]]],[11,"clone","","",8,[[]]],[11,"clone","","",9,[[]]],[11,"clone","","",153,[[]]],[11,"clone","","",63,[[]]],[11,"clone","","",161,[[]]],[11,"clone","syn::parse","",300,[[]]],[11,"clone","syn","",302,[[]]],[11,"default","syn::token","",180,[[]]],[11,"default","","",181,[[]]],[11,"default","","",182,[[]]],[11,"default","","",183,[[]]],[11,"default","","",184,[[]]],[11,"default","","",185,[[]]],[11,"default","","",186,[[]]],[11,"default","","",187,[[]]],[11,"default","","",188,[[]]],[11,"default","","",189,[[]]],[11,"default","","",190,[[]]],[11,"default","","",191,[[]]],[11,"default","","",192,[[]]],[11,"default","","",193,[[]]],[11,"default","","",194,[[]]],[11,"default","","",195,[[]]],[11,"default","","",196,[[]]],[11,"default","","",197,[[]]],[11,"default","","",198,[[]]],[11,"default","","",199,[[]]],[11,"default","","",200,[[]]],[11,"default","","",201,[[]]],[11,"default","","",202,[[]]],[11,"default","","",203,[[]]],[11,"default","","",204,[[]]],[11,"default","","",205,[[]]],[11,"default","","",206,[[]]],[11,"default","","",207,[[]]],[11,"default","","",208,[[]]],[11,"default","","",209,[[]]],[11,"default","","",210,[[]]],[11,"default","","",211,[[]]],[11,"default","","",212,[[]]],[11,"default","","",213,[[]]],[11,"default","","",214,[[]]],[11,"default","","",215,[[]]],[11,"default","","",216,[[]]],[11,"default","","",217,[[]]],[11,"default","","",218,[[]]],[11,"default","","",219,[[]]],[11,"default","","",220,[[]]],[11,"default","","",221,[[]]],[11,"default","","",222,[[]]],[11,"default","","",223,[[]]],[11,"default","","",224,[[]]],[11,"default","","",225,[[]]],[11,"default","","",226,[[]]],[11,"default","","",227,[[]]],[11,"default","","",228,[[]]],[11,"default","","",229,[[]]],[11,"default","","",230,[[]]],[11,"default","","",231,[[]]],[11,"default","","",232,[[]]],[11,"default","","",233,[[]]],[11,"default","","",234,[[]]],[11,"default","","",235,[[]]],[11,"default","","",236,[[]]],[11,"default","","",237,[[]]],[11,"default","","",238,[[]]],[11,"default","","",239,[[]]],[11,"default","","",240,[[]]],[11,"default","","",241,[[]]],[11,"default","","",242,[[]]],[11,"default","","",243,[[]]],[11,"default","","",244,[[]]],[11,"default","","",245,[[]]],[11,"default","","",246,[[]]],[11,"default","","",247,[[]]],[11,"default","","",248,[[]]],[11,"default","","",249,[[]]],[11,"default","","",250,[[]]],[11,"default","","",251,[[]]],[11,"default","","",252,[[]]],[11,"default","","",253,[[]]],[11,"default","","",254,[[]]],[11,"default","","",255,[[]]],[11,"default","","",256,[[]]],[11,"default","","",257,[[]]],[11,"default","","",258,[[]]],[11,"default","","",259,[[]]],[11,"default","","",260,[[]]],[11,"default","","",261,[[]]],[11,"default","","",262,[[]]],[11,"default","","",263,[[]]],[11,"default","","",264,[[]]],[11,"default","","",265,[[]]],[11,"default","","",266,[[]]],[11,"default","","",267,[[]]],[11,"default","","",268,[[]]],[11,"default","","",269,[[]]],[11,"default","","",270,[[]]],[11,"default","","",271,[[]]],[11,"default","","",272,[[]]],[11,"default","","",273,[[]]],[11,"default","","",274,[[]]],[11,"default","","",275,[[]]],[11,"default","","",276,[[]]],[11,"default","","",277,[[]]],[11,"default","","",278,[[]]],[11,"default","","",279,[[]]],[11,"default","","",280,[[]]],[11,"default","","",281,[[]]],[11,"default","","",282,[[]]],[11,"default","syn","",56,[[]]],[11,"default","","",54,[[]]],[11,"default","","",179,[[]]],[11,"default","syn::punctuated","",294,[[]]],[11,"cmp","syn","",100,[[["lifetime",3]],["ordering",4]]],[11,"eq","syn::token","",180,[[["underscore",3]]]],[11,"eq","","",181,[[["abstract",3]]]],[11,"eq","","",182,[[["as",3]]]],[11,"eq","","",183,[[["async",3]]]],[11,"eq","","",184,[[["auto",3]]]],[11,"eq","","",185,[[["await",3]]]],[11,"eq","","",186,[[["become",3]]]],[11,"eq","","",187,[[["box",3]]]],[11,"eq","","",188,[[["break",3]]]],[11,"eq","","",189,[[["const",3]]]],[11,"eq","","",190,[[["continue",3]]]],[11,"eq","","",191,[[["crate",3]]]],[11,"eq","","",192,[[["default",3]]]],[11,"eq","","",193,[[["do",3]]]],[11,"eq","","",194,[[["dyn",3]]]],[11,"eq","","",195,[[["else",3]]]],[11,"eq","","",196,[[["enum",3]]]],[11,"eq","","",197,[[["extern",3]]]],[11,"eq","","",198,[[["final",3]]]],[11,"eq","","",199,[[["fn",3]]]],[11,"eq","","",200,[[["for",3]]]],[11,"eq","","",201,[[["if",3]]]],[11,"eq","","",202,[[["impl",3]]]],[11,"eq","","",203,[[["in",3]]]],[11,"eq","","",204,[[["let",3]]]],[11,"eq","","",205,[[["loop",3]]]],[11,"eq","","",206,[[["macro",3]]]],[11,"eq","","",207,[[["match",3]]]],[11,"eq","","",208,[[["mod",3]]]],[11,"eq","","",209,[[["move",3]]]],[11,"eq","","",210,[[["mut",3]]]],[11,"eq","","",211,[[["override",3]]]],[11,"eq","","",212,[[["priv",3]]]],[11,"eq","","",213,[[["pub",3]]]],[11,"eq","","",214,[[["ref",3]]]],[11,"eq","","",215,[[["return",3]]]],[11,"eq","","",216,[[["selftype",3]]]],[11,"eq","","",217,[[["selfvalue",3]]]],[11,"eq","","",218,[[["static",3]]]],[11,"eq","","",219,[[["struct",3]]]],[11,"eq","","",220,[[["super",3]]]],[11,"eq","","",221,[[["trait",3]]]],[11,"eq","","",222,[[["try",3]]]],[11,"eq","","",223,[[["type",3]]]],[11,"eq","","",224,[[["typeof",3]]]],[11,"eq","","",225,[[["union",3]]]],[11,"eq","","",226,[[["unsafe",3]]]],[11,"eq","","",227,[[["unsized",3]]]],[11,"eq","","",228,[[["use",3]]]],[11,"eq","","",229,[[["virtual",3]]]],[11,"eq","","",230,[[["where",3]]]],[11,"eq","","",231,[[["while",3]]]],[11,"eq","","",232,[[["yield",3]]]],[11,"eq","","",233,[[["add",3]]]],[11,"eq","","",234,[[["addeq",3]]]],[11,"eq","","",235,[[["and",3]]]],[11,"eq","","",236,[[["andand",3]]]],[11,"eq","","",237,[[["andeq",3]]]],[11,"eq","","",238,[[["at",3]]]],[11,"eq","","",239,[[["bang",3]]]],[11,"eq","","",240,[[["caret",3]]]],[11,"eq","","",241,[[["careteq",3]]]],[11,"eq","","",242,[[["colon",3]]]],[11,"eq","","",243,[[["colon2",3]]]],[11,"eq","","",244,[[["comma",3]]]],[11,"eq","","",245,[[["div",3]]]],[11,"eq","","",246,[[["diveq",3]]]],[11,"eq","","",247,[[["dollar",3]]]],[11,"eq","","",248,[[["dot",3]]]],[11,"eq","","",249,[[["dot2",3]]]],[11,"eq","","",250,[[["dot3",3]]]],[11,"eq","","",251,[[["dotdoteq",3]]]],[11,"eq","","",252,[[["eq",3]]]],[11,"eq","","",253,[[["eqeq",3]]]],[11,"eq","","",254,[[["ge",3]]]],[11,"eq","","",255,[[["gt",3]]]],[11,"eq","","",256,[[["le",3]]]],[11,"eq","","",257,[[["lt",3]]]],[11,"eq","","",258,[[["muleq",3]]]],[11,"eq","","",259,[[["ne",3]]]],[11,"eq","","",260,[[["or",3]]]],[11,"eq","","",261,[[["oreq",3]]]],[11,"eq","","",262,[[["oror",3]]]],[11,"eq","","",263,[[["pound",3]]]],[11,"eq","","",264,[[["question",3]]]],[11,"eq","","",265,[[["rarrow",3]]]],[11,"eq","","",266,[[["larrow",3]]]],[11,"eq","","",267,[[["rem",3]]]],[11,"eq","","",268,[[["remeq",3]]]],[11,"eq","","",269,[[["fatarrow",3]]]],[11,"eq","","",270,[[["semi",3]]]],[11,"eq","","",271,[[["shl",3]]]],[11,"eq","","",272,[[["shleq",3]]]],[11,"eq","","",273,[[["shr",3]]]],[11,"eq","","",274,[[["shreq",3]]]],[11,"eq","","",275,[[["star",3]]]],[11,"eq","","",276,[[["sub",3]]]],[11,"eq","","",277,[[["subeq",3]]]],[11,"eq","","",278,[[["tilde",3]]]],[11,"eq","","",279,[[["brace",3]]]],[11,"eq","","",280,[[["bracket",3]]]],[11,"eq","","",281,[[["paren",3]]]],[11,"eq","","",282,[[["group",3]]]],[11,"eq","syn","",157,[[]]],[11,"eq","","",53,[[]]],[11,"eq","","",304,[[]]],[11,"eq","","",283,[[]]],[11,"eq","","",305,[[]]],[11,"eq","","",100,[[["lifetime",3]]]],[11,"eq","","",284,[[]]],[11,"eq","","",285,[[]]],[11,"eq","","",286,[[]]],[11,"eq","","",287,[[]]],[11,"eq","","",288,[[]]],[11,"eq","","",289,[[]]],[11,"eq","syn::buffer","",291,[[]]],[11,"eq","syn::punctuated","",294,[[]]],[11,"eq","syn","",109,[[]]],[11,"eq","","",142,[[]]],[11,"eq","","",10,[[]]],[11,"eq","","",149,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",110,[[]]],[11,"eq","","",172,[[]]],[11,"eq","","",143,[[]]],[11,"eq","","",107,[[]]],[11,"eq","","",54,[[]]],[11,"eq","","",55,[[]]],[11,"eq","","",144,[[]]],[11,"eq","","",171,[[]]],[11,"eq","","",103,[[]]],[11,"eq","","",104,[[]]],[11,"eq","","",105,[[]]],[11,"eq","","",106,[[]]],[11,"eq","","",156,[[]]],[11,"eq","","",14,[[]]],[11,"eq","","",15,[[]]],[11,"eq","","",16,[[]]],[11,"eq","","",17,[[]]],[11,"eq","","",18,[[]]],[11,"eq","","",19,[[]]],[11,"eq","","",20,[[]]],[11,"eq","","",21,[[]]],[11,"eq","","",22,[[]]],[11,"eq","","",23,[[]]],[11,"eq","","",24,[[]]],[11,"eq","","",25,[[]]],[11,"eq","","",26,[[]]],[11,"eq","","",27,[[]]],[11,"eq","","",28,[[]]],[11,"eq","","",29,[[]]],[11,"eq","","",30,[[]]],[11,"eq","","",31,[[]]],[11,"eq","","",32,[[]]],[11,"eq","","",33,[[]]],[11,"eq","","",34,[[]]],[11,"eq","","",35,[[]]],[11,"eq","","",36,[[]]],[11,"eq","","",37,[[]]],[11,"eq","","",38,[[]]],[11,"eq","","",39,[[]]],[11,"eq","","",40,[[]]],[11,"eq","","",41,[[]]],[11,"eq","","",42,[[]]],[11,"eq","","",43,[[]]],[11,"eq","","",44,[[]]],[11,"eq","","",45,[[]]],[11,"eq","","",46,[[]]],[11,"eq","","",47,[[]]],[11,"eq","","",48,[[]]],[11,"eq","","",49,[[]]],[11,"eq","","",50,[[]]],[11,"eq","","",51,[[]]],[11,"eq","","",52,[[]]],[11,"eq","","",3,[[]]],[11,"eq","","",126,[[]]],[11,"eq","","",11,[[]]],[11,"eq","","",152,[[]]],[11,"eq","","",4,[[]]],[11,"eq","","",5,[[]]],[11,"eq","","",99,[[]]],[11,"eq","","",162,[[]]],[11,"eq","","",163,[[]]],[11,"eq","","",64,[[]]],[11,"eq","","",65,[[]]],[11,"eq","","",66,[[]]],[11,"eq","","",67,[[]]],[11,"eq","","",178,[[]]],[11,"eq","","",154,[[]]],[11,"eq","","",158,[[]]],[11,"eq","","",56,[[]]],[11,"eq","","",164,[[]]],[11,"eq","","",68,[[]]],[11,"eq","","",69,[[]]],[11,"eq","","",70,[[]]],[11,"eq","","",71,[[]]],[11,"eq","","",165,[[]]],[11,"eq","","",72,[[]]],[11,"eq","","",73,[[]]],[11,"eq","","",74,[[]]],[11,"eq","","",75,[[]]],[11,"eq","","",76,[[]]],[11,"eq","","",77,[[]]],[11,"eq","","",78,[[]]],[11,"eq","","",79,[[]]],[11,"eq","","",80,[[]]],[11,"eq","","",81,[[]]],[11,"eq","","",82,[[]]],[11,"eq","","",83,[[]]],[11,"eq","","",84,[[]]],[11,"eq","","",85,[[]]],[11,"eq","","",86,[[]]],[11,"eq","","",87,[[]]],[11,"eq","","",12,[[]]],[11,"eq","","",57,[[]]],[11,"eq","","",168,[[]]],[11,"eq","","",101,[[]]],[11,"eq","","",108,[[]]],[11,"eq","","",102,[[]]],[11,"eq","","",170,[[]]],[11,"eq","","",150,[[]]],[11,"eq","","",1,[[]]],[11,"eq","","",2,[[]]],[11,"eq","","",13,[[]]],[11,"eq","","",151,[[]]],[11,"eq","","",145,[[]]],[11,"eq","","",177,[[]]],[11,"eq","","",127,[[]]],[11,"eq","","",128,[[]]],[11,"eq","","",129,[[]]],[11,"eq","","",130,[[]]],[11,"eq","","",131,[[]]],[11,"eq","","",132,[[]]],[11,"eq","","",133,[[]]],[11,"eq","","",134,[[]]],[11,"eq","","",135,[[]]],[11,"eq","","",136,[[]]],[11,"eq","","",137,[[]]],[11,"eq","","",138,[[]]],[11,"eq","","",139,[[]]],[11,"eq","","",140,[[]]],[11,"eq","","",141,[[]]],[11,"eq","","",146,[[]]],[11,"eq","","",179,[[]]],[11,"eq","","",147,[[]]],[11,"eq","","",58,[[]]],[11,"eq","","",59,[[]]],[11,"eq","","",60,[[]]],[11,"eq","","",148,[[]]],[11,"eq","","",155,[[]]],[11,"eq","","",88,[[]]],[11,"eq","","",175,[[]]],[11,"eq","","",89,[[]]],[11,"eq","","",174,[[]]],[11,"eq","","",61,[[]]],[11,"eq","","",159,[[]]],[11,"eq","","",166,[[]]],[11,"eq","","",90,[[]]],[11,"eq","","",91,[[]]],[11,"eq","","",92,[[]]],[11,"eq","","",93,[[]]],[11,"eq","","",176,[[]]],[11,"eq","","",111,[[]]],[11,"eq","","",112,[[]]],[11,"eq","","",113,[[]]],[11,"eq","","",114,[[]]],[11,"eq","","",115,[[]]],[11,"eq","","",116,[[]]],[11,"eq","","",117,[[]]],[11,"eq","","",62,[[]]],[11,"eq","","",160,[[]]],[11,"eq","","",118,[[]]],[11,"eq","","",119,[[]]],[11,"eq","","",120,[[]]],[11,"eq","","",121,[[]]],[11,"eq","","",122,[[]]],[11,"eq","","",123,[[]]],[11,"eq","","",124,[[]]],[11,"eq","","",173,[[]]],[11,"eq","","",94,[[]]],[11,"eq","","",95,[[]]],[11,"eq","","",96,[[]]],[11,"eq","","",97,[[]]],[11,"eq","","",98,[[]]],[11,"eq","","",167,[[]]],[11,"eq","","",125,[[]]],[11,"eq","","",6,[[]]],[11,"eq","","",7,[[]]],[11,"eq","","",8,[[]]],[11,"eq","","",9,[[]]],[11,"eq","","",153,[[]]],[11,"eq","","",63,[[]]],[11,"eq","","",161,[[]]],[11,"partial_cmp","","",100,[[["lifetime",3]],[["option",4],["ordering",4]]]],[11,"deref","syn::token","",180,[[]]],[11,"deref","","",233,[[]]],[11,"deref","","",235,[[]]],[11,"deref","","",238,[[]]],[11,"deref","","",239,[[]]],[11,"deref","","",240,[[]]],[11,"deref","","",242,[[]]],[11,"deref","","",244,[[]]],[11,"deref","","",245,[[]]],[11,"deref","","",247,[[]]],[11,"deref","","",248,[[]]],[11,"deref","","",252,[[]]],[11,"deref","","",255,[[]]],[11,"deref","","",257,[[]]],[11,"deref","","",260,[[]]],[11,"deref","","",263,[[]]],[11,"deref","","",264,[[]]],[11,"deref","","",267,[[]]],[11,"deref","","",270,[[]]],[11,"deref","","",275,[[]]],[11,"deref","","",276,[[]]],[11,"deref","","",278,[[]]],[11,"deref","syn::parse","",300,[[]]],[11,"deref_mut","syn::token","",180,[[]]],[11,"deref_mut","","",233,[[]]],[11,"deref_mut","","",235,[[]]],[11,"deref_mut","","",238,[[]]],[11,"deref_mut","","",239,[[]]],[11,"deref_mut","","",240,[[]]],[11,"deref_mut","","",242,[[]]],[11,"deref_mut","","",244,[[]]],[11,"deref_mut","","",245,[[]]],[11,"deref_mut","","",247,[[]]],[11,"deref_mut","","",248,[[]]],[11,"deref_mut","","",252,[[]]],[11,"deref_mut","","",255,[[]]],[11,"deref_mut","","",257,[[]]],[11,"deref_mut","","",260,[[]]],[11,"deref_mut","","",263,[[]]],[11,"deref_mut","","",264,[[]]],[11,"deref_mut","","",267,[[]]],[11,"deref_mut","","",270,[[]]],[11,"deref_mut","","",275,[[]]],[11,"deref_mut","","",276,[[]]],[11,"deref_mut","","",278,[[]]],[11,"fmt","","",180,[[["formatter",3]],["result",6]]],[11,"fmt","","",181,[[["formatter",3]],["result",6]]],[11,"fmt","","",182,[[["formatter",3]],["result",6]]],[11,"fmt","","",183,[[["formatter",3]],["result",6]]],[11,"fmt","","",184,[[["formatter",3]],["result",6]]],[11,"fmt","","",185,[[["formatter",3]],["result",6]]],[11,"fmt","","",186,[[["formatter",3]],["result",6]]],[11,"fmt","","",187,[[["formatter",3]],["result",6]]],[11,"fmt","","",188,[[["formatter",3]],["result",6]]],[11,"fmt","","",189,[[["formatter",3]],["result",6]]],[11,"fmt","","",190,[[["formatter",3]],["result",6]]],[11,"fmt","","",191,[[["formatter",3]],["result",6]]],[11,"fmt","","",192,[[["formatter",3]],["result",6]]],[11,"fmt","","",193,[[["formatter",3]],["result",6]]],[11,"fmt","","",194,[[["formatter",3]],["result",6]]],[11,"fmt","","",195,[[["formatter",3]],["result",6]]],[11,"fmt","","",196,[[["formatter",3]],["result",6]]],[11,"fmt","","",197,[[["formatter",3]],["result",6]]],[11,"fmt","","",198,[[["formatter",3]],["result",6]]],[11,"fmt","","",199,[[["formatter",3]],["result",6]]],[11,"fmt","","",200,[[["formatter",3]],["result",6]]],[11,"fmt","","",201,[[["formatter",3]],["result",6]]],[11,"fmt","","",202,[[["formatter",3]],["result",6]]],[11,"fmt","","",203,[[["formatter",3]],["result",6]]],[11,"fmt","","",204,[[["formatter",3]],["result",6]]],[11,"fmt","","",205,[[["formatter",3]],["result",6]]],[11,"fmt","","",206,[[["formatter",3]],["result",6]]],[11,"fmt","","",207,[[["formatter",3]],["result",6]]],[11,"fmt","","",208,[[["formatter",3]],["result",6]]],[11,"fmt","","",209,[[["formatter",3]],["result",6]]],[11,"fmt","","",210,[[["formatter",3]],["result",6]]],[11,"fmt","","",211,[[["formatter",3]],["result",6]]],[11,"fmt","","",212,[[["formatter",3]],["result",6]]],[11,"fmt","","",213,[[["formatter",3]],["result",6]]],[11,"fmt","","",214,[[["formatter",3]],["result",6]]],[11,"fmt","","",215,[[["formatter",3]],["result",6]]],[11,"fmt","","",216,[[["formatter",3]],["result",6]]],[11,"fmt","","",217,[[["formatter",3]],["result",6]]],[11,"fmt","","",218,[[["formatter",3]],["result",6]]],[11,"fmt","","",219,[[["formatter",3]],["result",6]]],[11,"fmt","","",220,[[["formatter",3]],["result",6]]],[11,"fmt","","",221,[[["formatter",3]],["result",6]]],[11,"fmt","","",222,[[["formatter",3]],["result",6]]],[11,"fmt","","",223,[[["formatter",3]],["result",6]]],[11,"fmt","","",224,[[["formatter",3]],["result",6]]],[11,"fmt","","",225,[[["formatter",3]],["result",6]]],[11,"fmt","","",226,[[["formatter",3]],["result",6]]],[11,"fmt","","",227,[[["formatter",3]],["result",6]]],[11,"fmt","","",228,[[["formatter",3]],["result",6]]],[11,"fmt","","",229,[[["formatter",3]],["result",6]]],[11,"fmt","","",230,[[["formatter",3]],["result",6]]],[11,"fmt","","",231,[[["formatter",3]],["result",6]]],[11,"fmt","","",232,[[["formatter",3]],["result",6]]],[11,"fmt","","",233,[[["formatter",3]],["result",6]]],[11,"fmt","","",234,[[["formatter",3]],["result",6]]],[11,"fmt","","",235,[[["formatter",3]],["result",6]]],[11,"fmt","","",236,[[["formatter",3]],["result",6]]],[11,"fmt","","",237,[[["formatter",3]],["result",6]]],[11,"fmt","","",238,[[["formatter",3]],["result",6]]],[11,"fmt","","",239,[[["formatter",3]],["result",6]]],[11,"fmt","","",240,[[["formatter",3]],["result",6]]],[11,"fmt","","",241,[[["formatter",3]],["result",6]]],[11,"fmt","","",242,[[["formatter",3]],["result",6]]],[11,"fmt","","",243,[[["formatter",3]],["result",6]]],[11,"fmt","","",244,[[["formatter",3]],["result",6]]],[11,"fmt","","",245,[[["formatter",3]],["result",6]]],[11,"fmt","","",246,[[["formatter",3]],["result",6]]],[11,"fmt","","",247,[[["formatter",3]],["result",6]]],[11,"fmt","","",248,[[["formatter",3]],["result",6]]],[11,"fmt","","",249,[[["formatter",3]],["result",6]]],[11,"fmt","","",250,[[["formatter",3]],["result",6]]],[11,"fmt","","",251,[[["formatter",3]],["result",6]]],[11,"fmt","","",252,[[["formatter",3]],["result",6]]],[11,"fmt","","",253,[[["formatter",3]],["result",6]]],[11,"fmt","","",254,[[["formatter",3]],["result",6]]],[11,"fmt","","",255,[[["formatter",3]],["result",6]]],[11,"fmt","","",256,[[["formatter",3]],["result",6]]],[11,"fmt","","",257,[[["formatter",3]],["result",6]]],[11,"fmt","","",258,[[["formatter",3]],["result",6]]],[11,"fmt","","",259,[[["formatter",3]],["result",6]]],[11,"fmt","","",260,[[["formatter",3]],["result",6]]],[11,"fmt","","",261,[[["formatter",3]],["result",6]]],[11,"fmt","","",262,[[["formatter",3]],["result",6]]],[11,"fmt","","",263,[[["formatter",3]],["result",6]]],[11,"fmt","","",264,[[["formatter",3]],["result",6]]],[11,"fmt","","",265,[[["formatter",3]],["result",6]]],[11,"fmt","","",266,[[["formatter",3]],["result",6]]],[11,"fmt","","",267,[[["formatter",3]],["result",6]]],[11,"fmt","","",268,[[["formatter",3]],["result",6]]],[11,"fmt","","",269,[[["formatter",3]],["result",6]]],[11,"fmt","","",270,[[["formatter",3]],["result",6]]],[11,"fmt","","",271,[[["formatter",3]],["result",6]]],[11,"fmt","","",272,[[["formatter",3]],["result",6]]],[11,"fmt","","",273,[[["formatter",3]],["result",6]]],[11,"fmt","","",274,[[["formatter",3]],["result",6]]],[11,"fmt","","",275,[[["formatter",3]],["result",6]]],[11,"fmt","","",276,[[["formatter",3]],["result",6]]],[11,"fmt","","",277,[[["formatter",3]],["result",6]]],[11,"fmt","","",278,[[["formatter",3]],["result",6]]],[11,"fmt","","",279,[[["formatter",3]],["result",6]]],[11,"fmt","","",280,[[["formatter",3]],["result",6]]],[11,"fmt","","",281,[[["formatter",3]],["result",6]]],[11,"fmt","","",282,[[["formatter",3]],["result",6]]],[11,"fmt","syn","",304,[[["formatter",3]],["result",6]]],[11,"fmt","","",283,[[["formatter",3]],["result",6]]],[11,"fmt","","",305,[[["formatter",3]],["result",6]]],[11,"fmt","","",284,[[["formatter",3]],["result",6]]],[11,"fmt","","",285,[[["formatter",3]],["result",6]]],[11,"fmt","","",286,[[["formatter",3]],["result",6]]],[11,"fmt","","",287,[[["formatter",3]],["result",6]]],[11,"fmt","","",288,[[["formatter",3]],["result",6]]],[11,"fmt","","",289,[[["formatter",3]],["result",6]]],[11,"fmt","","",101,[[["formatter",3]],["result",6]]],[11,"fmt","syn::punctuated","",294,[[["formatter",3]],["result",6]]],[11,"fmt","syn","",109,[[["formatter",3]],["result",6]]],[11,"fmt","","",142,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",149,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",110,[[["formatter",3]],["result",6]]],[11,"fmt","","",172,[[["formatter",3]],["result",6]]],[11,"fmt","","",143,[[["formatter",3]],["result",6]]],[11,"fmt","","",107,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",144,[[["formatter",3]],["result",6]]],[11,"fmt","","",171,[[["formatter",3]],["result",6]]],[11,"fmt","","",103,[[["formatter",3]],["result",6]]],[11,"fmt","","",104,[[["formatter",3]],["result",6]]],[11,"fmt","","",105,[[["formatter",3]],["result",6]]],[11,"fmt","","",106,[[["formatter",3]],["result",6]]],[11,"fmt","","",156,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",126,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",152,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",99,[[["formatter",3]],["result",6]]],[11,"fmt","","",162,[[["formatter",3]],["result",6]]],[11,"fmt","","",163,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",178,[[["formatter",3]],["result",6]]],[11,"fmt","","",154,[[["formatter",3]],["result",6]]],[11,"fmt","","",158,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",164,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",165,[[["formatter",3]],["result",6]]],[11,"fmt","","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],["result",6]]],[11,"fmt","","",78,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"fmt","","",81,[[["formatter",3]],["result",6]]],[11,"fmt","","",82,[[["formatter",3]],["result",6]]],[11,"fmt","","",83,[[["formatter",3]],["result",6]]],[11,"fmt","","",84,[[["formatter",3]],["result",6]]],[11,"fmt","","",85,[[["formatter",3]],["result",6]]],[11,"fmt","","",86,[[["formatter",3]],["result",6]]],[11,"fmt","","",87,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",100,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",168,[[["formatter",3]],["result",6]]],[11,"fmt","","",108,[[["formatter",3]],["result",6]]],[11,"fmt","","",102,[[["formatter",3]],["result",6]]],[11,"fmt","","",170,[[["formatter",3]],["result",6]]],[11,"fmt","","",157,[[["formatter",3]],["result",6]]],[11,"fmt","","",150,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",151,[[["formatter",3]],["result",6]]],[11,"fmt","","",145,[[["formatter",3]],["result",6]]],[11,"fmt","","",177,[[["formatter",3]],["result",6]]],[11,"fmt","","",127,[[["formatter",3]],["result",6]]],[11,"fmt","","",128,[[["formatter",3]],["result",6]]],[11,"fmt","","",129,[[["formatter",3]],["result",6]]],[11,"fmt","","",130,[[["formatter",3]],["result",6]]],[11,"fmt","","",131,[[["formatter",3]],["result",6]]],[11,"fmt","","",132,[[["formatter",3]],["result",6]]],[11,"fmt","","",133,[[["formatter",3]],["result",6]]],[11,"fmt","","",134,[[["formatter",3]],["result",6]]],[11,"fmt","","",135,[[["formatter",3]],["result",6]]],[11,"fmt","","",136,[[["formatter",3]],["result",6]]],[11,"fmt","","",137,[[["formatter",3]],["result",6]]],[11,"fmt","","",138,[[["formatter",3]],["result",6]]],[11,"fmt","","",139,[[["formatter",3]],["result",6]]],[11,"fmt","","",140,[[["formatter",3]],["result",6]]],[11,"fmt","","",141,[[["formatter",3]],["result",6]]],[11,"fmt","","",146,[[["formatter",3]],["result",6]]],[11,"fmt","","",179,[[["formatter",3]],["result",6]]],[11,"fmt","","",147,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",148,[[["formatter",3]],["result",6]]],[11,"fmt","","",155,[[["formatter",3]],["result",6]]],[11,"fmt","","",88,[[["formatter",3]],["result",6]]],[11,"fmt","","",175,[[["formatter",3]],["result",6]]],[11,"fmt","","",89,[[["formatter",3]],["result",6]]],[11,"fmt","","",174,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",159,[[["formatter",3]],["result",6]]],[11,"fmt","","",166,[[["formatter",3]],["result",6]]],[11,"fmt","","",90,[[["formatter",3]],["result",6]]],[11,"fmt","","",91,[[["formatter",3]],["result",6]]],[11,"fmt","","",92,[[["formatter",3]],["result",6]]],[11,"fmt","","",93,[[["formatter",3]],["result",6]]],[11,"fmt","","",176,[[["formatter",3]],["result",6]]],[11,"fmt","","",111,[[["formatter",3]],["result",6]]],[11,"fmt","","",112,[[["formatter",3]],["result",6]]],[11,"fmt","","",113,[[["formatter",3]],["result",6]]],[11,"fmt","","",114,[[["formatter",3]],["result",6]]],[11,"fmt","","",115,[[["formatter",3]],["result",6]]],[11,"fmt","","",116,[[["formatter",3]],["result",6]]],[11,"fmt","","",117,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",160,[[["formatter",3]],["result",6]]],[11,"fmt","","",118,[[["formatter",3]],["result",6]]],[11,"fmt","","",119,[[["formatter",3]],["result",6]]],[11,"fmt","","",120,[[["formatter",3]],["result",6]]],[11,"fmt","","",121,[[["formatter",3]],["result",6]]],[11,"fmt","","",122,[[["formatter",3]],["result",6]]],[11,"fmt","","",123,[[["formatter",3]],["result",6]]],[11,"fmt","","",124,[[["formatter",3]],["result",6]]],[11,"fmt","","",173,[[["formatter",3]],["result",6]]],[11,"fmt","","",94,[[["formatter",3]],["result",6]]],[11,"fmt","","",95,[[["formatter",3]],["result",6]]],[11,"fmt","","",96,[[["formatter",3]],["result",6]]],[11,"fmt","","",97,[[["formatter",3]],["result",6]]],[11,"fmt","","",98,[[["formatter",3]],["result",6]]],[11,"fmt","","",167,[[["formatter",3]],["result",6]]],[11,"fmt","","",125,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",153,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",161,[[["formatter",3]],["result",6]]],[11,"fmt","syn::parse","",301,[[["formatter",3]],["result",6]]],[11,"fmt","syn","",302,[[["formatter",3]],["result",6]]],[11,"fmt","","",100,[[["formatter",3]],["result",6]]],[11,"fmt","","",288,[[["formatter",3]],["result",6]]],[11,"fmt","","",289,[[["formatter",3]],["result",6]]],[11,"fmt","syn::parse","",301,[[["formatter",3]],["result",6]]],[11,"fmt","syn","",302,[[["formatter",3]],["result",6]]],[11,"index","syn::punctuated","",294,[[]]],[11,"index_mut","","",294,[[]]],[11,"hash","syn::token","",180,[[]]],[11,"hash","","",181,[[]]],[11,"hash","","",182,[[]]],[11,"hash","","",183,[[]]],[11,"hash","","",184,[[]]],[11,"hash","","",185,[[]]],[11,"hash","","",186,[[]]],[11,"hash","","",187,[[]]],[11,"hash","","",188,[[]]],[11,"hash","","",189,[[]]],[11,"hash","","",190,[[]]],[11,"hash","","",191,[[]]],[11,"hash","","",192,[[]]],[11,"hash","","",193,[[]]],[11,"hash","","",194,[[]]],[11,"hash","","",195,[[]]],[11,"hash","","",196,[[]]],[11,"hash","","",197,[[]]],[11,"hash","","",198,[[]]],[11,"hash","","",199,[[]]],[11,"hash","","",200,[[]]],[11,"hash","","",201,[[]]],[11,"hash","","",202,[[]]],[11,"hash","","",203,[[]]],[11,"hash","","",204,[[]]],[11,"hash","","",205,[[]]],[11,"hash","","",206,[[]]],[11,"hash","","",207,[[]]],[11,"hash","","",208,[[]]],[11,"hash","","",209,[[]]],[11,"hash","","",210,[[]]],[11,"hash","","",211,[[]]],[11,"hash","","",212,[[]]],[11,"hash","","",213,[[]]],[11,"hash","","",214,[[]]],[11,"hash","","",215,[[]]],[11,"hash","","",216,[[]]],[11,"hash","","",217,[[]]],[11,"hash","","",218,[[]]],[11,"hash","","",219,[[]]],[11,"hash","","",220,[[]]],[11,"hash","","",221,[[]]],[11,"hash","","",222,[[]]],[11,"hash","","",223,[[]]],[11,"hash","","",224,[[]]],[11,"hash","","",225,[[]]],[11,"hash","","",226,[[]]],[11,"hash","","",227,[[]]],[11,"hash","","",228,[[]]],[11,"hash","","",229,[[]]],[11,"hash","","",230,[[]]],[11,"hash","","",231,[[]]],[11,"hash","","",232,[[]]],[11,"hash","","",233,[[]]],[11,"hash","","",234,[[]]],[11,"hash","","",235,[[]]],[11,"hash","","",236,[[]]],[11,"hash","","",237,[[]]],[11,"hash","","",238,[[]]],[11,"hash","","",239,[[]]],[11,"hash","","",240,[[]]],[11,"hash","","",241,[[]]],[11,"hash","","",242,[[]]],[11,"hash","","",243,[[]]],[11,"hash","","",244,[[]]],[11,"hash","","",245,[[]]],[11,"hash","","",246,[[]]],[11,"hash","","",247,[[]]],[11,"hash","","",248,[[]]],[11,"hash","","",249,[[]]],[11,"hash","","",250,[[]]],[11,"hash","","",251,[[]]],[11,"hash","","",252,[[]]],[11,"hash","","",253,[[]]],[11,"hash","","",254,[[]]],[11,"hash","","",255,[[]]],[11,"hash","","",256,[[]]],[11,"hash","","",257,[[]]],[11,"hash","","",258,[[]]],[11,"hash","","",259,[[]]],[11,"hash","","",260,[[]]],[11,"hash","","",261,[[]]],[11,"hash","","",262,[[]]],[11,"hash","","",263,[[]]],[11,"hash","","",264,[[]]],[11,"hash","","",265,[[]]],[11,"hash","","",266,[[]]],[11,"hash","","",267,[[]]],[11,"hash","","",268,[[]]],[11,"hash","","",269,[[]]],[11,"hash","","",270,[[]]],[11,"hash","","",271,[[]]],[11,"hash","","",272,[[]]],[11,"hash","","",273,[[]]],[11,"hash","","",274,[[]]],[11,"hash","","",275,[[]]],[11,"hash","","",276,[[]]],[11,"hash","","",277,[[]]],[11,"hash","","",278,[[]]],[11,"hash","","",279,[[]]],[11,"hash","","",280,[[]]],[11,"hash","","",281,[[]]],[11,"hash","","",282,[[]]],[11,"hash","syn","",157,[[]]],[11,"hash","","",53,[[]]],[11,"hash","","",304,[[]]],[11,"hash","","",283,[[]]],[11,"hash","","",305,[[]]],[11,"hash","","",100,[[]]],[11,"hash","","",284,[[]]],[11,"hash","","",285,[[]]],[11,"hash","","",286,[[]]],[11,"hash","","",287,[[]]],[11,"hash","","",288,[[]]],[11,"hash","","",289,[[]]],[11,"hash","syn::punctuated","",294,[[]]],[11,"hash","syn","",109,[[]]],[11,"hash","","",142,[[]]],[11,"hash","","",10,[[]]],[11,"hash","","",149,[[]]],[11,"hash","","",0,[[]]],[11,"hash","","",110,[[]]],[11,"hash","","",172,[[]]],[11,"hash","","",143,[[]]],[11,"hash","","",107,[[]]],[11,"hash","","",54,[[]]],[11,"hash","","",55,[[]]],[11,"hash","","",144,[[]]],[11,"hash","","",171,[[]]],[11,"hash","","",103,[[]]],[11,"hash","","",104,[[]]],[11,"hash","","",105,[[]]],[11,"hash","","",106,[[]]],[11,"hash","","",156,[[]]],[11,"hash","","",14,[[]]],[11,"hash","","",15,[[]]],[11,"hash","","",16,[[]]],[11,"hash","","",17,[[]]],[11,"hash","","",18,[[]]],[11,"hash","","",19,[[]]],[11,"hash","","",20,[[]]],[11,"hash","","",21,[[]]],[11,"hash","","",22,[[]]],[11,"hash","","",23,[[]]],[11,"hash","","",24,[[]]],[11,"hash","","",25,[[]]],[11,"hash","","",26,[[]]],[11,"hash","","",27,[[]]],[11,"hash","","",28,[[]]],[11,"hash","","",29,[[]]],[11,"hash","","",30,[[]]],[11,"hash","","",31,[[]]],[11,"hash","","",32,[[]]],[11,"hash","","",33,[[]]],[11,"hash","","",34,[[]]],[11,"hash","","",35,[[]]],[11,"hash","","",36,[[]]],[11,"hash","","",37,[[]]],[11,"hash","","",38,[[]]],[11,"hash","","",39,[[]]],[11,"hash","","",40,[[]]],[11,"hash","","",41,[[]]],[11,"hash","","",42,[[]]],[11,"hash","","",43,[[]]],[11,"hash","","",44,[[]]],[11,"hash","","",45,[[]]],[11,"hash","","",46,[[]]],[11,"hash","","",47,[[]]],[11,"hash","","",48,[[]]],[11,"hash","","",49,[[]]],[11,"hash","","",50,[[]]],[11,"hash","","",51,[[]]],[11,"hash","","",52,[[]]],[11,"hash","","",3,[[]]],[11,"hash","","",126,[[]]],[11,"hash","","",11,[[]]],[11,"hash","","",152,[[]]],[11,"hash","","",4,[[]]],[11,"hash","","",5,[[]]],[11,"hash","","",99,[[]]],[11,"hash","","",162,[[]]],[11,"hash","","",163,[[]]],[11,"hash","","",64,[[]]],[11,"hash","","",65,[[]]],[11,"hash","","",66,[[]]],[11,"hash","","",67,[[]]],[11,"hash","","",178,[[]]],[11,"hash","","",154,[[]]],[11,"hash","","",158,[[]]],[11,"hash","","",56,[[]]],[11,"hash","","",164,[[]]],[11,"hash","","",68,[[]]],[11,"hash","","",69,[[]]],[11,"hash","","",70,[[]]],[11,"hash","","",71,[[]]],[11,"hash","","",165,[[]]],[11,"hash","","",72,[[]]],[11,"hash","","",73,[[]]],[11,"hash","","",74,[[]]],[11,"hash","","",75,[[]]],[11,"hash","","",76,[[]]],[11,"hash","","",77,[[]]],[11,"hash","","",78,[[]]],[11,"hash","","",79,[[]]],[11,"hash","","",80,[[]]],[11,"hash","","",81,[[]]],[11,"hash","","",82,[[]]],[11,"hash","","",83,[[]]],[11,"hash","","",84,[[]]],[11,"hash","","",85,[[]]],[11,"hash","","",86,[[]]],[11,"hash","","",87,[[]]],[11,"hash","","",12,[[]]],[11,"hash","","",57,[[]]],[11,"hash","","",168,[[]]],[11,"hash","","",101,[[]]],[11,"hash","","",108,[[]]],[11,"hash","","",102,[[]]],[11,"hash","","",170,[[]]],[11,"hash","","",150,[[]]],[11,"hash","","",1,[[]]],[11,"hash","","",2,[[]]],[11,"hash","","",13,[[]]],[11,"hash","","",151,[[]]],[11,"hash","","",145,[[]]],[11,"hash","","",177,[[]]],[11,"hash","","",127,[[]]],[11,"hash","","",128,[[]]],[11,"hash","","",129,[[]]],[11,"hash","","",130,[[]]],[11,"hash","","",131,[[]]],[11,"hash","","",132,[[]]],[11,"hash","","",133,[[]]],[11,"hash","","",134,[[]]],[11,"hash","","",135,[[]]],[11,"hash","","",136,[[]]],[11,"hash","","",137,[[]]],[11,"hash","","",138,[[]]],[11,"hash","","",139,[[]]],[11,"hash","","",140,[[]]],[11,"hash","","",141,[[]]],[11,"hash","","",146,[[]]],[11,"hash","","",179,[[]]],[11,"hash","","",147,[[]]],[11,"hash","","",58,[[]]],[11,"hash","","",59,[[]]],[11,"hash","","",60,[[]]],[11,"hash","","",148,[[]]],[11,"hash","","",155,[[]]],[11,"hash","","",88,[[]]],[11,"hash","","",175,[[]]],[11,"hash","","",89,[[]]],[11,"hash","","",174,[[]]],[11,"hash","","",61,[[]]],[11,"hash","","",159,[[]]],[11,"hash","","",166,[[]]],[11,"hash","","",90,[[]]],[11,"hash","","",91,[[]]],[11,"hash","","",92,[[]]],[11,"hash","","",93,[[]]],[11,"hash","","",176,[[]]],[11,"hash","","",111,[[]]],[11,"hash","","",112,[[]]],[11,"hash","","",113,[[]]],[11,"hash","","",114,[[]]],[11,"hash","","",115,[[]]],[11,"hash","","",116,[[]]],[11,"hash","","",117,[[]]],[11,"hash","","",62,[[]]],[11,"hash","","",160,[[]]],[11,"hash","","",118,[[]]],[11,"hash","","",119,[[]]],[11,"hash","","",120,[[]]],[11,"hash","","",121,[[]]],[11,"hash","","",122,[[]]],[11,"hash","","",123,[[]]],[11,"hash","","",124,[[]]],[11,"hash","","",173,[[]]],[11,"hash","","",94,[[]]],[11,"hash","","",95,[[]]],[11,"hash","","",96,[[]]],[11,"hash","","",97,[[]]],[11,"hash","","",98,[[]]],[11,"hash","","",167,[[]]],[11,"hash","","",125,[[]]],[11,"hash","","",6,[[]]],[11,"hash","","",7,[[]]],[11,"hash","","",8,[[]]],[11,"hash","","",9,[[]]],[11,"hash","","",153,[[]]],[11,"hash","","",63,[[]]],[11,"hash","","",161,[[]]],[11,"from_iter","syn::punctuated","",294,[[["intoiterator",8]]]],[11,"from_iter","","",294,[[["intoiterator",8]]]],[11,"description","syn","",302,[[]]],[11,"to_tokens","syn::token","",180,[[["tokenstream",3]]]],[11,"to_tokens","","",181,[[["tokenstream",3]]]],[11,"to_tokens","","",182,[[["tokenstream",3]]]],[11,"to_tokens","","",183,[[["tokenstream",3]]]],[11,"to_tokens","","",184,[[["tokenstream",3]]]],[11,"to_tokens","","",185,[[["tokenstream",3]]]],[11,"to_tokens","","",186,[[["tokenstream",3]]]],[11,"to_tokens","","",187,[[["tokenstream",3]]]],[11,"to_tokens","","",188,[[["tokenstream",3]]]],[11,"to_tokens","","",189,[[["tokenstream",3]]]],[11,"to_tokens","","",190,[[["tokenstream",3]]]],[11,"to_tokens","","",191,[[["tokenstream",3]]]],[11,"to_tokens","","",192,[[["tokenstream",3]]]],[11,"to_tokens","","",193,[[["tokenstream",3]]]],[11,"to_tokens","","",194,[[["tokenstream",3]]]],[11,"to_tokens","","",195,[[["tokenstream",3]]]],[11,"to_tokens","","",196,[[["tokenstream",3]]]],[11,"to_tokens","","",197,[[["tokenstream",3]]]],[11,"to_tokens","","",198,[[["tokenstream",3]]]],[11,"to_tokens","","",199,[[["tokenstream",3]]]],[11,"to_tokens","","",200,[[["tokenstream",3]]]],[11,"to_tokens","","",201,[[["tokenstream",3]]]],[11,"to_tokens","","",202,[[["tokenstream",3]]]],[11,"to_tokens","","",203,[[["tokenstream",3]]]],[11,"to_tokens","","",204,[[["tokenstream",3]]]],[11,"to_tokens","","",205,[[["tokenstream",3]]]],[11,"to_tokens","","",206,[[["tokenstream",3]]]],[11,"to_tokens","","",207,[[["tokenstream",3]]]],[11,"to_tokens","","",208,[[["tokenstream",3]]]],[11,"to_tokens","","",209,[[["tokenstream",3]]]],[11,"to_tokens","","",210,[[["tokenstream",3]]]],[11,"to_tokens","","",211,[[["tokenstream",3]]]],[11,"to_tokens","","",212,[[["tokenstream",3]]]],[11,"to_tokens","","",213,[[["tokenstream",3]]]],[11,"to_tokens","","",214,[[["tokenstream",3]]]],[11,"to_tokens","","",215,[[["tokenstream",3]]]],[11,"to_tokens","","",216,[[["tokenstream",3]]]],[11,"to_tokens","","",217,[[["tokenstream",3]]]],[11,"to_tokens","","",218,[[["tokenstream",3]]]],[11,"to_tokens","","",219,[[["tokenstream",3]]]],[11,"to_tokens","","",220,[[["tokenstream",3]]]],[11,"to_tokens","","",221,[[["tokenstream",3]]]],[11,"to_tokens","","",222,[[["tokenstream",3]]]],[11,"to_tokens","","",223,[[["tokenstream",3]]]],[11,"to_tokens","","",224,[[["tokenstream",3]]]],[11,"to_tokens","","",225,[[["tokenstream",3]]]],[11,"to_tokens","","",226,[[["tokenstream",3]]]],[11,"to_tokens","","",227,[[["tokenstream",3]]]],[11,"to_tokens","","",228,[[["tokenstream",3]]]],[11,"to_tokens","","",229,[[["tokenstream",3]]]],[11,"to_tokens","","",230,[[["tokenstream",3]]]],[11,"to_tokens","","",231,[[["tokenstream",3]]]],[11,"to_tokens","","",232,[[["tokenstream",3]]]],[11,"to_tokens","","",233,[[["tokenstream",3]]]],[11,"to_tokens","","",234,[[["tokenstream",3]]]],[11,"to_tokens","","",235,[[["tokenstream",3]]]],[11,"to_tokens","","",236,[[["tokenstream",3]]]],[11,"to_tokens","","",237,[[["tokenstream",3]]]],[11,"to_tokens","","",238,[[["tokenstream",3]]]],[11,"to_tokens","","",239,[[["tokenstream",3]]]],[11,"to_tokens","","",240,[[["tokenstream",3]]]],[11,"to_tokens","","",241,[[["tokenstream",3]]]],[11,"to_tokens","","",242,[[["tokenstream",3]]]],[11,"to_tokens","","",243,[[["tokenstream",3]]]],[11,"to_tokens","","",244,[[["tokenstream",3]]]],[11,"to_tokens","","",245,[[["tokenstream",3]]]],[11,"to_tokens","","",246,[[["tokenstream",3]]]],[11,"to_tokens","","",247,[[["tokenstream",3]]]],[11,"to_tokens","","",248,[[["tokenstream",3]]]],[11,"to_tokens","","",249,[[["tokenstream",3]]]],[11,"to_tokens","","",250,[[["tokenstream",3]]]],[11,"to_tokens","","",251,[[["tokenstream",3]]]],[11,"to_tokens","","",252,[[["tokenstream",3]]]],[11,"to_tokens","","",253,[[["tokenstream",3]]]],[11,"to_tokens","","",254,[[["tokenstream",3]]]],[11,"to_tokens","","",255,[[["tokenstream",3]]]],[11,"to_tokens","","",256,[[["tokenstream",3]]]],[11,"to_tokens","","",257,[[["tokenstream",3]]]],[11,"to_tokens","","",258,[[["tokenstream",3]]]],[11,"to_tokens","","",259,[[["tokenstream",3]]]],[11,"to_tokens","","",260,[[["tokenstream",3]]]],[11,"to_tokens","","",261,[[["tokenstream",3]]]],[11,"to_tokens","","",262,[[["tokenstream",3]]]],[11,"to_tokens","","",263,[[["tokenstream",3]]]],[11,"to_tokens","","",264,[[["tokenstream",3]]]],[11,"to_tokens","","",265,[[["tokenstream",3]]]],[11,"to_tokens","","",266,[[["tokenstream",3]]]],[11,"to_tokens","","",267,[[["tokenstream",3]]]],[11,"to_tokens","","",268,[[["tokenstream",3]]]],[11,"to_tokens","","",269,[[["tokenstream",3]]]],[11,"to_tokens","","",270,[[["tokenstream",3]]]],[11,"to_tokens","","",271,[[["tokenstream",3]]]],[11,"to_tokens","","",272,[[["tokenstream",3]]]],[11,"to_tokens","","",273,[[["tokenstream",3]]]],[11,"to_tokens","","",274,[[["tokenstream",3]]]],[11,"to_tokens","","",275,[[["tokenstream",3]]]],[11,"to_tokens","","",276,[[["tokenstream",3]]]],[11,"to_tokens","","",277,[[["tokenstream",3]]]],[11,"to_tokens","","",278,[[["tokenstream",3]]]],[11,"to_tokens","syn","",150,[[["tokenstream",3]]]],[11,"to_tokens","","",151,[[["tokenstream",3]]]],[11,"to_tokens","","",0,[[["tokenstream",3]]]],[11,"to_tokens","","",1,[[["tokenstream",3]]]],[11,"to_tokens","","",2,[[["tokenstream",3]]]],[11,"to_tokens","","",152,[[["tokenstream",3]]]],[11,"to_tokens","","",153,[[["tokenstream",3]]]],[11,"to_tokens","","",6,[[["tokenstream",3]]]],[11,"to_tokens","","",4,[[["tokenstream",3]]]],[11,"to_tokens","","",5,[[["tokenstream",3]]]],[11,"to_tokens","","",3,[[["tokenstream",3]]]],[11,"to_tokens","","",8,[[["tokenstream",3]]]],[11,"to_tokens","","",7,[[["tokenstream",3]]]],[11,"to_tokens","","",9,[[["tokenstream",3]]]],[11,"to_tokens","","",156,[[["tokenstream",3]]]],[11,"to_tokens","","",21,[[["tokenstream",3]]]],[11,"to_tokens","","",14,[[["tokenstream",3]]]],[11,"to_tokens","","",23,[[["tokenstream",3]]]],[11,"to_tokens","","",37,[[["tokenstream",3]]]],[11,"to_tokens","","",13,[[["tokenstream",3]]]],[11,"to_tokens","","",154,[[["tokenstream",3]]]],[11,"to_tokens","","",47,[[["tokenstream",3]]]],[11,"to_tokens","","",19,[[["tokenstream",3]]]],[11,"to_tokens","","",49,[[["tokenstream",3]]]],[11,"to_tokens","","",33,[[["tokenstream",3]]]],[11,"to_tokens","","",24,[[["tokenstream",3]]]],[11,"to_tokens","","",48,[[["tokenstream",3]]]],[11,"to_tokens","","",32,[[["tokenstream",3]]]],[11,"to_tokens","","",30,[[["tokenstream",3]]]],[11,"to_tokens","","",51,[[["tokenstream",3]]]],[11,"to_tokens","","",28,[[["tokenstream",3]]]],[11,"to_tokens","","",34,[[["tokenstream",3]]]],[11,"to_tokens","","",36,[[["tokenstream",3]]]],[11,"to_tokens","","",17,[[["tokenstream",3]]]],[11,"to_tokens","","",18,[[["tokenstream",3]]]],[11,"to_tokens","","",46,[[["tokenstream",3]]]],[11,"to_tokens","","",52,[[["tokenstream",3]]]],[11,"to_tokens","","",25,[[["tokenstream",3]]]],[11,"to_tokens","","",50,[[["tokenstream",3]]]],[11,"to_tokens","","",20,[[["tokenstream",3]]]],[11,"to_tokens","","",15,[[["tokenstream",3]]]],[11,"to_tokens","","",16,[[["tokenstream",3]]]],[11,"to_tokens","","",27,[[["tokenstream",3]]]],[11,"to_tokens","","",157,[[["tokenstream",3]]]],[11,"to_tokens","","",53,[[["tokenstream",3]]]],[11,"to_tokens","","",31,[[["tokenstream",3]]]],[11,"to_tokens","","",40,[[["tokenstream",3]]]],[11,"to_tokens","","",39,[[["tokenstream",3]]]],[11,"to_tokens","","",41,[[["tokenstream",3]]]],[11,"to_tokens","","",22,[[["tokenstream",3]]]],[11,"to_tokens","","",26,[[["tokenstream",3]]]],[11,"to_tokens","","",43,[[["tokenstream",3]]]],[11,"to_tokens","","",35,[[["tokenstream",3]]]],[11,"to_tokens","","",44,[[["tokenstream",3]]]],[11,"to_tokens","","",42,[[["tokenstream",3]]]],[11,"to_tokens","","",29,[[["tokenstream",3]]]],[11,"to_tokens","","",38,[[["tokenstream",3]]]],[11,"to_tokens","","",45,[[["tokenstream",3]]]],[11,"to_tokens","","",12,[[["tokenstream",3]]]],[11,"to_tokens","","",11,[[["tokenstream",3]]]],[11,"to_tokens","","",10,[[["tokenstream",3]]]],[11,"to_tokens","","",158,[[["tokenstream",3]]]],[11,"to_tokens","","",160,[[["tokenstream",3]]]],[11,"to_tokens","","",161,[[["tokenstream",3]]]],[11,"to_tokens","","",56,[[["tokenstream",3]]]],[11,"to_tokens","","",304,[[["tokenstream",3]]]],[11,"to_tokens","","",283,[[["tokenstream",3]]]],[11,"to_tokens","","",305,[[["tokenstream",3]]]],[11,"to_tokens","","",54,[[["tokenstream",3]]]],[11,"to_tokens","","",57,[[["tokenstream",3]]]],[11,"to_tokens","","",62,[[["tokenstream",3]]]],[11,"to_tokens","","",61,[[["tokenstream",3]]]],[11,"to_tokens","","",159,[[["tokenstream",3]]]],[11,"to_tokens","","",55,[[["tokenstream",3]]]],[11,"to_tokens","","",63,[[["tokenstream",3]]]],[11,"to_tokens","","",60,[[["tokenstream",3]]]],[11,"to_tokens","","",59,[[["tokenstream",3]]]],[11,"to_tokens","","",58,[[["tokenstream",3]]]],[11,"to_tokens","","",165,[[["tokenstream",3]]]],[11,"to_tokens","","",167,[[["tokenstream",3]]]],[11,"to_tokens","","",163,[[["tokenstream",3]]]],[11,"to_tokens","","",166,[[["tokenstream",3]]]],[11,"to_tokens","","",164,[[["tokenstream",3]]]],[11,"to_tokens","","",162,[[["tokenstream",3]]]],[11,"to_tokens","","",74,[[["tokenstream",3]]]],[11,"to_tokens","","",87,[[["tokenstream",3]]]],[11,"to_tokens","","",81,[[["tokenstream",3]]]],[11,"to_tokens","","",72,[[["tokenstream",3]]]],[11,"to_tokens","","",75,[[["tokenstream",3]]]],[11,"to_tokens","","",80,[[["tokenstream",3]]]],[11,"to_tokens","","",76,[[["tokenstream",3]]]],[11,"to_tokens","","",85,[[["tokenstream",3]]]],[11,"to_tokens","","",73,[[["tokenstream",3]]]],[11,"to_tokens","","",82,[[["tokenstream",3]]]],[11,"to_tokens","","",86,[[["tokenstream",3]]]],[11,"to_tokens","","",83,[[["tokenstream",3]]]],[11,"to_tokens","","",84,[[["tokenstream",3]]]],[11,"to_tokens","","",77,[[["tokenstream",3]]]],[11,"to_tokens","","",78,[[["tokenstream",3]]]],[11,"to_tokens","","",79,[[["tokenstream",3]]]],[11,"to_tokens","","",97,[[["tokenstream",3]]]],[11,"to_tokens","","",96,[[["tokenstream",3]]]],[11,"to_tokens","","",98,[[["tokenstream",3]]]],[11,"to_tokens","","",94,[[["tokenstream",3]]]],[11,"to_tokens","","",95,[[["tokenstream",3]]]],[11,"to_tokens","","",90,[[["tokenstream",3]]]],[11,"to_tokens","","",92,[[["tokenstream",3]]]],[11,"to_tokens","","",93,[[["tokenstream",3]]]],[11,"to_tokens","","",91,[[["tokenstream",3]]]],[11,"to_tokens","","",68,[[["tokenstream",3]]]],[11,"to_tokens","","",70,[[["tokenstream",3]]]],[11,"to_tokens","","",71,[[["tokenstream",3]]]],[11,"to_tokens","","",69,[[["tokenstream",3]]]],[11,"to_tokens","","",64,[[["tokenstream",3]]]],[11,"to_tokens","","",66,[[["tokenstream",3]]]],[11,"to_tokens","","",67,[[["tokenstream",3]]]],[11,"to_tokens","","",65,[[["tokenstream",3]]]],[11,"to_tokens","","",89,[[["tokenstream",3]]]],[11,"to_tokens","","",88,[[["tokenstream",3]]]],[11,"to_tokens","","",99,[[["tokenstream",3]]]],[11,"to_tokens","","",100,[[["tokenstream",3]]]],[11,"to_tokens","","",168,[[["tokenstream",3]]]],[11,"to_tokens","","",284,[[["tokenstream",3]]]],[11,"to_tokens","","",285,[[["tokenstream",3]]]],[11,"to_tokens","","",286,[[["tokenstream",3]]]],[11,"to_tokens","","",287,[[["tokenstream",3]]]],[11,"to_tokens","","",288,[[["tokenstream",3]]]],[11,"to_tokens","","",289,[[["tokenstream",3]]]],[11,"to_tokens","","",101,[[["tokenstream",3]]]],[11,"to_tokens","","",102,[[["tokenstream",3]]]],[11,"to_tokens","","",106,[[["tokenstream",3]]]],[11,"to_tokens","","",172,[[["tokenstream",3]]]],[11,"to_tokens","","",173,[[["tokenstream",3]]]],[11,"to_tokens","","",107,[[["tokenstream",3]]]],[11,"to_tokens","","",174,[[["tokenstream",3]]]],[11,"to_tokens","","",108,[[["tokenstream",3]]]],[11,"to_tokens","","",176,[[["tokenstream",3]]]],[11,"to_tokens","","",122,[[["tokenstream",3]]]],[11,"to_tokens","","",111,[[["tokenstream",3]]]],[11,"to_tokens","","",120,[[["tokenstream",3]]]],[11,"to_tokens","","",121,[[["tokenstream",3]]]],[11,"to_tokens","","",112,[[["tokenstream",3]]]],[11,"to_tokens","","",117,[[["tokenstream",3]]]],[11,"to_tokens","","",124,[[["tokenstream",3]]]],[11,"to_tokens","","",119,[[["tokenstream",3]]]],[11,"to_tokens","","",123,[[["tokenstream",3]]]],[11,"to_tokens","","",114,[[["tokenstream",3]]]],[11,"to_tokens","","",113,[[["tokenstream",3]]]],[11,"to_tokens","","",118,[[["tokenstream",3]]]],[11,"to_tokens","","",115,[[["tokenstream",3]]]],[11,"to_tokens","","",116,[[["tokenstream",3]]]],[11,"to_tokens","","",175,[[["tokenstream",3]]]],[11,"to_tokens","","",110,[[["tokenstream",3]]]],[11,"to_tokens","","",125,[[["tokenstream",3]]]],[11,"to_tokens","","",109,[[["tokenstream",3]]]],[11,"to_tokens","","",177,[[["tokenstream",3]]]],[11,"to_tokens","","",141,[[["tokenstream",3]]]],[11,"to_tokens","","",128,[[["tokenstream",3]]]],[11,"to_tokens","","",137,[[["tokenstream",3]]]],[11,"to_tokens","","",139,[[["tokenstream",3]]]],[11,"to_tokens","","",140,[[["tokenstream",3]]]],[11,"to_tokens","","",132,[[["tokenstream",3]]]],[11,"to_tokens","","",138,[[["tokenstream",3]]]],[11,"to_tokens","","",127,[[["tokenstream",3]]]],[11,"to_tokens","","",134,[[["tokenstream",3]]]],[11,"to_tokens","","",135,[[["tokenstream",3]]]],[11,"to_tokens","","",129,[[["tokenstream",3]]]],[11,"to_tokens","","",133,[[["tokenstream",3]]]],[11,"to_tokens","","",136,[[["tokenstream",3]]]],[11,"to_tokens","","",130,[[["tokenstream",3]]]],[11,"to_tokens","","",131,[[["tokenstream",3]]]],[11,"to_tokens","","",126,[[["tokenstream",3]]]],[11,"to_tokens","","",146,[[["tokenstream",3]]]],[11,"to_tokens","","",147,[[["tokenstream",3]]]],[11,"to_tokens","","",179,[[["tokenstream",3]]]],[11,"to_tokens","","",178,[[["tokenstream",3]]]],[11,"to_tokens","","",142,[[["tokenstream",3]]]],[11,"to_tokens","","",143,[[["tokenstream",3]]]],[11,"to_tokens","","",144,[[["tokenstream",3]]]],[11,"to_tokens","","",145,[[["tokenstream",3]]]],[11,"to_tokens","syn::punctuated","",294,[[["tokenstream",3]]]],[11,"to_tokens","","",293,[[["tokenstream",3]]]],[11,"fmt","syn","",157,[[["formatter",3]],["result",6]]],[11,"span","","",157,[[],[["option",4],["span",3]]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"span","","",53,[[],[["option",4],["span",3]]]],[11,"new","","Creates a new `Ident` with the given `string` as well as…",303,[[["span",3]],["ident",3]]],[11,"span","","Returns the span of this `Ident`.",303,[[],["span",3]]],[11,"set_span","","Configures the span of this `Ident`, possibly changing its…",303,[[["span",3]]]],[11,"visit_abi","syn::visit","",296,[[["abi",3]]]],[11,"visit_angle_bracketed_generic_arguments","","",296,[[["anglebracketedgenericarguments",3]]]],[11,"visit_arm","","",296,[[["arm",3]]]],[11,"visit_attr_style","","",296,[[["attrstyle",4]]]],[11,"visit_attribute","","",296,[[["attribute",3]]]],[11,"visit_bare_fn_arg","","",296,[[["barefnarg",3]]]],[11,"visit_bin_op","","",296,[[["binop",4]]]],[11,"visit_binding","","",296,[[["binding",3]]]],[11,"visit_block","","",296,[[["block",3]]]],[11,"visit_bound_lifetimes","","",296,[[["boundlifetimes",3]]]],[11,"visit_const_param","","",296,[[["constparam",3]]]],[11,"visit_constraint","","",296,[[["constraint",3]]]],[11,"visit_data","","",296,[[["data",4]]]],[11,"visit_data_enum","","",296,[[["dataenum",3]]]],[11,"visit_data_struct","","",296,[[["datastruct",3]]]],[11,"visit_data_union","","",296,[[["dataunion",3]]]],[11,"visit_derive_input","","",296,[[["deriveinput",3]]]],[11,"visit_expr","","",296,[[["expr",4]]]],[11,"visit_expr_array","","",296,[[["exprarray",3]]]],[11,"visit_expr_assign","","",296,[[["exprassign",3]]]],[11,"visit_expr_assign_op","","",296,[[["exprassignop",3]]]],[11,"visit_expr_async","","",296,[[["exprasync",3]]]],[11,"visit_expr_await","","",296,[[["exprawait",3]]]],[11,"visit_expr_binary","","",296,[[["exprbinary",3]]]],[11,"visit_expr_block","","",296,[[["exprblock",3]]]],[11,"visit_expr_box","","",296,[[["exprbox",3]]]],[11,"visit_expr_break","","",296,[[["exprbreak",3]]]],[11,"visit_expr_call","","",296,[[["exprcall",3]]]],[11,"visit_expr_cast","","",296,[[["exprcast",3]]]],[11,"visit_expr_closure","","",296,[[["exprclosure",3]]]],[11,"visit_expr_continue","","",296,[[["exprcontinue",3]]]],[11,"visit_expr_field","","",296,[[["exprfield",3]]]],[11,"visit_expr_for_loop","","",296,[[["exprforloop",3]]]],[11,"visit_expr_group","","",296,[[["exprgroup",3]]]],[11,"visit_expr_if","","",296,[[["exprif",3]]]],[11,"visit_expr_index","","",296,[[["exprindex",3]]]],[11,"visit_expr_let","","",296,[[["exprlet",3]]]],[11,"visit_expr_lit","","",296,[[["exprlit",3]]]],[11,"visit_expr_loop","","",296,[[["exprloop",3]]]],[11,"visit_expr_macro","","",296,[[["exprmacro",3]]]],[11,"visit_expr_match","","",296,[[["exprmatch",3]]]],[11,"visit_expr_method_call","","",296,[[["exprmethodcall",3]]]],[11,"visit_expr_paren","","",296,[[["exprparen",3]]]],[11,"visit_expr_path","","",296,[[["exprpath",3]]]],[11,"visit_expr_range","","",296,[[["exprrange",3]]]],[11,"visit_expr_reference","","",296,[[["exprreference",3]]]],[11,"visit_expr_repeat","","",296,[[["exprrepeat",3]]]],[11,"visit_expr_return","","",296,[[["exprreturn",3]]]],[11,"visit_expr_struct","","",296,[[["exprstruct",3]]]],[11,"visit_expr_try","","",296,[[["exprtry",3]]]],[11,"visit_expr_try_block","","",296,[[["exprtryblock",3]]]],[11,"visit_expr_tuple","","",296,[[["exprtuple",3]]]],[11,"visit_expr_type","","",296,[[["exprtype",3]]]],[11,"visit_expr_unary","","",296,[[["exprunary",3]]]],[11,"visit_expr_unsafe","","",296,[[["exprunsafe",3]]]],[11,"visit_expr_while","","",296,[[["exprwhile",3]]]],[11,"visit_expr_yield","","",296,[[["expryield",3]]]],[11,"visit_field","","",296,[[["field",3]]]],[11,"visit_field_pat","","",296,[[["fieldpat",3]]]],[11,"visit_field_value","","",296,[[["fieldvalue",3]]]],[11,"visit_fields","","",296,[[["fields",4]]]],[11,"visit_fields_named","","",296,[[["fieldsnamed",3]]]],[11,"visit_fields_unnamed","","",296,[[["fieldsunnamed",3]]]],[11,"visit_file","","",296,[[["file",3]]]],[11,"visit_fn_arg","","",296,[[["fnarg",4]]]],[11,"visit_foreign_item","","",296,[[["foreignitem",4]]]],[11,"visit_foreign_item_fn","","",296,[[["foreignitemfn",3]]]],[11,"visit_foreign_item_macro","","",296,[[["foreignitemmacro",3]]]],[11,"visit_foreign_item_static","","",296,[[["foreignitemstatic",3]]]],[11,"visit_foreign_item_type","","",296,[[["foreignitemtype",3]]]],[11,"visit_generic_argument","","",296,[[["genericargument",4]]]],[11,"visit_generic_method_argument","","",296,[[["genericmethodargument",4]]]],[11,"visit_generic_param","","",296,[[["genericparam",4]]]],[11,"visit_generics","","",296,[[["generics",3]]]],[11,"visit_ident","","",296,[[["ident",3]]]],[11,"visit_impl_item","","",296,[[["implitem",4]]]],[11,"visit_impl_item_const","","",296,[[["implitemconst",3]]]],[11,"visit_impl_item_macro","","",296,[[["implitemmacro",3]]]],[11,"visit_impl_item_method","","",296,[[["implitemmethod",3]]]],[11,"visit_impl_item_type","","",296,[[["implitemtype",3]]]],[11,"visit_index","","",296,[[["index",3]]]],[11,"visit_item","","",296,[[["item",4]]]],[11,"visit_item_const","","",296,[[["itemconst",3]]]],[11,"visit_item_enum","","",296,[[["itemenum",3]]]],[11,"visit_item_extern_crate","","",296,[[["itemexterncrate",3]]]],[11,"visit_item_fn","","",296,[[["itemfn",3]]]],[11,"visit_item_foreign_mod","","",296,[[["itemforeignmod",3]]]],[11,"visit_item_impl","","",296,[[["itemimpl",3]]]],[11,"visit_item_macro","","",296,[[["itemmacro",3]]]],[11,"visit_item_macro2","","",296,[[["itemmacro2",3]]]],[11,"visit_item_mod","","",296,[[["itemmod",3]]]],[11,"visit_item_static","","",296,[[["itemstatic",3]]]],[11,"visit_item_struct","","",296,[[["itemstruct",3]]]],[11,"visit_item_trait","","",296,[[["itemtrait",3]]]],[11,"visit_item_trait_alias","","",296,[[["itemtraitalias",3]]]],[11,"visit_item_type","","",296,[[["itemtype",3]]]],[11,"visit_item_union","","",296,[[["itemunion",3]]]],[11,"visit_item_use","","",296,[[["itemuse",3]]]],[11,"visit_label","","",296,[[["label",3]]]],[11,"visit_lifetime","","",296,[[["lifetime",3]]]],[11,"visit_lifetime_def","","",296,[[["lifetimedef",3]]]],[11,"visit_lit","","",296,[[["lit",4]]]],[11,"visit_lit_bool","","",296,[[["litbool",3]]]],[11,"visit_lit_byte","","",296,[[["litbyte",3]]]],[11,"visit_lit_byte_str","","",296,[[["litbytestr",3]]]],[11,"visit_lit_char","","",296,[[["litchar",3]]]],[11,"visit_lit_float","","",296,[[["litfloat",3]]]],[11,"visit_lit_int","","",296,[[["litint",3]]]],[11,"visit_lit_str","","",296,[[["litstr",3]]]],[11,"visit_local","","",296,[[["local",3]]]],[11,"visit_macro","","",296,[[["macro",3]]]],[11,"visit_macro_delimiter","","",296,[[["macrodelimiter",4]]]],[11,"visit_member","","",296,[[["member",4]]]],[11,"visit_meta","","",296,[[["meta",4]]]],[11,"visit_meta_list","","",296,[[["metalist",3]]]],[11,"visit_meta_name_value","","",296,[[["metanamevalue",3]]]],[11,"visit_method_turbofish","","",296,[[["methodturbofish",3]]]],[11,"visit_nested_meta","","",296,[[["nestedmeta",4]]]],[11,"visit_parenthesized_generic_arguments","","",296,[[["parenthesizedgenericarguments",3]]]],[11,"visit_pat","","",296,[[["pat",4]]]],[11,"visit_pat_box","","",296,[[["patbox",3]]]],[11,"visit_pat_ident","","",296,[[["patident",3]]]],[11,"visit_pat_lit","","",296,[[["patlit",3]]]],[11,"visit_pat_macro","","",296,[[["patmacro",3]]]],[11,"visit_pat_or","","",296,[[["pator",3]]]],[11,"visit_pat_path","","",296,[[["patpath",3]]]],[11,"visit_pat_range","","",296,[[["patrange",3]]]],[11,"visit_pat_reference","","",296,[[["patreference",3]]]],[11,"visit_pat_rest","","",296,[[["patrest",3]]]],[11,"visit_pat_slice","","",296,[[["patslice",3]]]],[11,"visit_pat_struct","","",296,[[["patstruct",3]]]],[11,"visit_pat_tuple","","",296,[[["pattuple",3]]]],[11,"visit_pat_tuple_struct","","",296,[[["pattuplestruct",3]]]],[11,"visit_pat_type","","",296,[[["pattype",3]]]],[11,"visit_pat_wild","","",296,[[["patwild",3]]]],[11,"visit_path","","",296,[[["path",3]]]],[11,"visit_path_arguments","","",296,[[["patharguments",4]]]],[11,"visit_path_segment","","",296,[[["pathsegment",3]]]],[11,"visit_predicate_eq","","",296,[[["predicateeq",3]]]],[11,"visit_predicate_lifetime","","",296,[[["predicatelifetime",3]]]],[11,"visit_predicate_type","","",296,[[["predicatetype",3]]]],[11,"visit_qself","","",296,[[["qself",3]]]],[11,"visit_range_limits","","",296,[[["rangelimits",4]]]],[11,"visit_receiver","","",296,[[["receiver",3]]]],[11,"visit_return_type","","",296,[[["returntype",4]]]],[11,"visit_signature","","",296,[[["signature",3]]]],[11,"visit_span","","",296,[[["span",3]]]],[11,"visit_stmt","","",296,[[["stmt",4]]]],[11,"visit_trait_bound","","",296,[[["traitbound",3]]]],[11,"visit_trait_bound_modifier","","",296,[[["traitboundmodifier",4]]]],[11,"visit_trait_item","","",296,[[["traititem",4]]]],[11,"visit_trait_item_const","","",296,[[["traititemconst",3]]]],[11,"visit_trait_item_macro","","",296,[[["traititemmacro",3]]]],[11,"visit_trait_item_method","","",296,[[["traititemmethod",3]]]],[11,"visit_trait_item_type","","",296,[[["traititemtype",3]]]],[11,"visit_type","","",296,[[["type",4]]]],[11,"visit_type_array","","",296,[[["typearray",3]]]],[11,"visit_type_bare_fn","","",296,[[["typebarefn",3]]]],[11,"visit_type_group","","",296,[[["typegroup",3]]]],[11,"visit_type_impl_trait","","",296,[[["typeimpltrait",3]]]],[11,"visit_type_infer","","",296,[[["typeinfer",3]]]],[11,"visit_type_macro","","",296,[[["typemacro",3]]]],[11,"visit_type_never","","",296,[[["typenever",3]]]],[11,"visit_type_param","","",296,[[["typeparam",3]]]],[11,"visit_type_param_bound","","",296,[[["typeparambound",4]]]],[11,"visit_type_paren","","",296,[[["typeparen",3]]]],[11,"visit_type_path","","",296,[[["typepath",3]]]],[11,"visit_type_ptr","","",296,[[["typeptr",3]]]],[11,"visit_type_reference","","",296,[[["typereference",3]]]],[11,"visit_type_slice","","",296,[[["typeslice",3]]]],[11,"visit_type_trait_object","","",296,[[["typetraitobject",3]]]],[11,"visit_type_tuple","","",296,[[["typetuple",3]]]],[11,"visit_un_op","","",296,[[["unop",4]]]],[11,"visit_use_glob","","",296,[[["useglob",3]]]],[11,"visit_use_group","","",296,[[["usegroup",3]]]],[11,"visit_use_name","","",296,[[["usename",3]]]],[11,"visit_use_path","","",296,[[["usepath",3]]]],[11,"visit_use_rename","","",296,[[["userename",3]]]],[11,"visit_use_tree","","",296,[[["usetree",4]]]],[11,"visit_variadic","","",296,[[["variadic",3]]]],[11,"visit_variant","","",296,[[["variant",3]]]],[11,"visit_vis_crate","","",296,[[["viscrate",3]]]],[11,"visit_vis_public","","",296,[[["vispublic",3]]]],[11,"visit_vis_restricted","","",296,[[["visrestricted",3]]]],[11,"visit_visibility","","",296,[[["visibility",4]]]],[11,"visit_where_clause","","",296,[[["whereclause",3]]]],[11,"visit_where_predicate","","",296,[[["wherepredicate",4]]]],[11,"peek","syn::parse","Looks at the next token in the parse stream to determine…",312,[[["peek",8]]]],[11,"error","","Triggers an error at the current position of the parse…",312,[[],["error",3]]]],"p":[[3,"Attribute"],[3,"MetaList"],[3,"MetaNameValue"],[3,"Field"],[3,"FieldsNamed"],[3,"FieldsUnnamed"],[3,"Variant"],[3,"VisCrate"],[3,"VisPublic"],[3,"VisRestricted"],[3,"Arm"],[3,"FieldValue"],[3,"Label"],[3,"MethodTurbofish"],[3,"ExprArray"],[3,"ExprAssign"],[3,"ExprAssignOp"],[3,"ExprAsync"],[3,"ExprAwait"],[3,"ExprBinary"],[3,"ExprBlock"],[3,"ExprBox"],[3,"ExprBreak"],[3,"ExprCall"],[3,"ExprCast"],[3,"ExprClosure"],[3,"ExprContinue"],[3,"ExprField"],[3,"ExprForLoop"],[3,"ExprGroup"],[3,"ExprIf"],[3,"ExprIndex"],[3,"ExprLet"],[3,"ExprLit"],[3,"ExprLoop"],[3,"ExprMacro"],[3,"ExprMatch"],[3,"ExprMethodCall"],[3,"ExprParen"],[3,"ExprPath"],[3,"ExprRange"],[3,"ExprReference"],[3,"ExprRepeat"],[3,"ExprReturn"],[3,"ExprStruct"],[3,"ExprTry"],[3,"ExprTryBlock"],[3,"ExprTuple"],[3,"ExprType"],[3,"ExprUnary"],[3,"ExprUnsafe"],[3,"ExprWhile"],[3,"ExprYield"],[3,"Index"],[3,"BoundLifetimes"],[3,"ConstParam"],[3,"Generics"],[3,"LifetimeDef"],[3,"PredicateEq"],[3,"PredicateLifetime"],[3,"PredicateType"],[3,"TraitBound"],[3,"TypeParam"],[3,"WhereClause"],[3,"ForeignItemFn"],[3,"ForeignItemMacro"],[3,"ForeignItemStatic"],[3,"ForeignItemType"],[3,"ImplItemConst"],[3,"ImplItemMacro"],[3,"ImplItemMethod"],[3,"ImplItemType"],[3,"ItemConst"],[3,"ItemEnum"],[3,"ItemExternCrate"],[3,"ItemFn"],[3,"ItemForeignMod"],[3,"ItemImpl"],[3,"ItemMacro"],[3,"ItemMacro2"],[3,"ItemMod"],[3,"ItemStatic"],[3,"ItemStruct"],[3,"ItemTrait"],[3,"ItemTraitAlias"],[3,"ItemType"],[3,"ItemUnion"],[3,"ItemUse"],[3,"Receiver"],[3,"Signature"],[3,"TraitItemConst"],[3,"TraitItemMacro"],[3,"TraitItemMethod"],[3,"TraitItemType"],[3,"UseGlob"],[3,"UseGroup"],[3,"UseName"],[3,"UsePath"],[3,"UseRename"],[3,"File"],[3,"Lifetime"],[3,"LitBool"],[3,"Macro"],[3,"DataEnum"],[3,"DataStruct"],[3,"DataUnion"],[3,"DeriveInput"],[3,"Block"],[3,"Local"],[3,"Abi"],[3,"BareFnArg"],[3,"TypeArray"],[3,"TypeBareFn"],[3,"TypeGroup"],[3,"TypeImplTrait"],[3,"TypeInfer"],[3,"TypeMacro"],[3,"TypeNever"],[3,"TypeParen"],[3,"TypePath"],[3,"TypePtr"],[3,"TypeReference"],[3,"TypeSlice"],[3,"TypeTraitObject"],[3,"TypeTuple"],[3,"Variadic"],[3,"FieldPat"],[3,"PatBox"],[3,"PatIdent"],[3,"PatLit"],[3,"PatMacro"],[3,"PatOr"],[3,"PatPath"],[3,"PatRange"],[3,"PatReference"],[3,"PatRest"],[3,"PatSlice"],[3,"PatStruct"],[3,"PatTuple"],[3,"PatTupleStruct"],[3,"PatType"],[3,"PatWild"],[3,"AngleBracketedGenericArguments"],[3,"Binding"],[3,"Constraint"],[3,"ParenthesizedGenericArguments"],[3,"Path"],[3,"PathSegment"],[3,"QSelf"],[4,"AttrStyle"],[4,"Meta"],[4,"NestedMeta"],[4,"Fields"],[4,"Visibility"],[4,"GenericMethodArgument"],[4,"RangeLimits"],[4,"Expr"],[4,"Member"],[4,"GenericParam"],[4,"TraitBoundModifier"],[4,"TypeParamBound"],[4,"WherePredicate"],[4,"FnArg"],[4,"ForeignItem"],[4,"ImplItem"],[4,"Item"],[4,"TraitItem"],[4,"UseTree"],[4,"Lit"],[4,"StrStyle"],[4,"MacroDelimiter"],[4,"Data"],[4,"BinOp"],[4,"UnOp"],[4,"Stmt"],[4,"ReturnType"],[4,"Type"],[4,"Pat"],[4,"GenericArgument"],[4,"PathArguments"],[3,"Underscore"],[3,"Abstract"],[3,"As"],[3,"Async"],[3,"Auto"],[3,"Await"],[3,"Become"],[3,"Box"],[3,"Break"],[3,"Const"],[3,"Continue"],[3,"Crate"],[3,"Default"],[3,"Do"],[3,"Dyn"],[3,"Else"],[3,"Enum"],[3,"Extern"],[3,"Final"],[3,"Fn"],[3,"For"],[3,"If"],[3,"Impl"],[3,"In"],[3,"Let"],[3,"Loop"],[3,"Macro"],[3,"Match"],[3,"Mod"],[3,"Move"],[3,"Mut"],[3,"Override"],[3,"Priv"],[3,"Pub"],[3,"Ref"],[3,"Return"],[3,"SelfType"],[3,"SelfValue"],[3,"Static"],[3,"Struct"],[3,"Super"],[3,"Trait"],[3,"Try"],[3,"Type"],[3,"Typeof"],[3,"Union"],[3,"Unsafe"],[3,"Unsized"],[3,"Use"],[3,"Virtual"],[3,"Where"],[3,"While"],[3,"Yield"],[3,"Add"],[3,"AddEq"],[3,"And"],[3,"AndAnd"],[3,"AndEq"],[3,"At"],[3,"Bang"],[3,"Caret"],[3,"CaretEq"],[3,"Colon"],[3,"Colon2"],[3,"Comma"],[3,"Div"],[3,"DivEq"],[3,"Dollar"],[3,"Dot"],[3,"Dot2"],[3,"Dot3"],[3,"DotDotEq"],[3,"Eq"],[3,"EqEq"],[3,"Ge"],[3,"Gt"],[3,"Le"],[3,"Lt"],[3,"MulEq"],[3,"Ne"],[3,"Or"],[3,"OrEq"],[3,"OrOr"],[3,"Pound"],[3,"Question"],[3,"RArrow"],[3,"LArrow"],[3,"Rem"],[3,"RemEq"],[3,"FatArrow"],[3,"Semi"],[3,"Shl"],[3,"ShlEq"],[3,"Shr"],[3,"ShrEq"],[3,"Star"],[3,"Sub"],[3,"SubEq"],[3,"Tilde"],[3,"Brace"],[3,"Bracket"],[3,"Paren"],[3,"Group"],[3,"TypeGenerics"],[3,"LitStr"],[3,"LitByteStr"],[3,"LitByte"],[3,"LitChar"],[3,"LitInt"],[3,"LitFloat"],[3,"TokenBuffer"],[3,"Cursor"],[8,"IdentExt"],[4,"Pair"],[3,"Punctuated"],[8,"Spanned"],[8,"Visit"],[8,"Speculative"],[8,"Parse"],[8,"Parser"],[3,"StepCursor"],[3,"ParseBuffer"],[3,"Error"],[3,"Ident"],[3,"ImplGenerics"],[3,"Turbofish"],[3,"Pairs"],[3,"PairsMut"],[3,"IntoPairs"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Lookahead1"],[3,"Nothing"]]},\
"termcolor":{"doc":"This crate provides a cross platform abstraction for…","i":[[3,"StandardStream","termcolor","Satisfies `io::Write` and `WriteColor`, and supports…",null,null],[3,"StandardStreamLock","","`StandardStreamLock` is a locked reference to a…",null,null],[3,"BufferedStandardStream","","Like `StandardStream`, but does buffered writing.",null,null],[3,"BufferWriter","","Writes colored buffers to stdout or stderr.",null,null],[3,"Buffer","","Write colored text to memory.",null,null],[3,"NoColor","","Satisfies `WriteColor` but ignores all color options.",null,null],[3,"Ansi","","Satisfies `WriteColor` using standard ANSI escape sequences.",null,null],[3,"ColorSpec","","A color specification.",null,null],[3,"ParseColorError","","An error from parsing an invalid color specification.",null,null],[4,"ColorChoice","","ColorChoice represents the color preferences of an end user.",null,null],[13,"Always","","Try very hard to emit colors. This includes emitting ANSI…",0,null],[13,"AlwaysAnsi","","AlwaysAnsi is like Always, except it never tries to use…",0,null],[13,"Auto","","Try to use colors, but don\'t force the issue. If the…",0,null],[13,"Never","","Never emit colors.",0,null],[4,"Color","","The set of available colors for the terminal…",null,null],[13,"Black","","",1,null],[13,"Blue","","",1,null],[13,"Green","","",1,null],[13,"Red","","",1,null],[13,"Cyan","","",1,null],[13,"Magenta","","",1,null],[13,"Yellow","","",1,null],[13,"White","","",1,null],[13,"Ansi256","","",1,null],[13,"Rgb","","",1,null],[8,"WriteColor","","This trait describes the behavior of writers that support…",null,null],[10,"supports_color","","Returns true if and only if the underlying writer supports…",2,[[]]],[10,"set_color","","Set the color settings of the writer.",2,[[["colorspec",3]],["result",6]]],[10,"reset","","Reset the current color settings to their original settings.",2,[[],["result",6]]],[11,"is_synchronous","","Returns true if and only if the underlying writer must…",2,[[]]],[11,"stdout","","Create a new `StandardStream` with the given color…",3,[[["colorchoice",4]],["standardstream",3]]],[11,"stderr","","Create a new `StandardStream` with the given color…",3,[[["colorchoice",4]],["standardstream",3]]],[11,"lock","","Lock the underlying writer.",3,[[],["standardstreamlock",3]]],[11,"stdout","","Create a new `BufferedStandardStream` with the given color…",4,[[["colorchoice",4]],["bufferedstandardstream",3]]],[11,"stderr","","Create a new `BufferedStandardStream` with the given color…",4,[[["colorchoice",4]],["bufferedstandardstream",3]]],[11,"stdout","","Create a new `BufferWriter` that writes to stdout with the…",5,[[["colorchoice",4]],["bufferwriter",3]]],[11,"stderr","","Create a new `BufferWriter` that writes to stderr with the…",5,[[["colorchoice",4]],["bufferwriter",3]]],[11,"separator","","If set, the separator given is printed between buffers. By…",5,[[["option",4],["vec",3]]]],[11,"buffer","","Creates a new `Buffer` with the current color preferences.",5,[[],["buffer",3]]],[11,"print","","Prints the contents of the given buffer.",5,[[["buffer",3]],["result",6]]],[11,"no_color","","Create a buffer that drops all color information.",6,[[],["buffer",3]]],[11,"ansi","","Create a buffer that uses ANSI escape sequences.",6,[[],["buffer",3]]],[11,"is_empty","","Returns true if and only if this buffer is empty.",6,[[]]],[11,"len","","Returns the length of this buffer in bytes.",6,[[]]],[11,"clear","","Clears this buffer.",6,[[]]],[11,"into_inner","","Consume this buffer and return the underlying raw data.",6,[[],["vec",3]]],[11,"as_slice","","Return the underlying data of the buffer.",6,[[]]],[11,"as_mut_slice","","Return the underlying data of the buffer as a mutable slice.",6,[[]]],[11,"new","","Create a new writer that satisfies `WriteColor` but drops…",7,[[],["nocolor",3]]],[11,"into_inner","","Consume this `NoColor` value and return the inner writer.",7,[[]]],[11,"get_ref","","Return a reference to the inner writer.",7,[[]]],[11,"get_mut","","Return a mutable reference to the inner writer.",7,[[]]],[11,"new","","Create a new writer that satisfies `WriteColor` using…",8,[[],["ansi",3]]],[11,"into_inner","","Consume this `Ansi` value and return the inner writer.",8,[[]]],[11,"get_ref","","Return a reference to the inner writer.",8,[[]]],[11,"get_mut","","Return a mutable reference to the inner writer.",8,[[]]],[11,"new","","Create a new color specification that has no colors or…",9,[[],["colorspec",3]]],[11,"fg","","Get the foreground color.",9,[[],[["option",4],["color",4]]]],[11,"set_fg","","Set the foreground color.",9,[[["color",4],["option",4]],["colorspec",3]]],[11,"bg","","Get the background color.",9,[[],[["option",4],["color",4]]]],[11,"set_bg","","Set the background color.",9,[[["color",4],["option",4]],["colorspec",3]]],[11,"bold","","Get whether this is bold or not.",9,[[]]],[11,"set_bold","","Set whether the text is bolded or not.",9,[[],["colorspec",3]]],[11,"italic","","Get whether this is italic or not.",9,[[]]],[11,"set_italic","","Set whether the text is italicized or not.",9,[[],["colorspec",3]]],[11,"underline","","Get whether this is underline or not.",9,[[]]],[11,"set_underline","","Set whether the text is underlined or not.",9,[[],["colorspec",3]]],[11,"reset","","Get whether reset is enabled or not.",9,[[]]],[11,"set_reset","","Set whether to reset the terminal whenever color settings…",9,[[],["colorspec",3]]],[11,"intense","","Get whether this is intense or not.",9,[[]]],[11,"set_intense","","Set whether the text is intense or not.",9,[[],["colorspec",3]]],[11,"is_none","","Returns true if this color specification has no colors or…",9,[[]]],[11,"clear","","Clears this color specification so that it has no…",9,[[]]],[11,"invalid","","Return the string that couldn\'t be parsed as a valid color.",10,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"supports_color","","",3,[[]]],[11,"set_color","","",3,[[["colorspec",3]],["result",6]]],[11,"reset","","",3,[[],["result",6]]],[11,"is_synchronous","","",3,[[]]],[11,"supports_color","","",11,[[]]],[11,"set_color","","",11,[[["colorspec",3]],["result",6]]],[11,"reset","","",11,[[],["result",6]]],[11,"is_synchronous","","",11,[[]]],[11,"supports_color","","",4,[[]]],[11,"set_color","","",4,[[["colorspec",3]],["result",6]]],[11,"reset","","",4,[[],["result",6]]],[11,"is_synchronous","","",4,[[]]],[11,"supports_color","","",6,[[]]],[11,"set_color","","",6,[[["colorspec",3]],["result",6]]],[11,"reset","","",6,[[],["result",6]]],[11,"is_synchronous","","",6,[[]]],[11,"supports_color","","",7,[[]]],[11,"set_color","","",7,[[["colorspec",3]],["result",6]]],[11,"reset","","",7,[[],["result",6]]],[11,"is_synchronous","","",7,[[]]],[11,"supports_color","","",8,[[]]],[11,"set_color","","",8,[[["colorspec",3]],["result",6]]],[11,"reset","","",8,[[],["result",6]]],[11,"is_synchronous","","",8,[[]]],[11,"clone","","",0,[[],["colorchoice",4]]],[11,"clone","","",9,[[],["colorspec",3]]],[11,"clone","","",1,[[],["color",4]]],[11,"clone","","",10,[[],["parsecolorerror",3]]],[11,"default","","",9,[[],["colorspec",3]]],[11,"eq","","",0,[[["colorchoice",4]]]],[11,"eq","","",9,[[["colorspec",3]]]],[11,"ne","","",9,[[["colorspec",3]]]],[11,"eq","","",1,[[["color",4]]]],[11,"ne","","",1,[[["color",4]]]],[11,"eq","","",10,[[["parsecolorerror",3]]]],[11,"ne","","",10,[[["parsecolorerror",3]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"from_str","","",1,[[],[["result",4],["color",4],["parsecolorerror",3]]]],[11,"description","","",10,[[]]],[11,"write","","",3,[[],["result",6]]],[11,"flush","","",3,[[],["result",6]]],[11,"write","","",11,[[],["result",6]]],[11,"flush","","",11,[[],["result",6]]],[11,"write","","",4,[[],["result",6]]],[11,"flush","","",4,[[],["result",6]]],[11,"write","","",6,[[],["result",6]]],[11,"flush","","",6,[[],["result",6]]],[11,"write","","",7,[[],["result",6]]],[11,"flush","","",7,[[],["result",6]]],[11,"write","","",8,[[],["result",6]]],[11,"flush","","",8,[[],["result",6]]]],"p":[[4,"ColorChoice"],[4,"Color"],[8,"WriteColor"],[3,"StandardStream"],[3,"BufferedStandardStream"],[3,"BufferWriter"],[3,"Buffer"],[3,"NoColor"],[3,"Ansi"],[3,"ColorSpec"],[3,"ParseColorError"],[3,"StandardStreamLock"]]},\
"test_logger":{"doc":"","i":[[5,"ensure_env_logger_initialized","test_logger","",null,[[]]],[14,"test","","",null,null]],"p":[]},\
"textwrap":{"doc":"`textwrap` provides functions for word wrapping and…","i":[[3,"HyphenSplitter","textwrap","Simple and default way to split words: splitting on…",null,null],[3,"NoHyphenation","","Use this as a `Wrapper.splitter` to avoid any kind of…",null,null],[3,"Wrapper","","A Wrapper holds settings for wrapping and filling text.…",null,null],[12,"width","","The width in columns at which the text will be wrapped.",0,null],[12,"initial_indent","","Indentation used for the first line of output.",0,null],[12,"subsequent_indent","","Indentation used for subsequent lines of output.",0,null],[12,"break_words","","Allow long words to be broken if they cannot fit on a…",0,null],[12,"splitter","","The method for splitting words. If the `hyphenation`…",0,null],[3,"IntoWrapIter","","An iterator over the lines of the input string which owns…",null,null],[3,"WrapIter","","An iterator over the lines of the input string which…",null,null],[5,"dedent","","Removes common leading whitespace from each line.",null,[[],["string",3]]],[5,"indent","","Add prefix to each non-empty line.",null,[[],["string",3]]],[5,"fill","","Fill a line of text at `width` characters. Strings are…",null,[[],["string",3]]],[5,"wrap","","Wrap a line of text at `width` characters. Strings are…",null,[[],[["cow",4],["vec",3]]]],[5,"wrap_iter","","Lazily wrap a line of text at `width` characters. Strings…",null,[[],[["intowrapiter",3],["hyphensplitter",3]]]],[8,"WordSplitter","","An interface for splitting words.",null,null],[10,"split","","Return all possible splits of word. Each split is a triple…",1,[[],["vec",3]]],[11,"new","","Create a new Wrapper for wrapping at the specified width.…",0,[[],[["wrapper",3],["hyphensplitter",3]]]],[11,"with_splitter","","Use the given `WordSplitter` to create a new Wrapper for…",0,[[],["wrapper",3]]],[11,"initial_indent","","Change `self.initial_indent`. The initial indentation is…",0,[[],["wrapper",3]]],[11,"subsequent_indent","","Change `self.subsequent_indent`. The subsequent…",0,[[],["wrapper",3]]],[11,"break_words","","Change `self.break_words`. This controls if words longer…",0,[[],["wrapper",3]]],[11,"fill","","Fill a line of text at `self.width` characters. Strings…",0,[[],["string",3]]],[11,"wrap","","Wrap a line of text at `self.width` characters. Strings…",0,[[],[["vec",3],["cow",4]]]],[11,"wrap_iter","","Lazily wrap a line of text at `self.width` characters.…",0,[[],["wrapiter",3]]],[11,"into_wrap_iter","","Lazily wrap a line of text at `self.width` characters.…",0,[[],["intowrapiter",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"into_iter","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"into_iter","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"split","","",3,[[],["vec",3]]],[11,"split","","",2,[[],["vec",3]]],[11,"next","","",4,[[],[["option",4],["cow",4]]]],[11,"next","","",5,[[],[["option",4],["cow",4]]]],[11,"clone","","",3,[[],["nohyphenation",3]]],[11,"clone","","",2,[[],["hyphensplitter",3]]],[11,"clone","","",0,[[],["wrapper",3]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]]],"p":[[3,"Wrapper"],[8,"WordSplitter"],[3,"HyphenSplitter"],[3,"NoHyphenation"],[3,"IntoWrapIter"],[3,"WrapIter"]]},\
"thiserror":{"doc":"github crates-io docs-rs","i":[[24,"Error","thiserror","",null,null]],"p":[]},\
"thiserror_impl":{"doc":"","i":[[24,"Error","thiserror_impl","",null,null]],"p":[]},\
"thread_id":{"doc":"Thread-ID: get a unique ID for the current thread.","i":[[5,"get","thread_id","Returns a number that is unique to the calling thread.",null,[[]]]],"p":[]},\
"thread_local":{"doc":"Per-object thread-local storage","i":[[3,"ThreadLocal","thread_local","Thread-local variable wrapper",null,null],[3,"IterMut","","Mutable iterator over the contents of a `ThreadLocal`.",null,null],[3,"IntoIter","","An iterator that moves out of a `ThreadLocal`.",null,null],[3,"CachedThreadLocal","","Wrapper around `ThreadLocal` which adds a fast path for a…",null,null],[6,"CachedIterMut","","Mutable iterator over the contents of a `CachedThreadLocal`.",null,null],[6,"CachedIntoIter","","An iterator that moves out of a `CachedThreadLocal`.",null,null],[11,"new","","Creates a new empty `ThreadLocal`.",0,[[],["threadlocal",3]]],[11,"get","","Returns the element for the current thread, if it exists.",0,[[],["option",4]]],[11,"get_or","","Returns the element for the current thread, or creates it…",0,[[]]],[11,"get_or_try","","Returns the element for the current thread, or creates it…",0,[[],["result",4]]],[11,"iter_mut","","Returns a mutable iterator over the local values of all…",0,[[],["itermut",3]]],[11,"clear","","Removes all thread-specific values from the `ThreadLocal`,…",0,[[]]],[11,"get_default","","Returns the element for the current thread, or creates a…",0,[[]]],[11,"new","","Creates a new empty `CachedThreadLocal`.",1,[[],["cachedthreadlocal",3]]],[11,"get","","Returns the element for the current thread, if it exists.",1,[[],["option",4]]],[11,"get_or","","Returns the element for the current thread, or creates it…",1,[[]]],[11,"get_or_try","","Returns the element for the current thread, or creates it…",1,[[],["result",4]]],[11,"iter_mut","","Returns a mutable iterator over the local values of all…",1,[[],["cacheditermut",6]]],[11,"clear","","Removes all thread-specific values from the `ThreadLocal`,…",1,[[]]],[11,"get_default","","Returns the element for the current thread, or creates a…",1,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"into_iter","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"into_iter","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"into_iter","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"into_iter","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"drop","","",0,[[]]],[11,"into_iter","","",0,[[],["intoiter",3]]],[11,"into_iter","","",1,[[],["cachedintoiter",6]]],[11,"next","","",2,[[],[["option",4],["box",3]]]],[11,"size_hint","","",2,[[]]],[11,"next","","",3,[[],[["box",3],["option",4]]]],[11,"size_hint","","",3,[[]]],[11,"default","","",0,[[],["threadlocal",3]]],[11,"default","","",1,[[],["cachedthreadlocal",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]]],"p":[[3,"ThreadLocal"],[3,"CachedThreadLocal"],[3,"IterMut"],[3,"IntoIter"]]},\
"tvm":{"doc":"TVM is a compiler stack for deep learning systems.","i":[[3,"FunctionNotFoundError","tvm","",null,null],[3,"TypeMismatchError","","",null,null],[12,"expected","","",0,null],[12,"actual","","",0,null],[4,"NDArrayError","","",null,null],[13,"EmptyArray","","",1,null],[13,"InvalidDatatype","","",1,null],[13,"ShapeError","","",1,null],[13,"DataTypeMismatch","","",1,null],[12,"expected","tvm::NDArrayError","",2,null],[12,"actual","","",2,null],[4,"Error","tvm","",null,null],[13,"Downcast","","",3,null],[13,"Null","","",3,null],[13,"ModuleLoadPath","","",3,null],[13,"ToCString","","",3,null],[13,"FromCString","","",3,null],[13,"NullHandle","","",3,null],[13,"NDArray","","",3,null],[13,"CallFailed","","",3,null],[13,"Infallible","","",3,null],[13,"Panic","","",3,null],[3,"Function","","Wrapper around TVM function handle which includes…",null,null],[3,"Module","","Wrapper around TVM module handle which contains an entry…",null,null],[3,"NDArray","","",null,null],[3,"Context","","",null,null],[12,"device_type","","",4,null],[12,"device_id","","",4,null],[3,"DataType","","",null,null],[4,"DeviceType","","Device type represents the set of devices supported by TVM.",null,null],[13,"CPU","","",5,null],[13,"GPU","","",5,null],[13,"CPUPinned","","",5,null],[13,"OpenCL","","",5,null],[13,"Vulkan","","",5,null],[13,"Metal","","",5,null],[13,"VPI","","",5,null],[13,"ROCM","","",5,null],[13,"ExtDev","","",5,null],[0,"context","","",null,null],[5,"get_device_attr","tvm::context","",null,[[],[["result",4],["error",4]]]],[3,"Context","","",null,null],[12,"device_type","","",4,null],[12,"device_id","","",4,null],[4,"DeviceType","","Device type represents the set of devices supported by TVM.",null,null],[13,"CPU","","",5,null],[13,"GPU","","",5,null],[13,"CPUPinned","","",5,null],[13,"OpenCL","","",5,null],[13,"Vulkan","","",5,null],[13,"Metal","","",5,null],[13,"VPI","","",5,null],[13,"ROCM","","",5,null],[13,"ExtDev","","",5,null],[3,"UnsupportedDeviceError","","",null,null],[0,"errors","tvm","",null,null],[3,"FunctionNotFoundError","tvm::errors","",null,null],[3,"TypeMismatchError","","",null,null],[12,"expected","","",0,null],[12,"actual","","",0,null],[4,"NDArrayError","","",null,null],[13,"EmptyArray","","",1,null],[13,"InvalidDatatype","","",1,null],[13,"ShapeError","","",1,null],[13,"DataTypeMismatch","","",1,null],[12,"expected","tvm::errors::NDArrayError","",2,null],[12,"actual","","",2,null],[4,"Error","tvm::errors","",null,null],[13,"Downcast","","",3,null],[13,"Null","","",3,null],[13,"ModuleLoadPath","","",3,null],[13,"ToCString","","",3,null],[13,"FromCString","","",3,null],[13,"NullHandle","","",3,null],[13,"NDArray","","",3,null],[13,"CallFailed","","",3,null],[13,"Infallible","","",3,null],[13,"Panic","","",3,null],[0,"function","tvm","This module provides an idiomatic Rust API for creating…",null,null],[6,"Result","tvm::function","",null,null],[3,"Function","","Wrapper around TVM function handle which includes…",null,null],[5,"register","","Registers a Rust function with an arbitrary type signature…",null,[[],[["result",4],["error",4]]]],[5,"register_override","","Register a function with explicit control over whether to…",null,[[],[["result",4],["error",4]]]],[5,"register_untyped","","",null,[[],[["result",4],["error",4]]]],[8,"ToFunction","","",null,null],[16,"Handle","","",6,null],[10,"into_raw","","",6,[[]]],[10,"call","","",6,[[["argvalue",4],["vec",3]],[["result",4],["error",4],["retvalue",4]]]],[10,"drop","","",6,[[]]],[11,"to_function","","",6,[[],["function",3]]],[11,"tvm_callback","","The callback function which is wrapped converted by TVM…",6,[[]]],[11,"tvm_finalizer","","The finalizer which is invoked when the packed function\'s…",6,[[]]],[8,"Typed","","A trait representing whether the function arguments and…",null,null],[10,"args","","",7,[[["argvalue",4],["vec",3]],[["error",4],["result",4]]]],[10,"ret","","",7,[[],[["result",4],["error",4],["retvalue",4]]]],[0,"ffi","","The low-level C runtime FFI API for TVM.",null,null],[17,"TVM_VERSION","tvm::function::ffi","",null,null],[17,"DLPACK_VERSION","","",null,null],[17,"_STDINT_H","","",null,null],[17,"_FEATURES_H","","",null,null],[17,"_DEFAULT_SOURCE","","",null,null],[17,"__USE_ISOC11","","",null,null],[17,"__USE_ISOC99","","",null,null],[17,"__USE_ISOC95","","",null,null],[17,"__USE_POSIX_IMPLICITLY","","",null,null],[17,"_POSIX_SOURCE","","",null,null],[17,"_POSIX_C_SOURCE","","",null,null],[17,"__USE_POSIX","","",null,null],[17,"__USE_POSIX2","","",null,null],[17,"__USE_POSIX199309","","",null,null],[17,"__USE_POSIX199506","","",null,null],[17,"__USE_XOPEN2K","","",null,null],[17,"__USE_XOPEN2K8","","",null,null],[17,"_ATFILE_SOURCE","","",null,null],[17,"__USE_MISC","","",null,null],[17,"__USE_ATFILE","","",null,null],[17,"__USE_FORTIFY_LEVEL","","",null,null],[17,"__GLIBC_USE_DEPRECATED_GETS","","",null,null],[17,"_STDC_PREDEF_H","","",null,null],[17,"__STDC_IEC_559__","","",null,null],[17,"__STDC_IEC_559_COMPLEX__","","",null,null],[17,"__STDC_ISO_10646__","","",null,null],[17,"__STDC_NO_THREADS__","","",null,null],[17,"__GNU_LIBRARY__","","",null,null],[17,"__GLIBC__","","",null,null],[17,"__GLIBC_MINOR__","","",null,null],[17,"_SYS_CDEFS_H","","",null,null],[17,"__glibc_c99_flexarr_available","","",null,null],[17,"__WORDSIZE","","",null,null],[17,"__WORDSIZE_TIME64_COMPAT32","","",null,null],[17,"__SYSCALL_WORDSIZE","","",null,null],[17,"__HAVE_GENERIC_SELECTION","","",null,null],[17,"__GLIBC_USE_LIB_EXT2","","",null,null],[17,"__GLIBC_USE_IEC_60559_BFP_EXT","","",null,null],[17,"__GLIBC_USE_IEC_60559_FUNCS_EXT","","",null,null],[17,"__GLIBC_USE_IEC_60559_TYPES_EXT","","",null,null],[17,"_BITS_TYPES_H","","",null,null],[17,"_BITS_TYPESIZES_H","","",null,null],[17,"__OFF_T_MATCHES_OFF64_T","","",null,null],[17,"__INO_T_MATCHES_INO64_T","","",null,null],[17,"__RLIM_T_MATCHES_RLIM64_T","","",null,null],[17,"__FD_SETSIZE","","",null,null],[17,"_BITS_WCHAR_H","","",null,null],[17,"_BITS_STDINT_INTN_H","","",null,null],[17,"_BITS_STDINT_UINTN_H","","",null,null],[17,"INT8_MIN","","",null,null],[17,"INT16_MIN","","",null,null],[17,"INT32_MIN","","",null,null],[17,"INT8_MAX","","",null,null],[17,"INT16_MAX","","",null,null],[17,"INT32_MAX","","",null,null],[17,"UINT8_MAX","","",null,null],[17,"UINT16_MAX","","",null,null],[17,"UINT32_MAX","","",null,null],[17,"INT_LEAST8_MIN","","",null,null],[17,"INT_LEAST16_MIN","","",null,null],[17,"INT_LEAST32_MIN","","",null,null],[17,"INT_LEAST8_MAX","","",null,null],[17,"INT_LEAST16_MAX","","",null,null],[17,"INT_LEAST32_MAX","","",null,null],[17,"UINT_LEAST8_MAX","","",null,null],[17,"UINT_LEAST16_MAX","","",null,null],[17,"UINT_LEAST32_MAX","","",null,null],[17,"INT_FAST8_MIN","","",null,null],[17,"INT_FAST16_MIN","","",null,null],[17,"INT_FAST32_MIN","","",null,null],[17,"INT_FAST8_MAX","","",null,null],[17,"INT_FAST16_MAX","","",null,null],[17,"INT_FAST32_MAX","","",null,null],[17,"UINT_FAST8_MAX","","",null,null],[17,"UINT_FAST16_MAX","","",null,null],[17,"UINT_FAST32_MAX","","",null,null],[17,"INTPTR_MIN","","",null,null],[17,"INTPTR_MAX","","",null,null],[17,"UINTPTR_MAX","","",null,null],[17,"PTRDIFF_MIN","","",null,null],[17,"PTRDIFF_MAX","","",null,null],[17,"SIG_ATOMIC_MIN","","",null,null],[17,"SIG_ATOMIC_MAX","","",null,null],[17,"SIZE_MAX","","",null,null],[17,"WINT_MIN","","",null,null],[17,"WINT_MAX","","",null,null],[6,"__u_char","","",null,null],[6,"__u_short","","",null,null],[6,"__u_int","","",null,null],[6,"__u_long","","",null,null],[6,"__int8_t","","",null,null],[6,"__uint8_t","","",null,null],[6,"__int16_t","","",null,null],[6,"__uint16_t","","",null,null],[6,"__int32_t","","",null,null],[6,"__uint32_t","","",null,null],[6,"__int64_t","","",null,null],[6,"__uint64_t","","",null,null],[6,"__quad_t","","",null,null],[6,"__u_quad_t","","",null,null],[6,"__intmax_t","","",null,null],[6,"__uintmax_t","","",null,null],[6,"__dev_t","","",null,null],[6,"__uid_t","","",null,null],[6,"__gid_t","","",null,null],[6,"__ino_t","","",null,null],[6,"__ino64_t","","",null,null],[6,"__mode_t","","",null,null],[6,"__nlink_t","","",null,null],[6,"__off_t","","",null,null],[6,"__off64_t","","",null,null],[6,"__pid_t","","",null,null],[3,"__fsid_t","","",null,null],[12,"__val","","",8,null],[6,"__clock_t","","",null,null],[6,"__rlim_t","","",null,null],[6,"__rlim64_t","","",null,null],[6,"__id_t","","",null,null],[6,"__time_t","","",null,null],[6,"__useconds_t","","",null,null],[6,"__suseconds_t","","",null,null],[6,"__daddr_t","","",null,null],[6,"__key_t","","",null,null],[6,"__clockid_t","","",null,null],[6,"__timer_t","","",null,null],[6,"__blksize_t","","",null,null],[6,"__blkcnt_t","","",null,null],[6,"__blkcnt64_t","","",null,null],[6,"__fsblkcnt_t","","",null,null],[6,"__fsblkcnt64_t","","",null,null],[6,"__fsfilcnt_t","","",null,null],[6,"__fsfilcnt64_t","","",null,null],[6,"__fsword_t","","",null,null],[6,"__ssize_t","","",null,null],[6,"__syscall_slong_t","","",null,null],[6,"__syscall_ulong_t","","",null,null],[6,"__loff_t","","",null,null],[6,"__caddr_t","","",null,null],[6,"__intptr_t","","",null,null],[6,"__socklen_t","","",null,null],[6,"__sig_atomic_t","","",null,null],[6,"int_least8_t","","",null,null],[6,"int_least16_t","","",null,null],[6,"int_least32_t","","",null,null],[6,"int_least64_t","","",null,null],[6,"uint_least8_t","","",null,null],[6,"uint_least16_t","","",null,null],[6,"uint_least32_t","","",null,null],[6,"uint_least64_t","","",null,null],[6,"int_fast8_t","","",null,null],[6,"int_fast16_t","","",null,null],[6,"int_fast32_t","","",null,null],[6,"int_fast64_t","","",null,null],[6,"uint_fast8_t","","",null,null],[6,"uint_fast16_t","","",null,null],[6,"uint_fast32_t","","",null,null],[6,"uint_fast64_t","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"wchar_t","","",null,null],[17,"DLDeviceType_kDLCPU","","\\\\brief CPU device",null,null],[17,"DLDeviceType_kDLGPU","","\\\\brief CUDA GPU device",null,null],[17,"DLDeviceType_kDLCPUPinned","","\\\\brief Pinned CUDA GPU device by cudaMallocHost \\\\note…",null,null],[17,"DLDeviceType_kDLOpenCL","","\\\\brief OpenCL devices.",null,null],[17,"DLDeviceType_kDLVulkan","","\\\\brief Vulkan buffer for next generation graphics.",null,null],[17,"DLDeviceType_kDLMetal","","\\\\brief Metal for Apple GPU.",null,null],[17,"DLDeviceType_kDLVPI","","\\\\brief Verilog simulator buffer",null,null],[17,"DLDeviceType_kDLROCM","","\\\\brief ROCm GPUs for AMD GPUs",null,null],[17,"DLDeviceType_kDLExtDev","","\\\\brief Reserved extension device type, used for quickly…",null,null],[6,"DLDeviceType","","\\\\brief The device type in DLContext.",null,null],[3,"DLContext","","\\\\brief A Device context for Tensor and operator.",null,null],[12,"device_type","","\\\\brief The device type used in the device.",9,null],[12,"device_id","","\\\\brief The device index",9,null],[17,"DLDataTypeCode_kDLInt","","",null,null],[17,"DLDataTypeCode_kDLUInt","","",null,null],[17,"DLDataTypeCode_kDLFloat","","",null,null],[17,"DLDataTypeCode_kDLBfloat","","",null,null],[6,"DLDataTypeCode","","\\\\brief The type code options DLDataType.",null,null],[3,"DLDataType","","\\\\brief The data type the tensor can hold.",null,null],[12,"code","","\\\\brief Type code of base types. We keep it uint8_t instead…",10,null],[12,"bits","","\\\\brief Number of bits, common choices are 8, 16, 32.",10,null],[12,"lanes","","\\\\brief Number of lanes in the type, used for vector types.",10,null],[3,"DLTensor","","\\\\brief Plain C Tensor object, does not manage memory.",null,null],[12,"data","","\\\\brief The opaque data pointer points to the allocated…",11,null],[12,"ctx","","\\\\brief The device context of the tensor",11,null],[12,"ndim","","\\\\brief Number of dimensions",11,null],[12,"dtype","","\\\\brief The data type of the pointer",11,null],[12,"shape","","\\\\brief The shape of the tensor",11,null],[12,"strides","","\\\\brief strides of the tensor (in number of elements, not…",11,null],[12,"byte_offset","","\\\\brief The offset in bytes to the beginning pointer to data",11,null],[3,"DLManagedTensor","","\\\\brief C Tensor object, manage memory of DLTensor. This…",null,null],[12,"dl_tensor","","\\\\brief DLTensor which is being memory managed",12,null],[12,"manager_ctx","","\\\\brief the context of the original host framework of…",12,null],[12,"deleter","","\\\\brief Destructor signature void ()(void) - this should be…",12,null],[6,"tvm_index_t","","\\\\brief type of array index.",null,null],[17,"TVMDeviceExtType_kDLAOCL","","",null,null],[17,"TVMDeviceExtType_kDLSDAccel","","",null,null],[17,"TVMDeviceExtType_kOpenGL","","",null,null],[17,"TVMDeviceExtType_kDLMicroDev","","",null,null],[17,"TVMDeviceExtType_kDLHexagon","","",null,null],[17,"TVMDeviceExtType_kDLWebGPU","","",null,null],[6,"TVMDeviceExtType","","\\\\brief Extension device types in TVM",null,null],[17,"TVMArgTypeCode_kTVMArgInt","","",null,null],[17,"TVMArgTypeCode_kTVMArgFloat","","",null,null],[17,"TVMArgTypeCode_kTVMOpaqueHandle","","",null,null],[17,"TVMArgTypeCode_kTVMNullptr","","",null,null],[17,"TVMArgTypeCode_kTVMDataType","","",null,null],[17,"TVMArgTypeCode_kTVMContext","","",null,null],[17,"TVMArgTypeCode_kTVMDLTensorHandle","","",null,null],[17,"TVMArgTypeCode_kTVMObjectHandle","","",null,null],[17,"TVMArgTypeCode_kTVMModuleHandle","","",null,null],[17,"TVMArgTypeCode_kTVMPackedFuncHandle","","",null,null],[17,"TVMArgTypeCode_kTVMStr","","",null,null],[17,"TVMArgTypeCode_kTVMBytes","","",null,null],[17,"TVMArgTypeCode_kTVMNDArrayHandle","","",null,null],[17,"TVMArgTypeCode_kTVMObjectRValueRefArg","","",null,null],[17,"TVMArgTypeCode_kTVMExtBegin","","",null,null],[17,"TVMArgTypeCode_kTVMNNVMFirst","","",null,null],[17,"TVMArgTypeCode_kTVMNNVMLast","","",null,null],[17,"TVMArgTypeCode_kTVMExtReserveEnd","","",null,null],[17,"TVMArgTypeCode_kTVMExtEnd","","",null,null],[6,"TVMArgTypeCode","","\\\\brief The type code in used and only used in TVM FFI for…",null,null],[6,"TVMContext","","\\\\brief The Device information, abstract away common device…",null,null],[6,"TVMArrayHandle","","\\\\brief the array handle",null,null],[19,"TVMValue","","\\\\brief Union type of values being passed through API and…",null,null],[12,"v_int64","","",13,null],[12,"v_float64","","",13,null],[12,"v_handle","","",13,null],[12,"v_str","","",13,null],[12,"v_type","","",13,null],[12,"v_ctx","","",13,null],[3,"TVMByteArray","","\\\\brief Byte array type used to pass in byte array When…",null,null],[12,"data","","",14,null],[12,"size","","",14,null],[6,"TVMModuleHandle","","\\\\brief Handle to TVM runtime modules.",null,null],[6,"TVMFunctionHandle","","\\\\brief Handle to packed function handle.",null,null],[6,"TVMRetValueHandle","","\\\\brief Handle to hold return value.",null,null],[6,"TVMStreamHandle","","\\\\brief The stream that is specific to device can be NULL,…",null,null],[6,"TVMObjectHandle","","\\\\brief Handle to Object.",null,null],[5,"TVMAPISetLastError","","\\\\brief Used for implementing C API function. Set last…",null,[[]]],[5,"TVMGetLastError","","\\\\brief return str message of the last error all function…",null,[[]]],[5,"TVMModLoadFromFile","","\\\\brief Load module from file. \\\\param file_name The file…",null,[[]]],[5,"TVMModImport","","\\\\brief Add dep to mod\'s dependency. This allows functions…",null,[[]]],[5,"TVMModGetFunction","","\\\\brief Get function from the module. \\\\param mod The module…",null,[[]]],[5,"TVMModFree","","\\\\brief Free the Module \\\\param mod The module to be freed.",null,[[]]],[5,"TVMFuncFree","","\\\\brief Free the function when it is no longer needed.…",null,[[]]],[5,"TVMFuncCall","","\\\\brief Call a Packed TVM Function.",null,[[]]],[5,"TVMCFuncSetReturn","","\\\\brief Set the return value of TVMPackedCFunc.",null,[[]]],[5,"TVMCbArgToReturn","","\\\\brief Inplace translate callback argument value to return…",null,[[]]],[6,"TVMPackedCFunc","","\\\\brief C type of packed function.",null,null],[6,"TVMPackedCFuncFinalizer","","\\\\brief C callback to free the resource handle in C packed…",null,null],[6,"TVMExtensionFuncDeclarer","","\\\\brief Signature for extension function declarer.",null,null],[5,"TVMFuncCreateFromCFunc","","\\\\brief Wrap a TVMPackedCFunc to become a FunctionHandle.",null,[[["option",4],["option",4]]]],[5,"TVMFuncRegisterGlobal","","\\\\brief Register the function to runtime\'s global table.",null,[[]]],[5,"TVMFuncGetGlobal","","\\\\brief Get a global function.",null,[[]]],[5,"TVMFuncListGlobalNames","","\\\\brief List all the globally registered function name…",null,[[]]],[5,"TVMArrayAlloc","","\\\\brief Allocate a nd-array\'s memory, including space of…",null,[[]]],[5,"TVMArrayFree","","\\\\brief Free the TVM Array. \\\\param handle The array handle…",null,[[]]],[5,"TVMArrayCopyFromBytes","","\\\\brief Copy array data from CPU byte array. \\\\param handle…",null,[[]]],[5,"TVMArrayCopyToBytes","","\\\\brief Copy array data to CPU byte array. \\\\param handle…",null,[[]]],[5,"TVMArrayCopyFromTo","","\\\\brief Copy the array, both from and to must be valid…",null,[[]]],[5,"TVMArrayFromDLPack","","\\\\brief Produce an array from the DLManagedTensor that…",null,[[]]],[5,"TVMArrayToDLPack","","\\\\brief Produce a DLMangedTensor from the array that shares…",null,[[]]],[5,"TVMDLManagedTensorCallDeleter","","\\\\brief Delete (free) a DLManagedTensor\'s data. \\\\param…",null,[[]]],[5,"TVMStreamCreate","","\\\\brief Create a new runtime stream.",null,[[]]],[5,"TVMStreamFree","","\\\\brief Free a created stream handle.",null,[[]]],[5,"TVMSetStream","","\\\\brief Set the runtime stream of current thread to be…",null,[[]]],[5,"TVMSynchronize","","\\\\brief Wait until all computations on stream completes.",null,[[]]],[5,"TVMStreamStreamSynchronize","","\\\\brief Synchronize two streams of execution.",null,[[]]],[5,"TVMObjectGetTypeIndex","","\\\\brief Get the type_index from an object.",null,[[]]],[5,"TVMObjectTypeKey2Index","","\\\\brief Convert type key to type index. \\\\param type_key The…",null,[[]]],[5,"TVMObjectRetain","","\\\\brief Increase the reference count of an object.",null,[[]]],[5,"TVMObjectFree","","\\\\brief Free the object.",null,[[]]],[5,"TVMDeviceAllocDataSpace","","\\\\brief Allocate a data space on device. \\\\param ctx The…",null,[[["dlcontext",3],["dldatatype",3]]]],[5,"TVMDeviceFreeDataSpace","","\\\\brief Free a data space on device. \\\\param ctx The device…",null,[[["dlcontext",3]]]],[5,"TVMDeviceCopyDataFromTo","","\\\\brief Copy data from one place to another. \\\\param from…",null,[[["dlcontext",3],["dldatatype",3]]]],[5,"TVMObjectDerivedFrom","","\\\\brief Check that an object is derived from another.…",null,[[]]],[6,"TVMBackendPackedCFunc","","\\\\brief Signature for backend functions exported as DLL.",null,null],[5,"TVMBackendGetFuncFromEnv","","\\\\brief Backend function for modules to get function from…",null,[[]]],[5,"TVMBackendRegisterSystemLibSymbol","","\\\\brief Backend function to register system-wide library…",null,[[]]],[5,"TVMBackendAllocWorkspace","","\\\\brief Backend function to allocate temporal workspace.",null,[[]]],[5,"TVMBackendFreeWorkspace","","\\\\brief Backend function to free temporal workspace.",null,[[]]],[3,"TVMParallelGroupEnv","","\\\\brief Environment for TVM parallel task.",null,null],[12,"sync_handle","","\\\\brief Auxiliary used for synchronization",15,null],[12,"num_task","","\\\\brief total amount of task",15,null],[6,"FTVMParallelLambda","","\\\\brief The callback function to execute a parallel lambda…",null,null],[5,"TVMBackendParallelLaunch","","\\\\brief Backend function for running parallel jobs.",null,[[["option",4]]]],[5,"TVMBackendParallelBarrier","","\\\\brief BSP barrrier between parallel threads \\\\param…",null,[[]]],[5,"TVMBackendRunOnce","","\\\\brief Simple static initialization function. Run f once…",null,[[["option",4]]]],[6,"BackendPackedCFunc","","",null,null],[4,"ArgValue","tvm::function","A borrowed TVMPODValue. Can be constructed using `into()`…",null,null],[13,"Int","","",16,null],[13,"UInt","","",16,null],[13,"Float","","",16,null],[13,"Null","","",16,null],[13,"DataType","","",16,null],[13,"String","","",16,null],[13,"Context","","",16,null],[13,"Handle","","",16,null],[13,"ArrayHandle","","",16,null],[13,"ObjectHandle","","",16,null],[13,"ModuleHandle","","",16,null],[13,"FuncHandle","","",16,null],[13,"NDArrayHandle","","",16,null],[13,"Bytes","","",16,null],[13,"Str","","",16,null],[4,"RetValue","","An owned TVMPODValue. Can be converted from a variety of…",null,null],[13,"Int","","",17,null],[13,"UInt","","",17,null],[13,"Float","","",17,null],[13,"Null","","",17,null],[13,"DataType","","",17,null],[13,"String","","",17,null],[13,"Context","","",17,null],[13,"Handle","","",17,null],[13,"ArrayHandle","","",17,null],[13,"ObjectHandle","","",17,null],[13,"ModuleHandle","","",17,null],[13,"FuncHandle","","",17,null],[13,"NDArrayHandle","","",17,null],[13,"Bytes","","",17,null],[13,"Str","","",17,null],[0,"module","tvm","Provides the [`Module`] type and methods for working with…",null,null],[3,"Module","tvm::module","Wrapper around TVM module handle which contains an entry…",null,null],[5,"runtime_enabled","","",null,[[["cstring",3]],[["result",4],["error",4]]]],[5,"load_from_file","","",null,[[["cstring",3]],[["result",4],["error",4],["module",3]]]],[0,"ndarray","tvm","This module implements the [`NDArray`] type for working…",null,null],[3,"NDArrayContainer","tvm::ndarray","See the `module-level documentation` for more details.",null,null],[3,"NDArray","","",null,null],[8,"Num32","","A trait for the supported 32-bits numerical types in…",null,null],[18,"BITS","","",18,null],[0,"value","tvm","This module implements [`ArgValue`] and [`RetValue`] types…",null,null],[5,"version","","Outputs the current TVM version.",null,[[]]],[0,"ir","","",null,null],[0,"arith","tvm::ir","",null,null],[3,"ConstIntBoundNode","tvm::ir::arith","",null,null],[12,"min_value","","",19,null],[12,"max_value","","",19,null],[3,"ConstIntBound","","",null,null],[11,"new","","",20,[[],["constintbound",3]]],[0,"attrs","tvm::ir","",null,null],[3,"BaseAttrsNode","tvm::ir::attrs","",null,null],[12,"base","","",21,null],[3,"Attrs","","",null,null],[0,"expr","tvm::ir","",null,null],[3,"BaseExprNode","tvm::ir::expr","",null,null],[12,"base","","",22,null],[3,"BaseExpr","","",null,null],[3,"PrimExprNode","","",null,null],[12,"base","","",23,null],[12,"datatype","","",23,null],[3,"PrimExpr","","",null,null],[3,"GlobalVarNode","","",null,null],[12,"base","","",24,null],[12,"name_hint","","",24,null],[3,"GlobalVar","","",null,null],[5,"_as_text","","",null,[[["function",3],["objectref",3]],[["result",6],["tstring",3]]]],[5,"as_text","","",null,[[["isobjectref",8]],["string",3]]],[11,"base","","",22,[[],["baseexprnode",3]]],[11,"base","","",23,[[["datatype",3]],["primexprnode",3]]],[11,"new","","",25,[[["objectref",3],["string",3]],["globalvar",3]]],[0,"function","tvm::ir","",null,null],[3,"BaseFuncNode","tvm::ir::function","",null,null],[12,"base","","",26,null],[12,"attrs","","",26,null],[3,"BaseFunc","","",null,null],[6,"DictAttrs","","",null,null],[11,"base","","",26,[[],["basefuncnode",3]]],[0,"module","tvm::ir","",null,null],[3,"IRModuleNode","tvm::ir::module","",null,null],[12,"base","","",27,null],[12,"functions","","",27,null],[12,"type_definitions","","",27,null],[3,"IRModule","","",null,null],[5,"parse_module","","",null,[[["tvmstring",3]],[["result",6],["irmodule",3]]]],[5,"parse_expression","","",null,[[["tvmstring",3]],[["result",6],["irmodule",3]]]],[5,"module_add_def","","",null,[[["objectref",3],["irmodule",3]],["result",6]]],[5,"module_get_global_var","","",null,[[["tvmstring",3],["irmodule",3]],[["result",6],["globalvar",3]]]],[5,"module_get_global_vars","","",null,[[["irmodule",3]],[["array",3],["result",6]]]],[5,"module_lookup","","",null,[[["globalvar",3],["irmodule",3]],[["result",6],["basefunc",3]]]],[5,"module_lookup_str","","",null,[[["tvmstring",3],["irmodule",3]],[["result",6],["basefunc",3]]]],[11,"parse","","",28,[[],["irmodule",3]]],[11,"parse_file","","",28,[[["path",3],["asref",8]],[["ioresult",6],["irmodule",3]]]],[11,"add_def","","",28,[[["objectref",3]],["result",6]]],[11,"get_global_var","","",28,[[["tvmstring",3]],[["globalvar",3],["result",6]]]],[11,"get_global_vars","","",28,[[],[["array",3],["result",6]]]],[11,"lookup","","",28,[[["globalvar",3]],[["basefunc",3],["result",6]]]],[11,"lookup_str","","",28,[[],[["basefunc",3],["result",6]]]],[0,"op","tvm::ir","",null,null],[3,"OpNode","tvm::ir::op","",null,null],[12,"base","","",29,null],[12,"name","","",29,null],[12,"op_type","","",29,null],[12,"description","","",29,null],[12,"arguments","","",29,null],[12,"attrs_type_key","","",29,null],[12,"attrs_type_index","","",29,null],[12,"num_inputs","","",29,null],[12,"support_level","","",29,null],[3,"Op","","",null,null],[0,"relay","tvm::ir","",null,null],[3,"ExprNode","tvm::ir::relay","",null,null],[12,"base","","",30,null],[12,"span","","",30,null],[12,"checked_type","","",30,null],[3,"Expr","","",null,null],[3,"IdNode","","",null,null],[12,"base","","",31,null],[12,"name_hint","","",31,null],[3,"Id","","",null,null],[3,"ConstantNode","","",null,null],[12,"base","","",32,null],[12,"data","","",32,null],[3,"Constant","","",null,null],[3,"TupleNode","","",null,null],[12,"base","","",33,null],[12,"fields","","",33,null],[3,"Tuple","","",null,null],[3,"VarNode","","",null,null],[12,"base","","",34,null],[12,"vid","","",34,null],[12,"type_annotation","","",34,null],[3,"Var","","",null,null],[3,"CallNode","","",null,null],[12,"base","","",35,null],[12,"op","","",35,null],[12,"args","","",35,null],[12,"attrs","","",35,null],[12,"type_args","","",35,null],[3,"Call","","",null,null],[3,"LetNode","","",null,null],[12,"base","","",36,null],[12,"var","","",36,null],[12,"value","","",36,null],[12,"body","","",36,null],[3,"Let","","",null,null],[3,"IfNode","","",null,null],[12,"base","","",37,null],[12,"cond","","",37,null],[12,"true_branch","","",37,null],[12,"false_branch","","",37,null],[3,"If","","",null,null],[3,"TupleGetItemNode","","",null,null],[12,"base","","",38,null],[12,"tuple","","",38,null],[12,"index","","",38,null],[3,"TupleGetItem","","",null,null],[3,"RefCreateNode","","",null,null],[12,"base","","",39,null],[12,"value","","",39,null],[3,"RefCreate","","",null,null],[3,"RefReadNode","","",null,null],[12,"base","","",40,null],[12,"ref_value","","",40,null],[3,"RefRead","","",null,null],[3,"RefWriteNode","","",null,null],[12,"base","","",41,null],[12,"ref_value","","",41,null],[12,"value","","",41,null],[3,"RefWrite","","",null,null],[3,"ConstructorNode","","",null,null],[12,"base","","",42,null],[12,"name_hint","","",42,null],[12,"inputs","","",42,null],[12,"tag","","",42,null],[3,"Constructor","","",null,null],[3,"PatternNode","","",null,null],[12,"base","","",43,null],[12,"span","","",43,null],[3,"Pattern","","",null,null],[3,"PatternWildcardNode","","",null,null],[12,"base","","",44,null],[3,"PatternWildcard","","",null,null],[3,"PatternVarNode","","",null,null],[12,"base","","",45,null],[12,"var","","",45,null],[3,"PatternVar","","",null,null],[3,"PatternConstructorNode","","",null,null],[12,"base","","",46,null],[12,"constructor","","",46,null],[12,"patterns","","",46,null],[3,"PatternConstructor","","",null,null],[3,"PatternTupleNode","","",null,null],[12,"base","","",47,null],[12,"patterns","","",47,null],[3,"PatternTuple","","",null,null],[3,"ClauseNode","","",null,null],[12,"base","","",48,null],[12,"lhs","","",48,null],[12,"rhs","","",48,null],[3,"Clause","","",null,null],[3,"MatchNode","","",null,null],[12,"base","","",49,null],[12,"data","","",49,null],[12,"clauses","","",49,null],[12,"complete","","",49,null],[3,"Match","","",null,null],[3,"FunctionNode","","",null,null],[12,"base","","",50,null],[12,"params","","",50,null],[12,"body","","",50,null],[12,"ret_type","","",50,null],[12,"type_params","","",50,null],[3,"Function","","",null,null],[0,"attrs","","",null,null],[0,"nn","tvm::ir::relay::attrs","",null,null],[3,"Conv2DAttrsNode","tvm::ir::relay::attrs::nn","",null,null],[12,"base","","",51,null],[12,"strides","","",51,null],[12,"padding","","",51,null],[12,"dilation","","",51,null],[12,"groups","","",51,null],[12,"channels","","",51,null],[12,"kernel_size","","",51,null],[12,"data_layout","","",51,null],[12,"kernel_layout","","",51,null],[12,"out_layout","","",51,null],[12,"out_dtype","","",51,null],[3,"Conv2DAttrs","","",null,null],[3,"BiasAddAttrsNode","","",null,null],[12,"base","","",52,null],[12,"axis","","",52,null],[3,"BiasAddAttrs","","",null,null],[3,"DenseAttrsNode","","",null,null],[12,"base","","",53,null],[12,"units","","",53,null],[12,"out_dtype","","",53,null],[3,"DenseAttrs","","",null,null],[3,"GlobalPool2DAttrsNode","","",null,null],[12,"base","","",54,null],[12,"layout","","",54,null],[3,"GlobalPool2DAttrs","","",null,null],[3,"MaxPool2DAttrsNode","","",null,null],[12,"base","","",55,null],[12,"pool_size","","",55,null],[12,"strides","","",55,null],[12,"padding","","",55,null],[12,"layout","","",55,null],[12,"ceil_mode","","",55,null],[3,"MaxPool2DAttrs","","",null,null],[3,"SoftmaxAttrsNode","","",null,null],[12,"base","","",56,null],[12,"axis","","",56,null],[3,"SoftmaxAttrs","","",null,null],[0,"transform","tvm::ir::relay::attrs","",null,null],[3,"ExpandDimsAttrsNode","tvm::ir::relay::attrs::transform","",null,null],[12,"base","","",57,null],[12,"axis","","",57,null],[12,"num_newaxis","","",57,null],[3,"ExpandDimsAttrs","","",null,null],[11,"base","tvm::ir::relay","",30,[[],["exprnode",3]]],[11,"new","","",58,[[["objectref",3],["ndarray",3]],["constant",3]]],[11,"new","","",59,[[["array",3],["objectref",3],["expr",3]],["tuple",3]]],[11,"new","","",60,[[["type",3],["objectref",3],["string",3]],["var",3]]],[11,"name_hint","","",60,[[],["tstring",3]]],[11,"to_expr","","",60,[[],["expr",3]]],[11,"new","","",61,[[["array",3],["objectref",3],["expr",3],["array",3],["attrs",3],["type",3]],["call",3]]],[11,"new","","",62,[[["objectref",3],["expr",3],["var",3]],["let",3]]],[11,"new","","",63,[[["objectref",3],["expr",3]],["if",3]]],[11,"new","","",64,[[["objectref",3],["expr",3]],["tuplegetitem",3]]],[11,"new","","",65,[[["objectref",3],["expr",3]],["refcreate",3]]],[11,"new","","",66,[[["objectref",3],["expr",3]],["refread",3]]],[11,"new","","",67,[[["objectref",3],["expr",3]],["refwrite",3]]],[11,"new","","",68,[[["array",3],["objectref",3],["string",3],["type",3]],["constructor",3]]],[11,"base","","",43,[[],["patternnode",3]]],[11,"new","","",69,[[["objectref",3]],["patternwildcard",3]]],[11,"new","","",70,[[["objectref",3],["var",3]],["patternvar",3]]],[11,"new","","",71,[[["constructor",3],["objectref",3],["pattern",3],["array",3]],["patternconstructor",3]]],[11,"new","","",72,[[["pattern",3],["array",3],["objectref",3]],["patterntuple",3]]],[11,"new","","",73,[[["pattern",3],["expr",3],["objectref",3]],["clause",3]]],[11,"new","","",74,[[["array",3],["objectref",3],["expr",3],["clause",3]],["match",3]]],[11,"new","","",75,[[["type",3],["array",3],["expr",3],["array",3],["var",3]],["function",3]]],[0,"tir","tvm::ir","",null,null],[3,"IntImmNode","tvm::ir::tir","",null,null],[12,"value","","",76,null],[3,"IntImm","","",null,null],[3,"VarNode","","",null,null],[12,"name_hint","","",77,null],[3,"Var","","",null,null],[3,"AddNode","","",null,null],[12,"a","","",78,null],[12,"b","","",78,null],[3,"Add","","",null,null],[3,"SubNode","","",null,null],[12,"a","","",79,null],[12,"b","","",79,null],[3,"Sub","","",null,null],[3,"MulNode","","",null,null],[12,"a","","",80,null],[12,"b","","",80,null],[3,"Mul","","",null,null],[3,"DivNode","","",null,null],[12,"a","","",81,null],[12,"b","","",81,null],[3,"Div","","",null,null],[3,"ModNode","","",null,null],[12,"a","","",82,null],[12,"b","","",82,null],[3,"Mod","","",null,null],[3,"FloorDivNode","","",null,null],[12,"a","","",83,null],[12,"b","","",83,null],[3,"FloorDiv","","",null,null],[3,"FloorModNode","","",null,null],[12,"a","","",84,null],[12,"b","","",84,null],[3,"FloorMod","","",null,null],[3,"MinNode","","",null,null],[12,"a","","",85,null],[12,"b","","",85,null],[3,"Min","","",null,null],[3,"MaxNode","","",null,null],[12,"a","","",86,null],[12,"b","","",86,null],[3,"Max","","",null,null],[3,"CastNode","","",null,null],[12,"value","","",87,null],[3,"Cast","","",null,null],[3,"RampNode","","",null,null],[12,"start","","",88,null],[12,"stride","","",88,null],[12,"lanes","","",88,null],[3,"Ramp","","",null,null],[3,"SelectNode","","",null,null],[12,"condition","","",89,null],[12,"true_value","","",89,null],[12,"false_value","","",89,null],[3,"Select","","",null,null],[3,"EqNode","","",null,null],[12,"a","","",90,null],[12,"b","","",90,null],[3,"Eq","","",null,null],[3,"NeNode","","",null,null],[12,"a","","",91,null],[12,"b","","",91,null],[3,"Ne","","",null,null],[3,"LtNode","","",null,null],[12,"a","","",92,null],[12,"b","","",92,null],[3,"Lt","","",null,null],[3,"LeNode","","",null,null],[12,"a","","",93,null],[12,"b","","",93,null],[3,"Le","","",null,null],[3,"GtNode","","",null,null],[12,"a","","",94,null],[12,"b","","",94,null],[3,"Gt","","",null,null],[3,"GeNode","","",null,null],[12,"a","","",95,null],[12,"b","","",95,null],[3,"Ge","","",null,null],[3,"AndNode","","",null,null],[12,"a","","",96,null],[12,"b","","",96,null],[3,"And","","",null,null],[3,"OrNode","","",null,null],[12,"a","","",97,null],[12,"b","","",97,null],[3,"Or","","",null,null],[3,"NotNode","","",null,null],[12,"value","","",98,null],[3,"Not","","",null,null],[3,"LetNode","","",null,null],[12,"var","","",99,null],[12,"value","","",99,null],[12,"body","","",99,null],[3,"Let","","",null,null],[11,"new","","",100,[[["datatype",3]],["intimm",3]]],[11,"new","","",101,[[["tvmstring",3],["datatype",3]],["var",3]]],[11,"new","","",102,[[["primexpr",3],["datatype",3]],["add",3]]],[11,"new","","",103,[[["primexpr",3],["datatype",3]],["sub",3]]],[11,"new","","",104,[[["primexpr",3],["datatype",3]],["mul",3]]],[11,"new","","",105,[[["primexpr",3],["datatype",3]],["div",3]]],[11,"new","","",106,[[["primexpr",3],["datatype",3]],["mod",3]]],[11,"new","","",107,[[["primexpr",3],["datatype",3]],["floordiv",3]]],[11,"new","","",108,[[["primexpr",3],["datatype",3]],["floormod",3]]],[11,"new","","",109,[[["primexpr",3],["datatype",3]],["min",3]]],[11,"new","","",110,[[["primexpr",3],["datatype",3]],["max",3]]],[11,"new","","",111,[[["primexpr",3],["datatype",3]],["cast",3]]],[11,"new","","",112,[[["primexpr",3],["datatype",3]],["ramp",3]]],[11,"new","","",113,[[["primexpr",3],["datatype",3]],["select",3]]],[11,"new","","",114,[[["primexpr",3],["datatype",3]],["eq",3]]],[11,"new","","",115,[[["primexpr",3],["datatype",3]],["ne",3]]],[11,"new","","",116,[[["primexpr",3],["datatype",3]],["lt",3]]],[11,"new","","",117,[[["primexpr",3],["datatype",3]],["le",3]]],[11,"new","","",118,[[["primexpr",3],["datatype",3]],["gt",3]]],[11,"new","","",119,[[["primexpr",3],["datatype",3]],["ge",3]]],[11,"new","","",120,[[["primexpr",3],["datatype",3]],["and",3]]],[11,"new","","",121,[[["primexpr",3],["datatype",3]],["or",3]]],[11,"new","","",122,[[["primexpr",3],["datatype",3]],["not",3]]],[11,"new","","",123,[[["primexpr",3],["var",3],["datatype",3]],["let",3]]],[0,"ty","tvm::ir","",null,null],[3,"TypeNode","tvm::ir::ty","",null,null],[12,"base","","",124,null],[12,"span","","",124,null],[3,"Type","","",null,null],[3,"BaseTensorTypeNode","","",null,null],[12,"base","","",125,null],[3,"BaseTensorType","","",null,null],[3,"TensorTypeNode","","",null,null],[12,"base","","",126,null],[12,"shape","","",126,null],[12,"dtype","","",126,null],[3,"TensorType","","",null,null],[0,"python","tvm","",null,null],[5,"load","tvm::python","Load the Python interpreter into the address space.",null,[[],[["string",3],["result",4]]]],[0,"runtime","tvm","",null,null],[0,"object","tvm::runtime","",null,null],[8,"IsObjectRef","tvm::runtime::object","",null,null],[16,"Object","","",127,null],[10,"as_ptr","","",127,[[],[["option",4],["objectptr",3]]]],[10,"into_ptr","","",127,[[],[["option",4],["objectptr",3]]]],[10,"from_ptr","","",127,[[["option",4],["objectptr",3]]]],[11,"null","","",127,[[]]],[11,"into_arg_value","","",127,[[],["argvalue",4]]],[11,"from_arg_value","","",127,[[["argvalue",4]],[["result",4],["error",4]]]],[11,"into_ret_value","","",127,[[],["retvalue",4]]],[11,"from_ret_value","","",127,[[["retvalue",4]],[["result",4],["error",4]]]],[11,"upcast","","",127,[[]]],[11,"downcast","","",127,[[],[["result",4],["error",4]]]],[5,"debug_print","","",null,[[["objectref",3]],[["cstring",3],["error",4],["result",4]]]],[5,"structural_hash","","",null,[[["objectref",3]],[["result",4],["objectref",3],["error",4]]]],[5,"structural_equal","","",null,[[["objectref",3]],[["result",4],["objectref",3],["error",4]]]],[8,"IsObject","","An unsafe trait which should be implemented for an object…",null,null],[18,"TYPE_KEY","","",128,null],[11,"typed_delete","","",128,[[]]],[3,"Object","","A TVM intrusive smart pointer header, in TVM all FFI…",null,null],[3,"ObjectPtr","","A smart pointer for types which implement IsObject. This…",null,null],[12,"ptr","","",129,null],[3,"ObjectRef","","",null,null],[0,"string","tvm::runtime","",null,null],[3,"StringObj","tvm::runtime::string","",null,null],[3,"String","","",null,null],[5,"get_last_error","tvm::runtime","Gets the last error message.",null,[[]]],[0,"array","","",null,null],[3,"Array","tvm::runtime::array","",null,null],[5,"array_get_item","","",null,[[["objectref",3]],[["result",4],["objectref",3],["error",4]]]],[5,"array_size","","",null,[[["objectref",3]],[["error",4],["result",4]]]],[0,"context","tvm::runtime","",null,null],[5,"get_device_attr","tvm::runtime::context","",null,[[],[["result",4],["error",4]]]],[3,"Context","","",null,null],[12,"device_type","","",4,null],[12,"device_id","","",4,null],[4,"DeviceType","","Device type represents the set of devices supported by TVM.",null,null],[13,"CPU","","",5,null],[13,"GPU","","",5,null],[13,"CPUPinned","","",5,null],[13,"OpenCL","","",5,null],[13,"Vulkan","","",5,null],[13,"Metal","","",5,null],[13,"VPI","","",5,null],[13,"ROCM","","",5,null],[13,"ExtDev","","",5,null],[3,"UnsupportedDeviceError","","",null,null],[0,"errors","tvm::runtime","",null,null],[3,"FunctionNotFoundError","tvm::runtime::errors","",null,null],[3,"TypeMismatchError","","",null,null],[12,"expected","","",0,null],[12,"actual","","",0,null],[4,"NDArrayError","","",null,null],[13,"EmptyArray","","",1,null],[13,"InvalidDatatype","","",1,null],[13,"ShapeError","","",1,null],[13,"DataTypeMismatch","","",1,null],[12,"expected","tvm::runtime::errors::NDArrayError","",2,null],[12,"actual","","",2,null],[4,"Error","tvm::runtime::errors","",null,null],[13,"Downcast","","",3,null],[13,"Null","","",3,null],[13,"ModuleLoadPath","","",3,null],[13,"ToCString","","",3,null],[13,"FromCString","","",3,null],[13,"NullHandle","","",3,null],[13,"NDArray","","",3,null],[13,"CallFailed","","",3,null],[13,"Infallible","","",3,null],[13,"Panic","","",3,null],[0,"function","tvm::runtime","This module provides an idiomatic Rust API for creating…",null,null],[6,"Result","tvm::runtime::function","",null,null],[3,"Function","","Wrapper around TVM function handle which includes…",null,null],[5,"register","","Registers a Rust function with an arbitrary type signature…",null,[[],[["result",4],["error",4]]]],[5,"register_override","","Register a function with explicit control over whether to…",null,[[],[["result",4],["error",4]]]],[5,"register_untyped","","",null,[[],[["result",4],["error",4]]]],[8,"ToFunction","","",null,null],[16,"Handle","","",6,null],[10,"into_raw","","",6,[[]]],[10,"call","","",6,[[["argvalue",4],["vec",3]],[["result",4],["error",4],["retvalue",4]]]],[10,"drop","","",6,[[]]],[11,"to_function","","",6,[[],["function",3]]],[11,"tvm_callback","","The callback function which is wrapped converted by TVM…",6,[[]]],[11,"tvm_finalizer","","The finalizer which is invoked when the packed function\'s…",6,[[]]],[8,"Typed","","A trait representing whether the function arguments and…",null,null],[10,"args","","",7,[[["argvalue",4],["vec",3]],[["error",4],["result",4]]]],[10,"ret","","",7,[[],[["result",4],["error",4],["retvalue",4]]]],[0,"ffi","","The low-level C runtime FFI API for TVM.",null,null],[17,"TVM_VERSION","tvm::runtime::function::ffi","",null,null],[17,"DLPACK_VERSION","","",null,null],[17,"_STDINT_H","","",null,null],[17,"_FEATURES_H","","",null,null],[17,"_DEFAULT_SOURCE","","",null,null],[17,"__USE_ISOC11","","",null,null],[17,"__USE_ISOC99","","",null,null],[17,"__USE_ISOC95","","",null,null],[17,"__USE_POSIX_IMPLICITLY","","",null,null],[17,"_POSIX_SOURCE","","",null,null],[17,"_POSIX_C_SOURCE","","",null,null],[17,"__USE_POSIX","","",null,null],[17,"__USE_POSIX2","","",null,null],[17,"__USE_POSIX199309","","",null,null],[17,"__USE_POSIX199506","","",null,null],[17,"__USE_XOPEN2K","","",null,null],[17,"__USE_XOPEN2K8","","",null,null],[17,"_ATFILE_SOURCE","","",null,null],[17,"__USE_MISC","","",null,null],[17,"__USE_ATFILE","","",null,null],[17,"__USE_FORTIFY_LEVEL","","",null,null],[17,"__GLIBC_USE_DEPRECATED_GETS","","",null,null],[17,"_STDC_PREDEF_H","","",null,null],[17,"__STDC_IEC_559__","","",null,null],[17,"__STDC_IEC_559_COMPLEX__","","",null,null],[17,"__STDC_ISO_10646__","","",null,null],[17,"__STDC_NO_THREADS__","","",null,null],[17,"__GNU_LIBRARY__","","",null,null],[17,"__GLIBC__","","",null,null],[17,"__GLIBC_MINOR__","","",null,null],[17,"_SYS_CDEFS_H","","",null,null],[17,"__glibc_c99_flexarr_available","","",null,null],[17,"__WORDSIZE","","",null,null],[17,"__WORDSIZE_TIME64_COMPAT32","","",null,null],[17,"__SYSCALL_WORDSIZE","","",null,null],[17,"__HAVE_GENERIC_SELECTION","","",null,null],[17,"__GLIBC_USE_LIB_EXT2","","",null,null],[17,"__GLIBC_USE_IEC_60559_BFP_EXT","","",null,null],[17,"__GLIBC_USE_IEC_60559_FUNCS_EXT","","",null,null],[17,"__GLIBC_USE_IEC_60559_TYPES_EXT","","",null,null],[17,"_BITS_TYPES_H","","",null,null],[17,"_BITS_TYPESIZES_H","","",null,null],[17,"__OFF_T_MATCHES_OFF64_T","","",null,null],[17,"__INO_T_MATCHES_INO64_T","","",null,null],[17,"__RLIM_T_MATCHES_RLIM64_T","","",null,null],[17,"__FD_SETSIZE","","",null,null],[17,"_BITS_WCHAR_H","","",null,null],[17,"_BITS_STDINT_INTN_H","","",null,null],[17,"_BITS_STDINT_UINTN_H","","",null,null],[17,"INT8_MIN","","",null,null],[17,"INT16_MIN","","",null,null],[17,"INT32_MIN","","",null,null],[17,"INT8_MAX","","",null,null],[17,"INT16_MAX","","",null,null],[17,"INT32_MAX","","",null,null],[17,"UINT8_MAX","","",null,null],[17,"UINT16_MAX","","",null,null],[17,"UINT32_MAX","","",null,null],[17,"INT_LEAST8_MIN","","",null,null],[17,"INT_LEAST16_MIN","","",null,null],[17,"INT_LEAST32_MIN","","",null,null],[17,"INT_LEAST8_MAX","","",null,null],[17,"INT_LEAST16_MAX","","",null,null],[17,"INT_LEAST32_MAX","","",null,null],[17,"UINT_LEAST8_MAX","","",null,null],[17,"UINT_LEAST16_MAX","","",null,null],[17,"UINT_LEAST32_MAX","","",null,null],[17,"INT_FAST8_MIN","","",null,null],[17,"INT_FAST16_MIN","","",null,null],[17,"INT_FAST32_MIN","","",null,null],[17,"INT_FAST8_MAX","","",null,null],[17,"INT_FAST16_MAX","","",null,null],[17,"INT_FAST32_MAX","","",null,null],[17,"UINT_FAST8_MAX","","",null,null],[17,"UINT_FAST16_MAX","","",null,null],[17,"UINT_FAST32_MAX","","",null,null],[17,"INTPTR_MIN","","",null,null],[17,"INTPTR_MAX","","",null,null],[17,"UINTPTR_MAX","","",null,null],[17,"PTRDIFF_MIN","","",null,null],[17,"PTRDIFF_MAX","","",null,null],[17,"SIG_ATOMIC_MIN","","",null,null],[17,"SIG_ATOMIC_MAX","","",null,null],[17,"SIZE_MAX","","",null,null],[17,"WINT_MIN","","",null,null],[17,"WINT_MAX","","",null,null],[6,"__u_char","","",null,null],[6,"__u_short","","",null,null],[6,"__u_int","","",null,null],[6,"__u_long","","",null,null],[6,"__int8_t","","",null,null],[6,"__uint8_t","","",null,null],[6,"__int16_t","","",null,null],[6,"__uint16_t","","",null,null],[6,"__int32_t","","",null,null],[6,"__uint32_t","","",null,null],[6,"__int64_t","","",null,null],[6,"__uint64_t","","",null,null],[6,"__quad_t","","",null,null],[6,"__u_quad_t","","",null,null],[6,"__intmax_t","","",null,null],[6,"__uintmax_t","","",null,null],[6,"__dev_t","","",null,null],[6,"__uid_t","","",null,null],[6,"__gid_t","","",null,null],[6,"__ino_t","","",null,null],[6,"__ino64_t","","",null,null],[6,"__mode_t","","",null,null],[6,"__nlink_t","","",null,null],[6,"__off_t","","",null,null],[6,"__off64_t","","",null,null],[6,"__pid_t","","",null,null],[3,"__fsid_t","","",null,null],[12,"__val","","",8,null],[6,"__clock_t","","",null,null],[6,"__rlim_t","","",null,null],[6,"__rlim64_t","","",null,null],[6,"__id_t","","",null,null],[6,"__time_t","","",null,null],[6,"__useconds_t","","",null,null],[6,"__suseconds_t","","",null,null],[6,"__daddr_t","","",null,null],[6,"__key_t","","",null,null],[6,"__clockid_t","","",null,null],[6,"__timer_t","","",null,null],[6,"__blksize_t","","",null,null],[6,"__blkcnt_t","","",null,null],[6,"__blkcnt64_t","","",null,null],[6,"__fsblkcnt_t","","",null,null],[6,"__fsblkcnt64_t","","",null,null],[6,"__fsfilcnt_t","","",null,null],[6,"__fsfilcnt64_t","","",null,null],[6,"__fsword_t","","",null,null],[6,"__ssize_t","","",null,null],[6,"__syscall_slong_t","","",null,null],[6,"__syscall_ulong_t","","",null,null],[6,"__loff_t","","",null,null],[6,"__caddr_t","","",null,null],[6,"__intptr_t","","",null,null],[6,"__socklen_t","","",null,null],[6,"__sig_atomic_t","","",null,null],[6,"int_least8_t","","",null,null],[6,"int_least16_t","","",null,null],[6,"int_least32_t","","",null,null],[6,"int_least64_t","","",null,null],[6,"uint_least8_t","","",null,null],[6,"uint_least16_t","","",null,null],[6,"uint_least32_t","","",null,null],[6,"uint_least64_t","","",null,null],[6,"int_fast8_t","","",null,null],[6,"int_fast16_t","","",null,null],[6,"int_fast32_t","","",null,null],[6,"int_fast64_t","","",null,null],[6,"uint_fast8_t","","",null,null],[6,"uint_fast16_t","","",null,null],[6,"uint_fast32_t","","",null,null],[6,"uint_fast64_t","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"wchar_t","","",null,null],[17,"DLDeviceType_kDLCPU","","\\\\brief CPU device",null,null],[17,"DLDeviceType_kDLGPU","","\\\\brief CUDA GPU device",null,null],[17,"DLDeviceType_kDLCPUPinned","","\\\\brief Pinned CUDA GPU device by cudaMallocHost \\\\note…",null,null],[17,"DLDeviceType_kDLOpenCL","","\\\\brief OpenCL devices.",null,null],[17,"DLDeviceType_kDLVulkan","","\\\\brief Vulkan buffer for next generation graphics.",null,null],[17,"DLDeviceType_kDLMetal","","\\\\brief Metal for Apple GPU.",null,null],[17,"DLDeviceType_kDLVPI","","\\\\brief Verilog simulator buffer",null,null],[17,"DLDeviceType_kDLROCM","","\\\\brief ROCm GPUs for AMD GPUs",null,null],[17,"DLDeviceType_kDLExtDev","","\\\\brief Reserved extension device type, used for quickly…",null,null],[6,"DLDeviceType","","\\\\brief The device type in DLContext.",null,null],[3,"DLContext","","\\\\brief A Device context for Tensor and operator.",null,null],[12,"device_type","","\\\\brief The device type used in the device.",9,null],[12,"device_id","","\\\\brief The device index",9,null],[17,"DLDataTypeCode_kDLInt","","",null,null],[17,"DLDataTypeCode_kDLUInt","","",null,null],[17,"DLDataTypeCode_kDLFloat","","",null,null],[17,"DLDataTypeCode_kDLBfloat","","",null,null],[6,"DLDataTypeCode","","\\\\brief The type code options DLDataType.",null,null],[3,"DLDataType","","\\\\brief The data type the tensor can hold.",null,null],[12,"code","","\\\\brief Type code of base types. We keep it uint8_t instead…",10,null],[12,"bits","","\\\\brief Number of bits, common choices are 8, 16, 32.",10,null],[12,"lanes","","\\\\brief Number of lanes in the type, used for vector types.",10,null],[3,"DLTensor","","\\\\brief Plain C Tensor object, does not manage memory.",null,null],[12,"data","","\\\\brief The opaque data pointer points to the allocated…",11,null],[12,"ctx","","\\\\brief The device context of the tensor",11,null],[12,"ndim","","\\\\brief Number of dimensions",11,null],[12,"dtype","","\\\\brief The data type of the pointer",11,null],[12,"shape","","\\\\brief The shape of the tensor",11,null],[12,"strides","","\\\\brief strides of the tensor (in number of elements, not…",11,null],[12,"byte_offset","","\\\\brief The offset in bytes to the beginning pointer to data",11,null],[3,"DLManagedTensor","","\\\\brief C Tensor object, manage memory of DLTensor. This…",null,null],[12,"dl_tensor","","\\\\brief DLTensor which is being memory managed",12,null],[12,"manager_ctx","","\\\\brief the context of the original host framework of…",12,null],[12,"deleter","","\\\\brief Destructor signature void ()(void) - this should be…",12,null],[6,"tvm_index_t","","\\\\brief type of array index.",null,null],[17,"TVMDeviceExtType_kDLAOCL","","",null,null],[17,"TVMDeviceExtType_kDLSDAccel","","",null,null],[17,"TVMDeviceExtType_kOpenGL","","",null,null],[17,"TVMDeviceExtType_kDLMicroDev","","",null,null],[17,"TVMDeviceExtType_kDLHexagon","","",null,null],[17,"TVMDeviceExtType_kDLWebGPU","","",null,null],[6,"TVMDeviceExtType","","\\\\brief Extension device types in TVM",null,null],[17,"TVMArgTypeCode_kTVMArgInt","","",null,null],[17,"TVMArgTypeCode_kTVMArgFloat","","",null,null],[17,"TVMArgTypeCode_kTVMOpaqueHandle","","",null,null],[17,"TVMArgTypeCode_kTVMNullptr","","",null,null],[17,"TVMArgTypeCode_kTVMDataType","","",null,null],[17,"TVMArgTypeCode_kTVMContext","","",null,null],[17,"TVMArgTypeCode_kTVMDLTensorHandle","","",null,null],[17,"TVMArgTypeCode_kTVMObjectHandle","","",null,null],[17,"TVMArgTypeCode_kTVMModuleHandle","","",null,null],[17,"TVMArgTypeCode_kTVMPackedFuncHandle","","",null,null],[17,"TVMArgTypeCode_kTVMStr","","",null,null],[17,"TVMArgTypeCode_kTVMBytes","","",null,null],[17,"TVMArgTypeCode_kTVMNDArrayHandle","","",null,null],[17,"TVMArgTypeCode_kTVMObjectRValueRefArg","","",null,null],[17,"TVMArgTypeCode_kTVMExtBegin","","",null,null],[17,"TVMArgTypeCode_kTVMNNVMFirst","","",null,null],[17,"TVMArgTypeCode_kTVMNNVMLast","","",null,null],[17,"TVMArgTypeCode_kTVMExtReserveEnd","","",null,null],[17,"TVMArgTypeCode_kTVMExtEnd","","",null,null],[6,"TVMArgTypeCode","","\\\\brief The type code in used and only used in TVM FFI for…",null,null],[6,"TVMContext","","\\\\brief The Device information, abstract away common device…",null,null],[6,"TVMArrayHandle","","\\\\brief the array handle",null,null],[19,"TVMValue","","\\\\brief Union type of values being passed through API and…",null,null],[12,"v_int64","","",13,null],[12,"v_float64","","",13,null],[12,"v_handle","","",13,null],[12,"v_str","","",13,null],[12,"v_type","","",13,null],[12,"v_ctx","","",13,null],[3,"TVMByteArray","","\\\\brief Byte array type used to pass in byte array When…",null,null],[12,"data","","",14,null],[12,"size","","",14,null],[6,"TVMModuleHandle","","\\\\brief Handle to TVM runtime modules.",null,null],[6,"TVMFunctionHandle","","\\\\brief Handle to packed function handle.",null,null],[6,"TVMRetValueHandle","","\\\\brief Handle to hold return value.",null,null],[6,"TVMStreamHandle","","\\\\brief The stream that is specific to device can be NULL,…",null,null],[6,"TVMObjectHandle","","\\\\brief Handle to Object.",null,null],[5,"TVMAPISetLastError","","\\\\brief Used for implementing C API function. Set last…",null,[[]]],[5,"TVMGetLastError","","\\\\brief return str message of the last error all function…",null,[[]]],[5,"TVMModLoadFromFile","","\\\\brief Load module from file. \\\\param file_name The file…",null,[[]]],[5,"TVMModImport","","\\\\brief Add dep to mod\'s dependency. This allows functions…",null,[[]]],[5,"TVMModGetFunction","","\\\\brief Get function from the module. \\\\param mod The module…",null,[[]]],[5,"TVMModFree","","\\\\brief Free the Module \\\\param mod The module to be freed.",null,[[]]],[5,"TVMFuncFree","","\\\\brief Free the function when it is no longer needed.…",null,[[]]],[5,"TVMFuncCall","","\\\\brief Call a Packed TVM Function.",null,[[]]],[5,"TVMCFuncSetReturn","","\\\\brief Set the return value of TVMPackedCFunc.",null,[[]]],[5,"TVMCbArgToReturn","","\\\\brief Inplace translate callback argument value to return…",null,[[]]],[6,"TVMPackedCFunc","","\\\\brief C type of packed function.",null,null],[6,"TVMPackedCFuncFinalizer","","\\\\brief C callback to free the resource handle in C packed…",null,null],[6,"TVMExtensionFuncDeclarer","","\\\\brief Signature for extension function declarer.",null,null],[5,"TVMFuncCreateFromCFunc","","\\\\brief Wrap a TVMPackedCFunc to become a FunctionHandle.",null,[[["option",4],["option",4]]]],[5,"TVMFuncRegisterGlobal","","\\\\brief Register the function to runtime\'s global table.",null,[[]]],[5,"TVMFuncGetGlobal","","\\\\brief Get a global function.",null,[[]]],[5,"TVMFuncListGlobalNames","","\\\\brief List all the globally registered function name…",null,[[]]],[5,"TVMArrayAlloc","","\\\\brief Allocate a nd-array\'s memory, including space of…",null,[[]]],[5,"TVMArrayFree","","\\\\brief Free the TVM Array. \\\\param handle The array handle…",null,[[]]],[5,"TVMArrayCopyFromBytes","","\\\\brief Copy array data from CPU byte array. \\\\param handle…",null,[[]]],[5,"TVMArrayCopyToBytes","","\\\\brief Copy array data to CPU byte array. \\\\param handle…",null,[[]]],[5,"TVMArrayCopyFromTo","","\\\\brief Copy the array, both from and to must be valid…",null,[[]]],[5,"TVMArrayFromDLPack","","\\\\brief Produce an array from the DLManagedTensor that…",null,[[]]],[5,"TVMArrayToDLPack","","\\\\brief Produce a DLMangedTensor from the array that shares…",null,[[]]],[5,"TVMDLManagedTensorCallDeleter","","\\\\brief Delete (free) a DLManagedTensor\'s data. \\\\param…",null,[[]]],[5,"TVMStreamCreate","","\\\\brief Create a new runtime stream.",null,[[]]],[5,"TVMStreamFree","","\\\\brief Free a created stream handle.",null,[[]]],[5,"TVMSetStream","","\\\\brief Set the runtime stream of current thread to be…",null,[[]]],[5,"TVMSynchronize","","\\\\brief Wait until all computations on stream completes.",null,[[]]],[5,"TVMStreamStreamSynchronize","","\\\\brief Synchronize two streams of execution.",null,[[]]],[5,"TVMObjectGetTypeIndex","","\\\\brief Get the type_index from an object.",null,[[]]],[5,"TVMObjectTypeKey2Index","","\\\\brief Convert type key to type index. \\\\param type_key The…",null,[[]]],[5,"TVMObjectRetain","","\\\\brief Increase the reference count of an object.",null,[[]]],[5,"TVMObjectFree","","\\\\brief Free the object.",null,[[]]],[5,"TVMDeviceAllocDataSpace","","\\\\brief Allocate a data space on device. \\\\param ctx The…",null,[[["dlcontext",3],["dldatatype",3]]]],[5,"TVMDeviceFreeDataSpace","","\\\\brief Free a data space on device. \\\\param ctx The device…",null,[[["dlcontext",3]]]],[5,"TVMDeviceCopyDataFromTo","","\\\\brief Copy data from one place to another. \\\\param from…",null,[[["dlcontext",3],["dldatatype",3]]]],[5,"TVMObjectDerivedFrom","","\\\\brief Check that an object is derived from another.…",null,[[]]],[6,"TVMBackendPackedCFunc","","\\\\brief Signature for backend functions exported as DLL.",null,null],[5,"TVMBackendGetFuncFromEnv","","\\\\brief Backend function for modules to get function from…",null,[[]]],[5,"TVMBackendRegisterSystemLibSymbol","","\\\\brief Backend function to register system-wide library…",null,[[]]],[5,"TVMBackendAllocWorkspace","","\\\\brief Backend function to allocate temporal workspace.",null,[[]]],[5,"TVMBackendFreeWorkspace","","\\\\brief Backend function to free temporal workspace.",null,[[]]],[3,"TVMParallelGroupEnv","","\\\\brief Environment for TVM parallel task.",null,null],[12,"sync_handle","","\\\\brief Auxiliary used for synchronization",15,null],[12,"num_task","","\\\\brief total amount of task",15,null],[6,"FTVMParallelLambda","","\\\\brief The callback function to execute a parallel lambda…",null,null],[5,"TVMBackendParallelLaunch","","\\\\brief Backend function for running parallel jobs.",null,[[["option",4]]]],[5,"TVMBackendParallelBarrier","","\\\\brief BSP barrrier between parallel threads \\\\param…",null,[[]]],[5,"TVMBackendRunOnce","","\\\\brief Simple static initialization function. Run f once…",null,[[["option",4]]]],[6,"BackendPackedCFunc","","",null,null],[4,"ArgValue","tvm::runtime::function","A borrowed TVMPODValue. Can be constructed using `into()`…",null,null],[13,"Int","","",16,null],[13,"UInt","","",16,null],[13,"Float","","",16,null],[13,"Null","","",16,null],[13,"DataType","","",16,null],[13,"String","","",16,null],[13,"Context","","",16,null],[13,"Handle","","",16,null],[13,"ArrayHandle","","",16,null],[13,"ObjectHandle","","",16,null],[13,"ModuleHandle","","",16,null],[13,"FuncHandle","","",16,null],[13,"NDArrayHandle","","",16,null],[13,"Bytes","","",16,null],[13,"Str","","",16,null],[4,"RetValue","","An owned TVMPODValue. Can be converted from a variety of…",null,null],[13,"Int","","",17,null],[13,"UInt","","",17,null],[13,"Float","","",17,null],[13,"Null","","",17,null],[13,"DataType","","",17,null],[13,"String","","",17,null],[13,"Context","","",17,null],[13,"Handle","","",17,null],[13,"ArrayHandle","","",17,null],[13,"ObjectHandle","","",17,null],[13,"ModuleHandle","","",17,null],[13,"FuncHandle","","",17,null],[13,"NDArrayHandle","","",17,null],[13,"Bytes","","",17,null],[13,"Str","","",17,null],[0,"map","tvm::runtime","",null,null],[3,"Map","tvm::runtime::map","",null,null],[5,"array_get_item","","",null,[[["objectref",3]],[["result",4],["objectref",3],["error",4]]]],[5,"map_size","","",null,[[["objectref",3]],[["error",4],["result",4]]]],[5,"map_get_item","","",null,[[["objectref",3]],[["result",4],["objectref",3],["error",4]]]],[5,"map_count","","",null,[[["objectref",3]],[["result",4],["objectref",3],["error",4]]]],[5,"map_items","","",null,[[["objectref",3]],[["result",4],["array",3],["error",4]]]],[3,"IntoIter","","",null,null],[0,"module","tvm::runtime","Provides the [`Module`] type and methods for working with…",null,null],[3,"Module","tvm::runtime::module","Wrapper around TVM module handle which contains an entry…",null,null],[5,"runtime_enabled","","",null,[[["cstring",3]],[["result",4],["error",4]]]],[5,"load_from_file","","",null,[[["cstring",3]],[["result",4],["error",4],["module",3]]]],[0,"ndarray","tvm::runtime","This module implements the [`NDArray`] type for working…",null,null],[3,"NDArrayContainer","tvm::runtime::ndarray","See the `module-level documentation` for more details.",null,null],[3,"NDArray","","",null,null],[8,"Num32","","A trait for the supported 32-bits numerical types in…",null,null],[18,"BITS","","",18,null],[0,"value","tvm::runtime","This module implements [`ArgValue`] and [`RetValue`] types…",null,null],[5,"version","","Outputs the current TVM version.",null,[[]]],[3,"Context","","",null,null],[12,"device_type","","",4,null],[12,"device_id","","",4,null],[4,"DeviceType","","Device type represents the set of devices supported by TVM.",null,null],[13,"CPU","","",5,null],[13,"GPU","","",5,null],[13,"CPUPinned","","",5,null],[13,"OpenCL","","",5,null],[13,"Vulkan","","",5,null],[13,"Metal","","",5,null],[13,"VPI","","",5,null],[13,"ROCM","","",5,null],[13,"ExtDev","","",5,null],[3,"Function","","Wrapper around TVM function handle which includes…",null,null],[3,"Module","","Wrapper around TVM module handle which contains an entry…",null,null],[3,"NDArray","","",null,null],[4,"ArgValue","","A borrowed TVMPODValue. Can be constructed using `into()`…",null,null],[13,"Int","","",16,null],[13,"UInt","","",16,null],[13,"Float","","",16,null],[13,"Null","","",16,null],[13,"DataType","","",16,null],[13,"String","","",16,null],[13,"Context","","",16,null],[13,"Handle","","",16,null],[13,"ArrayHandle","","",16,null],[13,"ObjectHandle","","",16,null],[13,"ModuleHandle","","",16,null],[13,"FuncHandle","","",16,null],[13,"NDArrayHandle","","",16,null],[13,"Bytes","","",16,null],[13,"Str","","",16,null],[4,"RetValue","","An owned TVMPODValue. Can be converted from a variety of…",null,null],[13,"Int","","",17,null],[13,"UInt","","",17,null],[13,"Float","","",17,null],[13,"Null","","",17,null],[13,"DataType","","",17,null],[13,"String","","",17,null],[13,"Context","","",17,null],[13,"Handle","","",17,null],[13,"ArrayHandle","","",17,null],[13,"ObjectHandle","","",17,null],[13,"ModuleHandle","","",17,null],[13,"FuncHandle","","",17,null],[13,"NDArrayHandle","","",17,null],[13,"Bytes","","",17,null],[13,"Str","","",17,null],[3,"ByteArray","","A newtype wrapping a raw TVM byte-array.",null,null],[3,"DataType","","",null,null],[14,"external","","",null,null],[14,"tvm_call","","",null,null],[14,"check_call","","",null,null],[3,"Object","","A TVM intrusive smart pointer header, in TVM all FFI…",null,null],[8,"IsObject","","An unsafe trait which should be implemented for an object…",null,null],[18,"TYPE_KEY","","",128,null],[11,"typed_delete","","",128,[[]]],[3,"ObjectPtr","","A smart pointer for types which implement IsObject. This…",null,null],[12,"ptr","","",129,null],[8,"IsObjectRef","","",null,null],[16,"Object","","",127,null],[10,"as_ptr","","",127,[[],[["option",4],["objectptr",3]]]],[10,"into_ptr","","",127,[[],[["option",4],["objectptr",3]]]],[10,"from_ptr","","",127,[[["option",4],["objectptr",3]]]],[11,"null","","",127,[[]]],[11,"into_arg_value","","",127,[[],["argvalue",4]]],[11,"from_arg_value","","",127,[[["argvalue",4]],[["result",4],["error",4]]]],[11,"into_ret_value","","",127,[[],["retvalue",4]]],[11,"from_ret_value","","",127,[[["retvalue",4]],[["result",4],["error",4]]]],[11,"upcast","","",127,[[]]],[11,"downcast","","",127,[[],[["result",4],["error",4]]]],[5,"debug_print","","",null,[[["objectref",3]],[["cstring",3],["error",4],["result",4]]]],[5,"structural_hash","","",null,[[["objectref",3]],[["result",4],["objectref",3],["error",4]]]],[5,"structural_equal","","",null,[[["objectref",3]],[["result",4],["objectref",3],["error",4]]]],[3,"StringObj","","",null,null],[3,"String","","",null,null],[3,"FunctionNotFoundError","","",null,null],[3,"TypeMismatchError","","",null,null],[12,"expected","","",0,null],[12,"actual","","",0,null],[4,"NDArrayError","","",null,null],[13,"EmptyArray","","",1,null],[13,"InvalidDatatype","","",1,null],[13,"ShapeError","","",1,null],[13,"DataTypeMismatch","","",1,null],[12,"expected","tvm::runtime::NDArrayError","",2,null],[12,"actual","","",2,null],[4,"Error","tvm::runtime","",null,null],[13,"Downcast","","",3,null],[13,"Null","","",3,null],[13,"ModuleLoadPath","","",3,null],[13,"ToCString","","",3,null],[13,"FromCString","","",3,null],[13,"NullHandle","","",3,null],[13,"NDArray","","",3,null],[13,"CallFailed","","",3,null],[13,"Infallible","","",3,null],[13,"Panic","","",3,null],[3,"ObjectRef","","",null,null],[0,"graph_rt","","",null,null],[3,"GraphRt","tvm::runtime::graph_rt","An instance of the C++ graph runtime.",null,null],[11,"create_from_parts","","Create a graph runtime from the deprecated graph, lib, ctx…",130,[[["context",3],["module",3]],["result",6]]],[11,"load_params","","Load the parameters of the model into the runtime.",130,[[],["result",6]]],[11,"set_input","","Set the input with name `name` with the value of `input`.",130,[[["ndarray",3]],["result",6]]],[11,"run","","Run the graph module, once setting parameters and inputs.",130,[[],["result",6]]],[11,"get_output","","Extract the ith output from the graph runtime and returns…",130,[[],[["ndarray",3],["result",6]]]],[11,"get_output_into","","Extract the ith output from the graph runtime and write…",130,[[["ndarray",3]],["result",6]]],[0,"transform","tvm","",null,null],[3,"PassInfoNode","tvm::transform","",null,null],[12,"base","","",131,null],[12,"opt_level","","",131,null],[12,"name","","",131,null],[12,"required","","",131,null],[3,"PassInfo","","",null,null],[5,"create_func_pass","","",null,[[["function",3],["passinfo",3]],[["result",6],["pass",6]]]],[5,"function_pass","","",null,[[["fn",8],["passinfo",3]],[["pass",6],["result",6]]]],[6,"Pass","","",null,null],[6,"IRModule","","",null,null],[6,"PassContext","","",null,null],[11,"new","","",132,[[["vec",3],["string",3]],[["result",6],["passinfo",3]]]],[14,"initialize","tvm","A macro for generating the correct TVM symbols for plugin…",null,null],[14,"export_pass","","",null,null],[11,"from","tvm::runtime","",133,[[]]],[11,"into","","",133,[[]]],[11,"to_string","","",133,[[],["string",3]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"try_into","","",133,[[],["result",4]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"from_py","","",133,[[["python",3]]]],[11,"into_py","","",133,[[["python",3]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from_py","","",0,[[["python",3]]]],[11,"into_py","","",0,[[["python",3]]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from_py","","",1,[[["python",3]]]],[11,"into_py","","",1,[[["python",3]]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from_py","","",3,[[["python",3]]]],[11,"into_py","","",3,[[["python",3]]]],[11,"from","","",134,[[]]],[11,"into","","",134,[[]]],[11,"to_owned","","",134,[[]]],[11,"clone_into","","",134,[[]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"try_into","","",134,[[],["result",4]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"from_py","","",134,[[["python",3]]]],[11,"into_py","","",134,[[["python",3]]]],[11,"from","","",135,[[]]],[11,"into","","",135,[[]]],[11,"to_owned","","",135,[[]]],[11,"clone_into","","",135,[[]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"try_into","","",135,[[],["result",4]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"from_py","","",135,[[["python",3]]]],[11,"into_py","","",135,[[["python",3]]]],[11,"from","","",136,[[]]],[11,"into","","",136,[[]]],[11,"to_owned","","",136,[[]]],[11,"clone_into","","",136,[[]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"try_into","","",136,[[],["result",4]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"from_py","","",136,[[["python",3]]]],[11,"into_py","","",136,[[["python",3]]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from_py","","",4,[[["python",3]]]],[11,"into_py","","",4,[[["python",3]]]],[11,"from","","",137,[[]]],[11,"into","","",137,[[]]],[11,"to_owned","","",137,[[]]],[11,"clone_into","","",137,[[]]],[11,"to_string","","",137,[[],["string",3]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"try_into","","",137,[[],["result",4]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"from_py","","",137,[[["python",3]]]],[11,"into_py","","",137,[[["python",3]]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from_py","","",5,[[["python",3]]]],[11,"into_py","","",5,[[["python",3]]]],[11,"from","tvm::runtime::context","",138,[[]]],[11,"into","","",138,[[]]],[11,"to_string","","",138,[[],["string",3]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"try_into","","",138,[[],["result",4]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"from_py","","",138,[[["python",3]]]],[11,"into_py","","",138,[[["python",3]]]],[11,"from","tvm::runtime::function::ffi","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from_py","","",8,[[["python",3]]]],[11,"into_py","","",8,[[["python",3]]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from_py","","",9,[[["python",3]]]],[11,"into_py","","",9,[[["python",3]]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from_py","","",10,[[["python",3]]]],[11,"into_py","","",10,[[["python",3]]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from_py","","",11,[[["python",3]]]],[11,"into_py","","",11,[[["python",3]]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from_py","","",12,[[["python",3]]]],[11,"into_py","","",12,[[["python",3]]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from_py","","",13,[[["python",3]]]],[11,"into_py","","",13,[[["python",3]]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from_py","","",14,[[["python",3]]]],[11,"into_py","","",14,[[["python",3]]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from_py","","",15,[[["python",3]]]],[11,"into_py","","",15,[[["python",3]]]],[11,"from","tvm::runtime","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from_py","","",16,[[["python",3]]]],[11,"into_py","","",16,[[["python",3]]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from_py","","",17,[[["python",3]]]],[11,"into_py","","",17,[[["python",3]]]],[11,"from","tvm::runtime::ndarray","",139,[[]]],[11,"into","","",139,[[]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"try_into","","",139,[[],["result",4]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"from_py","","",139,[[["python",3]]]],[11,"into_py","","",139,[[["python",3]]]],[11,"from","tvm::ir::arith","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from_py","","",19,[[["python",3]]]],[11,"into_py","","",19,[[["python",3]]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from_py","","",20,[[["python",3]]]],[11,"into_py","","",20,[[["python",3]]]],[11,"from","tvm::ir::attrs","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from_py","","",21,[[["python",3]]]],[11,"into_py","","",21,[[["python",3]]]],[11,"from","","",140,[[]]],[11,"into","","",140,[[]]],[11,"to_owned","","",140,[[]]],[11,"clone_into","","",140,[[]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"try_into","","",140,[[],["result",4]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"from_py","","",140,[[["python",3]]]],[11,"into_py","","",140,[[["python",3]]]],[11,"from","tvm::ir::expr","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from_py","","",22,[[["python",3]]]],[11,"into_py","","",22,[[["python",3]]]],[11,"from","","",141,[[]]],[11,"into","","",141,[[]]],[11,"to_owned","","",141,[[]]],[11,"clone_into","","",141,[[]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"try_into","","",141,[[],["result",4]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"from_py","","",141,[[["python",3]]]],[11,"into_py","","",141,[[["python",3]]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from_py","","",23,[[["python",3]]]],[11,"into_py","","",23,[[["python",3]]]],[11,"from","","",142,[[]]],[11,"into","","",142,[[]]],[11,"to_owned","","",142,[[]]],[11,"clone_into","","",142,[[]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"try_into","","",142,[[],["result",4]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"from_py","","",142,[[["python",3]]]],[11,"into_py","","",142,[[["python",3]]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from_py","","",24,[[["python",3]]]],[11,"into_py","","",24,[[["python",3]]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from_py","","",25,[[["python",3]]]],[11,"into_py","","",25,[[["python",3]]]],[11,"from","tvm::ir::function","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from_py","","",26,[[["python",3]]]],[11,"into_py","","",26,[[["python",3]]]],[11,"from","","",143,[[]]],[11,"into","","",143,[[]]],[11,"to_owned","","",143,[[]]],[11,"clone_into","","",143,[[]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"try_into","","",143,[[],["result",4]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"from_py","","",143,[[["python",3]]]],[11,"into_py","","",143,[[["python",3]]]],[11,"from","tvm::ir::module","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from_py","","",27,[[["python",3]]]],[11,"into_py","","",27,[[["python",3]]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from_py","","",28,[[["python",3]]]],[11,"into_py","","",28,[[["python",3]]]],[11,"from","tvm::ir::op","",29,[[]]],[11,"into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from_py","","",29,[[["python",3]]]],[11,"into_py","","",29,[[["python",3]]]],[11,"from","","",144,[[]]],[11,"into","","",144,[[]]],[11,"to_owned","","",144,[[]]],[11,"clone_into","","",144,[[]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"try_into","","",144,[[],["result",4]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"from_py","","",144,[[["python",3]]]],[11,"into_py","","",144,[[["python",3]]]],[11,"from","tvm::ir::relay","",30,[[]]],[11,"into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from_py","","",30,[[["python",3]]]],[11,"into_py","","",30,[[["python",3]]]],[11,"from","","",145,[[]]],[11,"into","","",145,[[]]],[11,"to_owned","","",145,[[]]],[11,"clone_into","","",145,[[]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"try_into","","",145,[[],["result",4]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"from_py","","",145,[[["python",3]]]],[11,"into_py","","",145,[[["python",3]]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from_py","","",31,[[["python",3]]]],[11,"into_py","","",31,[[["python",3]]]],[11,"from","","",146,[[]]],[11,"into","","",146,[[]]],[11,"to_owned","","",146,[[]]],[11,"clone_into","","",146,[[]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"try_into","","",146,[[],["result",4]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"from_py","","",146,[[["python",3]]]],[11,"into_py","","",146,[[["python",3]]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from_py","","",32,[[["python",3]]]],[11,"into_py","","",32,[[["python",3]]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from_py","","",58,[[["python",3]]]],[11,"into_py","","",58,[[["python",3]]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from_py","","",33,[[["python",3]]]],[11,"into_py","","",33,[[["python",3]]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from_py","","",59,[[["python",3]]]],[11,"into_py","","",59,[[["python",3]]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from_py","","",34,[[["python",3]]]],[11,"into_py","","",34,[[["python",3]]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from_py","","",60,[[["python",3]]]],[11,"into_py","","",60,[[["python",3]]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from_py","","",35,[[["python",3]]]],[11,"into_py","","",35,[[["python",3]]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from_py","","",61,[[["python",3]]]],[11,"into_py","","",61,[[["python",3]]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from_py","","",36,[[["python",3]]]],[11,"into_py","","",36,[[["python",3]]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"from_py","","",62,[[["python",3]]]],[11,"into_py","","",62,[[["python",3]]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from_py","","",37,[[["python",3]]]],[11,"into_py","","",37,[[["python",3]]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from_py","","",63,[[["python",3]]]],[11,"into_py","","",63,[[["python",3]]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from_py","","",38,[[["python",3]]]],[11,"into_py","","",38,[[["python",3]]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from_py","","",64,[[["python",3]]]],[11,"into_py","","",64,[[["python",3]]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from_py","","",39,[[["python",3]]]],[11,"into_py","","",39,[[["python",3]]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from_py","","",65,[[["python",3]]]],[11,"into_py","","",65,[[["python",3]]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from_py","","",40,[[["python",3]]]],[11,"into_py","","",40,[[["python",3]]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from_py","","",66,[[["python",3]]]],[11,"into_py","","",66,[[["python",3]]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from_py","","",41,[[["python",3]]]],[11,"into_py","","",41,[[["python",3]]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from_py","","",67,[[["python",3]]]],[11,"into_py","","",67,[[["python",3]]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from_py","","",42,[[["python",3]]]],[11,"into_py","","",42,[[["python",3]]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"from_py","","",68,[[["python",3]]]],[11,"into_py","","",68,[[["python",3]]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from_py","","",43,[[["python",3]]]],[11,"into_py","","",43,[[["python",3]]]],[11,"from","","",147,[[]]],[11,"into","","",147,[[]]],[11,"to_owned","","",147,[[]]],[11,"clone_into","","",147,[[]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"try_into","","",147,[[],["result",4]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"from_py","","",147,[[["python",3]]]],[11,"into_py","","",147,[[["python",3]]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from_py","","",44,[[["python",3]]]],[11,"into_py","","",44,[[["python",3]]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from_py","","",69,[[["python",3]]]],[11,"into_py","","",69,[[["python",3]]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from_py","","",45,[[["python",3]]]],[11,"into_py","","",45,[[["python",3]]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"from_py","","",70,[[["python",3]]]],[11,"into_py","","",70,[[["python",3]]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from_py","","",46,[[["python",3]]]],[11,"into_py","","",46,[[["python",3]]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from_py","","",71,[[["python",3]]]],[11,"into_py","","",71,[[["python",3]]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from_py","","",47,[[["python",3]]]],[11,"into_py","","",47,[[["python",3]]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from_py","","",72,[[["python",3]]]],[11,"into_py","","",72,[[["python",3]]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from_py","","",48,[[["python",3]]]],[11,"into_py","","",48,[[["python",3]]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from_py","","",73,[[["python",3]]]],[11,"into_py","","",73,[[["python",3]]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from_py","","",49,[[["python",3]]]],[11,"into_py","","",49,[[["python",3]]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from_py","","",74,[[["python",3]]]],[11,"into_py","","",74,[[["python",3]]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from_py","","",50,[[["python",3]]]],[11,"into_py","","",50,[[["python",3]]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from_py","","",75,[[["python",3]]]],[11,"into_py","","",75,[[["python",3]]]],[11,"from","tvm::ir::relay::attrs::nn","",51,[[]]],[11,"into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from_py","","",51,[[["python",3]]]],[11,"into_py","","",51,[[["python",3]]]],[11,"from","","",148,[[]]],[11,"into","","",148,[[]]],[11,"to_owned","","",148,[[]]],[11,"clone_into","","",148,[[]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"try_into","","",148,[[],["result",4]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"from_py","","",148,[[["python",3]]]],[11,"into_py","","",148,[[["python",3]]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from_py","","",52,[[["python",3]]]],[11,"into_py","","",52,[[["python",3]]]],[11,"from","","",149,[[]]],[11,"into","","",149,[[]]],[11,"to_owned","","",149,[[]]],[11,"clone_into","","",149,[[]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"try_into","","",149,[[],["result",4]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"from_py","","",149,[[["python",3]]]],[11,"into_py","","",149,[[["python",3]]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from_py","","",53,[[["python",3]]]],[11,"into_py","","",53,[[["python",3]]]],[11,"from","","",150,[[]]],[11,"into","","",150,[[]]],[11,"to_owned","","",150,[[]]],[11,"clone_into","","",150,[[]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"try_into","","",150,[[],["result",4]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"from_py","","",150,[[["python",3]]]],[11,"into_py","","",150,[[["python",3]]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from_py","","",54,[[["python",3]]]],[11,"into_py","","",54,[[["python",3]]]],[11,"from","","",151,[[]]],[11,"into","","",151,[[]]],[11,"to_owned","","",151,[[]]],[11,"clone_into","","",151,[[]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"try_into","","",151,[[],["result",4]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"from_py","","",151,[[["python",3]]]],[11,"into_py","","",151,[[["python",3]]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from_py","","",55,[[["python",3]]]],[11,"into_py","","",55,[[["python",3]]]],[11,"from","","",152,[[]]],[11,"into","","",152,[[]]],[11,"to_owned","","",152,[[]]],[11,"clone_into","","",152,[[]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"try_into","","",152,[[],["result",4]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"from_py","","",152,[[["python",3]]]],[11,"into_py","","",152,[[["python",3]]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from_py","","",56,[[["python",3]]]],[11,"into_py","","",56,[[["python",3]]]],[11,"from","","",153,[[]]],[11,"into","","",153,[[]]],[11,"to_owned","","",153,[[]]],[11,"clone_into","","",153,[[]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"try_into","","",153,[[],["result",4]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"from_py","","",153,[[["python",3]]]],[11,"into_py","","",153,[[["python",3]]]],[11,"from","tvm::ir::relay::attrs::transform","",57,[[]]],[11,"into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from_py","","",57,[[["python",3]]]],[11,"into_py","","",57,[[["python",3]]]],[11,"from","","",154,[[]]],[11,"into","","",154,[[]]],[11,"to_owned","","",154,[[]]],[11,"clone_into","","",154,[[]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"try_into","","",154,[[],["result",4]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"from_py","","",154,[[["python",3]]]],[11,"into_py","","",154,[[["python",3]]]],[11,"from","tvm::ir::tir","",76,[[]]],[11,"into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"from_py","","",76,[[["python",3]]]],[11,"into_py","","",76,[[["python",3]]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"to_owned","","",100,[[]]],[11,"clone_into","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"from_py","","",100,[[["python",3]]]],[11,"into_py","","",100,[[["python",3]]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from_py","","",77,[[["python",3]]]],[11,"into_py","","",77,[[["python",3]]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"to_owned","","",101,[[]]],[11,"clone_into","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"from_py","","",101,[[["python",3]]]],[11,"into_py","","",101,[[["python",3]]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"from_py","","",78,[[["python",3]]]],[11,"into_py","","",78,[[["python",3]]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"to_owned","","",102,[[]]],[11,"clone_into","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"from_py","","",102,[[["python",3]]]],[11,"into_py","","",102,[[["python",3]]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"from_py","","",79,[[["python",3]]]],[11,"into_py","","",79,[[["python",3]]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"to_owned","","",103,[[]]],[11,"clone_into","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"from_py","","",103,[[["python",3]]]],[11,"into_py","","",103,[[["python",3]]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"from_py","","",80,[[["python",3]]]],[11,"into_py","","",80,[[["python",3]]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"to_owned","","",104,[[]]],[11,"clone_into","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"from_py","","",104,[[["python",3]]]],[11,"into_py","","",104,[[["python",3]]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"from_py","","",81,[[["python",3]]]],[11,"into_py","","",81,[[["python",3]]]],[11,"from","","",105,[[]]],[11,"into","","",105,[[]]],[11,"to_owned","","",105,[[]]],[11,"clone_into","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"from_py","","",105,[[["python",3]]]],[11,"into_py","","",105,[[["python",3]]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"from_py","","",82,[[["python",3]]]],[11,"into_py","","",82,[[["python",3]]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"to_owned","","",106,[[]]],[11,"clone_into","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"from_py","","",106,[[["python",3]]]],[11,"into_py","","",106,[[["python",3]]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"from_py","","",83,[[["python",3]]]],[11,"into_py","","",83,[[["python",3]]]],[11,"from","","",107,[[]]],[11,"into","","",107,[[]]],[11,"to_owned","","",107,[[]]],[11,"clone_into","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"from_py","","",107,[[["python",3]]]],[11,"into_py","","",107,[[["python",3]]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"from_py","","",84,[[["python",3]]]],[11,"into_py","","",84,[[["python",3]]]],[11,"from","","",108,[[]]],[11,"into","","",108,[[]]],[11,"to_owned","","",108,[[]]],[11,"clone_into","","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"from_py","","",108,[[["python",3]]]],[11,"into_py","","",108,[[["python",3]]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"from_py","","",85,[[["python",3]]]],[11,"into_py","","",85,[[["python",3]]]],[11,"from","","",109,[[]]],[11,"into","","",109,[[]]],[11,"to_owned","","",109,[[]]],[11,"clone_into","","",109,[[]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"from_py","","",109,[[["python",3]]]],[11,"into_py","","",109,[[["python",3]]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"from_py","","",86,[[["python",3]]]],[11,"into_py","","",86,[[["python",3]]]],[11,"from","","",110,[[]]],[11,"into","","",110,[[]]],[11,"to_owned","","",110,[[]]],[11,"clone_into","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"from_py","","",110,[[["python",3]]]],[11,"into_py","","",110,[[["python",3]]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"from_py","","",87,[[["python",3]]]],[11,"into_py","","",87,[[["python",3]]]],[11,"from","","",111,[[]]],[11,"into","","",111,[[]]],[11,"to_owned","","",111,[[]]],[11,"clone_into","","",111,[[]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"from_py","","",111,[[["python",3]]]],[11,"into_py","","",111,[[["python",3]]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"from_py","","",88,[[["python",3]]]],[11,"into_py","","",88,[[["python",3]]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"to_owned","","",112,[[]]],[11,"clone_into","","",112,[[]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"from_py","","",112,[[["python",3]]]],[11,"into_py","","",112,[[["python",3]]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"from_py","","",89,[[["python",3]]]],[11,"into_py","","",89,[[["python",3]]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"to_owned","","",113,[[]]],[11,"clone_into","","",113,[[]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"from_py","","",113,[[["python",3]]]],[11,"into_py","","",113,[[["python",3]]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"from_py","","",90,[[["python",3]]]],[11,"into_py","","",90,[[["python",3]]]],[11,"from","","",114,[[]]],[11,"into","","",114,[[]]],[11,"to_owned","","",114,[[]]],[11,"clone_into","","",114,[[]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"from_py","","",114,[[["python",3]]]],[11,"into_py","","",114,[[["python",3]]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"from_py","","",91,[[["python",3]]]],[11,"into_py","","",91,[[["python",3]]]],[11,"from","","",115,[[]]],[11,"into","","",115,[[]]],[11,"to_owned","","",115,[[]]],[11,"clone_into","","",115,[[]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"from_py","","",115,[[["python",3]]]],[11,"into_py","","",115,[[["python",3]]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"from_py","","",92,[[["python",3]]]],[11,"into_py","","",92,[[["python",3]]]],[11,"from","","",116,[[]]],[11,"into","","",116,[[]]],[11,"to_owned","","",116,[[]]],[11,"clone_into","","",116,[[]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"from_py","","",116,[[["python",3]]]],[11,"into_py","","",116,[[["python",3]]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"from_py","","",93,[[["python",3]]]],[11,"into_py","","",93,[[["python",3]]]],[11,"from","","",117,[[]]],[11,"into","","",117,[[]]],[11,"to_owned","","",117,[[]]],[11,"clone_into","","",117,[[]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"from_py","","",117,[[["python",3]]]],[11,"into_py","","",117,[[["python",3]]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"from_py","","",94,[[["python",3]]]],[11,"into_py","","",94,[[["python",3]]]],[11,"from","","",118,[[]]],[11,"into","","",118,[[]]],[11,"to_owned","","",118,[[]]],[11,"clone_into","","",118,[[]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"from_py","","",118,[[["python",3]]]],[11,"into_py","","",118,[[["python",3]]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"from_py","","",95,[[["python",3]]]],[11,"into_py","","",95,[[["python",3]]]],[11,"from","","",119,[[]]],[11,"into","","",119,[[]]],[11,"to_owned","","",119,[[]]],[11,"clone_into","","",119,[[]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"from_py","","",119,[[["python",3]]]],[11,"into_py","","",119,[[["python",3]]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"from_py","","",96,[[["python",3]]]],[11,"into_py","","",96,[[["python",3]]]],[11,"from","","",120,[[]]],[11,"into","","",120,[[]]],[11,"to_owned","","",120,[[]]],[11,"clone_into","","",120,[[]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"from_py","","",120,[[["python",3]]]],[11,"into_py","","",120,[[["python",3]]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"from_py","","",97,[[["python",3]]]],[11,"into_py","","",97,[[["python",3]]]],[11,"from","","",121,[[]]],[11,"into","","",121,[[]]],[11,"to_owned","","",121,[[]]],[11,"clone_into","","",121,[[]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"try_into","","",121,[[],["result",4]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"from_py","","",121,[[["python",3]]]],[11,"into_py","","",121,[[["python",3]]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"from_py","","",98,[[["python",3]]]],[11,"into_py","","",98,[[["python",3]]]],[11,"from","","",122,[[]]],[11,"into","","",122,[[]]],[11,"to_owned","","",122,[[]]],[11,"clone_into","","",122,[[]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"try_into","","",122,[[],["result",4]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"from_py","","",122,[[["python",3]]]],[11,"into_py","","",122,[[["python",3]]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"from_py","","",99,[[["python",3]]]],[11,"into_py","","",99,[[["python",3]]]],[11,"from","","",123,[[]]],[11,"into","","",123,[[]]],[11,"to_owned","","",123,[[]]],[11,"clone_into","","",123,[[]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"from_py","","",123,[[["python",3]]]],[11,"into_py","","",123,[[["python",3]]]],[11,"from","tvm::ir::ty","",124,[[]]],[11,"into","","",124,[[]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"from_py","","",124,[[["python",3]]]],[11,"into_py","","",124,[[["python",3]]]],[11,"from","","",155,[[]]],[11,"into","","",155,[[]]],[11,"to_owned","","",155,[[]]],[11,"clone_into","","",155,[[]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"try_into","","",155,[[],["result",4]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"from_py","","",155,[[["python",3]]]],[11,"into_py","","",155,[[["python",3]]]],[11,"from","","",125,[[]]],[11,"into","","",125,[[]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"try_into","","",125,[[],["result",4]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"from_py","","",125,[[["python",3]]]],[11,"into_py","","",125,[[["python",3]]]],[11,"from","","",156,[[]]],[11,"into","","",156,[[]]],[11,"to_owned","","",156,[[]]],[11,"clone_into","","",156,[[]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"try_into","","",156,[[],["result",4]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"from_py","","",156,[[["python",3]]]],[11,"into_py","","",156,[[["python",3]]]],[11,"from","","",126,[[]]],[11,"into","","",126,[[]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"from_py","","",126,[[["python",3]]]],[11,"into_py","","",126,[[["python",3]]]],[11,"from","","",157,[[]]],[11,"into","","",157,[[]]],[11,"to_owned","","",157,[[]]],[11,"clone_into","","",157,[[]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"try_into","","",157,[[],["result",4]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"from_py","","",157,[[["python",3]]]],[11,"into_py","","",157,[[["python",3]]]],[11,"from","tvm::runtime","",158,[[]]],[11,"into","","",158,[[]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"try_into","","",158,[[],["result",4]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"from_py","","",158,[[["python",3]]]],[11,"into_py","","",158,[[["python",3]]]],[11,"from","","",129,[[]]],[11,"into","","",129,[[]]],[11,"to_owned","","",129,[[]]],[11,"clone_into","","",129,[[]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"try_into","","",129,[[],["result",4]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"from_py","","",129,[[["python",3]]]],[11,"into_py","","",129,[[["python",3]]]],[11,"from","","",159,[[]]],[11,"into","","",159,[[]]],[11,"to_owned","","",159,[[]]],[11,"clone_into","","",159,[[]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"try_into","","",159,[[],["result",4]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"from_py","","",159,[[["python",3]]]],[11,"into_py","","",159,[[["python",3]]]],[11,"from","","",160,[[]]],[11,"into","","",160,[[]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"try_into","","",160,[[],["result",4]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"from_py","","",160,[[["python",3]]]],[11,"into_py","","",160,[[["python",3]]]],[11,"from","","",161,[[]]],[11,"into","","",161,[[]]],[11,"to_owned","","",161,[[]]],[11,"clone_into","","",161,[[]]],[11,"to_string","","",161,[[],["string",3]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"try_into","","",161,[[],["result",4]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"from_py","","",161,[[["python",3]]]],[11,"into_py","","",161,[[["python",3]]]],[11,"from","tvm::runtime::array","",162,[[]]],[11,"into","","",162,[[]]],[11,"to_owned","","",162,[[]]],[11,"clone_into","","",162,[[]]],[11,"borrow","","",162,[[]]],[11,"borrow_mut","","",162,[[]]],[11,"try_from","","",162,[[],["result",4]]],[11,"try_into","","",162,[[],["result",4]]],[11,"type_id","","",162,[[],["typeid",3]]],[11,"from_py","","",162,[[["python",3]]]],[11,"into_py","","",162,[[["python",3]]]],[11,"from","tvm::runtime::map","",163,[[]]],[11,"into","","",163,[[]]],[11,"into_iter","","",163,[[]]],[11,"to_owned","","",163,[[]]],[11,"clone_into","","",163,[[]]],[11,"borrow","","",163,[[]]],[11,"borrow_mut","","",163,[[]]],[11,"try_from","","",163,[[],["result",4]]],[11,"try_into","","",163,[[],["result",4]]],[11,"type_id","","",163,[[],["typeid",3]]],[11,"from_py","","",163,[[["python",3]]]],[11,"into_py","","",163,[[["python",3]]]],[11,"into_py_dict","","",163,[[["python",3]],["pydict",3]]],[11,"from","","",164,[[]]],[11,"into","","",164,[[]]],[11,"into_iter","","",164,[[]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"try_from","","",164,[[],["result",4]]],[11,"try_into","","",164,[[],["result",4]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"from_py","","",164,[[["python",3]]]],[11,"into_py","","",164,[[["python",3]]]],[11,"into_py_dict","","",164,[[["python",3]],["pydict",3]]],[11,"from","tvm::runtime","",165,[[]]],[11,"into","","",165,[[]]],[11,"borrow","","",165,[[]]],[11,"borrow_mut","","",165,[[]]],[11,"try_from","","",165,[[],["result",4]]],[11,"try_into","","",165,[[],["result",4]]],[11,"type_id","","",165,[[],["typeid",3]]],[11,"from_py","","",165,[[["python",3]]]],[11,"into_py","","",165,[[["python",3]]]],[11,"from","tvm::runtime::graph_rt","",130,[[]]],[11,"into","","",130,[[]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"try_into","","",130,[[],["result",4]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"from_py","","",130,[[["python",3]]]],[11,"into_py","","",130,[[["python",3]]]],[11,"from","tvm::transform","",131,[[]]],[11,"into","","",131,[[]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"try_into","","",131,[[],["result",4]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"from_py","","",131,[[["python",3]]]],[11,"into_py","","",131,[[["python",3]]]],[11,"from","","",132,[[]]],[11,"into","","",132,[[]]],[11,"to_owned","","",132,[[]]],[11,"clone_into","","",132,[[]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"try_into","","",132,[[],["result",4]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"from_py","","",132,[[["python",3]]]],[11,"into_py","","",132,[[["python",3]]]],[11,"partial_cmp","tvm::runtime","",161,[[],[["option",4],["ordering",4]]]],[11,"fmt","","",134,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",161,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tvm::runtime::map","",163,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tvm::runtime","",135,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",3,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",158,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",133,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"into_iter","tvm::runtime::map","",163,[[],["intoiter",3]]],[11,"hash","tvm::runtime","",161,[[]]],[11,"hash","","",134,[[]]],[11,"next","tvm::runtime::map","",164,[[],["option",4]]],[11,"size_hint","","",164,[[]]],[11,"drop","tvm::runtime","",129,[[]]],[11,"drop","","",135,[[]]],[11,"as_ptr","","",159,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",159,[[],[["option",4],["objectptr",3]]]],[11,"from_ptr","","",159,[[["option",4],["objectptr",3]],["objectref",3]]],[11,"as_ptr","","",136,[[],[["option",4],["objectptr",3]]]],[11,"into_ptr","","",136,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",136,[[["objectptr",3],["option",4]],["ndarray",3]]],[11,"as_ptr","","",161,[[],[["option",4],["objectptr",3]]]],[11,"into_ptr","","",161,[[],[["option",4],["objectptr",3]]]],[11,"from_ptr","","",161,[[["option",4],["objectptr",3]],["string",3]]],[11,"clone","","",161,[[],["string",3]]],[11,"clone","","",135,[[],["module",3]]],[11,"clone","","",136,[[],["ndarray",3]]],[11,"clone","tvm::runtime::array","",162,[[],["array",3]]],[11,"clone","tvm::runtime","",129,[[],["objectptr",3]]],[11,"clone","","",134,[[],["function",3]]],[11,"clone","","",159,[[],["objectref",3]]],[11,"clone","tvm::runtime::map","",163,[[],["map",3]]],[11,"fmt","tvm::runtime","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",161,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",133,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",3,[[["formatter",3]],[["error",3],["result",4]]]],[11,"try_from","","",136,[[["retvalue",4]],[["ndarray",3],["result",4],["error",4]]]],[11,"try_from","","",135,[[["argvalue",4]],[["result",4],["module",3]]]],[11,"try_from","","",159,[[["retvalue",4]],[["result",4],["objectref",3],["error",4]]]],[11,"try_from","tvm::runtime::map","",163,[[["retvalue",4]],[["map",3],["result",4],["error",4]]]],[11,"try_from","tvm::runtime","",135,[[["argvalue",4]],[["module",3],["result",4]]]],[11,"try_from","","",159,[[["argvalue",4]],[["result",4],["objectref",3],["error",4]]]],[11,"try_from","","",136,[[["argvalue",4]],[["ndarray",3],["result",4],["error",4]]]],[11,"try_from","","",134,[[["retvalue",4]],[["function",3],["error",4],["result",4]]]],[11,"try_from","tvm::runtime::array","",162,[[["retvalue",4]],[["result",4],["array",3],["error",4]]]],[11,"try_from","tvm::runtime","",129,[[["argvalue",4]],[["objectptr",3],["result",4]]]],[11,"try_from","tvm::runtime::array","",162,[[["argvalue",4]],[["result",4],["array",3],["error",4]]]],[11,"try_from","tvm::runtime","",135,[[["retvalue",4]],[["result",4],["module",3]]]],[11,"try_from","","",129,[[["retvalue",4]],[["objectptr",3],["result",4]]]],[11,"try_from","","",161,[[["retvalue",4]],[["string",3],["error",4],["result",4]]]],[11,"try_from","tvm::runtime::map","",163,[[["argvalue",4]],[["map",3],["result",4],["error",4]]]],[11,"try_from","tvm::runtime","",161,[[["argvalue",4]],[["string",3],["error",4],["result",4]]]],[11,"try_from","","",134,[[["argvalue",4]],[["function",3],["error",4],["result",4]]]],[11,"try_from","","",134,[[["argvalue",4]],[["function",3],["error",4],["result",4]]]],[11,"from","","",16,[[["objectref",3]],["argvalue",4]]],[11,"from","","",3,[[["intostringerror",3]],["error",4]]],[11,"from","","",16,[[["function",3]],["argvalue",4]]],[11,"from","","",3,[[["valuedowncasterror",3]],["error",4]]],[11,"from","","",16,[[["module",3]],["argvalue",4]]],[11,"from","","",16,[[["objectref",3]],["argvalue",4]]],[11,"from","","",16,[[["ndarray",3]],["argvalue",4]]],[11,"from","","",3,[[["nulerror",3]],["error",4]]],[11,"from","","",161,[[["string",3]],["string",3]]],[11,"from","","",136,[[["ndarraycontainer",3]],["ndarray",3]]],[11,"from","","",17,[[["array",3]],["retvalue",4]]],[11,"from","","",17,[[["objectref",3]],["retvalue",4]]],[11,"from","","",16,[[["string",3]],["argvalue",4]]],[11,"from","","",3,[[["ndarrayerror",4]],["error",4]]],[11,"from","","",161,[[["objectptr",3],["stringobj",3]],["string",3]]],[11,"from","","",161,[[["stringobj",3]],["string",3]]],[11,"from","","",159,[[["object",3]],["objectref",3]]],[11,"from","","",16,[[["map",3]],["argvalue",4]]],[11,"from","","",17,[[["map",3]],["retvalue",4]]],[11,"from","","",1,[[["shapeerror",3]],["ndarrayerror",4]]],[11,"from","","",17,[[["module",3]],["retvalue",4]]],[11,"from","","",17,[[["objectptr",3]],["retvalue",4]]],[11,"from","","",161,[[],["string",3]]],[11,"from","","",16,[[["string",3]],["argvalue",4]]],[11,"from","","",3,[[["infallible",4]],["error",4]]],[11,"from","","",16,[[["ndarray",3]],["argvalue",4]]],[11,"from","","",17,[[["string",3]],["retvalue",4]]],[11,"from","","",17,[[["ndarray",3]],["retvalue",4]]],[11,"from","","",17,[[["function",3]],["retvalue",4]]],[11,"from","","",1,[[["parsedatatypeerror",4]],["ndarrayerror",4]]],[11,"from","","",159,[[["objectptr",3],["object",3]],["objectref",3]]],[11,"from","","",136,[[["objectptr",3],["ndarraycontainer",3]],["ndarray",3]]],[11,"from","","",16,[[["array",3]],["argvalue",4]]],[11,"from","","",16,[[["module",3]],["argvalue",4]]],[11,"from","","",16,[[["objectptr",3]],["argvalue",4]]],[11,"deref","","",129,[[]]],[11,"deref","","",159,[[]]],[11,"deref","","",161,[[]]],[11,"deref","","",136,[[]]],[11,"cmp","","",161,[[["string",3]],["ordering",4]]],[11,"eq","","",161,[[]]],[11,"from_iter","tvm::runtime::map","",163,[[],["map",3]]],[11,"source","tvm::runtime","",3,[[],[["option",4],["error",8]]]],[11,"source","","",1,[[],[["option",4],["error",8]]]],[11,"as_ref","tvm::runtime::ndarray","",139,[[]]],[11,"as_ref","tvm::runtime","",160,[[]]],[11,"as_ref","","",160,[[],["stringobj",3]]],[11,"as_ref","","",158,[[],["object",3]]],[11,"as_ref","","",161,[[]]],[11,"as_ref","tvm::runtime::ndarray","",139,[[],["ndarraycontainer",3]]],[11,"partial_cmp","tvm::runtime","",137,[[["datatype",3]],[["option",4],["ordering",4]]]],[11,"lt","","",137,[[["datatype",3]]]],[11,"le","","",137,[[["datatype",3]]]],[11,"gt","","",137,[[["datatype",3]]]],[11,"ge","","",137,[[["datatype",3]]]],[11,"fmt","tvm::runtime::function::ffi","",10,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tvm::runtime","",4,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",17,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tvm::runtime::function::ffi","",9,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tvm::runtime::context","",138,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tvm::runtime","",16,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tvm::runtime::function::ffi","",12,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",14,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tvm::runtime","",137,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tvm::runtime::function::ffi","",11,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",8,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",15,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tvm::runtime","",5,[[["formatter",3]],[["error",3],["result",4]]]],[11,"hash","","",4,[[]]],[11,"hash","","",137,[[]]],[11,"hash","","",5,[[]]],[11,"try_from","tvm::runtime::function::ffi","",10,[[["argvalue",4]],[["dldatatype",3],["result",4]]]],[11,"try_from","","",9,[[["retvalue",4]],[["dlcontext",3],["result",4]]]],[11,"try_from","tvm::runtime","",17,[[["result",4]],[["retvalue",4],["result",4]]]],[11,"try_from","","",137,[[["retvalue",4]],[["datatype",3],["error",3],["result",4]]]],[11,"try_from","tvm::runtime::function::ffi","",9,[[["argvalue",4]],[["result",4],["dlcontext",3]]]],[11,"try_from","tvm::runtime","",165,[[["retvalue",4]],[["result",4],["bytearray",3]]]],[11,"try_from","","",165,[[["argvalue",4]],[["result",4],["bytearray",3]]]],[11,"try_from","","",4,[[["retvalue",4]],[["context",3],["error",3],["result",4]]]],[11,"try_from","tvm::runtime::function::ffi","",9,[[["argvalue",4]],[["dlcontext",3],["result",4]]]],[11,"try_from","","",14,[[["retvalue",4]],[["result",4],["tvmbytearray",3]]]],[11,"try_from","","",10,[[["argvalue",4]],[["result",4],["dldatatype",3]]]],[11,"try_from","","",10,[[["retvalue",4]],[["result",4],["dldatatype",3]]]],[11,"clone","tvm::runtime","",4,[[],["context",3]]],[11,"clone","tvm::runtime::function::ffi","",10,[[],["dldatatype",3]]],[11,"clone","","",14,[[],["tvmbytearray",3]]],[11,"clone","","",12,[[],["dlmanagedtensor",3]]],[11,"clone","","",13,[[],["tvmvalue",19]]],[11,"clone","tvm::runtime","",137,[[],["datatype",3]]],[11,"clone","tvm::runtime::function::ffi","",9,[[],["dlcontext",3]]],[11,"clone","","",8,[[],["__fsid_t",3]]],[11,"clone","tvm::runtime","",17,[[],["retvalue",4]]],[11,"clone","","",16,[[],["argvalue",4]]],[11,"clone","tvm::runtime::function::ffi","",11,[[],["dltensor",3]]],[11,"clone","tvm::runtime","",5,[[],["devicetype",4]]],[11,"clone","tvm::runtime::function::ffi","",15,[[],["tvmparallelgroupenv",3]]],[11,"fmt","tvm::runtime::context","",138,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tvm::runtime","",137,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",4,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",5,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",16,[[],["argvalue",4]]],[11,"from","","",16,[[],["argvalue",4]]],[11,"from","","",16,[[["cstring",3]],["argvalue",4]]],[11,"from","","",16,[[["devicetype",4]],["argvalue",4]]],[11,"from","","",17,[[["context",3]],["retvalue",4]]],[11,"from","","",17,[[],["retvalue",4]]],[11,"from","tvm::runtime::function::ffi","",13,[[],["tvmvalue",19]]],[11,"from","","",11,[[["arraybase",3]],["dltensor",3]]],[11,"from","","",10,[[["tvmvalue",19]],["dldatatype",3]]],[11,"from","tvm::runtime","",17,[[["tvmbytearray",3]],["retvalue",4]]],[11,"from","","",17,[[],["retvalue",4]]],[11,"from","tvm::runtime::function::ffi","",13,[[],["tvmvalue",19]]],[11,"from","tvm::runtime","",4,[[["dlcontext",3]],["context",3]]],[11,"from","","",17,[[],["retvalue",4]]],[11,"from","tvm::runtime::function::ffi","",11,[[["arraybase",3]],["dltensor",3]]],[11,"from","tvm::runtime","",16,[[["dltensor",3]],["argvalue",4]]],[11,"from","","",17,[[["dlcontext",3]],["retvalue",4]]],[11,"from","","",16,[[],["argvalue",4]]],[11,"from","","",17,[[],["retvalue",4]]],[11,"from","tvm::runtime::function::ffi","",13,[[],["tvmvalue",19]]],[11,"from","tvm::runtime","",16,[[],["argvalue",4]]],[11,"from","","",16,[[],["argvalue",4]]],[11,"from","","",165,[[],["bytearray",3]]],[11,"from","","",17,[[],["retvalue",4]]],[11,"from","tvm::runtime::function::ffi","",13,[[],["tvmvalue",19]]],[11,"from","","",13,[[],["tvmvalue",19]]],[11,"from","tvm::runtime","",16,[[],["argvalue",4]]],[11,"from","","",17,[[],["retvalue",4]]],[11,"from","","",16,[[["bytearray",3]],["argvalue",4]]],[11,"from","tvm::runtime::function::ffi","",9,[[["tvmvalue",19]],["dlcontext",3]]],[11,"from","tvm::runtime","",16,[[],["argvalue",4]]],[11,"from","tvm::runtime::function::ffi","",13,[[],["tvmvalue",19]]],[11,"from","tvm::runtime","",17,[[],["retvalue",4]]],[11,"from","","",17,[[],["retvalue",4]]],[11,"from","tvm::runtime::function::ffi","",9,[[["context",3]],["dlcontext",3]]],[11,"from","tvm::runtime","",16,[[],["argvalue",4]]],[11,"from","tvm::runtime::function::ffi","",10,[[["datatype",3]],["dldatatype",3]]],[11,"from","tvm::runtime","",16,[[],["argvalue",4]]],[11,"from","","",16,[[],["argvalue",4]]],[11,"from","tvm::runtime::function::ffi","",11,[[["arraybase",3]],["dltensor",3]]],[11,"from","tvm::runtime","",16,[[],["argvalue",4]]],[11,"from","tvm::runtime::function::ffi","",10,[[["datatype",3]],["dldatatype",3]]],[11,"from","","",13,[[["dldatatype",3]],["tvmvalue",19]]],[11,"from","tvm::runtime","",5,[[],["devicetype",4]]],[11,"from","","",16,[[],["argvalue",4]]],[11,"from","","",16,[[],["argvalue",4]]],[11,"from","","",16,[[],["argvalue",4]]],[11,"from","","",17,[[],["retvalue",4]]],[11,"from","","",16,[[["dltensor",3]],["argvalue",4]]],[11,"from","","",16,[[["context",3]],["argvalue",4]]],[11,"from","tvm::runtime::function::ffi","",13,[[],["tvmvalue",19]]],[11,"from","","",13,[[],["tvmvalue",19]]],[11,"from","tvm::runtime","",16,[[],["argvalue",4]]],[11,"from","tvm::runtime::function::ffi","",9,[[["context",3]],["dlcontext",3]]],[11,"from","tvm::runtime","",16,[[["tvmbytearray",3]],["argvalue",4]]],[11,"from","","",16,[[],["argvalue",4]]],[11,"from","tvm::runtime::function::ffi","",13,[[],["tvmvalue",19]]],[11,"from","","",11,[[["arraybase",3]],["dltensor",3]]],[11,"from","tvm::runtime","",16,[[],["argvalue",4]]],[11,"from","tvm::runtime::function::ffi","",11,[[["arraybase",3]],["dltensor",3]]],[11,"from","tvm::runtime","",16,[[],["argvalue",4]]],[11,"from","","",16,[[],["argvalue",4]]],[11,"from","","",16,[[],["argvalue",4]]],[11,"from","","",4,[[],["context",3]]],[11,"from","","",17,[[],["retvalue",4]]],[11,"from","","",16,[[["dldatatype",3]],["argvalue",4]]],[11,"from","","",16,[[],["argvalue",4]]],[11,"from","","",17,[[],["retvalue",4]]],[11,"from","","",16,[[["dldatatype",3]],["argvalue",4]]],[11,"from","","",17,[[["string",3]],["retvalue",4]]],[11,"from","tvm::runtime::function::ffi","",13,[[],["tvmvalue",19]]],[11,"from","tvm::runtime","",17,[[["dldatatype",3]],["retvalue",4]]],[11,"from","","",16,[[["dlcontext",3]],["argvalue",4]]],[11,"from","","",16,[[["cstr",3]],["argvalue",4]]],[11,"from","","",16,[[["dlcontext",3]],["argvalue",4]]],[11,"from","","",17,[[],["retvalue",4]]],[11,"from","","",137,[[["dldatatype",3]],["datatype",3]]],[11,"from","","",16,[[],["argvalue",4]]],[11,"from","","",16,[[],["argvalue",4]]],[11,"from","tvm::runtime::function::ffi","",13,[[["dlcontext",3]],["tvmvalue",19]]],[11,"from","tvm::runtime","",16,[[],["argvalue",4]]],[11,"from","","",17,[[],["retvalue",4]]],[11,"from","","",16,[[["context",3]],["argvalue",4]]],[11,"from","","",17,[[["bytearray",3]],["retvalue",4]]],[11,"from","tvm::runtime::function::ffi","",11,[[["arraybase",3]],["dltensor",3]]],[11,"from","tvm::runtime","",17,[[["datatype",3]],["retvalue",4]]],[11,"from","","",5,[[],["devicetype",4]]],[11,"from","","",16,[[],["argvalue",4]]],[11,"from","","",17,[[],["retvalue",4]]],[11,"from","tvm::runtime::function::ffi","",13,[[],["tvmvalue",19]]],[11,"from","tvm::runtime","",16,[[],["argvalue",4]]],[11,"from","tvm::runtime::function::ffi","",13,[[],["tvmvalue",19]]],[11,"from","tvm::runtime","",16,[[["string",3]],["argvalue",4]]],[11,"from","","",16,[[],["argvalue",4]]],[11,"from","","",16,[[],["argvalue",4]]],[11,"eq","tvm::runtime::function::ffi","",14,[[["tvmbytearray",3]]]],[11,"ne","","",14,[[["tvmbytearray",3]]]],[11,"eq","","",10,[[["dldatatype",3]]]],[11,"ne","","",10,[[["dldatatype",3]]]],[11,"eq","tvm::runtime","",4,[[["context",3]]]],[11,"ne","","",4,[[["context",3]]]],[11,"eq","tvm::runtime::function::ffi","",12,[[["dlmanagedtensor",3]]]],[11,"ne","","",12,[[["dlmanagedtensor",3]]]],[11,"eq","","",9,[[["dlcontext",3]]]],[11,"ne","","",9,[[["dlcontext",3]]]],[11,"eq","tvm::runtime","",5,[[["devicetype",4]]]],[11,"eq","tvm::runtime::function::ffi","",11,[[["dltensor",3]]]],[11,"ne","","",11,[[["dltensor",3]]]],[11,"eq","","",8,[[["__fsid_t",3]]]],[11,"ne","","",8,[[["__fsid_t",3]]]],[11,"eq","","",15,[[["tvmparallelgroupenv",3]]]],[11,"ne","","",15,[[["tvmparallelgroupenv",3]]]],[11,"eq","tvm::runtime","",137,[[["datatype",3]]]],[11,"ne","","",137,[[["datatype",3]]]],[11,"cmp","","",137,[[["datatype",3]],["ordering",4]]],[11,"from_str","","",4,[[],[["result",4],["context",3]]]],[11,"from_str","tvm::runtime::function::ffi","",9,[[],[["dlcontext",3],["result",4]]]],[11,"from_str","tvm::runtime","",137,[[],[["result",4],["datatype",3]]]],[11,"default","tvm::runtime::function::ffi","",8,[[],["__fsid_t",3]]],[11,"default","","",9,[[],["dlcontext",3]]],[11,"default","","",15,[[],["tvmparallelgroupenv",3]]],[11,"default","","",13,[[],["tvmvalue",19]]],[11,"default","","",14,[[],["tvmbytearray",3]]],[11,"default","","",10,[[],["dldatatype",3]]],[11,"default","tvm::runtime","default device is cpu.",5,[[],["devicetype",4]]],[11,"default","tvm::runtime::function::ffi","",11,[[],["dltensor",3]]],[11,"default","tvm::runtime","",17,[[],["retvalue",4]]],[11,"default","","",4,[[],["context",3]]],[11,"default","tvm::runtime::function::ffi","",12,[[],["dlmanagedtensor",3]]],[11,"as_ref","tvm::ir::arith","",19,[[]]],[11,"as_ref","","",19,[[]]],[11,"as_ref","tvm::ir::attrs","",21,[[]]],[11,"as_ref","","",21,[[]]],[11,"as_ref","tvm::ir::expr","",22,[[]]],[11,"as_ref","","",22,[[]]],[11,"as_ref","","",23,[[]]],[11,"as_ref","","",23,[[]]],[11,"as_ref","","",24,[[]]],[11,"as_ref","","",24,[[]]],[11,"as_ref","tvm::ir::function","",26,[[]]],[11,"as_ref","","",26,[[]]],[11,"as_ref","tvm::ir::module","",27,[[]]],[11,"as_ref","","",27,[[]]],[11,"as_ref","tvm::ir::op","",29,[[]]],[11,"as_ref","","",29,[[]]],[11,"as_ref","tvm::ir::relay::attrs::nn","",51,[[]]],[11,"as_ref","","",51,[[]]],[11,"as_ref","","",52,[[]]],[11,"as_ref","","",52,[[]]],[11,"as_ref","","",53,[[]]],[11,"as_ref","","",53,[[]]],[11,"as_ref","","",54,[[]]],[11,"as_ref","","",54,[[]]],[11,"as_ref","","",55,[[]]],[11,"as_ref","","",55,[[]]],[11,"as_ref","","",56,[[]]],[11,"as_ref","","",56,[[]]],[11,"as_ref","tvm::ir::relay::attrs::transform","",57,[[]]],[11,"as_ref","","",57,[[]]],[11,"as_ref","tvm::ir::relay","",30,[[]]],[11,"as_ref","","",30,[[]]],[11,"as_ref","","",31,[[]]],[11,"as_ref","","",31,[[]]],[11,"as_ref","","",32,[[]]],[11,"as_ref","","",32,[[]]],[11,"as_ref","","",33,[[]]],[11,"as_ref","","",33,[[]]],[11,"as_ref","","",34,[[]]],[11,"as_ref","","",34,[[]]],[11,"as_ref","","",35,[[]]],[11,"as_ref","","",35,[[]]],[11,"as_ref","","",36,[[]]],[11,"as_ref","","",36,[[]]],[11,"as_ref","","",37,[[]]],[11,"as_ref","","",37,[[]]],[11,"as_ref","","",38,[[]]],[11,"as_ref","","",38,[[]]],[11,"as_ref","","",39,[[]]],[11,"as_ref","","",39,[[]]],[11,"as_ref","","",40,[[]]],[11,"as_ref","","",40,[[]]],[11,"as_ref","","",41,[[]]],[11,"as_ref","","",41,[[]]],[11,"as_ref","","",42,[[]]],[11,"as_ref","","",42,[[]]],[11,"as_ref","","",43,[[]]],[11,"as_ref","","",43,[[]]],[11,"as_ref","","",44,[[]]],[11,"as_ref","","",44,[[]]],[11,"as_ref","","",45,[[]]],[11,"as_ref","","",45,[[]]],[11,"as_ref","","",46,[[]]],[11,"as_ref","","",46,[[]]],[11,"as_ref","","",47,[[]]],[11,"as_ref","","",47,[[]]],[11,"as_ref","","",48,[[]]],[11,"as_ref","","",48,[[]]],[11,"as_ref","","",49,[[]]],[11,"as_ref","","",49,[[]]],[11,"as_ref","","",50,[[]]],[11,"as_ref","","",50,[[]]],[11,"as_ref","tvm::ir::tir","",76,[[]]],[11,"as_ref","","",76,[[]]],[11,"as_ref","","",77,[[]]],[11,"as_ref","","",77,[[]]],[11,"as_ref","","",78,[[]]],[11,"as_ref","","",78,[[]]],[11,"as_ref","","",79,[[]]],[11,"as_ref","","",79,[[]]],[11,"as_ref","","",80,[[]]],[11,"as_ref","","",80,[[]]],[11,"as_ref","","",81,[[]]],[11,"as_ref","","",81,[[]]],[11,"as_ref","","",82,[[]]],[11,"as_ref","","",82,[[]]],[11,"as_ref","","",83,[[]]],[11,"as_ref","","",83,[[]]],[11,"as_ref","","",84,[[]]],[11,"as_ref","","",84,[[]]],[11,"as_ref","","",85,[[]]],[11,"as_ref","","",85,[[]]],[11,"as_ref","","",86,[[]]],[11,"as_ref","","",86,[[]]],[11,"as_ref","","",87,[[]]],[11,"as_ref","","",87,[[]]],[11,"as_ref","","",88,[[]]],[11,"as_ref","","",88,[[]]],[11,"as_ref","","",89,[[]]],[11,"as_ref","","",89,[[]]],[11,"as_ref","","",90,[[]]],[11,"as_ref","","",90,[[]]],[11,"as_ref","","",91,[[]]],[11,"as_ref","","",91,[[]]],[11,"as_ref","","",92,[[]]],[11,"as_ref","","",92,[[]]],[11,"as_ref","","",93,[[]]],[11,"as_ref","","",93,[[]]],[11,"as_ref","","",94,[[]]],[11,"as_ref","","",94,[[]]],[11,"as_ref","","",95,[[]]],[11,"as_ref","","",95,[[]]],[11,"as_ref","","",96,[[]]],[11,"as_ref","","",96,[[]]],[11,"as_ref","","",97,[[]]],[11,"as_ref","","",97,[[]]],[11,"as_ref","","",98,[[]]],[11,"as_ref","","",98,[[]]],[11,"as_ref","","",99,[[]]],[11,"as_ref","","",99,[[]]],[11,"as_ref","tvm::ir::ty","",124,[[]]],[11,"as_ref","","",124,[[]]],[11,"as_ref","","",125,[[]]],[11,"as_ref","","",125,[[]]],[11,"as_ref","","",126,[[]]],[11,"as_ref","","",126,[[]]],[11,"as_ref","tvm::transform","",131,[[]]],[11,"as_ref","","",131,[[]]],[11,"from","tvm::ir::arith","",20,[[["constintboundnode",3]]]],[11,"from","","",20,[[["objectptr",3],["constintboundnode",3]]]],[11,"from","tvm::runtime","",16,[[["constintbound",3]],["argvalue",4]]],[11,"from","","",16,[[["constintbound",3]],["argvalue",4]]],[11,"from","","",17,[[["constintbound",3]],["retvalue",4]]],[11,"from","tvm::ir::attrs","",140,[[["baseattrsnode",3]]]],[11,"from","","",140,[[["objectptr",3],["baseattrsnode",3]]]],[11,"from","tvm::runtime","",16,[[["attrs",3]],["argvalue",4]]],[11,"from","","",16,[[["attrs",3]],["argvalue",4]]],[11,"from","","",17,[[["attrs",3]],["retvalue",4]]],[11,"from","tvm::ir::expr","",141,[[["baseexprnode",3]]]],[11,"from","","",141,[[["objectptr",3],["baseexprnode",3]]]],[11,"from","tvm::runtime","",16,[[["baseexpr",3]],["argvalue",4]]],[11,"from","","",16,[[["baseexpr",3]],["argvalue",4]]],[11,"from","","",17,[[["baseexpr",3]],["retvalue",4]]],[11,"from","tvm::ir::expr","",142,[[["primexprnode",3]]]],[11,"from","","",142,[[["objectptr",3],["primexprnode",3]]]],[11,"from","tvm::runtime","",16,[[["primexpr",3]],["argvalue",4]]],[11,"from","","",16,[[["primexpr",3]],["argvalue",4]]],[11,"from","","",17,[[["primexpr",3]],["retvalue",4]]],[11,"from","tvm::ir::expr","",25,[[["globalvarnode",3]]]],[11,"from","","",25,[[["globalvarnode",3],["objectptr",3]]]],[11,"from","tvm::runtime","",16,[[["globalvar",3]],["argvalue",4]]],[11,"from","","",16,[[["globalvar",3]],["argvalue",4]]],[11,"from","","",17,[[["globalvar",3]],["retvalue",4]]],[11,"from","tvm::ir::function","",143,[[["basefuncnode",3]]]],[11,"from","","",143,[[["objectptr",3],["basefuncnode",3]]]],[11,"from","tvm::runtime","",16,[[["basefunc",3]],["argvalue",4]]],[11,"from","","",16,[[["basefunc",3]],["argvalue",4]]],[11,"from","","",17,[[["basefunc",3]],["retvalue",4]]],[11,"from","tvm::ir::module","",28,[[["irmodulenode",3]]]],[11,"from","","",28,[[["objectptr",3],["irmodulenode",3]]]],[11,"from","tvm::runtime","",16,[[["irmodule",3]],["argvalue",4]]],[11,"from","","",16,[[["irmodule",3]],["argvalue",4]]],[11,"from","","",17,[[["irmodule",3]],["retvalue",4]]],[11,"from","tvm::ir::op","",144,[[["opnode",3]]]],[11,"from","","",144,[[["opnode",3],["objectptr",3]]]],[11,"from","tvm::runtime","",16,[[["op",3]],["argvalue",4]]],[11,"from","","",16,[[["op",3]],["argvalue",4]]],[11,"from","","",17,[[["op",3]],["retvalue",4]]],[11,"from","tvm::ir::relay::attrs::nn","",148,[[["conv2dattrsnode",3]]]],[11,"from","","",148,[[["conv2dattrsnode",3],["objectptr",3]]]],[11,"from","tvm::runtime","",16,[[["conv2dattrs",3]],["argvalue",4]]],[11,"from","","",16,[[["conv2dattrs",3]],["argvalue",4]]],[11,"from","","",17,[[["conv2dattrs",3]],["retvalue",4]]],[11,"from","tvm::ir::relay::attrs::nn","",149,[[["biasaddattrsnode",3]]]],[11,"from","","",149,[[["objectptr",3],["biasaddattrsnode",3]]]],[11,"from","tvm::runtime","",16,[[["biasaddattrs",3]],["argvalue",4]]],[11,"from","","",16,[[["biasaddattrs",3]],["argvalue",4]]],[11,"from","","",17,[[["biasaddattrs",3]],["retvalue",4]]],[11,"from","tvm::ir::relay::attrs::nn","",150,[[["denseattrsnode",3]]]],[11,"from","","",150,[[["denseattrsnode",3],["objectptr",3]]]],[11,"from","tvm::runtime","",16,[[["denseattrs",3]],["argvalue",4]]],[11,"from","","",16,[[["denseattrs",3]],["argvalue",4]]],[11,"from","","",17,[[["denseattrs",3]],["retvalue",4]]],[11,"from","tvm::ir::relay::attrs::nn","",151,[[["globalpool2dattrsnode",3]]]],[11,"from","","",151,[[["globalpool2dattrsnode",3],["objectptr",3]]]],[11,"from","tvm::runtime","",16,[[["globalpool2dattrs",3]],["argvalue",4]]],[11,"from","","",16,[[["globalpool2dattrs",3]],["argvalue",4]]],[11,"from","","",17,[[["globalpool2dattrs",3]],["retvalue",4]]],[11,"from","tvm::ir::relay::attrs::nn","",152,[[["maxpool2dattrsnode",3]]]],[11,"from","","",152,[[["maxpool2dattrsnode",3],["objectptr",3]]]],[11,"from","tvm::runtime","",16,[[["maxpool2dattrs",3]],["argvalue",4]]],[11,"from","","",16,[[["maxpool2dattrs",3]],["argvalue",4]]],[11,"from","","",17,[[["maxpool2dattrs",3]],["retvalue",4]]],[11,"from","tvm::ir::relay::attrs::nn","",153,[[["softmaxattrsnode",3]]]],[11,"from","","",153,[[["objectptr",3],["softmaxattrsnode",3]]]],[11,"from","tvm::runtime","",16,[[["softmaxattrs",3]],["argvalue",4]]],[11,"from","","",16,[[["softmaxattrs",3]],["argvalue",4]]],[11,"from","","",17,[[["softmaxattrs",3]],["retvalue",4]]],[11,"from","tvm::ir::relay::attrs::transform","",154,[[["expanddimsattrsnode",3]]]],[11,"from","","",154,[[["objectptr",3],["expanddimsattrsnode",3]]]],[11,"from","tvm::runtime","",16,[[["expanddimsattrs",3]],["argvalue",4]]],[11,"from","","",16,[[["expanddimsattrs",3]],["argvalue",4]]],[11,"from","","",17,[[["expanddimsattrs",3]],["retvalue",4]]],[11,"from","tvm::ir::relay","",145,[[["exprnode",3]]]],[11,"from","","",145,[[["exprnode",3],["objectptr",3]]]],[11,"from","tvm::runtime","",16,[[["expr",3]],["argvalue",4]]],[11,"from","","",16,[[["expr",3]],["argvalue",4]]],[11,"from","","",17,[[["expr",3]],["retvalue",4]]],[11,"from","tvm::ir::relay","",146,[[["idnode",3]]]],[11,"from","","",146,[[["objectptr",3],["idnode",3]]]],[11,"from","tvm::runtime","",16,[[["id",3]],["argvalue",4]]],[11,"from","","",16,[[["id",3]],["argvalue",4]]],[11,"from","","",17,[[["id",3]],["retvalue",4]]],[11,"from","tvm::ir::relay","",58,[[["constantnode",3]]]],[11,"from","","",58,[[["objectptr",3],["constantnode",3]]]],[11,"from","tvm::runtime","",16,[[["constant",3]],["argvalue",4]]],[11,"from","","",16,[[["constant",3]],["argvalue",4]]],[11,"from","","",17,[[["constant",3]],["retvalue",4]]],[11,"from","tvm::ir::relay","",59,[[["tuplenode",3]]]],[11,"from","","",59,[[["objectptr",3],["tuplenode",3]]]],[11,"from","tvm::runtime","",16,[[["tuple",3]],["argvalue",4]]],[11,"from","","",16,[[["tuple",3]],["argvalue",4]]],[11,"from","","",17,[[["tuple",3]],["retvalue",4]]],[11,"from","tvm::ir::relay","",60,[[["varnode",3]]]],[11,"from","","",60,[[["objectptr",3],["varnode",3]]]],[11,"from","tvm::runtime","",16,[[["var",3]],["argvalue",4]]],[11,"from","","",16,[[["var",3]],["argvalue",4]]],[11,"from","","",17,[[["var",3]],["retvalue",4]]],[11,"from","tvm::ir::relay","",61,[[["callnode",3]]]],[11,"from","","",61,[[["callnode",3],["objectptr",3]]]],[11,"from","tvm::runtime","",16,[[["call",3]],["argvalue",4]]],[11,"from","","",16,[[["call",3]],["argvalue",4]]],[11,"from","","",17,[[["call",3]],["retvalue",4]]],[11,"from","tvm::ir::relay","",62,[[["letnode",3]]]],[11,"from","","",62,[[["letnode",3],["objectptr",3]]]],[11,"from","tvm::runtime","",16,[[["let",3]],["argvalue",4]]],[11,"from","","",16,[[["let",3]],["argvalue",4]]],[11,"from","","",17,[[["let",3]],["retvalue",4]]],[11,"from","tvm::ir::relay","",63,[[["ifnode",3]]]],[11,"from","","",63,[[["ifnode",3],["objectptr",3]]]],[11,"from","tvm::runtime","",16,[[["if",3]],["argvalue",4]]],[11,"from","","",16,[[["if",3]],["argvalue",4]]],[11,"from","","",17,[[["if",3]],["retvalue",4]]],[11,"from","tvm::ir::relay","",64,[[["tuplegetitemnode",3]]]],[11,"from","","",64,[[["objectptr",3],["tuplegetitemnode",3]]]],[11,"from","tvm::runtime","",16,[[["tuplegetitem",3]],["argvalue",4]]],[11,"from","","",16,[[["tuplegetitem",3]],["argvalue",4]]],[11,"from","","",17,[[["tuplegetitem",3]],["retvalue",4]]],[11,"from","tvm::ir::relay","",65,[[["refcreatenode",3]]]],[11,"from","","",65,[[["refcreatenode",3],["objectptr",3]]]],[11,"from","tvm::runtime","",16,[[["refcreate",3]],["argvalue",4]]],[11,"from","","",16,[[["refcreate",3]],["argvalue",4]]],[11,"from","","",17,[[["refcreate",3]],["retvalue",4]]],[11,"from","tvm::ir::relay","",66,[[["refreadnode",3]]]],[11,"from","","",66,[[["refreadnode",3],["objectptr",3]]]],[11,"from","tvm::runtime","",16,[[["refread",3]],["argvalue",4]]],[11,"from","","",16,[[["refread",3]],["argvalue",4]]],[11,"from","","",17,[[["refread",3]],["retvalue",4]]],[11,"from","tvm::ir::relay","",67,[[["refwritenode",3]]]],[11,"from","","",67,[[["objectptr",3],["refwritenode",3]]]],[11,"from","tvm::runtime","",16,[[["refwrite",3]],["argvalue",4]]],[11,"from","","",16,[[["refwrite",3]],["argvalue",4]]],[11,"from","","",17,[[["refwrite",3]],["retvalue",4]]],[11,"from","tvm::ir::relay","",68,[[["constructornode",3]]]],[11,"from","","",68,[[["objectptr",3],["constructornode",3]]]],[11,"from","tvm::runtime","",16,[[["constructor",3]],["argvalue",4]]],[11,"from","","",16,[[["constructor",3]],["argvalue",4]]],[11,"from","","",17,[[["constructor",3]],["retvalue",4]]],[11,"from","tvm::ir::relay","",147,[[["patternnode",3]]]],[11,"from","","",147,[[["objectptr",3],["patternnode",3]]]],[11,"from","tvm::runtime","",16,[[["pattern",3]],["argvalue",4]]],[11,"from","","",16,[[["pattern",3]],["argvalue",4]]],[11,"from","","",17,[[["pattern",3]],["retvalue",4]]],[11,"from","tvm::ir::relay","",69,[[["patternwildcardnode",3]]]],[11,"from","","",69,[[["objectptr",3],["patternwildcardnode",3]]]],[11,"from","tvm::runtime","",16,[[["patternwildcard",3]],["argvalue",4]]],[11,"from","","",16,[[["patternwildcard",3]],["argvalue",4]]],[11,"from","","",17,[[["patternwildcard",3]],["retvalue",4]]],[11,"from","tvm::ir::relay","",70,[[["patternvarnode",3]]]],[11,"from","","",70,[[["objectptr",3],["patternvarnode",3]]]],[11,"from","tvm::runtime","",16,[[["patternvar",3]],["argvalue",4]]],[11,"from","","",16,[[["patternvar",3]],["argvalue",4]]],[11,"from","","",17,[[["patternvar",3]],["retvalue",4]]],[11,"from","tvm::ir::relay","",71,[[["patternconstructornode",3]]]],[11,"from","","",71,[[["objectptr",3],["patternconstructornode",3]]]],[11,"from","tvm::runtime","",16,[[["patternconstructor",3]],["argvalue",4]]],[11,"from","","",16,[[["patternconstructor",3]],["argvalue",4]]],[11,"from","","",17,[[["patternconstructor",3]],["retvalue",4]]],[11,"from","tvm::ir::relay","",72,[[["patterntuplenode",3]]]],[11,"from","","",72,[[["objectptr",3],["patterntuplenode",3]]]],[11,"from","tvm::runtime","",16,[[["patterntuple",3]],["argvalue",4]]],[11,"from","","",16,[[["patterntuple",3]],["argvalue",4]]],[11,"from","","",17,[[["patterntuple",3]],["retvalue",4]]],[11,"from","tvm::ir::relay","",73,[[["clausenode",3]]]],[11,"from","","",73,[[["objectptr",3],["clausenode",3]]]],[11,"from","tvm::runtime","",16,[[["clause",3]],["argvalue",4]]],[11,"from","","",16,[[["clause",3]],["argvalue",4]]],[11,"from","","",17,[[["clause",3]],["retvalue",4]]],[11,"from","tvm::ir::relay","",74,[[["matchnode",3]]]],[11,"from","","",74,[[["matchnode",3],["objectptr",3]]]],[11,"from","tvm::runtime","",16,[[["match",3]],["argvalue",4]]],[11,"from","","",16,[[["match",3]],["argvalue",4]]],[11,"from","","",17,[[["match",3]],["retvalue",4]]],[11,"from","tvm::ir::relay","",75,[[["functionnode",3]]]],[11,"from","","",75,[[["objectptr",3],["functionnode",3]]]],[11,"from","tvm::runtime","",16,[[["function",3]],["argvalue",4]]],[11,"from","","",16,[[["function",3]],["argvalue",4]]],[11,"from","","",17,[[["function",3]],["retvalue",4]]],[11,"from","tvm::ir::tir","",100,[[["intimmnode",3]]]],[11,"from","","",100,[[["intimmnode",3],["objectptr",3]]]],[11,"from","tvm::runtime","",16,[[["intimm",3]],["argvalue",4]]],[11,"from","","",16,[[["intimm",3]],["argvalue",4]]],[11,"from","","",17,[[["intimm",3]],["retvalue",4]]],[11,"from","tvm::ir::tir","",101,[[["varnode",3]]]],[11,"from","","",101,[[["objectptr",3],["varnode",3]]]],[11,"from","tvm::runtime","",16,[[["var",3]],["argvalue",4]]],[11,"from","","",16,[[["var",3]],["argvalue",4]]],[11,"from","","",17,[[["var",3]],["retvalue",4]]],[11,"from","tvm::ir::tir","",102,[[["addnode",3]]]],[11,"from","","",102,[[["objectptr",3],["addnode",3]]]],[11,"from","tvm::runtime","",16,[[["add",3]],["argvalue",4]]],[11,"from","","",16,[[["add",3]],["argvalue",4]]],[11,"from","","",17,[[["add",3]],["retvalue",4]]],[11,"from","tvm::ir::tir","",103,[[["subnode",3]]]],[11,"from","","",103,[[["objectptr",3],["subnode",3]]]],[11,"from","tvm::runtime","",16,[[["sub",3]],["argvalue",4]]],[11,"from","","",16,[[["sub",3]],["argvalue",4]]],[11,"from","","",17,[[["sub",3]],["retvalue",4]]],[11,"from","tvm::ir::tir","",104,[[["mulnode",3]]]],[11,"from","","",104,[[["objectptr",3],["mulnode",3]]]],[11,"from","tvm::runtime","",16,[[["mul",3]],["argvalue",4]]],[11,"from","","",16,[[["mul",3]],["argvalue",4]]],[11,"from","","",17,[[["mul",3]],["retvalue",4]]],[11,"from","tvm::ir::tir","",105,[[["divnode",3]]]],[11,"from","","",105,[[["divnode",3],["objectptr",3]]]],[11,"from","tvm::runtime","",16,[[["div",3]],["argvalue",4]]],[11,"from","","",16,[[["div",3]],["argvalue",4]]],[11,"from","","",17,[[["div",3]],["retvalue",4]]],[11,"from","tvm::ir::tir","",106,[[["modnode",3]]]],[11,"from","","",106,[[["objectptr",3],["modnode",3]]]],[11,"from","tvm::runtime","",16,[[["mod",3]],["argvalue",4]]],[11,"from","","",16,[[["mod",3]],["argvalue",4]]],[11,"from","","",17,[[["mod",3]],["retvalue",4]]],[11,"from","tvm::ir::tir","",107,[[["floordivnode",3]]]],[11,"from","","",107,[[["objectptr",3],["floordivnode",3]]]],[11,"from","tvm::runtime","",16,[[["floordiv",3]],["argvalue",4]]],[11,"from","","",16,[[["floordiv",3]],["argvalue",4]]],[11,"from","","",17,[[["floordiv",3]],["retvalue",4]]],[11,"from","tvm::ir::tir","",108,[[["floormodnode",3]]]],[11,"from","","",108,[[["objectptr",3],["floormodnode",3]]]],[11,"from","tvm::runtime","",16,[[["floormod",3]],["argvalue",4]]],[11,"from","","",16,[[["floormod",3]],["argvalue",4]]],[11,"from","","",17,[[["floormod",3]],["retvalue",4]]],[11,"from","tvm::ir::tir","",109,[[["minnode",3]]]],[11,"from","","",109,[[["objectptr",3],["minnode",3]]]],[11,"from","tvm::runtime","",16,[[["min",3]],["argvalue",4]]],[11,"from","","",16,[[["min",3]],["argvalue",4]]],[11,"from","","",17,[[["min",3]],["retvalue",4]]],[11,"from","tvm::ir::tir","",110,[[["maxnode",3]]]],[11,"from","","",110,[[["objectptr",3],["maxnode",3]]]],[11,"from","tvm::runtime","",16,[[["max",3]],["argvalue",4]]],[11,"from","","",16,[[["max",3]],["argvalue",4]]],[11,"from","","",17,[[["max",3]],["retvalue",4]]],[11,"from","tvm::ir::tir","",111,[[["castnode",3]]]],[11,"from","","",111,[[["objectptr",3],["castnode",3]]]],[11,"from","tvm::runtime","",16,[[["cast",3]],["argvalue",4]]],[11,"from","","",16,[[["cast",3]],["argvalue",4]]],[11,"from","","",17,[[["cast",3]],["retvalue",4]]],[11,"from","tvm::ir::tir","",112,[[["rampnode",3]]]],[11,"from","","",112,[[["rampnode",3],["objectptr",3]]]],[11,"from","tvm::runtime","",16,[[["ramp",3]],["argvalue",4]]],[11,"from","","",16,[[["ramp",3]],["argvalue",4]]],[11,"from","","",17,[[["ramp",3]],["retvalue",4]]],[11,"from","tvm::ir::tir","",113,[[["selectnode",3]]]],[11,"from","","",113,[[["selectnode",3],["objectptr",3]]]],[11,"from","tvm::runtime","",16,[[["select",3]],["argvalue",4]]],[11,"from","","",16,[[["select",3]],["argvalue",4]]],[11,"from","","",17,[[["select",3]],["retvalue",4]]],[11,"from","tvm::ir::tir","",114,[[["eqnode",3]]]],[11,"from","","",114,[[["eqnode",3],["objectptr",3]]]],[11,"from","tvm::runtime","",16,[[["eq",3]],["argvalue",4]]],[11,"from","","",16,[[["eq",3]],["argvalue",4]]],[11,"from","","",17,[[["eq",3]],["retvalue",4]]],[11,"from","tvm::ir::tir","",115,[[["nenode",3]]]],[11,"from","","",115,[[["objectptr",3],["nenode",3]]]],[11,"from","tvm::runtime","",16,[[["ne",3]],["argvalue",4]]],[11,"from","","",16,[[["ne",3]],["argvalue",4]]],[11,"from","","",17,[[["ne",3]],["retvalue",4]]],[11,"from","tvm::ir::tir","",116,[[["ltnode",3]]]],[11,"from","","",116,[[["ltnode",3],["objectptr",3]]]],[11,"from","tvm::runtime","",16,[[["lt",3]],["argvalue",4]]],[11,"from","","",16,[[["lt",3]],["argvalue",4]]],[11,"from","","",17,[[["lt",3]],["retvalue",4]]],[11,"from","tvm::ir::tir","",117,[[["lenode",3]]]],[11,"from","","",117,[[["objectptr",3],["lenode",3]]]],[11,"from","tvm::runtime","",16,[[["le",3]],["argvalue",4]]],[11,"from","","",16,[[["le",3]],["argvalue",4]]],[11,"from","","",17,[[["le",3]],["retvalue",4]]],[11,"from","tvm::ir::tir","",118,[[["gtnode",3]]]],[11,"from","","",118,[[["objectptr",3],["gtnode",3]]]],[11,"from","tvm::runtime","",16,[[["gt",3]],["argvalue",4]]],[11,"from","","",16,[[["gt",3]],["argvalue",4]]],[11,"from","","",17,[[["gt",3]],["retvalue",4]]],[11,"from","tvm::ir::tir","",119,[[["genode",3]]]],[11,"from","","",119,[[["objectptr",3],["genode",3]]]],[11,"from","tvm::runtime","",16,[[["ge",3]],["argvalue",4]]],[11,"from","","",16,[[["ge",3]],["argvalue",4]]],[11,"from","","",17,[[["ge",3]],["retvalue",4]]],[11,"from","tvm::ir::tir","",120,[[["andnode",3]]]],[11,"from","","",120,[[["objectptr",3],["andnode",3]]]],[11,"from","tvm::runtime","",16,[[["and",3]],["argvalue",4]]],[11,"from","","",16,[[["and",3]],["argvalue",4]]],[11,"from","","",17,[[["and",3]],["retvalue",4]]],[11,"from","tvm::ir::tir","",121,[[["ornode",3]]]],[11,"from","","",121,[[["objectptr",3],["ornode",3]]]],[11,"from","tvm::runtime","",16,[[["or",3]],["argvalue",4]]],[11,"from","","",16,[[["or",3]],["argvalue",4]]],[11,"from","","",17,[[["or",3]],["retvalue",4]]],[11,"from","tvm::ir::tir","",122,[[["notnode",3]]]],[11,"from","","",122,[[["objectptr",3],["notnode",3]]]],[11,"from","tvm::runtime","",16,[[["not",3]],["argvalue",4]]],[11,"from","","",16,[[["not",3]],["argvalue",4]]],[11,"from","","",17,[[["not",3]],["retvalue",4]]],[11,"from","tvm::ir::tir","",123,[[["letnode",3]]]],[11,"from","","",123,[[["objectptr",3],["letnode",3]]]],[11,"from","tvm::runtime","",16,[[["let",3]],["argvalue",4]]],[11,"from","","",16,[[["let",3]],["argvalue",4]]],[11,"from","","",17,[[["let",3]],["retvalue",4]]],[11,"from","tvm::ir::ty","",155,[[["typenode",3]]]],[11,"from","","",155,[[["objectptr",3],["typenode",3]]]],[11,"from","tvm::runtime","",16,[[["type",3]],["argvalue",4]]],[11,"from","","",16,[[["type",3]],["argvalue",4]]],[11,"from","","",17,[[["type",3]],["retvalue",4]]],[11,"from","tvm::ir::ty","",156,[[["basetensortypenode",3]]]],[11,"from","","",156,[[["basetensortypenode",3],["objectptr",3]]]],[11,"from","tvm::runtime","",16,[[["basetensortype",3]],["argvalue",4]]],[11,"from","","",16,[[["basetensortype",3]],["argvalue",4]]],[11,"from","","",17,[[["basetensortype",3]],["retvalue",4]]],[11,"from","tvm::ir::ty","",157,[[["tensortypenode",3]]]],[11,"from","","",157,[[["tensortypenode",3],["objectptr",3]]]],[11,"from","tvm::runtime","",16,[[["tensortype",3]],["argvalue",4]]],[11,"from","","",16,[[["tensortype",3]],["argvalue",4]]],[11,"from","","",17,[[["tensortype",3]],["retvalue",4]]],[11,"from","tvm::transform","",132,[[["passinfonode",3]]]],[11,"from","","",132,[[["passinfonode",3],["objectptr",3]]]],[11,"from","tvm::runtime","",16,[[["passinfo",3]],["argvalue",4]]],[11,"from","","",16,[[["passinfo",3]],["argvalue",4]]],[11,"from","","",17,[[["passinfo",3]],["retvalue",4]]],[11,"clone","tvm::ir::arith","",20,[[],["constintbound",3]]],[11,"clone","tvm::ir::attrs","",140,[[],["attrs",3]]],[11,"clone","tvm::ir::expr","",141,[[],["baseexpr",3]]],[11,"clone","","",142,[[],["primexpr",3]]],[11,"clone","","",25,[[],["globalvar",3]]],[11,"clone","tvm::ir::function","",143,[[],["basefunc",3]]],[11,"clone","tvm::ir::module","",28,[[],["irmodule",3]]],[11,"clone","tvm::ir::op","",144,[[],["op",3]]],[11,"clone","tvm::ir::relay::attrs::nn","",148,[[],["conv2dattrs",3]]],[11,"clone","","",149,[[],["biasaddattrs",3]]],[11,"clone","","",150,[[],["denseattrs",3]]],[11,"clone","","",151,[[],["globalpool2dattrs",3]]],[11,"clone","","",152,[[],["maxpool2dattrs",3]]],[11,"clone","","",153,[[],["softmaxattrs",3]]],[11,"clone","tvm::ir::relay::attrs::transform","",154,[[],["expanddimsattrs",3]]],[11,"clone","tvm::ir::relay","",145,[[],["expr",3]]],[11,"clone","","",146,[[],["id",3]]],[11,"clone","","",58,[[],["constant",3]]],[11,"clone","","",59,[[],["tuple",3]]],[11,"clone","","",60,[[],["var",3]]],[11,"clone","","",61,[[],["call",3]]],[11,"clone","","",62,[[],["let",3]]],[11,"clone","","",63,[[],["if",3]]],[11,"clone","","",64,[[],["tuplegetitem",3]]],[11,"clone","","",65,[[],["refcreate",3]]],[11,"clone","","",66,[[],["refread",3]]],[11,"clone","","",67,[[],["refwrite",3]]],[11,"clone","","",68,[[],["constructor",3]]],[11,"clone","","",147,[[],["pattern",3]]],[11,"clone","","",69,[[],["patternwildcard",3]]],[11,"clone","","",70,[[],["patternvar",3]]],[11,"clone","","",71,[[],["patternconstructor",3]]],[11,"clone","","",72,[[],["patterntuple",3]]],[11,"clone","","",73,[[],["clause",3]]],[11,"clone","","",74,[[],["match",3]]],[11,"clone","","",75,[[],["function",3]]],[11,"clone","tvm::ir::tir","",100,[[],["intimm",3]]],[11,"clone","","",101,[[],["var",3]]],[11,"clone","","",102,[[],["add",3]]],[11,"clone","","",103,[[],["sub",3]]],[11,"clone","","",104,[[],["mul",3]]],[11,"clone","","",105,[[],["div",3]]],[11,"clone","","",106,[[],["mod",3]]],[11,"clone","","",107,[[],["floordiv",3]]],[11,"clone","","",108,[[],["floormod",3]]],[11,"clone","","",109,[[],["min",3]]],[11,"clone","","",110,[[],["max",3]]],[11,"clone","","",111,[[],["cast",3]]],[11,"clone","","",112,[[],["ramp",3]]],[11,"clone","","",113,[[],["select",3]]],[11,"clone","","",114,[[],["eq",3]]],[11,"clone","","",115,[[],["ne",3]]],[11,"clone","","",116,[[],["lt",3]]],[11,"clone","","",117,[[],["le",3]]],[11,"clone","","",118,[[],["gt",3]]],[11,"clone","","",119,[[],["ge",3]]],[11,"clone","","",120,[[],["and",3]]],[11,"clone","","",121,[[],["or",3]]],[11,"clone","","",122,[[],["not",3]]],[11,"clone","","",123,[[],["let",3]]],[11,"clone","tvm::ir::ty","",155,[[],["type",3]]],[11,"clone","","",156,[[],["basetensortype",3]]],[11,"clone","","",157,[[],["tensortype",3]]],[11,"clone","tvm::transform","",132,[[],["passinfo",3]]],[11,"eq","tvm::ir::relay","",145,[[]]],[11,"deref","tvm::ir::arith","",20,[[]]],[11,"deref","tvm::ir::attrs","",140,[[]]],[11,"deref","tvm::ir::expr","",141,[[]]],[11,"deref","","",142,[[]]],[11,"deref","","",25,[[]]],[11,"deref","tvm::ir::function","",143,[[]]],[11,"deref","tvm::ir::module","",28,[[]]],[11,"deref","tvm::ir::op","",144,[[]]],[11,"deref","tvm::ir::relay::attrs::nn","",148,[[]]],[11,"deref","","",149,[[]]],[11,"deref","","",150,[[]]],[11,"deref","","",151,[[]]],[11,"deref","","",152,[[]]],[11,"deref","","",153,[[]]],[11,"deref","tvm::ir::relay::attrs::transform","",154,[[]]],[11,"deref","tvm::ir::relay","",145,[[]]],[11,"deref","","",146,[[]]],[11,"deref","","",58,[[]]],[11,"deref","","",59,[[]]],[11,"deref","","",60,[[]]],[11,"deref","","",61,[[]]],[11,"deref","","",62,[[]]],[11,"deref","","",63,[[]]],[11,"deref","","",64,[[]]],[11,"deref","","",65,[[]]],[11,"deref","","",66,[[]]],[11,"deref","","",67,[[]]],[11,"deref","","",68,[[]]],[11,"deref","","",147,[[]]],[11,"deref","","",69,[[]]],[11,"deref","","",70,[[]]],[11,"deref","","",71,[[]]],[11,"deref","","",72,[[]]],[11,"deref","","",73,[[]]],[11,"deref","","",74,[[]]],[11,"deref","","",75,[[]]],[11,"deref","tvm::ir::tir","",100,[[]]],[11,"deref","","",101,[[]]],[11,"deref","","",102,[[]]],[11,"deref","","",103,[[]]],[11,"deref","","",104,[[]]],[11,"deref","","",105,[[]]],[11,"deref","","",106,[[]]],[11,"deref","","",107,[[]]],[11,"deref","","",108,[[]]],[11,"deref","","",109,[[]]],[11,"deref","","",110,[[]]],[11,"deref","","",111,[[]]],[11,"deref","","",112,[[]]],[11,"deref","","",113,[[]]],[11,"deref","","",114,[[]]],[11,"deref","","",115,[[]]],[11,"deref","","",116,[[]]],[11,"deref","","",117,[[]]],[11,"deref","","",118,[[]]],[11,"deref","","",119,[[]]],[11,"deref","","",120,[[]]],[11,"deref","","",121,[[]]],[11,"deref","","",122,[[]]],[11,"deref","","",123,[[]]],[11,"deref","tvm::ir::ty","",155,[[]]],[11,"deref","","",156,[[]]],[11,"deref","","",157,[[]]],[11,"deref","tvm::transform","",132,[[]]],[11,"hash","tvm::ir::relay","",145,[[]]],[11,"try_from","tvm::ir::arith","",20,[[["retvalue",4]],[["constintbound",3],["result",6]]]],[11,"try_from","","",20,[[["argvalue",4]],[["constintbound",3],["result",6]]]],[11,"try_from","tvm::ir::attrs","",140,[[["retvalue",4]],[["result",6],["attrs",3]]]],[11,"try_from","","",140,[[["argvalue",4]],[["result",6],["attrs",3]]]],[11,"try_from","tvm::ir::expr","",141,[[["retvalue",4]],[["result",6],["baseexpr",3]]]],[11,"try_from","","",141,[[["argvalue",4]],[["result",6],["baseexpr",3]]]],[11,"try_from","","",142,[[["retvalue",4]],[["primexpr",3],["result",6]]]],[11,"try_from","","",142,[[["argvalue",4]],[["primexpr",3],["result",6]]]],[11,"try_from","","",25,[[["retvalue",4]],[["result",6],["globalvar",3]]]],[11,"try_from","","",25,[[["argvalue",4]],[["result",6],["globalvar",3]]]],[11,"try_from","tvm::ir::function","",143,[[["retvalue",4]],[["result",6],["basefunc",3]]]],[11,"try_from","","",143,[[["argvalue",4]],[["result",6],["basefunc",3]]]],[11,"try_from","tvm::ir::module","",28,[[["retvalue",4]],[["result",6],["irmodule",3]]]],[11,"try_from","","",28,[[["argvalue",4]],[["result",6],["irmodule",3]]]],[11,"try_from","tvm::ir::op","",144,[[["retvalue",4]],[["op",3],["result",6]]]],[11,"try_from","","",144,[[["argvalue",4]],[["op",3],["result",6]]]],[11,"try_from","tvm::ir::relay::attrs::nn","",148,[[["retvalue",4]],[["conv2dattrs",3],["result",6]]]],[11,"try_from","","",148,[[["argvalue",4]],[["conv2dattrs",3],["result",6]]]],[11,"try_from","","",149,[[["retvalue",4]],[["result",6],["biasaddattrs",3]]]],[11,"try_from","","",149,[[["argvalue",4]],[["result",6],["biasaddattrs",3]]]],[11,"try_from","","",150,[[["retvalue",4]],[["result",6],["denseattrs",3]]]],[11,"try_from","","",150,[[["argvalue",4]],[["result",6],["denseattrs",3]]]],[11,"try_from","","",151,[[["retvalue",4]],[["globalpool2dattrs",3],["result",6]]]],[11,"try_from","","",151,[[["argvalue",4]],[["globalpool2dattrs",3],["result",6]]]],[11,"try_from","","",152,[[["retvalue",4]],[["result",6],["maxpool2dattrs",3]]]],[11,"try_from","","",152,[[["argvalue",4]],[["result",6],["maxpool2dattrs",3]]]],[11,"try_from","","",153,[[["retvalue",4]],[["result",6],["softmaxattrs",3]]]],[11,"try_from","","",153,[[["argvalue",4]],[["result",6],["softmaxattrs",3]]]],[11,"try_from","tvm::ir::relay::attrs::transform","",154,[[["retvalue",4]],[["expanddimsattrs",3],["result",6]]]],[11,"try_from","","",154,[[["argvalue",4]],[["expanddimsattrs",3],["result",6]]]],[11,"try_from","tvm::ir::relay","",145,[[["retvalue",4]],[["result",6],["expr",3]]]],[11,"try_from","","",145,[[["argvalue",4]],[["result",6],["expr",3]]]],[11,"try_from","","",146,[[["retvalue",4]],[["result",6],["id",3]]]],[11,"try_from","","",146,[[["argvalue",4]],[["result",6],["id",3]]]],[11,"try_from","","",58,[[["retvalue",4]],[["result",6],["constant",3]]]],[11,"try_from","","",58,[[["argvalue",4]],[["result",6],["constant",3]]]],[11,"try_from","","",59,[[["retvalue",4]],[["result",6],["tuple",3]]]],[11,"try_from","","",59,[[["argvalue",4]],[["result",6],["tuple",3]]]],[11,"try_from","","",60,[[["retvalue",4]],[["result",6],["var",3]]]],[11,"try_from","","",60,[[["argvalue",4]],[["result",6],["var",3]]]],[11,"try_from","","",61,[[["retvalue",4]],[["result",6],["call",3]]]],[11,"try_from","","",61,[[["argvalue",4]],[["result",6],["call",3]]]],[11,"try_from","","",62,[[["retvalue",4]],[["result",6],["let",3]]]],[11,"try_from","","",62,[[["argvalue",4]],[["result",6],["let",3]]]],[11,"try_from","","",63,[[["retvalue",4]],[["if",3],["result",6]]]],[11,"try_from","","",63,[[["argvalue",4]],[["if",3],["result",6]]]],[11,"try_from","","",64,[[["retvalue",4]],[["tuplegetitem",3],["result",6]]]],[11,"try_from","","",64,[[["argvalue",4]],[["tuplegetitem",3],["result",6]]]],[11,"try_from","","",65,[[["retvalue",4]],[["result",6],["refcreate",3]]]],[11,"try_from","","",65,[[["argvalue",4]],[["result",6],["refcreate",3]]]],[11,"try_from","","",66,[[["retvalue",4]],[["result",6],["refread",3]]]],[11,"try_from","","",66,[[["argvalue",4]],[["result",6],["refread",3]]]],[11,"try_from","","",67,[[["retvalue",4]],[["result",6],["refwrite",3]]]],[11,"try_from","","",67,[[["argvalue",4]],[["result",6],["refwrite",3]]]],[11,"try_from","","",68,[[["retvalue",4]],[["constructor",3],["result",6]]]],[11,"try_from","","",68,[[["argvalue",4]],[["constructor",3],["result",6]]]],[11,"try_from","","",147,[[["retvalue",4]],[["result",6],["pattern",3]]]],[11,"try_from","","",147,[[["argvalue",4]],[["result",6],["pattern",3]]]],[11,"try_from","","",69,[[["retvalue",4]],[["result",6],["patternwildcard",3]]]],[11,"try_from","","",69,[[["argvalue",4]],[["result",6],["patternwildcard",3]]]],[11,"try_from","","",70,[[["retvalue",4]],[["patternvar",3],["result",6]]]],[11,"try_from","","",70,[[["argvalue",4]],[["patternvar",3],["result",6]]]],[11,"try_from","","",71,[[["retvalue",4]],[["result",6],["patternconstructor",3]]]],[11,"try_from","","",71,[[["argvalue",4]],[["result",6],["patternconstructor",3]]]],[11,"try_from","","",72,[[["retvalue",4]],[["result",6],["patterntuple",3]]]],[11,"try_from","","",72,[[["argvalue",4]],[["result",6],["patterntuple",3]]]],[11,"try_from","","",73,[[["retvalue",4]],[["result",6],["clause",3]]]],[11,"try_from","","",73,[[["argvalue",4]],[["result",6],["clause",3]]]],[11,"try_from","","",74,[[["retvalue",4]],[["result",6],["match",3]]]],[11,"try_from","","",74,[[["argvalue",4]],[["result",6],["match",3]]]],[11,"try_from","","",75,[[["retvalue",4]],[["function",3],["result",6]]]],[11,"try_from","","",75,[[["argvalue",4]],[["function",3],["result",6]]]],[11,"try_from","tvm::ir::tir","",100,[[["retvalue",4]],[["intimm",3],["result",6]]]],[11,"try_from","","",100,[[["argvalue",4]],[["intimm",3],["result",6]]]],[11,"try_from","","",101,[[["retvalue",4]],[["var",3],["result",6]]]],[11,"try_from","","",101,[[["argvalue",4]],[["var",3],["result",6]]]],[11,"try_from","","",102,[[["retvalue",4]],[["result",6],["add",3]]]],[11,"try_from","","",102,[[["argvalue",4]],[["result",6],["add",3]]]],[11,"try_from","","",103,[[["retvalue",4]],[["result",6],["sub",3]]]],[11,"try_from","","",103,[[["argvalue",4]],[["result",6],["sub",3]]]],[11,"try_from","","",104,[[["retvalue",4]],[["result",6],["mul",3]]]],[11,"try_from","","",104,[[["argvalue",4]],[["result",6],["mul",3]]]],[11,"try_from","","",105,[[["retvalue",4]],[["div",3],["result",6]]]],[11,"try_from","","",105,[[["argvalue",4]],[["div",3],["result",6]]]],[11,"try_from","","",106,[[["retvalue",4]],[["result",6],["mod",3]]]],[11,"try_from","","",106,[[["argvalue",4]],[["result",6],["mod",3]]]],[11,"try_from","","",107,[[["retvalue",4]],[["result",6],["floordiv",3]]]],[11,"try_from","","",107,[[["argvalue",4]],[["result",6],["floordiv",3]]]],[11,"try_from","","",108,[[["retvalue",4]],[["floormod",3],["result",6]]]],[11,"try_from","","",108,[[["argvalue",4]],[["floormod",3],["result",6]]]],[11,"try_from","","",109,[[["retvalue",4]],[["result",6],["min",3]]]],[11,"try_from","","",109,[[["argvalue",4]],[["result",6],["min",3]]]],[11,"try_from","","",110,[[["retvalue",4]],[["result",6],["max",3]]]],[11,"try_from","","",110,[[["argvalue",4]],[["result",6],["max",3]]]],[11,"try_from","","",111,[[["retvalue",4]],[["cast",3],["result",6]]]],[11,"try_from","","",111,[[["argvalue",4]],[["cast",3],["result",6]]]],[11,"try_from","","",112,[[["retvalue",4]],[["result",6],["ramp",3]]]],[11,"try_from","","",112,[[["argvalue",4]],[["result",6],["ramp",3]]]],[11,"try_from","","",113,[[["retvalue",4]],[["result",6],["select",3]]]],[11,"try_from","","",113,[[["argvalue",4]],[["result",6],["select",3]]]],[11,"try_from","","",114,[[["retvalue",4]],[["eq",3],["result",6]]]],[11,"try_from","","",114,[[["argvalue",4]],[["eq",3],["result",6]]]],[11,"try_from","","",115,[[["retvalue",4]],[["result",6],["ne",3]]]],[11,"try_from","","",115,[[["argvalue",4]],[["result",6],["ne",3]]]],[11,"try_from","","",116,[[["retvalue",4]],[["result",6],["lt",3]]]],[11,"try_from","","",116,[[["argvalue",4]],[["result",6],["lt",3]]]],[11,"try_from","","",117,[[["retvalue",4]],[["result",6],["le",3]]]],[11,"try_from","","",117,[[["argvalue",4]],[["result",6],["le",3]]]],[11,"try_from","","",118,[[["retvalue",4]],[["gt",3],["result",6]]]],[11,"try_from","","",118,[[["argvalue",4]],[["gt",3],["result",6]]]],[11,"try_from","","",119,[[["retvalue",4]],[["result",6],["ge",3]]]],[11,"try_from","","",119,[[["argvalue",4]],[["result",6],["ge",3]]]],[11,"try_from","","",120,[[["retvalue",4]],[["and",3],["result",6]]]],[11,"try_from","","",120,[[["argvalue",4]],[["and",3],["result",6]]]],[11,"try_from","","",121,[[["retvalue",4]],[["result",6],["or",3]]]],[11,"try_from","","",121,[[["argvalue",4]],[["result",6],["or",3]]]],[11,"try_from","","",122,[[["retvalue",4]],[["not",3],["result",6]]]],[11,"try_from","","",122,[[["argvalue",4]],[["not",3],["result",6]]]],[11,"try_from","","",123,[[["retvalue",4]],[["let",3],["result",6]]]],[11,"try_from","","",123,[[["argvalue",4]],[["let",3],["result",6]]]],[11,"try_from","tvm::ir::ty","",155,[[["retvalue",4]],[["result",6],["type",3]]]],[11,"try_from","","",155,[[["argvalue",4]],[["result",6],["type",3]]]],[11,"try_from","","",156,[[["retvalue",4]],[["basetensortype",3],["result",6]]]],[11,"try_from","","",156,[[["argvalue",4]],[["basetensortype",3],["result",6]]]],[11,"try_from","","",157,[[["retvalue",4]],[["tensortype",3],["result",6]]]],[11,"try_from","","",157,[[["argvalue",4]],[["tensortype",3],["result",6]]]],[11,"try_from","tvm::transform","",132,[[["retvalue",4]],[["result",6],["passinfo",3]]]],[11,"try_from","","",132,[[["argvalue",4]],[["result",6],["passinfo",3]]]],[11,"as_ptr","tvm::ir::arith","",20,[[],[["option",4],["objectptr",3]]]],[11,"into_ptr","","",20,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",20,[[["objectptr",3],["option",4]]]],[11,"as_ptr","tvm::ir::attrs","",140,[[],[["option",4],["objectptr",3]]]],[11,"into_ptr","","",140,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",140,[[["objectptr",3],["option",4]]]],[11,"as_ptr","tvm::ir::expr","",141,[[],[["option",4],["objectptr",3]]]],[11,"into_ptr","","",141,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",141,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",142,[[],[["option",4],["objectptr",3]]]],[11,"into_ptr","","",142,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",142,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",25,[[],[["option",4],["objectptr",3]]]],[11,"into_ptr","","",25,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",25,[[["objectptr",3],["option",4]]]],[11,"as_ptr","tvm::ir::function","",143,[[],[["option",4],["objectptr",3]]]],[11,"into_ptr","","",143,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",143,[[["objectptr",3],["option",4]]]],[11,"as_ptr","tvm::ir::module","",28,[[],[["option",4],["objectptr",3]]]],[11,"into_ptr","","",28,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",28,[[["objectptr",3],["option",4]]]],[11,"as_ptr","tvm::ir::op","",144,[[],[["option",4],["objectptr",3]]]],[11,"into_ptr","","",144,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",144,[[["objectptr",3],["option",4]]]],[11,"as_ptr","tvm::ir::relay::attrs::nn","",148,[[],[["option",4],["objectptr",3]]]],[11,"into_ptr","","",148,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",148,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",149,[[],[["option",4],["objectptr",3]]]],[11,"into_ptr","","",149,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",149,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",150,[[],[["option",4],["objectptr",3]]]],[11,"into_ptr","","",150,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",150,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",151,[[],[["option",4],["objectptr",3]]]],[11,"into_ptr","","",151,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",151,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",152,[[],[["option",4],["objectptr",3]]]],[11,"into_ptr","","",152,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",152,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",153,[[],[["option",4],["objectptr",3]]]],[11,"into_ptr","","",153,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",153,[[["objectptr",3],["option",4]]]],[11,"as_ptr","tvm::ir::relay::attrs::transform","",154,[[],[["option",4],["objectptr",3]]]],[11,"into_ptr","","",154,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",154,[[["objectptr",3],["option",4]]]],[11,"as_ptr","tvm::ir::relay","",145,[[],[["option",4],["objectptr",3]]]],[11,"into_ptr","","",145,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",145,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",146,[[],[["option",4],["objectptr",3]]]],[11,"into_ptr","","",146,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",146,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",58,[[],[["option",4],["objectptr",3]]]],[11,"into_ptr","","",58,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",58,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",59,[[],[["option",4],["objectptr",3]]]],[11,"into_ptr","","",59,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",59,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",60,[[],[["option",4],["objectptr",3]]]],[11,"into_ptr","","",60,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",60,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",61,[[],[["option",4],["objectptr",3]]]],[11,"into_ptr","","",61,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",61,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",62,[[],[["option",4],["objectptr",3]]]],[11,"into_ptr","","",62,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",62,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",63,[[],[["option",4],["objectptr",3]]]],[11,"into_ptr","","",63,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",63,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",64,[[],[["option",4],["objectptr",3]]]],[11,"into_ptr","","",64,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",64,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",65,[[],[["option",4],["objectptr",3]]]],[11,"into_ptr","","",65,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",65,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",66,[[],[["option",4],["objectptr",3]]]],[11,"into_ptr","","",66,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",66,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",67,[[],[["option",4],["objectptr",3]]]],[11,"into_ptr","","",67,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",67,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",68,[[],[["option",4],["objectptr",3]]]],[11,"into_ptr","","",68,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",68,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",147,[[],[["option",4],["objectptr",3]]]],[11,"into_ptr","","",147,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",147,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",69,[[],[["option",4],["objectptr",3]]]],[11,"into_ptr","","",69,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",69,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",70,[[],[["option",4],["objectptr",3]]]],[11,"into_ptr","","",70,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",70,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",71,[[],[["option",4],["objectptr",3]]]],[11,"into_ptr","","",71,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",71,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",72,[[],[["option",4],["objectptr",3]]]],[11,"into_ptr","","",72,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",72,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",73,[[],[["option",4],["objectptr",3]]]],[11,"into_ptr","","",73,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",73,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",74,[[],[["option",4],["objectptr",3]]]],[11,"into_ptr","","",74,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",74,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",75,[[],[["option",4],["objectptr",3]]]],[11,"into_ptr","","",75,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",75,[[["objectptr",3],["option",4]]]],[11,"as_ptr","tvm::ir::tir","",100,[[],[["option",4],["objectptr",3]]]],[11,"into_ptr","","",100,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",100,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",101,[[],[["option",4],["objectptr",3]]]],[11,"into_ptr","","",101,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",101,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",102,[[],[["option",4],["objectptr",3]]]],[11,"into_ptr","","",102,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",102,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",103,[[],[["option",4],["objectptr",3]]]],[11,"into_ptr","","",103,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",103,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",104,[[],[["option",4],["objectptr",3]]]],[11,"into_ptr","","",104,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",104,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",105,[[],[["option",4],["objectptr",3]]]],[11,"into_ptr","","",105,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",105,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",106,[[],[["option",4],["objectptr",3]]]],[11,"into_ptr","","",106,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",106,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",107,[[],[["option",4],["objectptr",3]]]],[11,"into_ptr","","",107,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",107,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",108,[[],[["option",4],["objectptr",3]]]],[11,"into_ptr","","",108,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",108,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",109,[[],[["option",4],["objectptr",3]]]],[11,"into_ptr","","",109,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",109,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",110,[[],[["option",4],["objectptr",3]]]],[11,"into_ptr","","",110,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",110,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",111,[[],[["option",4],["objectptr",3]]]],[11,"into_ptr","","",111,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",111,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",112,[[],[["option",4],["objectptr",3]]]],[11,"into_ptr","","",112,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",112,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",113,[[],[["option",4],["objectptr",3]]]],[11,"into_ptr","","",113,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",113,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",114,[[],[["option",4],["objectptr",3]]]],[11,"into_ptr","","",114,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",114,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",115,[[],[["option",4],["objectptr",3]]]],[11,"into_ptr","","",115,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",115,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",116,[[],[["option",4],["objectptr",3]]]],[11,"into_ptr","","",116,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",116,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",117,[[],[["option",4],["objectptr",3]]]],[11,"into_ptr","","",117,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",117,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",118,[[],[["option",4],["objectptr",3]]]],[11,"into_ptr","","",118,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",118,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",119,[[],[["option",4],["objectptr",3]]]],[11,"into_ptr","","",119,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",119,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",120,[[],[["option",4],["objectptr",3]]]],[11,"into_ptr","","",120,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",120,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",121,[[],[["option",4],["objectptr",3]]]],[11,"into_ptr","","",121,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",121,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",122,[[],[["option",4],["objectptr",3]]]],[11,"into_ptr","","",122,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",122,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",123,[[],[["option",4],["objectptr",3]]]],[11,"into_ptr","","",123,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",123,[[["objectptr",3],["option",4]]]],[11,"as_ptr","tvm::ir::ty","",155,[[],[["option",4],["objectptr",3]]]],[11,"into_ptr","","",155,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",155,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",156,[[],[["option",4],["objectptr",3]]]],[11,"into_ptr","","",156,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",156,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",157,[[],[["option",4],["objectptr",3]]]],[11,"into_ptr","","",157,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",157,[[["objectptr",3],["option",4]]]],[11,"as_ptr","tvm::transform","",132,[[],[["option",4],["objectptr",3]]]],[11,"into_ptr","","",132,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",132,[[["objectptr",3],["option",4]]]],[11,"downcast","tvm::runtime","",3,[[["string",3]],["error",4]]],[11,"null","","",134,[[],["function",3]]],[11,"get","","For a given function, it returns a function by name.",134,[[],[["function",3],["option",4]]]],[11,"get_boxed","","",134,[[],[["box",3],["option",4]]]],[11,"handle","","Returns the underlying TVM function handle.",134,[[]]],[11,"is_global","","Returns `true` if the underlying TVM function is global…",134,[[]]],[11,"invoke","","Calls the function that created from `Builder`.",134,[[["argvalue",4],["vec",3]],[["result",4],["error",4],["retvalue",4]]]],[11,"entry","","",135,[[],[["function",3],["option",4]]]],[11,"get_function","","Gets a function by name from a registered module.",135,[[],[["function",3],["error",4],["result",4]]]],[11,"import_module","","Imports a dependent module such as `.ptx` for gpu.",135,[[["module",3]]]],[11,"load","","Loads a module shared library from path.",135,[[],[["result",4],["error",4],["module",3]]]],[11,"enabled","","Checks if a target device is enabled for a module.",135,[[]]],[11,"handle","","Returns the underlying module handle.",135,[[]]],[11,"as_dltensor","","",136,[[],["dltensor",3]]],[11,"is_view","","",136,[[]]],[11,"shape","","Returns the shape of the NDArray.",136,[[]]],[11,"shape_usize","","Returns the shape of the NDArray as a &[usize]",136,[[],["cow",4]]],[11,"strides","","Returns the strides of the underlying NDArray.",136,[[],["option",4]]],[11,"strides_usize","","Returns the strides of the NDArray as a &[usize]",136,[[],[["option",4],["cow",4]]]],[11,"is_empty","","Returns true if the tensor is empty",136,[[]]],[11,"len","","Returns the total number of entries of the NDArray.",136,[[]]],[11,"size","","Returns the total bytes taken up by the data. This is…",136,[[]]],[11,"ctx","","Returns the context which the NDArray was defined.",136,[[],["context",3]]],[11,"dtype","","Returns the type of the entries of the NDArray.",136,[[],["datatype",3]]],[11,"ndim","","Returns the number of dimensions of the NDArray.",136,[[]]],[11,"is_contiguous","","Shows whether the underlying ndarray is contiguous in…",136,[[]]],[11,"byte_offset","","",136,[[]]],[11,"to_vec","","Flattens the NDArray to a `Vec` of the same type in cpu.",136,[[],[["result",4],["ndarrayerror",4],["vec",3]]]],[11,"to_bytearray","","Converts the NDArray to [`ByteArray`].",136,[[],[["ndarrayerror",4],["bytearray",3],["result",4]]]],[11,"copy_from_buffer","","Creates an NDArray from a mutable buffer of types i32, u32…",136,[[]]],[11,"copy_to_buffer","","",136,[[]]],[11,"fill_from_iter","","",136,[[]]],[11,"copy_to_ndarray","","Copies the NDArray to another target NDArray.",136,[[["ndarray",3]],[["ndarray",3],["result",4],["ndarrayerror",4]]]],[11,"copy_to_ctx","","Copies the NDArray to a target context.",136,[[["context",3]],[["ndarray",3],["result",4],["ndarrayerror",4]]]],[11,"from_rust_ndarray","","Converts a Rust\'s ndarray to TVM NDArray.",136,[[["arraybase",3],["datatype",3],["context",3]],[["ndarray",3],["result",4],["ndarrayerror",4]]]],[11,"empty","","Allocates and creates an empty NDArray given the shape,…",136,[[["datatype",3],["context",3]],["ndarray",3]]],[11,"new","","",4,[[["devicetype",4]],["context",3]]],[11,"cpu","","",4,[[],["context",3]]],[11,"llvm","","",4,[[],["context",3]]],[11,"stackvm","","",4,[[],["context",3]]],[11,"gpu","","",4,[[],["context",3]]],[11,"cuda","","",4,[[],["context",3]]],[11,"nvptx","","",4,[[],["context",3]]],[11,"cl","","",4,[[],["context",3]]],[11,"metal","","",4,[[],["context",3]]],[11,"vpi","","",4,[[],["context",3]]],[11,"rocm","","",4,[[],["context",3]]],[11,"ext_dev","","",4,[[],["context",3]]],[11,"new","","",137,[[],["datatype",3]]],[11,"itemsize","","Returns the number of bytes occupied by an element of this…",137,[[]]],[11,"is_type","","Returns whether this `DataType` represents primitive type…",137,[[]]],[11,"code","","",137,[[]]],[11,"bits","","",137,[[]]],[11,"lanes","","",137,[[]]],[11,"int","","",137,[[],["datatype",3]]],[11,"float","","",137,[[],["datatype",3]]],[11,"uint","","",137,[[],["datatype",3]]],[11,"n","","",5,[[],[["option",4],["devicetype",4]]]],[11,"cpu","tvm::runtime::function::ffi","",9,[[],["dlcontext",3]]],[11,"llvm","","",9,[[],["dlcontext",3]]],[11,"stackvm","","",9,[[],["dlcontext",3]]],[11,"gpu","","",9,[[],["dlcontext",3]]],[11,"cuda","","",9,[[],["dlcontext",3]]],[11,"nvptx","","",9,[[],["dlcontext",3]]],[11,"cl","","",9,[[],["dlcontext",3]]],[11,"metal","","",9,[[],["dlcontext",3]]],[11,"vpi","","",9,[[],["dlcontext",3]]],[11,"rocm","","",9,[[],["dlcontext",3]]],[11,"ext_dev","","",9,[[],["dlcontext",3]]],[11,"from_tvm_value","tvm::runtime","",16,[[["tvmvalue",19]],["argvalue",4]]],[11,"to_tvm_value","","",16,[[]]],[11,"from_tvm_value","","",17,[[["tvmvalue",19]],["retvalue",4]]],[11,"to_tvm_value","","",17,[[]]],[11,"leak","tvm::runtime::ndarray","",139,[[["objectptr",3],["ndarraycontainer",3]],["ndarraycontainer",3]]],[11,"count","tvm::runtime","",158,[[]]],[11,"base_object","","Allocates a base object value for an object subtype of…",158,[[],["object",3]]],[11,"from_raw","","",129,[[],[["option",4],["objectptr",3]]]],[11,"leak","","",129,[[["objectptr",3]]]],[11,"new","","",129,[[],["objectptr",3]]],[11,"count","","",129,[[]]],[11,"upcast","","",129,[[],["objectptr",3]]],[11,"downcast","","",129,[[],[["objectptr",3],["error",4],["result",4]]]],[11,"is_empty","","",161,[[]]],[11,"len","","",161,[[]]],[11,"as_bytes","","",161,[[]]],[11,"as_str","","",161,[[],[["result",4],["utf8error",3]]]],[11,"to_string_lossy","","",161,[[],["cow",4]]],[11,"from_vec","tvm::runtime::array","",162,[[["vec",3]],[["result",4],["array",3],["error",4]]]],[11,"get","","",162,[[],[["error",4],["result",4]]]],[11,"len","","",162,[[]]],[11,"from_data","tvm::runtime::map","",163,[[["vec",3],["argvalue",4]],[["map",3],["result",4],["error",4]]]],[11,"get","","",163,[[],[["error",4],["result",4]]]],[11,"data","tvm::runtime","Gets the underlying byte-array",165,[[]]],[11,"len","","Gets the length of the underlying byte-array",165,[[]]],[11,"to_vec","","Converts the underlying byte-array to `Vec<u8>`",165,[[],["vec",3]]],[11,"is_empty","","",165,[[]]]],"p":[[3,"TypeMismatchError"],[4,"NDArrayError"],[13,"DataTypeMismatch"],[4,"Error"],[3,"Context"],[4,"DeviceType"],[8,"ToFunction"],[8,"Typed"],[3,"__fsid_t"],[3,"DLContext"],[3,"DLDataType"],[3,"DLTensor"],[3,"DLManagedTensor"],[19,"TVMValue"],[3,"TVMByteArray"],[3,"TVMParallelGroupEnv"],[4,"ArgValue"],[4,"RetValue"],[8,"Num32"],[3,"ConstIntBoundNode"],[3,"ConstIntBound"],[3,"BaseAttrsNode"],[3,"BaseExprNode"],[3,"PrimExprNode"],[3,"GlobalVarNode"],[3,"GlobalVar"],[3,"BaseFuncNode"],[3,"IRModuleNode"],[3,"IRModule"],[3,"OpNode"],[3,"ExprNode"],[3,"IdNode"],[3,"ConstantNode"],[3,"TupleNode"],[3,"VarNode"],[3,"CallNode"],[3,"LetNode"],[3,"IfNode"],[3,"TupleGetItemNode"],[3,"RefCreateNode"],[3,"RefReadNode"],[3,"RefWriteNode"],[3,"ConstructorNode"],[3,"PatternNode"],[3,"PatternWildcardNode"],[3,"PatternVarNode"],[3,"PatternConstructorNode"],[3,"PatternTupleNode"],[3,"ClauseNode"],[3,"MatchNode"],[3,"FunctionNode"],[3,"Conv2DAttrsNode"],[3,"BiasAddAttrsNode"],[3,"DenseAttrsNode"],[3,"GlobalPool2DAttrsNode"],[3,"MaxPool2DAttrsNode"],[3,"SoftmaxAttrsNode"],[3,"ExpandDimsAttrsNode"],[3,"Constant"],[3,"Tuple"],[3,"Var"],[3,"Call"],[3,"Let"],[3,"If"],[3,"TupleGetItem"],[3,"RefCreate"],[3,"RefRead"],[3,"RefWrite"],[3,"Constructor"],[3,"PatternWildcard"],[3,"PatternVar"],[3,"PatternConstructor"],[3,"PatternTuple"],[3,"Clause"],[3,"Match"],[3,"Function"],[3,"IntImmNode"],[3,"VarNode"],[3,"AddNode"],[3,"SubNode"],[3,"MulNode"],[3,"DivNode"],[3,"ModNode"],[3,"FloorDivNode"],[3,"FloorModNode"],[3,"MinNode"],[3,"MaxNode"],[3,"CastNode"],[3,"RampNode"],[3,"SelectNode"],[3,"EqNode"],[3,"NeNode"],[3,"LtNode"],[3,"LeNode"],[3,"GtNode"],[3,"GeNode"],[3,"AndNode"],[3,"OrNode"],[3,"NotNode"],[3,"LetNode"],[3,"IntImm"],[3,"Var"],[3,"Add"],[3,"Sub"],[3,"Mul"],[3,"Div"],[3,"Mod"],[3,"FloorDiv"],[3,"FloorMod"],[3,"Min"],[3,"Max"],[3,"Cast"],[3,"Ramp"],[3,"Select"],[3,"Eq"],[3,"Ne"],[3,"Lt"],[3,"Le"],[3,"Gt"],[3,"Ge"],[3,"And"],[3,"Or"],[3,"Not"],[3,"Let"],[3,"TypeNode"],[3,"BaseTensorTypeNode"],[3,"TensorTypeNode"],[8,"IsObjectRef"],[8,"IsObject"],[3,"ObjectPtr"],[3,"GraphRt"],[3,"PassInfoNode"],[3,"PassInfo"],[3,"FunctionNotFoundError"],[3,"Function"],[3,"Module"],[3,"NDArray"],[3,"DataType"],[3,"UnsupportedDeviceError"],[3,"NDArrayContainer"],[3,"Attrs"],[3,"BaseExpr"],[3,"PrimExpr"],[3,"BaseFunc"],[3,"Op"],[3,"Expr"],[3,"Id"],[3,"Pattern"],[3,"Conv2DAttrs"],[3,"BiasAddAttrs"],[3,"DenseAttrs"],[3,"GlobalPool2DAttrs"],[3,"MaxPool2DAttrs"],[3,"SoftmaxAttrs"],[3,"ExpandDimsAttrs"],[3,"Type"],[3,"BaseTensorType"],[3,"TensorType"],[3,"Object"],[3,"ObjectRef"],[3,"StringObj"],[3,"String"],[3,"Array"],[3,"Map"],[3,"IntoIter"],[3,"ByteArray"]]},\
"tvm_macros":{"doc":"","i":[[14,"import_module","tvm_macros","",null,null],[24,"Object","","",null,null],[14,"external","","",null,null]],"p":[]},\
"tvm_rt":{"doc":"TVM is a compiler stack for deep learning systems.","i":[[3,"Context","tvm_rt","",null,null],[12,"device_type","","",0,null],[12,"device_id","","",0,null],[4,"DeviceType","","Device type represents the set of devices supported by TVM.",null,null],[13,"CPU","","",1,null],[13,"GPU","","",1,null],[13,"CPUPinned","","",1,null],[13,"OpenCL","","",1,null],[13,"Vulkan","","",1,null],[13,"Metal","","",1,null],[13,"VPI","","",1,null],[13,"ROCM","","",1,null],[13,"ExtDev","","",1,null],[4,"ArgValue","","A borrowed TVMPODValue. Can be constructed using `into()`…",null,null],[13,"Int","","",2,null],[13,"UInt","","",2,null],[13,"Float","","",2,null],[13,"Null","","",2,null],[13,"DataType","","",2,null],[13,"String","","",2,null],[13,"Context","","",2,null],[13,"Handle","","",2,null],[13,"ArrayHandle","","",2,null],[13,"ObjectHandle","","",2,null],[13,"ModuleHandle","","",2,null],[13,"FuncHandle","","",2,null],[13,"NDArrayHandle","","",2,null],[13,"Bytes","","",2,null],[13,"Str","","",2,null],[4,"RetValue","","An owned TVMPODValue. Can be converted from a variety of…",null,null],[13,"Int","","",3,null],[13,"UInt","","",3,null],[13,"Float","","",3,null],[13,"Null","","",3,null],[13,"DataType","","",3,null],[13,"String","","",3,null],[13,"Context","","",3,null],[13,"Handle","","",3,null],[13,"ArrayHandle","","",3,null],[13,"ObjectHandle","","",3,null],[13,"ModuleHandle","","",3,null],[13,"FuncHandle","","",3,null],[13,"NDArrayHandle","","",3,null],[13,"Bytes","","",3,null],[13,"Str","","",3,null],[3,"ByteArray","","A newtype wrapping a raw TVM byte-array.",null,null],[3,"DataType","","",null,null],[14,"external","","",null,null],[5,"get_last_error","","Gets the last error message.",null,[[]]],[5,"version","","Outputs the current TVM version.",null,[[]]],[0,"object","","",null,null],[3,"Object","tvm_rt::object","A TVM intrusive smart pointer header, in TVM all FFI…",null,null],[3,"ObjectPtr","","A smart pointer for types which implement IsObject. This…",null,null],[12,"ptr","","",4,null],[3,"ObjectRef","","",null,null],[5,"debug_print","","",null,[[["objectref",3]],[["cstring",3],["result",6]]]],[5,"structural_hash","","",null,[[["objectref",3]],[["result",6],["objectref",3]]]],[5,"structural_equal","","",null,[[["objectref",3]],[["result",6],["objectref",3]]]],[11,"count","","",5,[[]]],[11,"base_object","","Allocates a base object value for an object subtype of…",5,[[],["object",3]]],[11,"from_raw","","",4,[[],[["option",4],["objectptr",3]]]],[11,"leak","","",4,[[["objectptr",3]]]],[11,"new","","",4,[[],["objectptr",3]]],[11,"count","","",4,[[]]],[11,"upcast","","",4,[[],["objectptr",3]]],[11,"downcast","","",4,[[],[["result",4],["objectptr",3],["error",4]]]],[8,"IsObject","","An unsafe trait which should be implemented for an object…",null,null],[18,"TYPE_KEY","","",6,null],[11,"typed_delete","","",6,[[]]],[8,"IsObjectRef","","",null,null],[16,"Object","","",7,null],[10,"as_ptr","","",7,[[],[["option",4],["objectptr",3]]]],[10,"into_ptr","","",7,[[],[["objectptr",3],["option",4]]]],[10,"from_ptr","","",7,[[["objectptr",3],["option",4]]]],[11,"null","","",7,[[]]],[11,"into_arg_value","","",7,[[],["argvalue",4]]],[11,"from_arg_value","","",7,[[["argvalue",4]],[["result",4],["error",4]]]],[11,"into_ret_value","","",7,[[],["retvalue",4]]],[11,"from_ret_value","","",7,[[["retvalue",4]],[["result",4],["error",4]]]],[11,"upcast","","",7,[[]]],[11,"downcast","","",7,[[],[["error",4],["result",4]]]],[0,"string","tvm_rt","",null,null],[3,"StringObj","tvm_rt::string","",null,null],[3,"String","","",null,null],[11,"is_empty","","",8,[[]]],[11,"len","","",8,[[]]],[11,"as_bytes","","",8,[[]]],[11,"as_str","","",8,[[],[["result",4],["utf8error",3]]]],[11,"to_string_lossy","","",8,[[],["cow",4]]],[0,"array","tvm_rt","",null,null],[3,"Array","tvm_rt::array","",null,null],[5,"array_get_item","","",null,[[["objectref",3]],[["result",6],["objectref",3]]]],[5,"array_size","","",null,[[["objectref",3]],["result",6]]],[11,"from_vec","","",9,[[["vec",3]],[["result",6],["array",3]]]],[11,"get","","",9,[[],["result",6]]],[11,"len","","",9,[[]]],[0,"context","tvm_rt","",null,null],[4,"DeviceType","tvm_rt::context","Device type represents the set of devices supported by TVM.",null,null],[13,"CPU","","",1,null],[13,"GPU","","",1,null],[13,"CPUPinned","","",1,null],[13,"OpenCL","","",1,null],[13,"Vulkan","","",1,null],[13,"Metal","","",1,null],[13,"VPI","","",1,null],[13,"ROCM","","",1,null],[13,"ExtDev","","",1,null],[3,"Context","","",null,null],[12,"device_type","","",0,null],[12,"device_id","","",0,null],[3,"UnsupportedDeviceError","","",null,null],[5,"get_device_attr","","",null,[[],["result",6]]],[0,"errors","tvm_rt","",null,null],[3,"FunctionNotFoundError","tvm_rt::errors","",null,null],[3,"TypeMismatchError","","",null,null],[12,"expected","","",10,null],[12,"actual","","",10,null],[4,"NDArrayError","","",null,null],[13,"EmptyArray","","",11,null],[13,"InvalidDatatype","","",11,null],[13,"ShapeError","","",11,null],[13,"DataTypeMismatch","","",11,null],[12,"expected","tvm_rt::errors::NDArrayError","",12,null],[12,"actual","","",12,null],[4,"Error","tvm_rt::errors","",null,null],[13,"Downcast","","",13,null],[13,"Null","","",13,null],[13,"ModuleLoadPath","","",13,null],[13,"ToCString","","",13,null],[13,"FromCString","","",13,null],[13,"NullHandle","","",13,null],[13,"NDArray","","",13,null],[13,"CallFailed","","",13,null],[13,"Infallible","","",13,null],[13,"Panic","","",13,null],[11,"downcast","","",13,[[["string",3]],["error",4]]],[0,"function","tvm_rt","This module provides an idiomatic Rust API for creating…",null,null],[0,"ffi","tvm_rt::function","The low-level C runtime FFI API for TVM.",null,null],[17,"TVM_VERSION","tvm_rt::function::ffi","",null,null],[17,"DLPACK_VERSION","","",null,null],[17,"_STDINT_H","","",null,null],[17,"_FEATURES_H","","",null,null],[17,"_DEFAULT_SOURCE","","",null,null],[17,"__USE_ISOC11","","",null,null],[17,"__USE_ISOC99","","",null,null],[17,"__USE_ISOC95","","",null,null],[17,"__USE_POSIX_IMPLICITLY","","",null,null],[17,"_POSIX_SOURCE","","",null,null],[17,"_POSIX_C_SOURCE","","",null,null],[17,"__USE_POSIX","","",null,null],[17,"__USE_POSIX2","","",null,null],[17,"__USE_POSIX199309","","",null,null],[17,"__USE_POSIX199506","","",null,null],[17,"__USE_XOPEN2K","","",null,null],[17,"__USE_XOPEN2K8","","",null,null],[17,"_ATFILE_SOURCE","","",null,null],[17,"__USE_MISC","","",null,null],[17,"__USE_ATFILE","","",null,null],[17,"__USE_FORTIFY_LEVEL","","",null,null],[17,"__GLIBC_USE_DEPRECATED_GETS","","",null,null],[17,"_STDC_PREDEF_H","","",null,null],[17,"__STDC_IEC_559__","","",null,null],[17,"__STDC_IEC_559_COMPLEX__","","",null,null],[17,"__STDC_ISO_10646__","","",null,null],[17,"__STDC_NO_THREADS__","","",null,null],[17,"__GNU_LIBRARY__","","",null,null],[17,"__GLIBC__","","",null,null],[17,"__GLIBC_MINOR__","","",null,null],[17,"_SYS_CDEFS_H","","",null,null],[17,"__glibc_c99_flexarr_available","","",null,null],[17,"__WORDSIZE","","",null,null],[17,"__WORDSIZE_TIME64_COMPAT32","","",null,null],[17,"__SYSCALL_WORDSIZE","","",null,null],[17,"__HAVE_GENERIC_SELECTION","","",null,null],[17,"__GLIBC_USE_LIB_EXT2","","",null,null],[17,"__GLIBC_USE_IEC_60559_BFP_EXT","","",null,null],[17,"__GLIBC_USE_IEC_60559_FUNCS_EXT","","",null,null],[17,"__GLIBC_USE_IEC_60559_TYPES_EXT","","",null,null],[17,"_BITS_TYPES_H","","",null,null],[17,"_BITS_TYPESIZES_H","","",null,null],[17,"__OFF_T_MATCHES_OFF64_T","","",null,null],[17,"__INO_T_MATCHES_INO64_T","","",null,null],[17,"__RLIM_T_MATCHES_RLIM64_T","","",null,null],[17,"__FD_SETSIZE","","",null,null],[17,"_BITS_WCHAR_H","","",null,null],[17,"_BITS_STDINT_INTN_H","","",null,null],[17,"_BITS_STDINT_UINTN_H","","",null,null],[17,"INT8_MIN","","",null,null],[17,"INT16_MIN","","",null,null],[17,"INT32_MIN","","",null,null],[17,"INT8_MAX","","",null,null],[17,"INT16_MAX","","",null,null],[17,"INT32_MAX","","",null,null],[17,"UINT8_MAX","","",null,null],[17,"UINT16_MAX","","",null,null],[17,"UINT32_MAX","","",null,null],[17,"INT_LEAST8_MIN","","",null,null],[17,"INT_LEAST16_MIN","","",null,null],[17,"INT_LEAST32_MIN","","",null,null],[17,"INT_LEAST8_MAX","","",null,null],[17,"INT_LEAST16_MAX","","",null,null],[17,"INT_LEAST32_MAX","","",null,null],[17,"UINT_LEAST8_MAX","","",null,null],[17,"UINT_LEAST16_MAX","","",null,null],[17,"UINT_LEAST32_MAX","","",null,null],[17,"INT_FAST8_MIN","","",null,null],[17,"INT_FAST16_MIN","","",null,null],[17,"INT_FAST32_MIN","","",null,null],[17,"INT_FAST8_MAX","","",null,null],[17,"INT_FAST16_MAX","","",null,null],[17,"INT_FAST32_MAX","","",null,null],[17,"UINT_FAST8_MAX","","",null,null],[17,"UINT_FAST16_MAX","","",null,null],[17,"UINT_FAST32_MAX","","",null,null],[17,"INTPTR_MIN","","",null,null],[17,"INTPTR_MAX","","",null,null],[17,"UINTPTR_MAX","","",null,null],[17,"PTRDIFF_MIN","","",null,null],[17,"PTRDIFF_MAX","","",null,null],[17,"SIG_ATOMIC_MIN","","",null,null],[17,"SIG_ATOMIC_MAX","","",null,null],[17,"SIZE_MAX","","",null,null],[17,"WINT_MIN","","",null,null],[17,"WINT_MAX","","",null,null],[6,"__u_char","","",null,null],[6,"__u_short","","",null,null],[6,"__u_int","","",null,null],[6,"__u_long","","",null,null],[6,"__int8_t","","",null,null],[6,"__uint8_t","","",null,null],[6,"__int16_t","","",null,null],[6,"__uint16_t","","",null,null],[6,"__int32_t","","",null,null],[6,"__uint32_t","","",null,null],[6,"__int64_t","","",null,null],[6,"__uint64_t","","",null,null],[6,"__quad_t","","",null,null],[6,"__u_quad_t","","",null,null],[6,"__intmax_t","","",null,null],[6,"__uintmax_t","","",null,null],[6,"__dev_t","","",null,null],[6,"__uid_t","","",null,null],[6,"__gid_t","","",null,null],[6,"__ino_t","","",null,null],[6,"__ino64_t","","",null,null],[6,"__mode_t","","",null,null],[6,"__nlink_t","","",null,null],[6,"__off_t","","",null,null],[6,"__off64_t","","",null,null],[6,"__pid_t","","",null,null],[3,"__fsid_t","","",null,null],[12,"__val","","",14,null],[6,"__clock_t","","",null,null],[6,"__rlim_t","","",null,null],[6,"__rlim64_t","","",null,null],[6,"__id_t","","",null,null],[6,"__time_t","","",null,null],[6,"__useconds_t","","",null,null],[6,"__suseconds_t","","",null,null],[6,"__daddr_t","","",null,null],[6,"__key_t","","",null,null],[6,"__clockid_t","","",null,null],[6,"__timer_t","","",null,null],[6,"__blksize_t","","",null,null],[6,"__blkcnt_t","","",null,null],[6,"__blkcnt64_t","","",null,null],[6,"__fsblkcnt_t","","",null,null],[6,"__fsblkcnt64_t","","",null,null],[6,"__fsfilcnt_t","","",null,null],[6,"__fsfilcnt64_t","","",null,null],[6,"__fsword_t","","",null,null],[6,"__ssize_t","","",null,null],[6,"__syscall_slong_t","","",null,null],[6,"__syscall_ulong_t","","",null,null],[6,"__loff_t","","",null,null],[6,"__caddr_t","","",null,null],[6,"__intptr_t","","",null,null],[6,"__socklen_t","","",null,null],[6,"__sig_atomic_t","","",null,null],[6,"int_least8_t","","",null,null],[6,"int_least16_t","","",null,null],[6,"int_least32_t","","",null,null],[6,"int_least64_t","","",null,null],[6,"uint_least8_t","","",null,null],[6,"uint_least16_t","","",null,null],[6,"uint_least32_t","","",null,null],[6,"uint_least64_t","","",null,null],[6,"int_fast8_t","","",null,null],[6,"int_fast16_t","","",null,null],[6,"int_fast32_t","","",null,null],[6,"int_fast64_t","","",null,null],[6,"uint_fast8_t","","",null,null],[6,"uint_fast16_t","","",null,null],[6,"uint_fast32_t","","",null,null],[6,"uint_fast64_t","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"wchar_t","","",null,null],[17,"DLDeviceType_kDLCPU","","\\\\brief CPU device",null,null],[17,"DLDeviceType_kDLGPU","","\\\\brief CUDA GPU device",null,null],[17,"DLDeviceType_kDLCPUPinned","","\\\\brief Pinned CUDA GPU device by cudaMallocHost \\\\note…",null,null],[17,"DLDeviceType_kDLOpenCL","","\\\\brief OpenCL devices.",null,null],[17,"DLDeviceType_kDLVulkan","","\\\\brief Vulkan buffer for next generation graphics.",null,null],[17,"DLDeviceType_kDLMetal","","\\\\brief Metal for Apple GPU.",null,null],[17,"DLDeviceType_kDLVPI","","\\\\brief Verilog simulator buffer",null,null],[17,"DLDeviceType_kDLROCM","","\\\\brief ROCm GPUs for AMD GPUs",null,null],[17,"DLDeviceType_kDLExtDev","","\\\\brief Reserved extension device type, used for quickly…",null,null],[6,"DLDeviceType","","\\\\brief The device type in DLContext.",null,null],[3,"DLContext","","\\\\brief A Device context for Tensor and operator.",null,null],[12,"device_type","","\\\\brief The device type used in the device.",15,null],[12,"device_id","","\\\\brief The device index",15,null],[17,"DLDataTypeCode_kDLInt","","",null,null],[17,"DLDataTypeCode_kDLUInt","","",null,null],[17,"DLDataTypeCode_kDLFloat","","",null,null],[17,"DLDataTypeCode_kDLBfloat","","",null,null],[6,"DLDataTypeCode","","\\\\brief The type code options DLDataType.",null,null],[3,"DLDataType","","\\\\brief The data type the tensor can hold.",null,null],[12,"code","","\\\\brief Type code of base types. We keep it uint8_t instead…",16,null],[12,"bits","","\\\\brief Number of bits, common choices are 8, 16, 32.",16,null],[12,"lanes","","\\\\brief Number of lanes in the type, used for vector types.",16,null],[3,"DLTensor","","\\\\brief Plain C Tensor object, does not manage memory.",null,null],[12,"data","","\\\\brief The opaque data pointer points to the allocated…",17,null],[12,"ctx","","\\\\brief The device context of the tensor",17,null],[12,"ndim","","\\\\brief Number of dimensions",17,null],[12,"dtype","","\\\\brief The data type of the pointer",17,null],[12,"shape","","\\\\brief The shape of the tensor",17,null],[12,"strides","","\\\\brief strides of the tensor (in number of elements, not…",17,null],[12,"byte_offset","","\\\\brief The offset in bytes to the beginning pointer to data",17,null],[3,"DLManagedTensor","","\\\\brief C Tensor object, manage memory of DLTensor. This…",null,null],[12,"dl_tensor","","\\\\brief DLTensor which is being memory managed",18,null],[12,"manager_ctx","","\\\\brief the context of the original host framework of…",18,null],[12,"deleter","","\\\\brief Destructor signature void ()(void) - this should be…",18,null],[6,"tvm_index_t","","\\\\brief type of array index.",null,null],[17,"TVMDeviceExtType_kDLAOCL","","",null,null],[17,"TVMDeviceExtType_kDLSDAccel","","",null,null],[17,"TVMDeviceExtType_kOpenGL","","",null,null],[17,"TVMDeviceExtType_kDLMicroDev","","",null,null],[17,"TVMDeviceExtType_kDLHexagon","","",null,null],[17,"TVMDeviceExtType_kDLWebGPU","","",null,null],[6,"TVMDeviceExtType","","\\\\brief Extension device types in TVM",null,null],[17,"TVMArgTypeCode_kTVMArgInt","","",null,null],[17,"TVMArgTypeCode_kTVMArgFloat","","",null,null],[17,"TVMArgTypeCode_kTVMOpaqueHandle","","",null,null],[17,"TVMArgTypeCode_kTVMNullptr","","",null,null],[17,"TVMArgTypeCode_kTVMDataType","","",null,null],[17,"TVMArgTypeCode_kTVMContext","","",null,null],[17,"TVMArgTypeCode_kTVMDLTensorHandle","","",null,null],[17,"TVMArgTypeCode_kTVMObjectHandle","","",null,null],[17,"TVMArgTypeCode_kTVMModuleHandle","","",null,null],[17,"TVMArgTypeCode_kTVMPackedFuncHandle","","",null,null],[17,"TVMArgTypeCode_kTVMStr","","",null,null],[17,"TVMArgTypeCode_kTVMBytes","","",null,null],[17,"TVMArgTypeCode_kTVMNDArrayHandle","","",null,null],[17,"TVMArgTypeCode_kTVMObjectRValueRefArg","","",null,null],[17,"TVMArgTypeCode_kTVMExtBegin","","",null,null],[17,"TVMArgTypeCode_kTVMNNVMFirst","","",null,null],[17,"TVMArgTypeCode_kTVMNNVMLast","","",null,null],[17,"TVMArgTypeCode_kTVMExtReserveEnd","","",null,null],[17,"TVMArgTypeCode_kTVMExtEnd","","",null,null],[6,"TVMArgTypeCode","","\\\\brief The type code in used and only used in TVM FFI for…",null,null],[6,"TVMContext","","\\\\brief The Device information, abstract away common device…",null,null],[6,"TVMArrayHandle","","\\\\brief the array handle",null,null],[19,"TVMValue","","\\\\brief Union type of values being passed through API and…",null,null],[12,"v_int64","","",19,null],[12,"v_float64","","",19,null],[12,"v_handle","","",19,null],[12,"v_str","","",19,null],[12,"v_type","","",19,null],[12,"v_ctx","","",19,null],[3,"TVMByteArray","","\\\\brief Byte array type used to pass in byte array When…",null,null],[12,"data","","",20,null],[12,"size","","",20,null],[6,"TVMModuleHandle","","\\\\brief Handle to TVM runtime modules.",null,null],[6,"TVMFunctionHandle","","\\\\brief Handle to packed function handle.",null,null],[6,"TVMRetValueHandle","","\\\\brief Handle to hold return value.",null,null],[6,"TVMStreamHandle","","\\\\brief The stream that is specific to device can be NULL,…",null,null],[6,"TVMObjectHandle","","\\\\brief Handle to Object.",null,null],[5,"TVMAPISetLastError","","\\\\brief Used for implementing C API function. Set last…",null,[[]]],[5,"TVMGetLastError","","\\\\brief return str message of the last error all function…",null,[[]]],[5,"TVMModLoadFromFile","","\\\\brief Load module from file. \\\\param file_name The file…",null,[[]]],[5,"TVMModImport","","\\\\brief Add dep to mod\'s dependency. This allows functions…",null,[[]]],[5,"TVMModGetFunction","","\\\\brief Get function from the module. \\\\param mod The module…",null,[[]]],[5,"TVMModFree","","\\\\brief Free the Module \\\\param mod The module to be freed.",null,[[]]],[5,"TVMFuncFree","","\\\\brief Free the function when it is no longer needed.…",null,[[]]],[5,"TVMFuncCall","","\\\\brief Call a Packed TVM Function.",null,[[]]],[5,"TVMCFuncSetReturn","","\\\\brief Set the return value of TVMPackedCFunc.",null,[[]]],[5,"TVMCbArgToReturn","","\\\\brief Inplace translate callback argument value to return…",null,[[]]],[6,"TVMPackedCFunc","","\\\\brief C type of packed function.",null,null],[6,"TVMPackedCFuncFinalizer","","\\\\brief C callback to free the resource handle in C packed…",null,null],[6,"TVMExtensionFuncDeclarer","","\\\\brief Signature for extension function declarer.",null,null],[5,"TVMFuncCreateFromCFunc","","\\\\brief Wrap a TVMPackedCFunc to become a FunctionHandle.",null,[[["option",4],["option",4]]]],[5,"TVMFuncRegisterGlobal","","\\\\brief Register the function to runtime\'s global table.",null,[[]]],[5,"TVMFuncGetGlobal","","\\\\brief Get a global function.",null,[[]]],[5,"TVMFuncListGlobalNames","","\\\\brief List all the globally registered function name…",null,[[]]],[5,"TVMArrayAlloc","","\\\\brief Allocate a nd-array\'s memory, including space of…",null,[[]]],[5,"TVMArrayFree","","\\\\brief Free the TVM Array. \\\\param handle The array handle…",null,[[]]],[5,"TVMArrayCopyFromBytes","","\\\\brief Copy array data from CPU byte array. \\\\param handle…",null,[[]]],[5,"TVMArrayCopyToBytes","","\\\\brief Copy array data to CPU byte array. \\\\param handle…",null,[[]]],[5,"TVMArrayCopyFromTo","","\\\\brief Copy the array, both from and to must be valid…",null,[[]]],[5,"TVMArrayFromDLPack","","\\\\brief Produce an array from the DLManagedTensor that…",null,[[]]],[5,"TVMArrayToDLPack","","\\\\brief Produce a DLMangedTensor from the array that shares…",null,[[]]],[5,"TVMDLManagedTensorCallDeleter","","\\\\brief Delete (free) a DLManagedTensor\'s data. \\\\param…",null,[[]]],[5,"TVMStreamCreate","","\\\\brief Create a new runtime stream.",null,[[]]],[5,"TVMStreamFree","","\\\\brief Free a created stream handle.",null,[[]]],[5,"TVMSetStream","","\\\\brief Set the runtime stream of current thread to be…",null,[[]]],[5,"TVMSynchronize","","\\\\brief Wait until all computations on stream completes.",null,[[]]],[5,"TVMStreamStreamSynchronize","","\\\\brief Synchronize two streams of execution.",null,[[]]],[5,"TVMObjectGetTypeIndex","","\\\\brief Get the type_index from an object.",null,[[]]],[5,"TVMObjectTypeKey2Index","","\\\\brief Convert type key to type index. \\\\param type_key The…",null,[[]]],[5,"TVMObjectRetain","","\\\\brief Increase the reference count of an object.",null,[[]]],[5,"TVMObjectFree","","\\\\brief Free the object.",null,[[]]],[5,"TVMDeviceAllocDataSpace","","\\\\brief Allocate a data space on device. \\\\param ctx The…",null,[[["dlcontext",3],["dldatatype",3]]]],[5,"TVMDeviceFreeDataSpace","","\\\\brief Free a data space on device. \\\\param ctx The device…",null,[[["dlcontext",3]]]],[5,"TVMDeviceCopyDataFromTo","","\\\\brief Copy data from one place to another. \\\\param from…",null,[[["dlcontext",3],["dldatatype",3]]]],[5,"TVMObjectDerivedFrom","","\\\\brief Check that an object is derived from another.…",null,[[]]],[6,"TVMBackendPackedCFunc","","\\\\brief Signature for backend functions exported as DLL.",null,null],[5,"TVMBackendGetFuncFromEnv","","\\\\brief Backend function for modules to get function from…",null,[[]]],[5,"TVMBackendRegisterSystemLibSymbol","","\\\\brief Backend function to register system-wide library…",null,[[]]],[5,"TVMBackendAllocWorkspace","","\\\\brief Backend function to allocate temporal workspace.",null,[[]]],[5,"TVMBackendFreeWorkspace","","\\\\brief Backend function to free temporal workspace.",null,[[]]],[3,"TVMParallelGroupEnv","","\\\\brief Environment for TVM parallel task.",null,null],[12,"sync_handle","","\\\\brief Auxiliary used for synchronization",21,null],[12,"num_task","","\\\\brief total amount of task",21,null],[6,"FTVMParallelLambda","","\\\\brief The callback function to execute a parallel lambda…",null,null],[5,"TVMBackendParallelLaunch","","\\\\brief Backend function for running parallel jobs.",null,[[["option",4]]]],[5,"TVMBackendParallelBarrier","","\\\\brief BSP barrrier between parallel threads \\\\param…",null,[[]]],[5,"TVMBackendRunOnce","","\\\\brief Simple static initialization function. Run f once…",null,[[["option",4]]]],[6,"BackendPackedCFunc","","",null,null],[4,"ArgValue","tvm_rt::function","A borrowed TVMPODValue. Can be constructed using `into()`…",null,null],[13,"Int","","",2,null],[13,"UInt","","",2,null],[13,"Float","","",2,null],[13,"Null","","",2,null],[13,"DataType","","",2,null],[13,"String","","",2,null],[13,"Context","","",2,null],[13,"Handle","","",2,null],[13,"ArrayHandle","","",2,null],[13,"ObjectHandle","","",2,null],[13,"ModuleHandle","","",2,null],[13,"FuncHandle","","",2,null],[13,"NDArrayHandle","","",2,null],[13,"Bytes","","",2,null],[13,"Str","","",2,null],[4,"RetValue","","An owned TVMPODValue. Can be converted from a variety of…",null,null],[13,"Int","","",3,null],[13,"UInt","","",3,null],[13,"Float","","",3,null],[13,"Null","","",3,null],[13,"DataType","","",3,null],[13,"String","","",3,null],[13,"Context","","",3,null],[13,"Handle","","",3,null],[13,"ArrayHandle","","",3,null],[13,"ObjectHandle","","",3,null],[13,"ModuleHandle","","",3,null],[13,"FuncHandle","","",3,null],[13,"NDArrayHandle","","",3,null],[13,"Bytes","","",3,null],[13,"Str","","",3,null],[3,"Function","","Wrapper around TVM function handle which includes…",null,null],[5,"register","","Registers a Rust function with an arbitrary type signature…",null,[[["string",3],["into",8]],["result",6]]],[5,"register_override","","Register a function with explicit control over whether to…",null,[[["string",3],["into",8]],["result",6]]],[5,"register_untyped","","",null,[[["string",3],["into",8]],["result",6]]],[6,"Result","","",null,null],[8,"ToFunction","","",null,null],[16,"Handle","","",22,null],[10,"into_raw","","",22,[[]]],[10,"call","","",22,[[["vec",3],["argvalue",4]],[["retvalue",4],["result",6]]]],[10,"drop","","",22,[[]]],[11,"to_function","","",22,[[],["function",3]]],[11,"tvm_callback","","The callback function which is wrapped converted by TVM…",22,[[["tvmretvaluehandle",6],["c_int",6]],["c_int",6]]],[11,"tvm_finalizer","","The finalizer which is invoked when the packed function\'s…",22,[[]]],[8,"Typed","","A trait representing whether the function arguments and…",null,null],[10,"args","","",23,[[["vec",3],["argvalue",4]],["result",6]]],[10,"ret","","",23,[[],[["retvalue",4],["result",6]]]],[11,"null","","",24,[[]]],[11,"get","","For a given function, it returns a function by name.",24,[[["asref",8]],[["option",4],["function",3]]]],[11,"get_boxed","","",24,[[],[["option",4],["box",3]]]],[11,"handle","","Returns the underlying TVM function handle.",24,[[],["tvmfunctionhandle",6]]],[11,"is_global","","Returns `true` if the underlying TVM function is global…",24,[[]]],[11,"invoke","","Calls the function that created from `Builder`.",24,[[["vec",3],["argvalue",4]],[["retvalue",4],["result",6]]]],[0,"map","tvm_rt","",null,null],[3,"Map","tvm_rt::map","",null,null],[3,"IntoIter","","",null,null],[5,"array_get_item","","",null,[[["objectref",3]],[["result",6],["objectref",3]]]],[5,"map_size","","",null,[[["objectref",3]],["result",6]]],[5,"map_get_item","","",null,[[["objectref",3]],[["result",6],["objectref",3]]]],[5,"map_count","","",null,[[["objectref",3]],[["result",6],["objectref",3]]]],[5,"map_items","","",null,[[["objectref",3]],[["array",3],["result",6]]]],[11,"from_data","","",25,[[["argvalue",4],["vec",3]],[["map",3],["result",6]]]],[11,"get","","",25,[[],["result",6]]],[0,"module","tvm_rt","Provides the [`Module`] type and methods for working with…",null,null],[3,"Module","tvm_rt::module","Wrapper around TVM module handle which contains an entry…",null,null],[5,"runtime_enabled","","",null,[[["cstring",3]],["result",6]]],[5,"load_from_file","","",null,[[["cstring",3]],[["module",3],["result",6]]]],[11,"entry","","",26,[[],[["option",4],["function",3]]]],[11,"get_function","","Gets a function by name from a registered module.",26,[[],[["error",4],["function",3],["result",4]]]],[11,"import_module","","Imports a dependent module such as `.ptx` for gpu.",26,[[["module",3]]]],[11,"load","","Loads a module shared library from path.",26,[[],[["error",4],["result",4],["module",3]]]],[11,"enabled","","Checks if a target device is enabled for a module.",26,[[]]],[11,"handle","","Returns the underlying module handle.",26,[[],["tvmmodulehandle",6]]],[0,"ndarray","tvm_rt","This module implements the [`NDArray`] type for working…",null,null],[3,"NDArrayContainer","tvm_rt::ndarray","See the `module-level documentation` for more details.",null,null],[3,"NDArray","","",null,null],[8,"Num32","","A trait for the supported 32-bits numerical types in…",null,null],[18,"BITS","","",27,null],[11,"leak","","",28,[[["objectptr",3],["ndarraycontainer",3]],["ndarraycontainer",3]]],[11,"as_dltensor","","",29,[[],["dltensor",3]]],[11,"is_view","","",29,[[]]],[11,"shape","","Returns the shape of the NDArray.",29,[[]]],[11,"shape_usize","","Returns the shape of the NDArray as a &[usize]",29,[[],["cow",4]]],[11,"strides","","Returns the strides of the underlying NDArray.",29,[[],["option",4]]],[11,"strides_usize","","Returns the strides of the NDArray as a &[usize]",29,[[],[["option",4],["cow",4]]]],[11,"is_empty","","Returns true if the tensor is empty",29,[[]]],[11,"len","","Returns the total number of entries of the NDArray.",29,[[]]],[11,"size","","Returns the total bytes taken up by the data. This is…",29,[[]]],[11,"ctx","","Returns the context which the NDArray was defined.",29,[[],["context",3]]],[11,"dtype","","Returns the type of the entries of the NDArray.",29,[[],["datatype",3]]],[11,"ndim","","Returns the number of dimensions of the NDArray.",29,[[]]],[11,"is_contiguous","","Shows whether the underlying ndarray is contiguous in…",29,[[]]],[11,"byte_offset","","",29,[[]]],[11,"to_vec","","Flattens the NDArray to a `Vec` of the same type in cpu.",29,[[],[["ndarrayerror",4],["result",4],["vec",3]]]],[11,"to_bytearray","","Converts the NDArray to [`ByteArray`].",29,[[],[["ndarrayerror",4],["result",4],["bytearray",3]]]],[11,"copy_from_buffer","","Creates an NDArray from a mutable buffer of types i32, u32…",29,[[]]],[11,"copy_to_buffer","","",29,[[]]],[11,"fill_from_iter","","",29,[[]]],[11,"copy_to_ndarray","","Copies the NDArray to another target NDArray.",29,[[["ndarray",3]],[["ndarrayerror",4],["result",4],["ndarray",3]]]],[11,"copy_to_ctx","","Copies the NDArray to a target context.",29,[[["context",3]],[["ndarrayerror",4],["result",4],["ndarray",3]]]],[11,"from_rust_ndarray","","Converts a Rust\'s ndarray to TVM NDArray.",29,[[["datatype",3],["arrayd",6],["context",3]],[["result",4],["ndarrayerror",4]]]],[11,"empty","","Allocates and creates an empty NDArray given the shape,…",29,[[["datatype",3],["context",3]],["ndarray",3]]],[11,"to_function","tvm_rt::function","",22,[[],["function",3]]],[11,"tvm_callback","","The callback function which is wrapped converted by TVM…",22,[[["tvmretvaluehandle",6],["c_int",6]],["c_int",6]]],[11,"tvm_finalizer","","The finalizer which is invoked when the packed function\'s…",22,[[]]],[0,"value","tvm_rt","This module implements [`ArgValue`] and [`RetValue`] types…",null,null],[14,"tvm_call","","",null,null],[14,"check_call","","",null,null],[11,"from","tvm_rt::context","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","tvm_rt::function","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","tvm_rt","",30,[[]]],[11,"into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"to_string","","",31,[[],["string",3]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","tvm_rt::object","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","tvm_rt::string","",33,[[]]],[11,"into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","tvm_rt::array","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","tvm_rt::context","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_string","","",34,[[],["string",3]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","tvm_rt::errors","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_string","","",35,[[],["string",3]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_string","","",11,[[],["string",3]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_string","","",13,[[],["string",3]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","tvm_rt::function::ffi","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","tvm_rt::function","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","tvm_rt::map","",25,[[]]],[11,"into","","",25,[[]]],[11,"into_iter","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"into_iter","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","tvm_rt::module","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","tvm_rt::ndarray","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"partial_cmp","tvm_rt","",31,[[["datatype",3]],[["option",4],["ordering",4]]]],[11,"lt","","",31,[[["datatype",3]]]],[11,"le","","",31,[[["datatype",3]]]],[11,"gt","","",31,[[["datatype",3]]]],[11,"ge","","",31,[[["datatype",3]]]],[11,"fmt","tvm_rt::function::ffi","",16,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tvm_rt::context","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tvm_rt::function","",3,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tvm_rt::function::ffi","",15,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tvm_rt::context","",34,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tvm_rt::function","",2,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tvm_rt::function::ffi","",18,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",20,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tvm_rt","",31,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tvm_rt::function::ffi","",17,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",14,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",21,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tvm_rt::context","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"hash","","",0,[[]]],[11,"hash","tvm_rt","",31,[[]]],[11,"hash","tvm_rt::context","",1,[[]]],[11,"try_from","tvm_rt::function::ffi","",16,[[["argvalue",4]],[["dldatatype",3],["result",4]]]],[11,"try_from","","",15,[[["retvalue",4]],[["result",4],["dlcontext",3]]]],[11,"try_from","tvm_rt::function","",3,[[["result",4]],[["retvalue",4],["result",4]]]],[11,"try_from","tvm_rt","",31,[[["retvalue",4]],[["result",4],["datatype",3],["error",3]]]],[11,"try_from","tvm_rt::function::ffi","",15,[[["argvalue",4]],[["result",4],["dlcontext",3]]]],[11,"try_from","tvm_rt","",30,[[["retvalue",4]],[["bytearray",3],["result",4]]]],[11,"try_from","","",30,[[["argvalue",4]],[["result",4],["bytearray",3]]]],[11,"try_from","tvm_rt::context","",0,[[["retvalue",4]],[["context",3],["result",4],["error",3]]]],[11,"try_from","tvm_rt::function::ffi","",15,[[["argvalue",4]],[["dlcontext",3],["result",4]]]],[11,"try_from","","",20,[[["retvalue",4]],[["tvmbytearray",3],["result",4]]]],[11,"try_from","","",16,[[["argvalue",4]],[["result",4],["dldatatype",3]]]],[11,"try_from","","",16,[[["retvalue",4]],[["result",4],["dldatatype",3]]]],[11,"clone","tvm_rt::context","",0,[[],["context",3]]],[11,"clone","tvm_rt::function::ffi","",16,[[],["dldatatype",3]]],[11,"clone","","",20,[[],["tvmbytearray",3]]],[11,"clone","","",18,[[],["dlmanagedtensor",3]]],[11,"clone","","",19,[[],["tvmvalue",19]]],[11,"clone","tvm_rt","",31,[[],["datatype",3]]],[11,"clone","tvm_rt::function::ffi","",15,[[],["dlcontext",3]]],[11,"clone","","",14,[[],["__fsid_t",3]]],[11,"clone","tvm_rt::function","",3,[[],["retvalue",4]]],[11,"clone","","",2,[[],["argvalue",4]]],[11,"clone","tvm_rt::function::ffi","",17,[[],["dltensor",3]]],[11,"clone","tvm_rt::context","",1,[[],["devicetype",4]]],[11,"clone","tvm_rt::function::ffi","",21,[[],["tvmparallelgroupenv",3]]],[11,"fmt","tvm_rt::context","",34,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tvm_rt","",31,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tvm_rt::context","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","tvm_rt::function","",2,[[],["argvalue",4]]],[11,"from","","",2,[[],["argvalue",4]]],[11,"from","","",2,[[["cstring",3]],["argvalue",4]]],[11,"from","","",2,[[["devicetype",4]],["argvalue",4]]],[11,"from","","",3,[[["context",3]],["retvalue",4]]],[11,"from","","",3,[[],["retvalue",4]]],[11,"from","tvm_rt::function::ffi","",19,[[],["tvmvalue",19]]],[11,"from","","",17,[[["arraybase",3]],["dltensor",3]]],[11,"from","","",16,[[["tvmvalue",19]],["dldatatype",3]]],[11,"from","tvm_rt::function","",3,[[["tvmbytearray",3]],["retvalue",4]]],[11,"from","","",3,[[],["retvalue",4]]],[11,"from","tvm_rt::function::ffi","",19,[[],["tvmvalue",19]]],[11,"from","tvm_rt::context","",0,[[["dlcontext",3]],["context",3]]],[11,"from","tvm_rt::function","",3,[[],["retvalue",4]]],[11,"from","tvm_rt::function::ffi","",17,[[["arraybase",3]],["dltensor",3]]],[11,"from","tvm_rt::function","",2,[[["dltensor",3]],["argvalue",4]]],[11,"from","","",3,[[["dlcontext",3]],["retvalue",4]]],[11,"from","","",2,[[],["argvalue",4]]],[11,"from","","",3,[[],["retvalue",4]]],[11,"from","tvm_rt::function::ffi","",19,[[],["tvmvalue",19]]],[11,"from","tvm_rt::function","",2,[[],["argvalue",4]]],[11,"from","","",2,[[],["argvalue",4]]],[11,"from","tvm_rt","",30,[[],["bytearray",3]]],[11,"from","tvm_rt::function","",3,[[],["retvalue",4]]],[11,"from","tvm_rt::function::ffi","",19,[[],["tvmvalue",19]]],[11,"from","","",19,[[],["tvmvalue",19]]],[11,"from","tvm_rt::function","",2,[[],["argvalue",4]]],[11,"from","","",3,[[],["retvalue",4]]],[11,"from","","",2,[[["bytearray",3]],["argvalue",4]]],[11,"from","tvm_rt::function::ffi","",15,[[["tvmvalue",19]],["dlcontext",3]]],[11,"from","tvm_rt::function","",2,[[],["argvalue",4]]],[11,"from","tvm_rt::function::ffi","",19,[[],["tvmvalue",19]]],[11,"from","tvm_rt::function","",3,[[],["retvalue",4]]],[11,"from","","",3,[[],["retvalue",4]]],[11,"from","tvm_rt::function::ffi","",15,[[["context",3]],["dlcontext",3]]],[11,"from","tvm_rt::function","",2,[[],["argvalue",4]]],[11,"from","tvm_rt::function::ffi","",16,[[["datatype",3]],["dldatatype",3]]],[11,"from","tvm_rt::function","",2,[[],["argvalue",4]]],[11,"from","","",2,[[],["argvalue",4]]],[11,"from","tvm_rt::function::ffi","",17,[[["arraybase",3]],["dltensor",3]]],[11,"from","tvm_rt::function","",2,[[],["argvalue",4]]],[11,"from","tvm_rt::function::ffi","",16,[[["datatype",3]],["dldatatype",3]]],[11,"from","","",19,[[["dldatatype",3]],["tvmvalue",19]]],[11,"from","tvm_rt::context","",1,[[],["devicetype",4]]],[11,"from","tvm_rt::function","",2,[[],["argvalue",4]]],[11,"from","","",2,[[],["argvalue",4]]],[11,"from","","",2,[[],["argvalue",4]]],[11,"from","","",3,[[],["retvalue",4]]],[11,"from","","",2,[[["dltensor",3]],["argvalue",4]]],[11,"from","","",2,[[["context",3]],["argvalue",4]]],[11,"from","tvm_rt::function::ffi","",19,[[],["tvmvalue",19]]],[11,"from","","",19,[[],["tvmvalue",19]]],[11,"from","tvm_rt::function","",2,[[],["argvalue",4]]],[11,"from","tvm_rt::function::ffi","",15,[[["context",3]],["dlcontext",3]]],[11,"from","tvm_rt::function","",2,[[["tvmbytearray",3]],["argvalue",4]]],[11,"from","","",2,[[],["argvalue",4]]],[11,"from","tvm_rt::function::ffi","",19,[[],["tvmvalue",19]]],[11,"from","","",17,[[["arraybase",3]],["dltensor",3]]],[11,"from","tvm_rt::function","",2,[[],["argvalue",4]]],[11,"from","tvm_rt::function::ffi","",17,[[["arraybase",3]],["dltensor",3]]],[11,"from","tvm_rt::function","",2,[[],["argvalue",4]]],[11,"from","","",2,[[],["argvalue",4]]],[11,"from","","",2,[[],["argvalue",4]]],[11,"from","tvm_rt::context","",0,[[],["context",3]]],[11,"from","tvm_rt::function","",3,[[],["retvalue",4]]],[11,"from","","",2,[[["dldatatype",3]],["argvalue",4]]],[11,"from","","",2,[[],["argvalue",4]]],[11,"from","","",3,[[],["retvalue",4]]],[11,"from","","",2,[[["dldatatype",3]],["argvalue",4]]],[11,"from","","",3,[[["string",3]],["retvalue",4]]],[11,"from","tvm_rt::function::ffi","",19,[[],["tvmvalue",19]]],[11,"from","tvm_rt::function","",3,[[["dldatatype",3]],["retvalue",4]]],[11,"from","","",2,[[["dlcontext",3]],["argvalue",4]]],[11,"from","","",2,[[["cstr",3]],["argvalue",4]]],[11,"from","","",2,[[["dlcontext",3]],["argvalue",4]]],[11,"from","","",3,[[],["retvalue",4]]],[11,"from","tvm_rt","",31,[[["dldatatype",3]],["datatype",3]]],[11,"from","tvm_rt::function","",2,[[],["argvalue",4]]],[11,"from","","",2,[[],["argvalue",4]]],[11,"from","tvm_rt::function::ffi","",19,[[["dlcontext",3]],["tvmvalue",19]]],[11,"from","tvm_rt::function","",2,[[],["argvalue",4]]],[11,"from","","",3,[[],["retvalue",4]]],[11,"from","","",2,[[["context",3]],["argvalue",4]]],[11,"from","","",3,[[["bytearray",3]],["retvalue",4]]],[11,"from","tvm_rt::function::ffi","",17,[[["arraybase",3]],["dltensor",3]]],[11,"from","tvm_rt::function","",3,[[["datatype",3]],["retvalue",4]]],[11,"from","tvm_rt::context","",1,[[],["devicetype",4]]],[11,"from","tvm_rt::function","",2,[[],["argvalue",4]]],[11,"from","","",3,[[],["retvalue",4]]],[11,"from","tvm_rt::function::ffi","",19,[[],["tvmvalue",19]]],[11,"from","tvm_rt::function","",2,[[],["argvalue",4]]],[11,"from","tvm_rt::function::ffi","",19,[[],["tvmvalue",19]]],[11,"from","tvm_rt::function","",2,[[["string",3]],["argvalue",4]]],[11,"from","","",2,[[],["argvalue",4]]],[11,"from","","",2,[[],["argvalue",4]]],[11,"eq","tvm_rt::function::ffi","",20,[[["tvmbytearray",3]]]],[11,"ne","","",20,[[["tvmbytearray",3]]]],[11,"eq","","",16,[[["dldatatype",3]]]],[11,"ne","","",16,[[["dldatatype",3]]]],[11,"eq","tvm_rt::context","",0,[[["context",3]]]],[11,"ne","","",0,[[["context",3]]]],[11,"eq","tvm_rt::function::ffi","",18,[[["dlmanagedtensor",3]]]],[11,"ne","","",18,[[["dlmanagedtensor",3]]]],[11,"eq","","",15,[[["dlcontext",3]]]],[11,"ne","","",15,[[["dlcontext",3]]]],[11,"eq","tvm_rt::context","",1,[[["devicetype",4]]]],[11,"eq","tvm_rt::function::ffi","",17,[[["dltensor",3]]]],[11,"ne","","",17,[[["dltensor",3]]]],[11,"eq","","",14,[[["__fsid_t",3]]]],[11,"ne","","",14,[[["__fsid_t",3]]]],[11,"eq","","",21,[[["tvmparallelgroupenv",3]]]],[11,"ne","","",21,[[["tvmparallelgroupenv",3]]]],[11,"eq","tvm_rt","",31,[[["datatype",3]]]],[11,"ne","","",31,[[["datatype",3]]]],[11,"cmp","","",31,[[["datatype",3]],["ordering",4]]],[11,"from_str","tvm_rt::context","",0,[[],[["result",4],["context",3]]]],[11,"from_str","tvm_rt::function::ffi","",15,[[],[["result",4],["dlcontext",3]]]],[11,"from_str","tvm_rt","",31,[[],[["result",4],["datatype",3]]]],[11,"default","tvm_rt::function::ffi","",14,[[],["__fsid_t",3]]],[11,"default","","",15,[[],["dlcontext",3]]],[11,"default","","",21,[[],["tvmparallelgroupenv",3]]],[11,"default","","",19,[[],["tvmvalue",19]]],[11,"default","","",20,[[],["tvmbytearray",3]]],[11,"default","","",16,[[],["dldatatype",3]]],[11,"default","tvm_rt::context","default device is cpu.",1,[[],["devicetype",4]]],[11,"default","tvm_rt::function::ffi","",17,[[],["dltensor",3]]],[11,"default","tvm_rt::function","",3,[[],["retvalue",4]]],[11,"default","tvm_rt::context","",0,[[],["context",3]]],[11,"default","tvm_rt::function::ffi","",18,[[],["dlmanagedtensor",3]]],[11,"as_ptr","tvm_rt::object","",32,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",32,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",32,[[["option",4],["objectptr",3]]]],[11,"as_ptr","tvm_rt::string","",8,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",8,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",8,[[["option",4],["objectptr",3]]]],[11,"as_ptr","tvm_rt::ndarray","",29,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",29,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",29,[[["option",4],["objectptr",3]]]],[11,"drop","tvm_rt::object","",4,[[]]],[11,"drop","tvm_rt::module","",26,[[]]],[11,"as_ref","tvm_rt::object","",5,[[]]],[11,"as_ref","tvm_rt::string","",33,[[]]],[11,"as_ref","","",33,[[]]],[11,"as_ref","","",8,[[]]],[11,"as_ref","tvm_rt::ndarray","",28,[[]]],[11,"as_ref","","",28,[[]]],[11,"from","tvm_rt::object","",32,[[["object",3]]]],[11,"from","","",32,[[["object",3],["objectptr",3]]]],[11,"from","tvm_rt::function","",2,[[["objectref",3]],["argvalue",4]]],[11,"from","","",2,[[["objectref",3]],["argvalue",4]]],[11,"from","","",3,[[["objectref",3]],["retvalue",4]]],[11,"from","","",3,[[["objectptr",3]],["retvalue",4]]],[11,"from","","",2,[[["objectptr",3]],["argvalue",4]]],[11,"from","tvm_rt::string","",8,[[["stringobj",3]]]],[11,"from","","",8,[[["objectptr",3],["stringobj",3]]]],[11,"from","tvm_rt::function","",2,[[["string",3]],["argvalue",4]]],[11,"from","","",2,[[["string",3]],["argvalue",4]]],[11,"from","","",3,[[["string",3]],["retvalue",4]]],[11,"from","tvm_rt::string","",8,[[["string",3]]]],[11,"from","","",8,[[]]],[11,"from","tvm_rt::function","",2,[[["array",3]],["argvalue",4]]],[11,"from","","",3,[[["array",3]],["retvalue",4]]],[11,"from","tvm_rt::errors","",11,[[["parsedatatypeerror",4]]]],[11,"from","","",11,[[["shapeerror",3]]]],[11,"from","","",13,[[["valuedowncasterror",3]]]],[11,"from","","",13,[[["nulerror",3]]]],[11,"from","","",13,[[["intostringerror",3]]]],[11,"from","","",13,[[["ndarrayerror",4]]]],[11,"from","","",13,[[["infallible",4]]]],[11,"from","tvm_rt::function","",3,[[["function",3]],["retvalue",4]]],[11,"from","","",2,[[["function",3]],["argvalue",4]]],[11,"from","","",2,[[["map",3]],["argvalue",4]]],[11,"from","","",3,[[["map",3]],["retvalue",4]]],[11,"from","tvm_rt::ndarray","",29,[[["ndarraycontainer",3]]]],[11,"from","","",29,[[["objectptr",3],["ndarraycontainer",3]]]],[11,"from","tvm_rt::function","",2,[[["ndarray",3]],["argvalue",4]]],[11,"from","","",2,[[["ndarray",3]],["argvalue",4]]],[11,"from","","",3,[[["ndarray",3]],["retvalue",4]]],[11,"from","","",2,[[["module",3]]]],[11,"from","","",2,[[["module",3]]]],[11,"from","","",3,[[["module",3]],["retvalue",4]]],[11,"into_iter","tvm_rt::map","",25,[[],["intoiter",3]]],[11,"next","","",36,[[],["option",4]]],[11,"size_hint","","",36,[[]]],[11,"clone","tvm_rt::object","",32,[[],["objectref",3]]],[11,"clone","","",4,[[]]],[11,"clone","tvm_rt::string","",8,[[],["string",3]]],[11,"clone","tvm_rt::array","",9,[[],["array",3]]],[11,"clone","tvm_rt::function","",24,[[],["function",3]]],[11,"clone","tvm_rt::map","",25,[[],["map",3]]],[11,"clone","tvm_rt::module","",26,[[],["module",3]]],[11,"clone","tvm_rt::ndarray","",29,[[],["ndarray",3]]],[11,"cmp","tvm_rt::string","",8,[[],["ordering",4]]],[11,"eq","","",8,[[]]],[11,"partial_cmp","","",8,[[],[["option",4],["ordering",4]]]],[11,"deref","tvm_rt::object","",32,[[]]],[11,"deref","","",4,[[]]],[11,"deref","tvm_rt::string","",8,[[]]],[11,"deref","tvm_rt::ndarray","",29,[[]]],[11,"fmt","tvm_rt::object","",5,[[["formatter",3]],["result",6]]],[11,"fmt","tvm_rt::string","",8,[[["formatter",3]],["result",6]]],[11,"fmt","tvm_rt::errors","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","tvm_rt::function","",24,[[["formatter",3]],["result",6]]],[11,"fmt","tvm_rt::map","",25,[[["formatter",3]],["result",6]]],[11,"fmt","tvm_rt::module","",26,[[["formatter",3]],["result",6]]],[11,"fmt","tvm_rt::string","",8,[[["formatter",3]],["result",6]]],[11,"fmt","tvm_rt::errors","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"hash","tvm_rt::string","",8,[[]]],[11,"hash","tvm_rt::function","",24,[[]]],[11,"try_from","tvm_rt::object","",32,[[["retvalue",4]],[["result",6],["objectref",3]]]],[11,"try_from","","",32,[[["argvalue",4]],[["result",6],["objectref",3]]]],[11,"try_from","","",4,[[["retvalue",4]],[["result",4],["objectptr",3]]]],[11,"try_from","","",4,[[["argvalue",4]],[["result",4],["objectptr",3]]]],[11,"try_from","tvm_rt::string","",8,[[["retvalue",4]],[["string",3],["result",6]]]],[11,"try_from","","",8,[[["argvalue",4]],[["string",3],["result",6]]]],[11,"try_from","tvm_rt::array","",9,[[["argvalue",4]],[["result",6],["array",3]]]],[11,"try_from","","",9,[[["retvalue",4]],[["result",6],["array",3]]]],[11,"try_from","tvm_rt::function","",24,[[["retvalue",4]],[["result",6],["function",3]]]],[11,"try_from","","",24,[[["argvalue",4]],[["result",6],["function",3]]]],[11,"try_from","","",24,[[["argvalue",4]],[["result",6],["function",3]]]],[11,"try_from","tvm_rt::map","",25,[[["argvalue",4]],[["map",3],["result",6]]]],[11,"try_from","","",25,[[["retvalue",4]],[["map",3],["result",6]]]],[11,"try_from","tvm_rt::ndarray","",29,[[["retvalue",4]],[["ndarray",3],["result",6]]]],[11,"try_from","","",29,[[["argvalue",4]],[["ndarray",3],["result",6]]]],[11,"try_from","tvm_rt::module","",26,[[["argvalue",4]],[["result",4],["module",3]]]],[11,"try_from","","",26,[[["argvalue",4]],[["result",4],["module",3]]]],[11,"try_from","","",26,[[["retvalue",4]],[["result",4],["module",3]]]],[11,"from_iter","tvm_rt::map","",25,[[["intoiterator",8]]]],[11,"source","tvm_rt::errors","",11,[[],[["option",4],["error",8]]]],[11,"source","","",13,[[],[["option",4],["error",8]]]],[11,"new","tvm_rt::context","",0,[[["devicetype",4]],["context",3]]],[11,"cpu","","",0,[[],["context",3]]],[11,"llvm","","",0,[[],["context",3]]],[11,"stackvm","","",0,[[],["context",3]]],[11,"gpu","","",0,[[],["context",3]]],[11,"cuda","","",0,[[],["context",3]]],[11,"nvptx","","",0,[[],["context",3]]],[11,"cl","","",0,[[],["context",3]]],[11,"metal","","",0,[[],["context",3]]],[11,"vpi","","",0,[[],["context",3]]],[11,"rocm","","",0,[[],["context",3]]],[11,"ext_dev","","",0,[[],["context",3]]],[11,"n","","",1,[[],[["devicetype",4],["option",4]]]],[11,"from_tvm_value","tvm_rt::function","",2,[[["tvmvalue",19]],["argvalue",4]]],[11,"to_tvm_value","","",2,[[]]],[11,"from_tvm_value","","",3,[[["tvmvalue",19]],["retvalue",4]]],[11,"to_tvm_value","","",3,[[]]],[11,"data","tvm_rt","Gets the underlying byte-array",30,[[]]],[11,"len","","Gets the length of the underlying byte-array",30,[[]]],[11,"to_vec","","Converts the underlying byte-array to `Vec<u8>`",30,[[],["vec",3]]],[11,"is_empty","","",30,[[]]],[11,"new","","",31,[[],["datatype",3]]],[11,"itemsize","","Returns the number of bytes occupied by an element of this…",31,[[]]],[11,"is_type","","Returns whether this `DataType` represents primitive type…",31,[[]]],[11,"code","","",31,[[]]],[11,"bits","","",31,[[]]],[11,"lanes","","",31,[[]]],[11,"int","","",31,[[],["datatype",3]]],[11,"float","","",31,[[],["datatype",3]]],[11,"uint","","",31,[[],["datatype",3]]],[18,"TYPE_KEY","tvm_rt::object","",6,null],[11,"typed_delete","","",6,[[]]],[11,"cpu","tvm_rt::function::ffi","",15,[[],["dlcontext",3]]],[11,"llvm","","",15,[[],["dlcontext",3]]],[11,"stackvm","","",15,[[],["dlcontext",3]]],[11,"gpu","","",15,[[],["dlcontext",3]]],[11,"cuda","","",15,[[],["dlcontext",3]]],[11,"nvptx","","",15,[[],["dlcontext",3]]],[11,"cl","","",15,[[],["dlcontext",3]]],[11,"metal","","",15,[[],["dlcontext",3]]],[11,"vpi","","",15,[[],["dlcontext",3]]],[11,"rocm","","",15,[[],["dlcontext",3]]],[11,"ext_dev","","",15,[[],["dlcontext",3]]]],"p":[[3,"Context"],[4,"DeviceType"],[4,"ArgValue"],[4,"RetValue"],[3,"ObjectPtr"],[3,"Object"],[8,"IsObject"],[8,"IsObjectRef"],[3,"String"],[3,"Array"],[3,"TypeMismatchError"],[4,"NDArrayError"],[13,"DataTypeMismatch"],[4,"Error"],[3,"__fsid_t"],[3,"DLContext"],[3,"DLDataType"],[3,"DLTensor"],[3,"DLManagedTensor"],[19,"TVMValue"],[3,"TVMByteArray"],[3,"TVMParallelGroupEnv"],[8,"ToFunction"],[8,"Typed"],[3,"Function"],[3,"Map"],[3,"Module"],[8,"Num32"],[3,"NDArrayContainer"],[3,"NDArray"],[3,"ByteArray"],[3,"DataType"],[3,"ObjectRef"],[3,"StringObj"],[3,"UnsupportedDeviceError"],[3,"FunctionNotFoundError"],[3,"IntoIter"]]},\
"tvm_sys":{"doc":"This crate contains the minimal interface over TVM\'s C…","i":[[0,"ffi","tvm_sys","The low-level C runtime FFI API for TVM.",null,null],[3,"__fsid_t","tvm_sys::ffi","",null,null],[12,"__val","","",0,null],[3,"DLContext","","\\\\brief A Device context for Tensor and operator.",null,null],[12,"device_type","","\\\\brief The device type used in the device.",1,null],[12,"device_id","","\\\\brief The device index",1,null],[3,"DLDataType","","\\\\brief The data type the tensor can hold.",null,null],[12,"code","","\\\\brief Type code of base types. We keep it uint8_t instead…",2,null],[12,"bits","","\\\\brief Number of bits, common choices are 8, 16, 32.",2,null],[12,"lanes","","\\\\brief Number of lanes in the type, used for vector types.",2,null],[3,"DLTensor","","\\\\brief Plain C Tensor object, does not manage memory.",null,null],[12,"data","","\\\\brief The opaque data pointer points to the allocated…",3,null],[12,"ctx","","\\\\brief The device context of the tensor",3,null],[12,"ndim","","\\\\brief Number of dimensions",3,null],[12,"dtype","","\\\\brief The data type of the pointer",3,null],[12,"shape","","\\\\brief The shape of the tensor",3,null],[12,"strides","","\\\\brief strides of the tensor (in number of elements, not…",3,null],[12,"byte_offset","","\\\\brief The offset in bytes to the beginning pointer to data",3,null],[3,"DLManagedTensor","","\\\\brief C Tensor object, manage memory of DLTensor. This…",null,null],[12,"dl_tensor","","\\\\brief DLTensor which is being memory managed",4,null],[12,"manager_ctx","","\\\\brief the context of the original host framework of…",4,null],[12,"deleter","","\\\\brief Destructor signature void ()(void) - this should be…",4,null],[3,"TVMByteArray","","\\\\brief Byte array type used to pass in byte array When…",null,null],[12,"data","","",5,null],[12,"size","","",5,null],[3,"TVMParallelGroupEnv","","\\\\brief Environment for TVM parallel task.",null,null],[12,"sync_handle","","\\\\brief Auxiliary used for synchronization",6,null],[12,"num_task","","\\\\brief total amount of task",6,null],[19,"TVMValue","","\\\\brief Union type of values being passed through API and…",null,null],[12,"v_int64","","",7,null],[12,"v_float64","","",7,null],[12,"v_handle","","",7,null],[12,"v_str","","",7,null],[12,"v_type","","",7,null],[12,"v_ctx","","",7,null],[5,"TVMAPISetLastError","","\\\\brief Used for implementing C API function. Set last…",null,null],[5,"TVMGetLastError","","\\\\brief return str message of the last error all function…",null,null],[5,"TVMModLoadFromFile","","\\\\brief Load module from file. \\\\param file_name The file…",null,null],[5,"TVMModImport","","\\\\brief Add dep to mod\'s dependency. This allows functions…",null,null],[5,"TVMModGetFunction","","\\\\brief Get function from the module. \\\\param mod The module…",null,null],[5,"TVMModFree","","\\\\brief Free the Module \\\\param mod The module to be freed.",null,null],[5,"TVMFuncFree","","\\\\brief Free the function when it is no longer needed.…",null,null],[5,"TVMFuncCall","","\\\\brief Call a Packed TVM Function.",null,null],[5,"TVMCFuncSetReturn","","\\\\brief Set the return value of TVMPackedCFunc.",null,null],[5,"TVMCbArgToReturn","","\\\\brief Inplace translate callback argument value to return…",null,null],[5,"TVMFuncCreateFromCFunc","","\\\\brief Wrap a TVMPackedCFunc to become a FunctionHandle.",null,null],[5,"TVMFuncRegisterGlobal","","\\\\brief Register the function to runtime\'s global table.",null,null],[5,"TVMFuncGetGlobal","","\\\\brief Get a global function.",null,null],[5,"TVMFuncListGlobalNames","","\\\\brief List all the globally registered function name…",null,null],[5,"TVMArrayAlloc","","\\\\brief Allocate a nd-array\'s memory, including space of…",null,null],[5,"TVMArrayFree","","\\\\brief Free the TVM Array. \\\\param handle The array handle…",null,null],[5,"TVMArrayCopyFromBytes","","\\\\brief Copy array data from CPU byte array. \\\\param handle…",null,null],[5,"TVMArrayCopyToBytes","","\\\\brief Copy array data to CPU byte array. \\\\param handle…",null,null],[5,"TVMArrayCopyFromTo","","\\\\brief Copy the array, both from and to must be valid…",null,null],[5,"TVMArrayFromDLPack","","\\\\brief Produce an array from the DLManagedTensor that…",null,null],[5,"TVMArrayToDLPack","","\\\\brief Produce a DLMangedTensor from the array that shares…",null,null],[5,"TVMDLManagedTensorCallDeleter","","\\\\brief Delete (free) a DLManagedTensor\'s data. \\\\param…",null,null],[5,"TVMStreamCreate","","\\\\brief Create a new runtime stream.",null,null],[5,"TVMStreamFree","","\\\\brief Free a created stream handle.",null,null],[5,"TVMSetStream","","\\\\brief Set the runtime stream of current thread to be…",null,null],[5,"TVMSynchronize","","\\\\brief Wait until all computations on stream completes.",null,null],[5,"TVMStreamStreamSynchronize","","\\\\brief Synchronize two streams of execution.",null,null],[5,"TVMObjectGetTypeIndex","","\\\\brief Get the type_index from an object.",null,null],[5,"TVMObjectTypeKey2Index","","\\\\brief Convert type key to type index. \\\\param type_key The…",null,null],[5,"TVMObjectRetain","","\\\\brief Increase the reference count of an object.",null,null],[5,"TVMObjectFree","","\\\\brief Free the object.",null,null],[5,"TVMDeviceAllocDataSpace","","\\\\brief Allocate a data space on device. \\\\param ctx The…",null,null],[5,"TVMDeviceFreeDataSpace","","\\\\brief Free a data space on device. \\\\param ctx The device…",null,null],[5,"TVMDeviceCopyDataFromTo","","\\\\brief Copy data from one place to another. \\\\param from…",null,null],[5,"TVMObjectDerivedFrom","","\\\\brief Check that an object is derived from another.…",null,null],[5,"TVMBackendGetFuncFromEnv","","\\\\brief Backend function for modules to get function from…",null,null],[5,"TVMBackendRegisterSystemLibSymbol","","\\\\brief Backend function to register system-wide library…",null,null],[5,"TVMBackendAllocWorkspace","","\\\\brief Backend function to allocate temporal workspace.",null,null],[5,"TVMBackendFreeWorkspace","","\\\\brief Backend function to free temporal workspace.",null,null],[5,"TVMBackendParallelLaunch","","\\\\brief Backend function for running parallel jobs.",null,null],[5,"TVMBackendParallelBarrier","","\\\\brief BSP barrrier between parallel threads \\\\param…",null,null],[5,"TVMBackendRunOnce","","\\\\brief Simple static initialization function. Run f once…",null,null],[6,"__u_char","","",null,null],[6,"__u_short","","",null,null],[6,"__u_int","","",null,null],[6,"__u_long","","",null,null],[6,"__int8_t","","",null,null],[6,"__uint8_t","","",null,null],[6,"__int16_t","","",null,null],[6,"__uint16_t","","",null,null],[6,"__int32_t","","",null,null],[6,"__uint32_t","","",null,null],[6,"__int64_t","","",null,null],[6,"__uint64_t","","",null,null],[6,"__quad_t","","",null,null],[6,"__u_quad_t","","",null,null],[6,"__intmax_t","","",null,null],[6,"__uintmax_t","","",null,null],[6,"__dev_t","","",null,null],[6,"__uid_t","","",null,null],[6,"__gid_t","","",null,null],[6,"__ino_t","","",null,null],[6,"__ino64_t","","",null,null],[6,"__mode_t","","",null,null],[6,"__nlink_t","","",null,null],[6,"__off_t","","",null,null],[6,"__off64_t","","",null,null],[6,"__pid_t","","",null,null],[6,"__clock_t","","",null,null],[6,"__rlim_t","","",null,null],[6,"__rlim64_t","","",null,null],[6,"__id_t","","",null,null],[6,"__time_t","","",null,null],[6,"__useconds_t","","",null,null],[6,"__suseconds_t","","",null,null],[6,"__daddr_t","","",null,null],[6,"__key_t","","",null,null],[6,"__clockid_t","","",null,null],[6,"__timer_t","","",null,null],[6,"__blksize_t","","",null,null],[6,"__blkcnt_t","","",null,null],[6,"__blkcnt64_t","","",null,null],[6,"__fsblkcnt_t","","",null,null],[6,"__fsblkcnt64_t","","",null,null],[6,"__fsfilcnt_t","","",null,null],[6,"__fsfilcnt64_t","","",null,null],[6,"__fsword_t","","",null,null],[6,"__ssize_t","","",null,null],[6,"__syscall_slong_t","","",null,null],[6,"__syscall_ulong_t","","",null,null],[6,"__loff_t","","",null,null],[6,"__caddr_t","","",null,null],[6,"__intptr_t","","",null,null],[6,"__socklen_t","","",null,null],[6,"__sig_atomic_t","","",null,null],[6,"int_least8_t","","",null,null],[6,"int_least16_t","","",null,null],[6,"int_least32_t","","",null,null],[6,"int_least64_t","","",null,null],[6,"uint_least8_t","","",null,null],[6,"uint_least16_t","","",null,null],[6,"uint_least32_t","","",null,null],[6,"uint_least64_t","","",null,null],[6,"int_fast8_t","","",null,null],[6,"int_fast16_t","","",null,null],[6,"int_fast32_t","","",null,null],[6,"int_fast64_t","","",null,null],[6,"uint_fast8_t","","",null,null],[6,"uint_fast16_t","","",null,null],[6,"uint_fast32_t","","",null,null],[6,"uint_fast64_t","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"wchar_t","","",null,null],[6,"DLDeviceType","","\\\\brief The device type in DLContext.",null,null],[6,"DLDataTypeCode","","\\\\brief The type code options DLDataType.",null,null],[6,"tvm_index_t","","\\\\brief type of array index.",null,null],[6,"TVMDeviceExtType","","\\\\brief Extension device types in TVM",null,null],[6,"TVMArgTypeCode","","\\\\brief The type code in used and only used in TVM FFI for…",null,null],[6,"TVMContext","","\\\\brief The Device information, abstract away common device…",null,null],[6,"TVMArrayHandle","","\\\\brief the array handle",null,null],[6,"TVMModuleHandle","","\\\\brief Handle to TVM runtime modules.",null,null],[6,"TVMFunctionHandle","","\\\\brief Handle to packed function handle.",null,null],[6,"TVMRetValueHandle","","\\\\brief Handle to hold return value.",null,null],[6,"TVMStreamHandle","","\\\\brief The stream that is specific to device can be NULL,…",null,null],[6,"TVMObjectHandle","","\\\\brief Handle to Object.",null,null],[6,"TVMPackedCFunc","","\\\\brief C type of packed function.",null,null],[6,"TVMPackedCFuncFinalizer","","\\\\brief C callback to free the resource handle in C packed…",null,null],[6,"TVMExtensionFuncDeclarer","","\\\\brief Signature for extension function declarer.",null,null],[6,"TVMBackendPackedCFunc","","\\\\brief Signature for backend functions exported as DLL.",null,null],[6,"FTVMParallelLambda","","\\\\brief The callback function to execute a parallel lambda…",null,null],[6,"BackendPackedCFunc","","",null,null],[17,"TVM_VERSION","","",null,null],[17,"DLPACK_VERSION","","",null,null],[17,"_STDINT_H","","",null,null],[17,"_FEATURES_H","","",null,null],[17,"_DEFAULT_SOURCE","","",null,null],[17,"__USE_ISOC11","","",null,null],[17,"__USE_ISOC99","","",null,null],[17,"__USE_ISOC95","","",null,null],[17,"__USE_POSIX_IMPLICITLY","","",null,null],[17,"_POSIX_SOURCE","","",null,null],[17,"_POSIX_C_SOURCE","","",null,null],[17,"__USE_POSIX","","",null,null],[17,"__USE_POSIX2","","",null,null],[17,"__USE_POSIX199309","","",null,null],[17,"__USE_POSIX199506","","",null,null],[17,"__USE_XOPEN2K","","",null,null],[17,"__USE_XOPEN2K8","","",null,null],[17,"_ATFILE_SOURCE","","",null,null],[17,"__USE_MISC","","",null,null],[17,"__USE_ATFILE","","",null,null],[17,"__USE_FORTIFY_LEVEL","","",null,null],[17,"__GLIBC_USE_DEPRECATED_GETS","","",null,null],[17,"_STDC_PREDEF_H","","",null,null],[17,"__STDC_IEC_559__","","",null,null],[17,"__STDC_IEC_559_COMPLEX__","","",null,null],[17,"__STDC_ISO_10646__","","",null,null],[17,"__STDC_NO_THREADS__","","",null,null],[17,"__GNU_LIBRARY__","","",null,null],[17,"__GLIBC__","","",null,null],[17,"__GLIBC_MINOR__","","",null,null],[17,"_SYS_CDEFS_H","","",null,null],[17,"__glibc_c99_flexarr_available","","",null,null],[17,"__WORDSIZE","","",null,null],[17,"__WORDSIZE_TIME64_COMPAT32","","",null,null],[17,"__SYSCALL_WORDSIZE","","",null,null],[17,"__HAVE_GENERIC_SELECTION","","",null,null],[17,"__GLIBC_USE_LIB_EXT2","","",null,null],[17,"__GLIBC_USE_IEC_60559_BFP_EXT","","",null,null],[17,"__GLIBC_USE_IEC_60559_FUNCS_EXT","","",null,null],[17,"__GLIBC_USE_IEC_60559_TYPES_EXT","","",null,null],[17,"_BITS_TYPES_H","","",null,null],[17,"_BITS_TYPESIZES_H","","",null,null],[17,"__OFF_T_MATCHES_OFF64_T","","",null,null],[17,"__INO_T_MATCHES_INO64_T","","",null,null],[17,"__RLIM_T_MATCHES_RLIM64_T","","",null,null],[17,"__FD_SETSIZE","","",null,null],[17,"_BITS_WCHAR_H","","",null,null],[17,"_BITS_STDINT_INTN_H","","",null,null],[17,"_BITS_STDINT_UINTN_H","","",null,null],[17,"INT8_MIN","","",null,null],[17,"INT16_MIN","","",null,null],[17,"INT32_MIN","","",null,null],[17,"INT8_MAX","","",null,null],[17,"INT16_MAX","","",null,null],[17,"INT32_MAX","","",null,null],[17,"UINT8_MAX","","",null,null],[17,"UINT16_MAX","","",null,null],[17,"UINT32_MAX","","",null,null],[17,"INT_LEAST8_MIN","","",null,null],[17,"INT_LEAST16_MIN","","",null,null],[17,"INT_LEAST32_MIN","","",null,null],[17,"INT_LEAST8_MAX","","",null,null],[17,"INT_LEAST16_MAX","","",null,null],[17,"INT_LEAST32_MAX","","",null,null],[17,"UINT_LEAST8_MAX","","",null,null],[17,"UINT_LEAST16_MAX","","",null,null],[17,"UINT_LEAST32_MAX","","",null,null],[17,"INT_FAST8_MIN","","",null,null],[17,"INT_FAST16_MIN","","",null,null],[17,"INT_FAST32_MIN","","",null,null],[17,"INT_FAST8_MAX","","",null,null],[17,"INT_FAST16_MAX","","",null,null],[17,"INT_FAST32_MAX","","",null,null],[17,"UINT_FAST8_MAX","","",null,null],[17,"UINT_FAST16_MAX","","",null,null],[17,"UINT_FAST32_MAX","","",null,null],[17,"INTPTR_MIN","","",null,null],[17,"INTPTR_MAX","","",null,null],[17,"UINTPTR_MAX","","",null,null],[17,"PTRDIFF_MIN","","",null,null],[17,"PTRDIFF_MAX","","",null,null],[17,"SIG_ATOMIC_MIN","","",null,null],[17,"SIG_ATOMIC_MAX","","",null,null],[17,"SIZE_MAX","","",null,null],[17,"WINT_MIN","","",null,null],[17,"WINT_MAX","","",null,null],[17,"DLDeviceType_kDLCPU","","\\\\brief CPU device",null,null],[17,"DLDeviceType_kDLGPU","","\\\\brief CUDA GPU device",null,null],[17,"DLDeviceType_kDLCPUPinned","","\\\\brief Pinned CUDA GPU device by cudaMallocHost \\\\note…",null,null],[17,"DLDeviceType_kDLOpenCL","","\\\\brief OpenCL devices.",null,null],[17,"DLDeviceType_kDLVulkan","","\\\\brief Vulkan buffer for next generation graphics.",null,null],[17,"DLDeviceType_kDLMetal","","\\\\brief Metal for Apple GPU.",null,null],[17,"DLDeviceType_kDLVPI","","\\\\brief Verilog simulator buffer",null,null],[17,"DLDeviceType_kDLROCM","","\\\\brief ROCm GPUs for AMD GPUs",null,null],[17,"DLDeviceType_kDLExtDev","","\\\\brief Reserved extension device type, used for quickly…",null,null],[17,"DLDataTypeCode_kDLInt","","",null,null],[17,"DLDataTypeCode_kDLUInt","","",null,null],[17,"DLDataTypeCode_kDLFloat","","",null,null],[17,"DLDataTypeCode_kDLBfloat","","",null,null],[17,"TVMDeviceExtType_kDLAOCL","","",null,null],[17,"TVMDeviceExtType_kDLSDAccel","","",null,null],[17,"TVMDeviceExtType_kOpenGL","","",null,null],[17,"TVMDeviceExtType_kDLMicroDev","","",null,null],[17,"TVMDeviceExtType_kDLHexagon","","",null,null],[17,"TVMDeviceExtType_kDLWebGPU","","",null,null],[17,"TVMArgTypeCode_kTVMArgInt","","",null,null],[17,"TVMArgTypeCode_kTVMArgFloat","","",null,null],[17,"TVMArgTypeCode_kTVMOpaqueHandle","","",null,null],[17,"TVMArgTypeCode_kTVMNullptr","","",null,null],[17,"TVMArgTypeCode_kTVMDataType","","",null,null],[17,"TVMArgTypeCode_kTVMContext","","",null,null],[17,"TVMArgTypeCode_kTVMDLTensorHandle","","",null,null],[17,"TVMArgTypeCode_kTVMObjectHandle","","",null,null],[17,"TVMArgTypeCode_kTVMModuleHandle","","",null,null],[17,"TVMArgTypeCode_kTVMPackedFuncHandle","","",null,null],[17,"TVMArgTypeCode_kTVMStr","","",null,null],[17,"TVMArgTypeCode_kTVMBytes","","",null,null],[17,"TVMArgTypeCode_kTVMNDArrayHandle","","",null,null],[17,"TVMArgTypeCode_kTVMObjectRValueRefArg","","",null,null],[17,"TVMArgTypeCode_kTVMExtBegin","","",null,null],[17,"TVMArgTypeCode_kTVMNNVMFirst","","",null,null],[17,"TVMArgTypeCode_kTVMNNVMLast","","",null,null],[17,"TVMArgTypeCode_kTVMExtReserveEnd","","",null,null],[17,"TVMArgTypeCode_kTVMExtEnd","","",null,null],[0,"array","tvm_sys","",null,null],[0,"byte_array","","",null,null],[3,"ByteArray","tvm_sys::byte_array","A newtype wrapping a raw TVM byte-array.",null,null],[11,"data","","Gets the underlying byte-array",8,[[]]],[11,"len","","Gets the length of the underlying byte-array",8,[[]]],[11,"to_vec","","Converts the underlying byte-array to `Vec<u8>`",8,[[],["vec",3]]],[11,"is_empty","","",8,[[]]],[0,"context","tvm_sys","Provides [`Context`] and related device queries.",null,null],[3,"Context","tvm_sys::context","",null,null],[12,"device_type","","",9,null],[12,"device_id","","",9,null],[3,"UnsupportedDeviceError","","",null,null],[4,"DeviceType","","Device type represents the set of devices supported by TVM.",null,null],[13,"CPU","","",10,null],[13,"GPU","","",10,null],[13,"CPUPinned","","",10,null],[13,"OpenCL","","",10,null],[13,"Vulkan","","",10,null],[13,"Metal","","",10,null],[13,"VPI","","",10,null],[13,"ROCM","","",10,null],[13,"ExtDev","","",10,null],[11,"n","","",10,[[],["option",4]]],[11,"new","","",9,[[["devicetype",4]],["context",3]]],[11,"cpu","","",9,[[]]],[11,"llvm","","",9,[[]]],[11,"stackvm","","",9,[[]]],[11,"gpu","","",9,[[]]],[11,"cuda","","",9,[[]]],[11,"nvptx","","",9,[[]]],[11,"cl","","",9,[[]]],[11,"metal","","",9,[[]]],[11,"vpi","","",9,[[]]],[11,"rocm","","",9,[[]]],[11,"ext_dev","","",9,[[]]],[0,"datatype","tvm_sys","",null,null],[3,"DataType","tvm_sys::datatype","",null,null],[4,"ParseDataTypeError","","",null,null],[13,"InvalidNumber","","",11,null],[13,"MissingDataType","","",11,null],[13,"UnknownType","","",11,null],[11,"new","","",12,[[],["datatype",3]]],[11,"itemsize","","Returns the number of bytes occupied by an element of this…",12,[[]]],[11,"is_type","","Returns whether this `DataType` represents primitive type…",12,[[]]],[11,"code","","",12,[[]]],[11,"bits","","",12,[[]]],[11,"lanes","","",12,[[]]],[11,"int","","",12,[[],["datatype",3]]],[11,"float","","",12,[[],["datatype",3]]],[11,"uint","","",12,[[],["datatype",3]]],[0,"errors","tvm_sys","",null,null],[3,"ValueDowncastError","tvm_sys::errors","",null,null],[12,"actual_type","","",13,null],[12,"expected_type","","",13,null],[3,"FuncCallError","","",null,null],[11,"get_with_context","","",14,[[["string",3]]]],[0,"packed_func","tvm_sys","",null,null],[4,"ArgValue","tvm_sys::packed_func","A borrowed TVMPODValue. Can be constructed using `into()`…",null,null],[13,"Int","","",15,null],[13,"UInt","","",15,null],[13,"Float","","",15,null],[13,"Null","","",15,null],[13,"DataType","","",15,null],[13,"String","","",15,null],[13,"Context","","",15,null],[13,"Handle","","",15,null],[13,"ArrayHandle","","",15,null],[13,"ObjectHandle","","",15,null],[13,"ModuleHandle","","",15,null],[13,"FuncHandle","","",15,null],[13,"NDArrayHandle","","",15,null],[13,"Bytes","","",15,null],[13,"Str","","",15,null],[4,"RetValue","","An owned TVMPODValue. Can be converted from a variety of…",null,null],[13,"Int","","",16,null],[13,"UInt","","",16,null],[13,"Float","","",16,null],[13,"Null","","",16,null],[13,"DataType","","",16,null],[13,"String","","",16,null],[13,"Context","","",16,null],[13,"Handle","","",16,null],[13,"ArrayHandle","","",16,null],[13,"ObjectHandle","","",16,null],[13,"ModuleHandle","","",16,null],[13,"FuncHandle","","",16,null],[13,"NDArrayHandle","","",16,null],[13,"Bytes","","",16,null],[13,"Str","","",16,null],[8,"PackedFunc","","",null,null],[11,"from_tvm_value","","",15,[[["tvmvalue",19]]]],[11,"to_tvm_value","","",15,[[]]],[11,"from_tvm_value","","",16,[[["tvmvalue",19]]]],[11,"to_tvm_value","","",16,[[]]],[0,"value","tvm_sys","",null,null],[3,"UnsupportedDeviceError","tvm_sys::value","",null,null],[11,"cpu","tvm_sys::ffi","",1,[[]]],[11,"llvm","","",1,[[]]],[11,"stackvm","","",1,[[]]],[11,"gpu","","",1,[[]]],[11,"cuda","","",1,[[]]],[11,"nvptx","","",1,[[]]],[11,"cl","","",1,[[]]],[11,"metal","","",1,[[]]],[11,"vpi","","",1,[[]]],[11,"rocm","","",1,[[]]],[11,"ext_dev","","",1,[[]]],[11,"cpu","tvm_sys::value","",17,[[]]],[11,"llvm","","",17,[[]]],[11,"stackvm","","",17,[[]]],[11,"gpu","","",17,[[]]],[11,"cuda","","",17,[[]]],[11,"nvptx","","",17,[[]]],[11,"cl","","",17,[[]]],[11,"metal","","",17,[[]]],[11,"vpi","","",17,[[]]],[11,"rocm","","",17,[[]]],[11,"ext_dev","","",17,[[]]],[14,"call_packed","tvm_sys","Calls a packed function and returns a `RetValue`.",null,null],[14,"try_downcast","","",null,null],[11,"from","tvm_sys::ffi","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","tvm_sys::byte_array","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","tvm_sys::context","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_string","","",18,[[],["string",3]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","tvm_sys::datatype","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_string","","",11,[[],["string",3]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","tvm_sys::errors","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_string","","",13,[[],["string",3]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_string","","",14,[[],["string",3]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","tvm_sys::packed_func","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","tvm_sys::value","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_string","","",19,[[],["string",3]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","tvm_sys::ffi","",3,[[["array",6]]]],[11,"from","","",3,[[["array",6]]]],[11,"from","","",3,[[["array",6]]]],[11,"from","","",3,[[["array",6]]]],[11,"from","","",3,[[["array",6]]]],[11,"from","","",3,[[["array",6]]]],[11,"from","tvm_sys::byte_array","",8,[[]]],[11,"from","tvm_sys::packed_func","",15,[[["bytearray",3]],["argvalue",4]]],[11,"from","","",16,[[["bytearray",3]],["retvalue",4]]],[11,"from","tvm_sys","",20,[[["devicetype",4]]]],[11,"from","tvm_sys::context","",10,[[["dldevicetype",6]]]],[11,"from","","",10,[[]]],[11,"from","tvm_sys::packed_func","",15,[[["devicetype",4]]]],[11,"from","tvm_sys::ffi","",1,[[["context",3]]]],[11,"from","tvm_sys::context","",9,[[]]],[11,"from","","",9,[[["dlcontext",3]]]],[11,"from","tvm_sys::ffi","",1,[[["context",3]]]],[11,"from","tvm_sys::packed_func","",15,[[["context",3]]]],[11,"from","","",15,[[["context",3]]]],[11,"from","","",16,[[["context",3]],["retvalue",4]]],[11,"from","tvm_sys::ffi","",2,[[["datatype",3]]]],[11,"from","tvm_sys::datatype","",12,[[["dldatatype",3]]]],[11,"from","tvm_sys::ffi","",2,[[["datatype",3]]]],[11,"from","tvm_sys::packed_func","",16,[[["datatype",3]],["retvalue",4]]],[11,"from","","",15,[[]]],[11,"from","","",15,[[]]],[11,"from","","",16,[[]]],[11,"from","","",15,[[]]],[11,"from","","",15,[[]]],[11,"from","","",16,[[]]],[11,"from","","",15,[[]]],[11,"from","","",15,[[]]],[11,"from","","",16,[[]]],[11,"from","","",15,[[]]],[11,"from","","",15,[[]]],[11,"from","","",16,[[]]],[11,"from","","",15,[[]]],[11,"from","","",15,[[]]],[11,"from","","",16,[[]]],[11,"from","","",15,[[]]],[11,"from","","",15,[[]]],[11,"from","","",16,[[]]],[11,"from","","",15,[[]]],[11,"from","","",15,[[]]],[11,"from","","",16,[[]]],[11,"from","","",15,[[]]],[11,"from","","",15,[[]]],[11,"from","","",16,[[]]],[11,"from","","",15,[[]]],[11,"from","","",15,[[]]],[11,"from","","",16,[[]]],[11,"from","","",15,[[]]],[11,"from","","",15,[[]]],[11,"from","","",16,[[]]],[11,"from","","",15,[[]]],[11,"from","","",15,[[]]],[11,"from","","",16,[[]]],[11,"from","","",15,[[]]],[11,"from","","",15,[[]]],[11,"from","","",16,[[]]],[11,"from","","",15,[[["dldatatype",3]]]],[11,"from","","",15,[[["dldatatype",3]]]],[11,"from","","",16,[[["dldatatype",3]]]],[11,"from","","",15,[[["tvmcontext",6]]]],[11,"from","","",15,[[["tvmcontext",6]]]],[11,"from","","",16,[[["tvmcontext",6]]]],[11,"from","","",15,[[]]],[11,"from","","",15,[[["string",3]]]],[11,"from","","",15,[[["cstr",3]]]],[11,"from","","",15,[[["cstring",3]]]],[11,"from","","",15,[[["tvmbytearray",3]]]],[11,"from","","",15,[[]]],[11,"from","","",15,[[]]],[11,"from","","",15,[[["dltensor",3]]]],[11,"from","","",15,[[["dltensor",3]]]],[11,"from","","",16,[[["string",3]]]],[11,"from","","",16,[[["tvmbytearray",3]]]],[11,"from","","",15,[[]]],[11,"from","","",16,[[]]],[11,"from","","",16,[[]]],[11,"from","tvm_sys::ffi","",7,[[]]],[11,"from","","",7,[[]]],[11,"from","","",7,[[]]],[11,"from","","",7,[[]]],[11,"from","","",7,[[]]],[11,"from","","",7,[[]]],[11,"from","","",7,[[]]],[11,"from","","",7,[[]]],[11,"from","","",7,[[]]],[11,"from","","",7,[[]]],[11,"from","","",7,[[]]],[11,"from","","",7,[[]]],[11,"from","","",7,[[["dldatatype",3]]]],[11,"from","","",2,[[["tvmvalue",19]]]],[11,"from","","",7,[[["tvmcontext",6]]]],[11,"from","tvm_sys","",17,[[["tvmvalue",19]]]],[11,"clone","tvm_sys::ffi","",0,[[],["__fsid_t",3]]],[11,"clone","","",1,[[],["dlcontext",3]]],[11,"clone","","",2,[[],["dldatatype",3]]],[11,"clone","","",3,[[],["dltensor",3]]],[11,"clone","","",4,[[],["dlmanagedtensor",3]]],[11,"clone","","",7,[[],["tvmvalue",19]]],[11,"clone","","",5,[[],["tvmbytearray",3]]],[11,"clone","","",6,[[],["tvmparallelgroupenv",3]]],[11,"clone","tvm_sys::context","",10,[[],["devicetype",4]]],[11,"clone","","",9,[[],["context",3]]],[11,"clone","tvm_sys::datatype","",12,[[],["datatype",3]]],[11,"clone","tvm_sys::packed_func","",15,[[],["argvalue",4]]],[11,"clone","","",16,[[],["retvalue",4]]],[11,"default","tvm_sys::ffi","",0,[[],["__fsid_t",3]]],[11,"default","","",1,[[]]],[11,"default","","",2,[[],["dldatatype",3]]],[11,"default","","",3,[[]]],[11,"default","","",4,[[]]],[11,"default","","",7,[[]]],[11,"default","","",5,[[]]],[11,"default","","",6,[[]]],[11,"default","tvm_sys::context","default device is cpu.",10,[[]]],[11,"default","","",9,[[]]],[11,"default","tvm_sys::packed_func","",16,[[]]],[11,"cmp","tvm_sys::datatype","",12,[[["datatype",3]],["ordering",4]]],[11,"eq","tvm_sys::ffi","",0,[[["__fsid_t",3]]]],[11,"ne","","",0,[[["__fsid_t",3]]]],[11,"eq","","",1,[[["dlcontext",3]]]],[11,"ne","","",1,[[["dlcontext",3]]]],[11,"eq","","",2,[[["dldatatype",3]]]],[11,"ne","","",2,[[["dldatatype",3]]]],[11,"eq","","",3,[[["dltensor",3]]]],[11,"ne","","",3,[[["dltensor",3]]]],[11,"eq","","",4,[[["dlmanagedtensor",3]]]],[11,"ne","","",4,[[["dlmanagedtensor",3]]]],[11,"eq","","",5,[[["tvmbytearray",3]]]],[11,"ne","","",5,[[["tvmbytearray",3]]]],[11,"eq","","",6,[[["tvmparallelgroupenv",3]]]],[11,"ne","","",6,[[["tvmparallelgroupenv",3]]]],[11,"eq","tvm_sys::context","",10,[[["devicetype",4]]]],[11,"eq","","",9,[[["context",3]]]],[11,"ne","","",9,[[["context",3]]]],[11,"eq","tvm_sys::datatype","",12,[[["datatype",3]]]],[11,"ne","","",12,[[["datatype",3]]]],[11,"partial_cmp","","",12,[[["datatype",3]],[["ordering",4],["option",4]]]],[11,"lt","","",12,[[["datatype",3]]]],[11,"le","","",12,[[["datatype",3]]]],[11,"gt","","",12,[[["datatype",3]]]],[11,"ge","","",12,[[["datatype",3]]]],[11,"fmt","tvm_sys::ffi","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","tvm_sys::context","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","tvm_sys::datatype","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","tvm_sys::errors","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","tvm_sys::packed_func","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","tvm_sys::value","",19,[[["formatter",3]],["result",6]]],[11,"fmt","tvm_sys::context","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","tvm_sys::datatype","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","tvm_sys::errors","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","tvm_sys::value","",19,[[["formatter",3]],["result",6]]],[11,"hash","tvm_sys::context","",10,[[]]],[11,"hash","","",9,[[]]],[11,"hash","tvm_sys::datatype","",12,[[]]],[11,"try_from","tvm_sys::byte_array","",8,[[["argvalue",4]],[["result",4],["bytearray",3]]]],[11,"try_from","","",8,[[["retvalue",4]],[["result",4],["bytearray",3]]]],[11,"try_from","tvm_sys::context","",9,[[["retvalue",4]],[["result",6],["context",3]]]],[11,"try_from","tvm_sys::datatype","",12,[[["retvalue",4]],[["result",6],["datatype",3]]]],[11,"try_from","tvm_sys::ffi","",2,[[["argvalue",4]],["result",4]]],[11,"try_from","","",2,[[["argvalue",4]],["result",4]]],[11,"try_from","","",2,[[["retvalue",4]],["result",4]]],[11,"try_from","tvm_sys","",17,[[["argvalue",4]],["result",4]]],[11,"try_from","","",17,[[["argvalue",4]],["result",4]]],[11,"try_from","","",17,[[["retvalue",4]],["result",4]]],[11,"try_from","tvm_sys::ffi","",5,[[["retvalue",4]],["result",4]]],[11,"try_from","tvm_sys::packed_func","",16,[[["result",4]],[["retvalue",4],["result",4]]]],[11,"from_str","tvm_sys::context","",9,[[],["result",6]]],[11,"from_str","tvm_sys::datatype","",12,[[],["result",4]]],[11,"from_str","tvm_sys","",17,[[],["result",4]]]],"p":[[3,"__fsid_t"],[3,"DLContext"],[3,"DLDataType"],[3,"DLTensor"],[3,"DLManagedTensor"],[3,"TVMByteArray"],[3,"TVMParallelGroupEnv"],[19,"TVMValue"],[3,"ByteArray"],[3,"Context"],[4,"DeviceType"],[4,"ParseDataTypeError"],[3,"DataType"],[3,"ValueDowncastError"],[3,"FuncCallError"],[4,"ArgValue"],[4,"RetValue"],[6,"TVMContext"],[3,"UnsupportedDeviceError"],[3,"UnsupportedDeviceError"],[6,"DLDeviceType"]]},\
"ucd_trie":{"doc":"The ucd-trie crate provides a compressed trie set…","i":[[3,"TrieSetOwned","ucd_trie","An owned trie set.",null,null],[3,"TrieSetSlice","","A borrowed trie set.",null,null],[4,"Error","","An error that can occur during construction of a trie.",null,null],[13,"InvalidCodepoint","","This error is returned when an invalid codepoint is given…",0,null],[13,"GaveUp","","This error is returned when a set of Unicode codepoints…",0,null],[11,"from_scalars","","Create a new trie set from a set of Unicode scalar values.",1,[[],[["triesetowned",3],["result",6]]]],[11,"from_codepoints","","Create a new trie set from a set of Unicode scalar values.",1,[[],[["triesetowned",3],["result",6]]]],[11,"as_slice","","Return this set as a slice.",1,[[],["triesetslice",3]]],[11,"contains_char","","Returns true if and only if the given Unicode scalar value…",1,[[]]],[11,"contains_u32","","Returns true if and only if the given codepoint is in this…",1,[[]]],[6,"Result","","A type alias that maps to `std::result::Result<T,…",null,null],[6,"TrieSet","","A type alias for `TrieSetSlice<\'static>`.",null,null],[11,"contains_char","","Returns true if and only if the given Unicode scalar value…",2,[[]]],[11,"contains_u32","","Returns true if and only if the given codepoint is in this…",2,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"clone","","",0,[[],["error",4]]],[11,"clone","","",1,[[],["triesetowned",3]]],[11,"clone","","",2,[[],["triesetslice",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]]],"p":[[4,"Error"],[3,"TrieSetOwned"],[3,"TrieSetSlice"]]},\
"unicode_width":{"doc":"Determine displayed width of `char` and `str` types…","i":[[17,"UNICODE_VERSION","unicode_width","The version of Unicode that this version of unicode-width…",null,null],[8,"UnicodeWidthChar","","Methods for determining displayed width of Unicode…",null,null],[10,"width","","Returns the character\'s displayed width in columns, or…",0,[[],["option",4]]],[10,"width_cjk","","Returns the character\'s displayed width in columns, or…",0,[[],["option",4]]],[8,"UnicodeWidthStr","","Methods for determining displayed width of Unicode strings.",null,null],[10,"width","","Returns the string\'s displayed width in columns.",1,[[]]],[10,"width_cjk","","Returns the string\'s displayed width in columns.",1,[[]]]],"p":[[8,"UnicodeWidthChar"],[8,"UnicodeWidthStr"]]},\
"unicode_xid":{"doc":"Determine if a `char` is a valid identifier for a parser…","i":[[17,"UNICODE_VERSION","unicode_xid","The version of Unicode that this version of unicode-xid is…",null,null],[8,"UnicodeXID","","Methods for determining if a character is a valid…",null,null],[10,"is_xid_start","","Returns whether the specified character satisfies the…",0,[[]]],[10,"is_xid_continue","","Returns whether the specified `char` satisfies the…",0,[[]]]],"p":[[8,"UnicodeXID"]]},\
"unindent":{"doc":"github crates-io docs-rs","i":[[5,"unindent","unindent","",null,[[],["string",3]]],[5,"unindent_bytes","","",null,[[],["vec",3]]],[8,"Unindent","","",null,null],[16,"Output","","",0,null],[10,"unindent","","",0,[[]]]],"p":[[8,"Unindent"]]},\
"utf8_ranges":{"doc":"Crate `utf8-ranges` converts ranges of Unicode scalar…","i":[[3,"Utf8Range","utf8_ranges","A single inclusive range of UTF-8 bytes.",null,null],[12,"start","","Start of byte range (inclusive).",0,null],[12,"end","","End of byte range (inclusive).",0,null],[3,"Utf8Sequences","","An iterator over ranges of matching UTF-8 byte sequences.",null,null],[4,"Utf8Sequence","","Utf8Sequence represents a sequence of byte ranges.",null,null],[13,"One","","One byte range.",1,null],[13,"Two","","Two successive byte ranges.",1,null],[13,"Three","","Three successive byte ranges.",1,null],[13,"Four","","Four successive byte ranges.",1,null],[11,"as_slice","","Returns the underlying sequence of byte ranges as a slice.",1,[[]]],[11,"len","","Returns the number of byte ranges in this sequence.",1,[[]]],[11,"matches","","Returns true if and only if a prefix of `bytes` matches…",1,[[]]],[11,"matches","","Returns true if and only if the given byte is in this range.",0,[[]]],[11,"new","","Create a new iterator over UTF-8 byte ranges for the…",2,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"into_iter","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"next","","",2,[[],["option",4]]],[11,"clone","","",1,[[],["utf8sequence",4]]],[11,"clone","","",0,[[],["utf8range",3]]],[11,"eq","","",1,[[["utf8sequence",4]]]],[11,"ne","","",1,[[["utf8sequence",4]]]],[11,"eq","","",0,[[["utf8range",3]]]],[11,"ne","","",0,[[["utf8range",3]]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]]],"p":[[3,"Utf8Range"],[4,"Utf8Sequence"],[3,"Utf8Sequences"]]},\
"vec_map":{"doc":"A simple map based on a vector for small integer keys.…","i":[[3,"VecMap","vec_map","A map optimized for small integer keys.",null,null],[3,"VacantEntry","","A vacant Entry.",null,null],[3,"OccupiedEntry","","An occupied Entry.",null,null],[3,"Iter","","An iterator over the key-value pairs of a map.",null,null],[3,"IterMut","","An iterator over the key-value pairs of a map, with the…",null,null],[3,"Keys","","An iterator over the keys of a map.",null,null],[3,"Values","","An iterator over the values of a map.",null,null],[3,"ValuesMut","","An iterator over the values of a map.",null,null],[3,"IntoIter","","A consuming iterator over the key-value pairs of a map.",null,null],[3,"Drain","","A draining iterator over the key-value pairs of a map.",null,null],[4,"Entry","","A view into a single entry in a map, which may either be…",null,null],[13,"Vacant","","A vacant Entry",0,null],[13,"Occupied","","An occupied Entry",0,null],[11,"new","","Creates an empty `VecMap`.",1,[[]]],[11,"with_capacity","","Creates an empty `VecMap` with space for at least…",1,[[]]],[11,"capacity","","Returns the number of elements the `VecMap` can hold…",1,[[]]],[11,"reserve_len","","Reserves capacity for the given `VecMap` to contain `len`…",1,[[]]],[11,"reserve_len_exact","","Reserves the minimum capacity for the given `VecMap` to…",1,[[]]],[11,"shrink_to_fit","","Trims the `VecMap` of any excess capacity.",1,[[]]],[11,"keys","","Returns an iterator visiting all keys in ascending order…",1,[[],["keys",3]]],[11,"values","","Returns an iterator visiting all values in ascending order…",1,[[],["values",3]]],[11,"values_mut","","Returns an iterator visiting all values in ascending order…",1,[[],["valuesmut",3]]],[11,"iter","","Returns an iterator visiting all key-value pairs in…",1,[[],["iter",3]]],[11,"iter_mut","","Returns an iterator visiting all key-value pairs in…",1,[[],["itermut",3]]],[11,"append","","Moves all elements from `other` into the map while…",1,[[]]],[11,"split_off","","Splits the collection into two at the given key.",1,[[]]],[11,"drain","","Returns an iterator visiting all key-value pairs in…",1,[[],["drain",3]]],[11,"len","","Returns the number of elements in the map.",1,[[]]],[11,"is_empty","","Returns true if the map contains no elements.",1,[[]]],[11,"clear","","Clears the map, removing all key-value pairs.",1,[[]]],[11,"get","","Returns a reference to the value corresponding to the key.",1,[[],["option",4]]],[11,"contains_key","","Returns true if the map contains a value for the specified…",1,[[]]],[11,"get_mut","","Returns a mutable reference to the value corresponding to…",1,[[],["option",4]]],[11,"insert","","Inserts a key-value pair into the map. If the key already…",1,[[],["option",4]]],[11,"remove","","Removes a key from the map, returning the value at the key…",1,[[],["option",4]]],[11,"entry","","Gets the given key\'s corresponding entry in the map for…",1,[[],["entry",4]]],[11,"retain","","Retains only the elements specified by the predicate.",1,[[]]],[11,"or_insert","","Ensures a value is in the entry by inserting the default…",0,[[]]],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of…",0,[[["fnonce",8]]]],[11,"insert","","Sets the value of the entry with the VacantEntry\'s key,…",2,[[]]],[11,"get","","Gets a reference to the value in the entry.",3,[[]]],[11,"get_mut","","Gets a mutable reference to the value in the entry.",3,[[]]],[11,"into_mut","","Converts the entry into a mutable reference to its value.",3,[[]]],[11,"insert","","Sets the value of the entry with the OccupiedEntry\'s key,…",3,[[]]],[11,"remove","","Takes the value of the entry out of the map, and returns it.",3,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"into_iter","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"into_iter","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"into_iter","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"into_iter","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into_iter","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"into_iter","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"into_iter","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into_iter","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"next_back","","",4,[[],["option",4]]],[11,"next_back","","",5,[[],["option",4]]],[11,"next_back","","",10,[[],["option",4]]],[11,"next_back","","",6,[[],["option",4]]],[11,"next_back","","",7,[[],["option",4]]],[11,"next_back","","",8,[[],["option",4]]],[11,"next_back","","",9,[[],["option",4]]],[11,"extend","","",1,[[["intoiterator",8]]]],[11,"extend","","",1,[[["intoiterator",8]]]],[11,"into_iter","","Returns an iterator visiting all key-value pairs in…",1,[[],["intoiter",3]]],[11,"next","","",4,[[],["option",4]]],[11,"size_hint","","",4,[[]]],[11,"next","","",5,[[],["option",4]]],[11,"size_hint","","",5,[[]]],[11,"next","","",10,[[],["option",4]]],[11,"size_hint","","",10,[[]]],[11,"next","","",6,[[],["option",4]]],[11,"size_hint","","",6,[[]]],[11,"next","","",7,[[],["option",4]]],[11,"size_hint","","",7,[[]]],[11,"next","","",8,[[],["option",4]]],[11,"size_hint","","",8,[[]]],[11,"next","","",9,[[],["option",4]]],[11,"size_hint","","",9,[[]]],[11,"clone","","",1,[[]]],[11,"clone_from","","",1,[[]]],[11,"clone","","",4,[[],["iter",3]]],[11,"clone","","",6,[[],["keys",3]]],[11,"clone","","",7,[[],["values",3]]],[11,"default","","",1,[[]]],[11,"cmp","","",1,[[],["ordering",4]]],[11,"eq","","",1,[[]]],[11,"partial_cmp","","",1,[[],[["option",4],["ordering",4]]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"index","","",1,[[]]],[11,"index","","",1,[[]]],[11,"index_mut","","",1,[[]]],[11,"index_mut","","",1,[[]]],[11,"hash","","",1,[[]]],[11,"from_iter","","",1,[[["intoiterator",8]]]]],"p":[[4,"Entry"],[3,"VecMap"],[3,"VacantEntry"],[3,"OccupiedEntry"],[3,"Iter"],[3,"IterMut"],[3,"Keys"],[3,"Values"],[3,"ValuesMut"],[3,"IntoIter"],[3,"Drain"]]},\
"winapi":{"doc":"","i":[],"p":[]},\
"zip":{"doc":"An ergonomic API for reading and writing ZIP files.","i":[[3,"DateTime","zip","A DateTime field to be used for storing timestamps in a…",null,null],[4,"CompressionMethod","","Identifies the storage format used to compress a file…",null,null],[13,"Stored","","Store the file as is",0,null],[13,"Deflated","","Compress the file using Deflate",0,null],[13,"Unsupported","","Unsupported compression method",0,null],[11,"from_u16","","Converts an u16 to its corresponding CompressionMethod",0,[[],["compressionmethod",4]]],[11,"to_u16","","Converts a CompressionMethod to a u16",0,[[]]],[0,"read","","Types for reading ZIP archives",null,null],[3,"ZipArchive","zip::read","ZIP archive reader",null,null],[3,"ZipFile","","A struct for reading a zip file",null,null],[5,"read_zipfile_from_stream","","Read ZipFile structures from a non-seekable reader.",null,[[],[["option",4],["zipresult",6]]]],[11,"new","","Read a ZIP archive, collecting the files it contains",1,[[],[["zipresult",6],["ziparchive",3]]]],[11,"len","","Number of files contained in this zip.",1,[[]]],[11,"is_empty","","Whether this zip archive contains no files",1,[[]]],[11,"offset","","Get the offset from the beginning of the underlying reader…",1,[[]]],[11,"comment","","Get the comment of the zip archive.",1,[[]]],[11,"file_names","","Returns an iterator over all the file and directory names…",1,[[]]],[11,"by_name_decrypt","","Search for a file entry by name, decrypt with given password",1,[[],[["result",4],["zipresult",6]]]],[11,"by_name","","Search for a file entry by name",1,[[],[["zipfile",3],["zipresult",6]]]],[11,"by_index_decrypt","","Get a contained file by index, decrypt with given password",1,[[],[["result",4],["zipresult",6]]]],[11,"by_index","","Get a contained file by index",1,[[],[["zipfile",3],["zipresult",6]]]],[11,"into_inner","","Unwrap and return the inner reader object",1,[[]]],[11,"version_made_by","","Get the version of the file",2,[[]]],[11,"name","","Get the name of the file",2,[[]]],[11,"name_raw","","Get the name of the file, in the raw (internal) byte…",2,[[]]],[11,"sanitized_name","","Get the name of the file in a sanitized form. It truncates…",2,[[],["pathbuf",3]]],[11,"comment","","Get the comment of the file",2,[[]]],[11,"compression","","Get the compression method used to store the file",2,[[],["compressionmethod",4]]],[11,"compressed_size","","Get the size of the file in the archive",2,[[]]],[11,"size","","Get the size of the file when uncompressed",2,[[]]],[11,"last_modified","","Get the time the file was last modified",2,[[],["datetime",3]]],[11,"is_dir","","Returns whether the file is actually a directory",2,[[]]],[11,"is_file","","Returns whether the file is a regular file",2,[[]]],[11,"unix_mode","","Get unix mode for the file",2,[[],["option",4]]],[11,"crc32","","Get the CRC32 hash of the original file",2,[[]]],[11,"data_start","","Get the starting offset of the data of the compressed file",2,[[]]],[11,"header_start","","Get the starting offset of the zip header for this file",2,[[]]],[11,"central_header_start","","Get the starting offset of the zip header in the central…",2,[[]]],[0,"result","zip","Error types that can be emitted from this library",null,null],[3,"InvalidPassword","zip::result","The given password is wrong",null,null],[4,"ZipError","","Error type for Zip",null,null],[13,"Io","","An Error caused by I/O",3,null],[13,"InvalidArchive","","This file is probably not a zip archive",3,null],[13,"UnsupportedArchive","","This archive is not supported",3,null],[13,"FileNotFound","","The requested file could not be found in the archive",3,null],[6,"ZipResult","","Generic result type with ZipError as its error variant",null,null],[11,"from_msdos","zip","Converts an msdos (u16, u16) pair to a DateTime object",4,[[],["datetime",3]]],[11,"from_date_and_time","","Constructs a DateTime from a specific date and time",4,[[],[["result",4],["datetime",3]]]],[11,"timepart","","Gets the time portion of this datetime in the msdos…",4,[[]]],[11,"datepart","","Gets the date portion of this datetime in the msdos…",4,[[]]],[11,"year","","Get the year. There is no epoch, i.e. 2018 will be…",4,[[]]],[11,"month","","Get the month, where 1 = january and 12 = december",4,[[]]],[11,"day","","Get the day",4,[[]]],[11,"hour","","Get the hour",4,[[]]],[11,"minute","","Get the minute",4,[[]]],[11,"second","","Get the second",4,[[]]],[0,"write","","Types for creating ZIP archives",null,null],[3,"ZipWriter","zip::write","ZIP archive generator",null,null],[3,"FileOptions","","Metadata for a file to be written",null,null],[11,"default","","Construct a new FileOptions object",5,[[],["fileoptions",3]]],[11,"compression_method","","Set the compression method for the new file",5,[[["compressionmethod",4]],["fileoptions",3]]],[11,"last_modified_time","","Set the last modified time",5,[[["datetime",3]],["fileoptions",3]]],[11,"unix_permissions","","Set the permissions for the new file.",5,[[],["fileoptions",3]]],[11,"new","","Initializes the archive.",6,[[],["zipwriter",3]]],[11,"set_comment","","Set ZIP archive comment.",6,[[]]],[11,"start_file","","Create a file in the archive and start writing its\'…",6,[[["fileoptions",3]],["zipresult",6]]],[11,"start_file_from_path","","Starts a file, taking a Path as argument.",6,[[["fileoptions",3],["path",3]],["zipresult",6]]],[11,"add_directory","","Add a directory entry.",6,[[["fileoptions",3]],["zipresult",6]]],[11,"add_directory_from_path","","Add a directory entry, taking a Path as argument.",6,[[["fileoptions",3],["path",3]],["zipresult",6]]],[11,"finish","","Finish the last file and write all other zip-structures",6,[[],["zipresult",6]]],[11,"from","zip","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","zip::read","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","zip::result","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","zip::write","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"drop","zip::read","",2,[[]]],[11,"drop","zip::write","",6,[[]]],[11,"from","zip::result","",3,[[["error",3]]]],[11,"clone","zip","",0,[[],["compressionmethod",4]]],[11,"clone","zip::read","",1,[[],["ziparchive",3]]],[11,"clone","zip","",4,[[],["datetime",3]]],[11,"clone","zip::write","",5,[[],["fileoptions",3]]],[11,"default","zip","Constructs an \'default\' datetime of 1980-01-01 00:00:00",4,[[],["datetime",3]]],[11,"default","zip::write","",5,[[]]],[11,"eq","zip","",0,[[["compressionmethod",4]]]],[11,"ne","","",0,[[["compressionmethod",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","zip::read","",1,[[["formatter",3]],["result",6]]],[11,"fmt","zip::result","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","zip","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","zip::result","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"source","","",3,[[],[["option",4],["error",8]]]],[11,"read","zip::read","",2,[[],["result",6]]],[11,"write","zip::write","",6,[[],["result",6]]],[11,"flush","","",6,[[],["result",6]]]],"p":[[4,"CompressionMethod"],[3,"ZipArchive"],[3,"ZipFile"],[4,"ZipError"],[3,"DateTime"],[3,"FileOptions"],[3,"ZipWriter"],[3,"InvalidPassword"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);