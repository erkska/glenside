(function() {var implementors = {};
implementors["aho_corasick"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["clap"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["either"] = [{"text":"impl&lt;L, R&gt; Error for Either&lt;L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Error,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Error,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["flate2"] = [{"text":"impl Error for DecompressError","synthetic":false,"types":[]},{"text":"impl Error for CompressError","synthetic":false,"types":[]}];
implementors["getrandom"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["goblin"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["humantime"] = [{"text":"impl Error for Error","synthetic":false,"types":[]},{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["log"] = [{"text":"impl Error for SetLoggerError","synthetic":false,"types":[]},{"text":"impl Error for ShutdownLoggerError","synthetic":false,"types":[]}];
implementors["ndarray"] = [{"text":"impl Error for ShapeError","synthetic":false,"types":[]}];
implementors["ndarray_npy"] = [{"text":"impl Error for WriteDataError","synthetic":false,"types":[]},{"text":"impl Error for WriteNpyError","synthetic":false,"types":[]},{"text":"impl Error for ReadDataError","synthetic":false,"types":[]},{"text":"impl Error for ReadNpyError","synthetic":false,"types":[]},{"text":"impl Error for WriteNpzError","synthetic":false,"types":[]},{"text":"impl Error for ReadNpzError","synthetic":false,"types":[]}];
implementors["num_bigint"] = [{"text":"impl Error for ParseBigIntError","synthetic":false,"types":[]}];
implementors["num_complex"] = [{"text":"impl&lt;E:&nbsp;Error&gt; Error for ParseComplexError&lt;E&gt;","synthetic":false,"types":[]}];
implementors["ordered_float"] = [{"text":"impl Error for FloatIsNan","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Debug + Error + 'static&gt; Error for ParseNotNanError&lt;E&gt;","synthetic":false,"types":[]}];
implementors["pest"] = [{"text":"impl&lt;'i, R:&nbsp;RuleType&gt; Error for Error&lt;R&gt;","synthetic":false,"types":[]}];
implementors["proc_macro2"] = [{"text":"impl Error for LexError","synthetic":false,"types":[]}];
implementors["py_literal"] = [{"text":"impl Error for FormatError","synthetic":false,"types":[]},{"text":"impl Error for ParseError","synthetic":false,"types":[]}];
implementors["rand"] = [{"text":"impl Error for BernoulliError","synthetic":false,"types":[]},{"text":"impl Error for WeightedError","synthetic":false,"types":[]},{"text":"impl Error for ReadError","synthetic":false,"types":[]}];
implementors["rand_core"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["regex"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["regex_syntax"] = [{"text":"impl Error for Error","synthetic":false,"types":[]},{"text":"impl Error for Error","synthetic":false,"types":[]},{"text":"impl Error for Error","synthetic":false,"types":[]},{"text":"impl Error for CaseFoldError","synthetic":false,"types":[]},{"text":"impl Error for UnicodeWordError","synthetic":false,"types":[]}];
implementors["scroll"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["serde"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["serde_json"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["symbolic_expressions"] = [{"text":"impl Error for SexpError","synthetic":false,"types":[]}];
implementors["syn"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["termcolor"] = [{"text":"impl Error for ParseColorError","synthetic":false,"types":[]}];
implementors["tvm_rt"] = [{"text":"impl Error for FunctionNotFoundError","synthetic":false,"types":[]},{"text":"impl Error for TypeMismatchError","synthetic":false,"types":[]},{"text":"impl Error for NDArrayError","synthetic":false,"types":[]},{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["tvm_sys"] = [{"text":"impl Error for UnsupportedDeviceError","synthetic":false,"types":[]},{"text":"impl Error for ParseDataTypeError","synthetic":false,"types":[]},{"text":"impl Error for ValueDowncastError","synthetic":false,"types":[]},{"text":"impl Error for FuncCallError","synthetic":false,"types":[]},{"text":"impl Error for UnsupportedDeviceError","synthetic":false,"types":[]}];
implementors["ucd_trie"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["zip"] = [{"text":"impl Error for InvalidPassword","synthetic":false,"types":[]},{"text":"impl Error for ZipError","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()