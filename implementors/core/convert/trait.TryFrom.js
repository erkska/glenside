(function() {var implementors = {};
implementors["egg"] = [{"text":"impl&lt;L:&nbsp;Language&gt; TryFrom&lt;Pattern&lt;L&gt;&gt; for RecExpr&lt;L&gt;","synthetic":false,"types":[]}];
implementors["ordered_float"] = [{"text":"impl TryFrom&lt;f32&gt; for NotNan&lt;f32&gt;","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;f64&gt; for NotNan&lt;f64&gt;","synthetic":false,"types":[]}];
implementors["pyo3"] = [{"text":"impl&lt;'a, T:&nbsp;PyClass&gt; TryFrom&lt;&amp;'a PyCell&lt;T&gt;&gt; for PyRef&lt;'a, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T:&nbsp;PyClass&gt; TryFrom&lt;&amp;'a PyCell&lt;T&gt;&gt; for PyRefMut&lt;'a, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T, U&gt; TryFrom&lt;Result&lt;U, PyErr&gt;&gt; for PyClassInitializer&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: PyClass,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Into&lt;PyClassInitializer&lt;T&gt;&gt;,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["tvm"] = [{"text":"impl TryFrom&lt;RetValue&gt; for ConstIntBound","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for ConstIntBound","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for Attrs","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for Attrs","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for BaseExpr","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for BaseExpr","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for PrimExpr","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for PrimExpr","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for GlobalVar","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for GlobalVar","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for BaseFunc","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for BaseFunc","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for IRModule","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for IRModule","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for Op","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for Op","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for Conv2DAttrs","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for Conv2DAttrs","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for BiasAddAttrs","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for BiasAddAttrs","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for DenseAttrs","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for DenseAttrs","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for GlobalPool2DAttrs","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for GlobalPool2DAttrs","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for MaxPool2DAttrs","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for MaxPool2DAttrs","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for SoftmaxAttrs","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for SoftmaxAttrs","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for ExpandDimsAttrs","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for ExpandDimsAttrs","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for Expr","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for Expr","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for Id","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for Id","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for Constant","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for Constant","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for Tuple","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for Tuple","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for Var","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for Var","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for Call","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for Call","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for Let","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for Let","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for If","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for If","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for TupleGetItem","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for TupleGetItem","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for RefCreate","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for RefCreate","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for RefRead","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for RefRead","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for RefWrite","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for RefWrite","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for Constructor","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for Constructor","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for Pattern","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for Pattern","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for PatternWildcard","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for PatternWildcard","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for PatternVar","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for PatternVar","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for PatternConstructor","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for PatternConstructor","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for PatternTuple","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for PatternTuple","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for Clause","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for Clause","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for Match","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for Match","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for Function","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for Function","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for IntImm","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for IntImm","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for Var","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for Var","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for Add","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for Add","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for Sub","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for Sub","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for Mul","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for Mul","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for Div","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for Div","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for Mod","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for Mod","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for FloorDiv","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for FloorDiv","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for FloorMod","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for FloorMod","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for Min","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for Min","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for Max","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for Max","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for Cast","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for Cast","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for Ramp","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for Ramp","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for Select","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for Select","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for Eq","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for Eq","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for Ne","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for Ne","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for Lt","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for Lt","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for Le","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for Le","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for Gt","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for Gt","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for Ge","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for Ge","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for And","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for And","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for Or","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for Or","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for Not","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for Not","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for Let","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for Let","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for Type","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for Type","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for BaseTensorType","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for BaseTensorType","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for TensorType","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for TensorType","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for PassInfo","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for PassInfo","synthetic":false,"types":[]}];
implementors["tvm_rt"] = [{"text":"impl TryFrom&lt;RetValue&gt; for ObjectRef","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for ObjectRef","synthetic":false,"types":[]},{"text":"impl&lt;'a, T:&nbsp;IsObject&gt; TryFrom&lt;RetValue&gt; for ObjectPtr&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T:&nbsp;IsObject&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for ObjectPtr&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for String","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for String","synthetic":false,"types":[]},{"text":"impl&lt;'a, T:&nbsp;IsObjectRef&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for Array&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T:&nbsp;IsObjectRef&gt; TryFrom&lt;RetValue&gt; for Array&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for Function","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for Function","synthetic":false,"types":[]},{"text":"impl&lt;'a, '_&gt; TryFrom&lt;&amp;'_ ArgValue&lt;'a&gt;&gt; for Function","synthetic":false,"types":[]},{"text":"impl&lt;'a, K, V&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for Map&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: IsObjectRef,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: IsObjectRef,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;K, V&gt; TryFrom&lt;RetValue&gt; for Map&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: IsObjectRef,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: IsObjectRef,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for NDArray","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for NDArray","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;&amp;'a NDArray&gt; for ArrayD&lt;i32&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;&amp;'a mut NDArray&gt; for ArrayD&lt;i32&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;&amp;'a NDArray&gt; for ArrayD&lt;u32&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;&amp;'a mut NDArray&gt; for ArrayD&lt;u32&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;&amp;'a NDArray&gt; for ArrayD&lt;f32&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;&amp;'a mut NDArray&gt; for ArrayD&lt;f32&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for Module","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'v&gt; TryFrom&lt;&amp;'a ArgValue&lt;'v&gt;&gt; for Module","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for Module","synthetic":false,"types":[]}];
implementors["tvm_sys"] = [{"text":"impl TryFrom&lt;ArgValue&lt;'static&gt;&gt; for ByteArray","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for ByteArray","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for Context","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for DataType","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for i8","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'v&gt; TryFrom&lt;&amp;'a ArgValue&lt;'v&gt;&gt; for i8","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for i8","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for i16","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'v&gt; TryFrom&lt;&amp;'a ArgValue&lt;'v&gt;&gt; for i16","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for i16","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for i32","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'v&gt; TryFrom&lt;&amp;'a ArgValue&lt;'v&gt;&gt; for i32","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for i32","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for i64","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'v&gt; TryFrom&lt;&amp;'a ArgValue&lt;'v&gt;&gt; for i64","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for i64","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for isize","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'v&gt; TryFrom&lt;&amp;'a ArgValue&lt;'v&gt;&gt; for isize","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for isize","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for u8","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'v&gt; TryFrom&lt;&amp;'a ArgValue&lt;'v&gt;&gt; for u8","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for u8","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for u16","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'v&gt; TryFrom&lt;&amp;'a ArgValue&lt;'v&gt;&gt; for u16","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for u16","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for u32","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'v&gt; TryFrom&lt;&amp;'a ArgValue&lt;'v&gt;&gt; for u32","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for u32","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for u64","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'v&gt; TryFrom&lt;&amp;'a ArgValue&lt;'v&gt;&gt; for u64","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for u64","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for usize","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'v&gt; TryFrom&lt;&amp;'a ArgValue&lt;'v&gt;&gt; for usize","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for usize","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for f32","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'v&gt; TryFrom&lt;&amp;'a ArgValue&lt;'v&gt;&gt; for f32","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for f32","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for f64","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'v&gt; TryFrom&lt;&amp;'a ArgValue&lt;'v&gt;&gt; for f64","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for f64","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for DLDataType","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'v&gt; TryFrom&lt;&amp;'a ArgValue&lt;'v&gt;&gt; for DLDataType","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for DLDataType","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for TVMContext","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'v&gt; TryFrom&lt;&amp;'a ArgValue&lt;'v&gt;&gt; for TVMContext","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for TVMContext","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for &amp;'a str","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'v&gt; TryFrom&lt;&amp;'a ArgValue&lt;'v&gt;&gt; for &amp;'v str","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for String","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for TVMByteArray","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for CString","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for bool","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; TryFrom&lt;ArgValue&lt;'a&gt;&gt; for bool","synthetic":false,"types":[]},{"text":"impl TryFrom&lt;RetValue&gt; for ()","synthetic":false,"types":[]},{"text":"impl&lt;T, E&gt; TryFrom&lt;Result&lt;T, E&gt;&gt; for RetValue <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;RetValue: TryFrom&lt;T&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;E: From&lt;&lt;RetValue as TryFrom&lt;T&gt;&gt;::Error&gt;,&nbsp;</span>","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()