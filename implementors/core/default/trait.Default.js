(function() {var implementors = {};
implementors["adler32"] = [{"text":"impl Default for RollingAdler32","synthetic":false,"types":[]}];
implementors["aho_corasick"] = [{"text":"impl Default for AhoCorasickBuilder","synthetic":false,"types":[]},{"text":"impl Default for MatchKind","synthetic":false,"types":[]},{"text":"impl Default for MatchKind","synthetic":false,"types":[]},{"text":"impl Default for Config","synthetic":false,"types":[]},{"text":"impl Default for Builder","synthetic":false,"types":[]}];
implementors["ansi_term"] = [{"text":"impl Default for Style","synthetic":false,"types":[]}];
implementors["anyhow"] = [{"text":"impl&lt;'_&gt; Default for Chain&lt;'_&gt;","synthetic":false,"types":[]}];
implementors["approx"] = [{"text":"impl&lt;A:&nbsp;?Sized, B&gt; Default for AbsDiff&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: AbsDiffEq&lt;B&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: ?Sized,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;?Sized, B&gt; Default for Relative&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RelativeEq&lt;B&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: ?Sized,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;?Sized, B&gt; Default for Ulps&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UlpsEq&lt;B&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: ?Sized,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["byteorder"] = [{"text":"impl Default for BigEndian","synthetic":false,"types":[]},{"text":"impl Default for LittleEndian","synthetic":false,"types":[]}];
implementors["clap"] = [{"text":"impl&lt;'a, 'b&gt; Default for Arg&lt;'a, 'b&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'a: 'b,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Default for ArgMatches&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Default for Values&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Default for OsValues&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Default for ArgGroup&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["crc32fast"] = [{"text":"impl Default for Hasher","synthetic":false,"types":[]}];
implementors["egg"] = [{"text":"impl&lt;L:&nbsp;Language, N:&nbsp;Analysis&lt;L&gt; + Default&gt; Default for EGraph&lt;L, N&gt;","synthetic":false,"types":[]},{"text":"impl&lt;L&gt; Default for RecExpr&lt;L&gt;","synthetic":false,"types":[]},{"text":"impl&lt;L, N&gt; Default for Runner&lt;L, N, ()&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Language,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Analysis&lt;L&gt; + Default,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Default for BackoffScheduler","synthetic":false,"types":[]},{"text":"impl Default for Subst","synthetic":false,"types":[]},{"text":"impl Default for Id","synthetic":false,"types":[]}];
implementors["env_logger"] = [{"text":"impl Default for Builder","synthetic":false,"types":[]},{"text":"impl Default for Target","synthetic":false,"types":[]},{"text":"impl Default for WriteStyle","synthetic":false,"types":[]},{"text":"impl Default for TimestampPrecision","synthetic":false,"types":[]},{"text":"impl Default for Builder","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Default for Env&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["flate2"] = [{"text":"impl Default for GzHeader","synthetic":false,"types":[]},{"text":"impl Default for Compression","synthetic":false,"types":[]}];
implementors["glenside"] = [{"text":"impl Default for SimpleCostFunction","synthetic":false,"types":[]},{"text":"impl Default for MyAnalysis","synthetic":false,"types":[]}];
implementors["goblin"] = [{"text":"impl&lt;'a&gt; Default for Strtab&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Default for Container","synthetic":false,"types":[]},{"text":"impl Default for Ctx","synthetic":false,"types":[]},{"text":"impl Default for HintData","synthetic":false,"types":[]},{"text":"impl Default for CompressionHeader","synthetic":false,"types":[]},{"text":"impl Default for CompressionHeader","synthetic":false,"types":[]},{"text":"impl Default for CompressionHeader","synthetic":false,"types":[]},{"text":"impl Default for Header","synthetic":false,"types":[]},{"text":"impl Default for Header","synthetic":false,"types":[]},{"text":"impl Default for ProgramHeader","synthetic":false,"types":[]},{"text":"impl Default for ProgramHeader","synthetic":false,"types":[]},{"text":"impl Default for ProgramHeader","synthetic":false,"types":[]},{"text":"impl Default for SectionHeader","synthetic":false,"types":[]},{"text":"impl Default for SectionHeader","synthetic":false,"types":[]},{"text":"impl Default for SectionHeader","synthetic":false,"types":[]},{"text":"impl Default for Sym","synthetic":false,"types":[]},{"text":"impl Default for Sym","synthetic":false,"types":[]},{"text":"impl Default for Sym","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Default for Symtab&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Default for Dyn","synthetic":false,"types":[]},{"text":"impl Default for DynamicInfo","synthetic":false,"types":[]},{"text":"impl Default for Dyn","synthetic":false,"types":[]},{"text":"impl Default for DynamicInfo","synthetic":false,"types":[]},{"text":"impl Default for Dyn","synthetic":false,"types":[]},{"text":"impl Default for DynamicInfo","synthetic":false,"types":[]},{"text":"impl Default for Rela","synthetic":false,"types":[]},{"text":"impl Default for Rel","synthetic":false,"types":[]},{"text":"impl Default for Rela","synthetic":false,"types":[]},{"text":"impl Default for Rel","synthetic":false,"types":[]},{"text":"impl Default for Reloc","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Default for RelocSection&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Default for FatHeader","synthetic":false,"types":[]},{"text":"impl Default for FatArch","synthetic":false,"types":[]},{"text":"impl Default for Header32","synthetic":false,"types":[]},{"text":"impl Default for Header64","synthetic":false,"types":[]},{"text":"impl Default for Header","synthetic":false,"types":[]},{"text":"impl Default for SymtabCommand","synthetic":false,"types":[]},{"text":"impl Default for DysymtabCommand","synthetic":false,"types":[]},{"text":"impl Default for DyldInfoCommand","synthetic":false,"types":[]},{"text":"impl Default for Section","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Default for Segments&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Default for SymbolsCtx","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Default for SymbolIterator&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Default for DataDirectory","synthetic":false,"types":[]},{"text":"impl Default for DataDirectories","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Default for DebugData&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Default for ImageDebugDirectory","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Default for CodeviewPDB70DebugInfo&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Default for RuntimeFunction","synthetic":false,"types":[]},{"text":"impl Default for ExportDirectoryTable","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Default for ExportData&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Default for Export&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Default for DosHeader","synthetic":false,"types":[]},{"text":"impl Default for CoffHeader","synthetic":false,"types":[]},{"text":"impl Default for Header","synthetic":false,"types":[]},{"text":"impl Default for StandardFields32","synthetic":false,"types":[]},{"text":"impl Default for StandardFields64","synthetic":false,"types":[]},{"text":"impl Default for StandardFields","synthetic":false,"types":[]},{"text":"impl Default for WindowsFields32","synthetic":false,"types":[]},{"text":"impl Default for WindowsFields64","synthetic":false,"types":[]},{"text":"impl Default for Relocation","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Default for Relocations&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Default for SectionTable","synthetic":false,"types":[]},{"text":"impl Default for Symbol","synthetic":false,"types":[]},{"text":"impl Default for AuxFunctionDefinition","synthetic":false,"types":[]},{"text":"impl Default for AuxBeginAndEndFunction","synthetic":false,"types":[]},{"text":"impl Default for AuxWeakExternal","synthetic":false,"types":[]},{"text":"impl Default for AuxSectionDefinition","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Default for SymbolIterator&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Default for Index&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["hashbrown"] = [{"text":"impl&lt;K, V, S&gt; Default for HashMap&lt;K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Default,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T, S&gt; Default for HashSet&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Default,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["indexmap"] = [{"text":"impl&lt;K, V, S&gt; Default for IndexMap&lt;K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Default,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T, S&gt; Default for IndexSet&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Default,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["itoa"] = [{"text":"impl Default for Buffer","synthetic":false,"types":[]}];
implementors["lock_api"] = [{"text":"impl&lt;R:&nbsp;RawMutex, T:&nbsp;?Sized + Default&gt; Default for Mutex&lt;R, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;RawMutex, G:&nbsp;GetThreadId, T:&nbsp;?Sized + Default&gt; Default for ReentrantMutex&lt;R, G, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;RawRwLock, T:&nbsp;?Sized + Default&gt; Default for RwLock&lt;R, T&gt;","synthetic":false,"types":[]}];
implementors["miniz_oxide"] = [{"text":"impl Default for CompressorOxide","synthetic":false,"types":[]},{"text":"impl Default for DecompressorOxide","synthetic":false,"types":[]},{"text":"impl Default for InflateState","synthetic":false,"types":[]}];
implementors["ndarray"] = [{"text":"impl&lt;A, S, D&gt; Default for ArrayBase&lt;S, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: DataOwned&lt;Elem = A&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Dimension,<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Default,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Default + ?Sized&gt; Default for Dim&lt;I&gt;","synthetic":false,"types":[]},{"text":"impl Default for IxDynImpl","synthetic":false,"types":[]}];
implementors["num_bigint"] = [{"text":"impl Default for BigInt","synthetic":false,"types":[]},{"text":"impl Default for BigUint","synthetic":false,"types":[]}];
implementors["num_complex"] = [{"text":"impl&lt;T:&nbsp;Default&gt; Default for Complex&lt;T&gt;","synthetic":false,"types":[]}];
implementors["once_cell"] = [{"text":"impl&lt;T&gt; Default for OnceCell&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Default&gt; Default for Lazy&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Default for OnceCell&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Default&gt; Default for Lazy&lt;T&gt;","synthetic":false,"types":[]}];
implementors["ordered_float"] = [{"text":"impl&lt;T:&nbsp;Default&gt; Default for OrderedFloat&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Default&gt; Default for NotNan&lt;T&gt;","synthetic":false,"types":[]}];
implementors["parking_lot"] = [{"text":"impl Default for Condvar","synthetic":false,"types":[]},{"text":"impl Default for Once","synthetic":false,"types":[]}];
implementors["parking_lot_core"] = [{"text":"impl Default for UnparkResult","synthetic":false,"types":[]},{"text":"impl Default for SpinWait","synthetic":false,"types":[]}];
implementors["ppv_lite86"] = [{"text":"impl Default for vec128_storage","synthetic":false,"types":[]},{"text":"impl Default for vec256_storage","synthetic":false,"types":[]},{"text":"impl Default for vec512_storage","synthetic":false,"types":[]}];
implementors["proc_macro2"] = [{"text":"impl Default for TokenStream","synthetic":false,"types":[]}];
implementors["pyo3"] = [{"text":"impl Default for PyObjectMethods","synthetic":false,"types":[]},{"text":"impl Default for PyDescrMethods","synthetic":false,"types":[]},{"text":"impl Default for PyGCMethods","synthetic":false,"types":[]},{"text":"impl Default for PyIterMethods","synthetic":false,"types":[]},{"text":"impl Default for PyNumberMethods","synthetic":false,"types":[]},{"text":"impl Default for PySequenceMethods","synthetic":false,"types":[]},{"text":"impl Default for PyMappingMethods","synthetic":false,"types":[]},{"text":"impl Default for PyAsyncMethods","synthetic":false,"types":[]},{"text":"impl Default for PyBufferProcs","synthetic":false,"types":[]},{"text":"impl Default for PyHeapTypeObject","synthetic":false,"types":[]},{"text":"impl Default for PyType_Slot","synthetic":false,"types":[]},{"text":"impl Default for PyType_Spec","synthetic":false,"types":[]},{"text":"impl Default for PyObjectArenaAllocator","synthetic":false,"types":[]},{"text":"impl Default for PyHash_FuncDef","synthetic":false,"types":[]},{"text":"impl Default for PyMethodDef","synthetic":false,"types":[]}];
implementors["pyo3_derive_backend"] = [{"text":"impl Default for PyClassArgs","synthetic":false,"types":[]},{"text":"impl Default for PyFunctionAttr","synthetic":false,"types":[]}];
implementors["rand"] = [{"text":"impl Default for EntropyRng","synthetic":false,"types":[]},{"text":"impl Default for ThreadRng","synthetic":false,"types":[]}];
implementors["rand_core"] = [{"text":"impl Default for OsRng","synthetic":false,"types":[]}];
implementors["regex_syntax"] = [{"text":"impl Default for ParserBuilder","synthetic":false,"types":[]},{"text":"impl Default for TranslatorBuilder","synthetic":false,"types":[]},{"text":"impl Default for ClassUnicodeRange","synthetic":false,"types":[]},{"text":"impl Default for ClassBytesRange","synthetic":false,"types":[]},{"text":"impl Default for ParserBuilder","synthetic":false,"types":[]}];
implementors["ryu"] = [{"text":"impl Default for Buffer","synthetic":false,"types":[]}];
implementors["scroll"] = [{"text":"impl Default for StrCtx","synthetic":false,"types":[]},{"text":"impl Default for Endian","synthetic":false,"types":[]}];
implementors["serde"] = [{"text":"impl Default for IgnoredAny","synthetic":false,"types":[]}];
implementors["serde_json"] = [{"text":"impl Default for Map&lt;String, Value&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Default for PrettyFormatter&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Default for Value","synthetic":false,"types":[]}];
implementors["smallvec"] = [{"text":"impl&lt;A:&nbsp;Array&gt; Default for SmallVec&lt;A&gt;","synthetic":false,"types":[]}];
implementors["symbolic_expressions"] = [{"text":"impl Default for Sexp","synthetic":false,"types":[]}];
implementors["syn"] = [{"text":"impl Default for Underscore","synthetic":false,"types":[]},{"text":"impl Default for Abstract","synthetic":false,"types":[]},{"text":"impl Default for As","synthetic":false,"types":[]},{"text":"impl Default for Async","synthetic":false,"types":[]},{"text":"impl Default for Auto","synthetic":false,"types":[]},{"text":"impl Default for Await","synthetic":false,"types":[]},{"text":"impl Default for Become","synthetic":false,"types":[]},{"text":"impl Default for Box","synthetic":false,"types":[]},{"text":"impl Default for Break","synthetic":false,"types":[]},{"text":"impl Default for Const","synthetic":false,"types":[]},{"text":"impl Default for Continue","synthetic":false,"types":[]},{"text":"impl Default for Crate","synthetic":false,"types":[]},{"text":"impl Default for Default","synthetic":false,"types":[]},{"text":"impl Default for Do","synthetic":false,"types":[]},{"text":"impl Default for Dyn","synthetic":false,"types":[]},{"text":"impl Default for Else","synthetic":false,"types":[]},{"text":"impl Default for Enum","synthetic":false,"types":[]},{"text":"impl Default for Extern","synthetic":false,"types":[]},{"text":"impl Default for Final","synthetic":false,"types":[]},{"text":"impl Default for Fn","synthetic":false,"types":[]},{"text":"impl Default for For","synthetic":false,"types":[]},{"text":"impl Default for If","synthetic":false,"types":[]},{"text":"impl Default for Impl","synthetic":false,"types":[]},{"text":"impl Default for In","synthetic":false,"types":[]},{"text":"impl Default for Let","synthetic":false,"types":[]},{"text":"impl Default for Loop","synthetic":false,"types":[]},{"text":"impl Default for Macro","synthetic":false,"types":[]},{"text":"impl Default for Match","synthetic":false,"types":[]},{"text":"impl Default for Mod","synthetic":false,"types":[]},{"text":"impl Default for Move","synthetic":false,"types":[]},{"text":"impl Default for Mut","synthetic":false,"types":[]},{"text":"impl Default for Override","synthetic":false,"types":[]},{"text":"impl Default for Priv","synthetic":false,"types":[]},{"text":"impl Default for Pub","synthetic":false,"types":[]},{"text":"impl Default for Ref","synthetic":false,"types":[]},{"text":"impl Default for Return","synthetic":false,"types":[]},{"text":"impl Default for SelfType","synthetic":false,"types":[]},{"text":"impl Default for SelfValue","synthetic":false,"types":[]},{"text":"impl Default for Static","synthetic":false,"types":[]},{"text":"impl Default for Struct","synthetic":false,"types":[]},{"text":"impl Default for Super","synthetic":false,"types":[]},{"text":"impl Default for Trait","synthetic":false,"types":[]},{"text":"impl Default for Try","synthetic":false,"types":[]},{"text":"impl Default for Type","synthetic":false,"types":[]},{"text":"impl Default for Typeof","synthetic":false,"types":[]},{"text":"impl Default for Union","synthetic":false,"types":[]},{"text":"impl Default for Unsafe","synthetic":false,"types":[]},{"text":"impl Default for Unsized","synthetic":false,"types":[]},{"text":"impl Default for Use","synthetic":false,"types":[]},{"text":"impl Default for Virtual","synthetic":false,"types":[]},{"text":"impl Default for Where","synthetic":false,"types":[]},{"text":"impl Default for While","synthetic":false,"types":[]},{"text":"impl Default for Yield","synthetic":false,"types":[]},{"text":"impl Default for Add","synthetic":false,"types":[]},{"text":"impl Default for AddEq","synthetic":false,"types":[]},{"text":"impl Default for And","synthetic":false,"types":[]},{"text":"impl Default for AndAnd","synthetic":false,"types":[]},{"text":"impl Default for AndEq","synthetic":false,"types":[]},{"text":"impl Default for At","synthetic":false,"types":[]},{"text":"impl Default for Bang","synthetic":false,"types":[]},{"text":"impl Default for Caret","synthetic":false,"types":[]},{"text":"impl Default for CaretEq","synthetic":false,"types":[]},{"text":"impl Default for Colon","synthetic":false,"types":[]},{"text":"impl Default for Colon2","synthetic":false,"types":[]},{"text":"impl Default for Comma","synthetic":false,"types":[]},{"text":"impl Default for Div","synthetic":false,"types":[]},{"text":"impl Default for DivEq","synthetic":false,"types":[]},{"text":"impl Default for Dollar","synthetic":false,"types":[]},{"text":"impl Default for Dot","synthetic":false,"types":[]},{"text":"impl Default for Dot2","synthetic":false,"types":[]},{"text":"impl Default for Dot3","synthetic":false,"types":[]},{"text":"impl Default for DotDotEq","synthetic":false,"types":[]},{"text":"impl Default for Eq","synthetic":false,"types":[]},{"text":"impl Default for EqEq","synthetic":false,"types":[]},{"text":"impl Default for Ge","synthetic":false,"types":[]},{"text":"impl Default for Gt","synthetic":false,"types":[]},{"text":"impl Default for Le","synthetic":false,"types":[]},{"text":"impl Default for Lt","synthetic":false,"types":[]},{"text":"impl Default for MulEq","synthetic":false,"types":[]},{"text":"impl Default for Ne","synthetic":false,"types":[]},{"text":"impl Default for Or","synthetic":false,"types":[]},{"text":"impl Default for OrEq","synthetic":false,"types":[]},{"text":"impl Default for OrOr","synthetic":false,"types":[]},{"text":"impl Default for Pound","synthetic":false,"types":[]},{"text":"impl Default for Question","synthetic":false,"types":[]},{"text":"impl Default for RArrow","synthetic":false,"types":[]},{"text":"impl Default for LArrow","synthetic":false,"types":[]},{"text":"impl Default for Rem","synthetic":false,"types":[]},{"text":"impl Default for RemEq","synthetic":false,"types":[]},{"text":"impl Default for FatArrow","synthetic":false,"types":[]},{"text":"impl Default for Semi","synthetic":false,"types":[]},{"text":"impl Default for Shl","synthetic":false,"types":[]},{"text":"impl Default for ShlEq","synthetic":false,"types":[]},{"text":"impl Default for Shr","synthetic":false,"types":[]},{"text":"impl Default for ShrEq","synthetic":false,"types":[]},{"text":"impl Default for Star","synthetic":false,"types":[]},{"text":"impl Default for Sub","synthetic":false,"types":[]},{"text":"impl Default for SubEq","synthetic":false,"types":[]},{"text":"impl Default for Tilde","synthetic":false,"types":[]},{"text":"impl Default for Brace","synthetic":false,"types":[]},{"text":"impl Default for Bracket","synthetic":false,"types":[]},{"text":"impl Default for Paren","synthetic":false,"types":[]},{"text":"impl Default for Group","synthetic":false,"types":[]},{"text":"impl Default for Generics","synthetic":false,"types":[]},{"text":"impl Default for BoundLifetimes","synthetic":false,"types":[]},{"text":"impl Default for PathArguments","synthetic":false,"types":[]},{"text":"impl&lt;T, P&gt; Default for Punctuated&lt;T, P&gt;","synthetic":false,"types":[]}];
implementors["termcolor"] = [{"text":"impl Default for ColorSpec","synthetic":false,"types":[]}];
implementors["thread_local"] = [{"text":"impl&lt;T:&nbsp;?Sized + Send&gt; Default for ThreadLocal&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized + Send&gt; Default for CachedThreadLocal&lt;T&gt;","synthetic":false,"types":[]}];
implementors["tvm_sys"] = [{"text":"impl Default for __fsid_t","synthetic":false,"types":[]},{"text":"impl Default for DLContext","synthetic":false,"types":[]},{"text":"impl Default for DLDataType","synthetic":false,"types":[]},{"text":"impl Default for DLTensor","synthetic":false,"types":[]},{"text":"impl Default for DLManagedTensor","synthetic":false,"types":[]},{"text":"impl Default for TVMValue","synthetic":false,"types":[]},{"text":"impl Default for TVMByteArray","synthetic":false,"types":[]},{"text":"impl Default for TVMParallelGroupEnv","synthetic":false,"types":[]},{"text":"impl Default for DeviceType","synthetic":false,"types":[]},{"text":"impl Default for Context","synthetic":false,"types":[]},{"text":"impl Default for RetValue","synthetic":false,"types":[]}];
implementors["vec_map"] = [{"text":"impl&lt;V&gt; Default for VecMap&lt;V&gt;","synthetic":false,"types":[]}];
implementors["zip"] = [{"text":"impl Default for DateTime","synthetic":false,"types":[]},{"text":"impl Default for FileOptions","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()