(function() {var implementors = {};
implementors["aho_corasick"] = [{"text":"impl Copy for Match","synthetic":false,"types":[]}];
implementors["ansi_term"] = [{"text":"impl Copy for Prefix","synthetic":false,"types":[]},{"text":"impl Copy for Infix","synthetic":false,"types":[]},{"text":"impl Copy for Suffix","synthetic":false,"types":[]},{"text":"impl Copy for Style","synthetic":false,"types":[]},{"text":"impl Copy for Colour","synthetic":false,"types":[]}];
implementors["atty"] = [{"text":"impl Copy for Stream","synthetic":false,"types":[]}];
implementors["byteorder"] = [{"text":"impl Copy for BigEndian","synthetic":false,"types":[]},{"text":"impl Copy for LittleEndian","synthetic":false,"types":[]}];
implementors["clap"] = [{"text":"impl Copy for AppSettings","synthetic":false,"types":[]},{"text":"impl Copy for ArgSettings","synthetic":false,"types":[]},{"text":"impl Copy for Shell","synthetic":false,"types":[]},{"text":"impl Copy for ErrorKind","synthetic":false,"types":[]}];
implementors["egg"] = [{"text":"impl Copy for Var","synthetic":false,"types":[]},{"text":"impl Copy for Symbol","synthetic":false,"types":[]},{"text":"impl Copy for Id","synthetic":false,"types":[]}];
implementors["either"] = [{"text":"impl&lt;L:&nbsp;Copy, R:&nbsp;Copy&gt; Copy for Either&lt;L, R&gt;","synthetic":false,"types":[]}];
implementors["env_logger"] = [{"text":"impl Copy for Target","synthetic":false,"types":[]},{"text":"impl Copy for WriteStyle","synthetic":false,"types":[]},{"text":"impl Copy for TimestampPrecision","synthetic":false,"types":[]}];
implementors["flate2"] = [{"text":"impl Copy for FlushCompress","synthetic":false,"types":[]},{"text":"impl Copy for FlushDecompress","synthetic":false,"types":[]},{"text":"impl Copy for Status","synthetic":false,"types":[]},{"text":"impl Copy for Compression","synthetic":false,"types":[]}];
implementors["getrandom"] = [{"text":"impl Copy for Error","synthetic":false,"types":[]}];
implementors["glenside"] = [{"text":"impl Copy for PadType","synthetic":false,"types":[]},{"text":"impl Copy for PadLocation","synthetic":false,"types":[]}];
implementors["goblin"] = [{"text":"impl Copy for Container","synthetic":false,"types":[]},{"text":"impl Copy for Ctx","synthetic":false,"types":[]},{"text":"impl Copy for CompressionHeader","synthetic":false,"types":[]},{"text":"impl Copy for CompressionHeader","synthetic":false,"types":[]},{"text":"impl Copy for Header","synthetic":false,"types":[]},{"text":"impl Copy for Header","synthetic":false,"types":[]},{"text":"impl Copy for Header","synthetic":false,"types":[]},{"text":"impl Copy for ProgramHeader","synthetic":false,"types":[]},{"text":"impl Copy for ProgramHeader","synthetic":false,"types":[]},{"text":"impl Copy for SectionHeader","synthetic":false,"types":[]},{"text":"impl Copy for SectionHeader","synthetic":false,"types":[]},{"text":"impl Copy for Sym","synthetic":false,"types":[]},{"text":"impl Copy for Sym","synthetic":false,"types":[]},{"text":"impl Copy for Sym","synthetic":false,"types":[]},{"text":"impl Copy for Dyn","synthetic":false,"types":[]},{"text":"impl Copy for Dyn","synthetic":false,"types":[]},{"text":"impl Copy for Rela","synthetic":false,"types":[]},{"text":"impl Copy for Rela","synthetic":false,"types":[]},{"text":"impl Copy for Reloc","synthetic":false,"types":[]},{"text":"impl Copy for Nhdr32","synthetic":false,"types":[]},{"text":"impl Copy for Nhdr64","synthetic":false,"types":[]},{"text":"impl Copy for FatHeader","synthetic":false,"types":[]},{"text":"impl Copy for FatArch","synthetic":false,"types":[]},{"text":"impl Copy for Header32","synthetic":false,"types":[]},{"text":"impl Copy for Header64","synthetic":false,"types":[]},{"text":"impl Copy for Header","synthetic":false,"types":[]},{"text":"impl Copy for LoadCommandHeader","synthetic":false,"types":[]},{"text":"impl Copy for Section32","synthetic":false,"types":[]},{"text":"impl Copy for Section64","synthetic":false,"types":[]},{"text":"impl Copy for SegmentCommand32","synthetic":false,"types":[]},{"text":"impl Copy for SegmentCommand64","synthetic":false,"types":[]},{"text":"impl Copy for Fvmlib","synthetic":false,"types":[]},{"text":"impl Copy for FvmlibCommand","synthetic":false,"types":[]},{"text":"impl Copy for Dylib","synthetic":false,"types":[]},{"text":"impl Copy for DylibCommand","synthetic":false,"types":[]},{"text":"impl Copy for SubFrameworkCommand","synthetic":false,"types":[]},{"text":"impl Copy for SubClientCommand","synthetic":false,"types":[]},{"text":"impl Copy for SubUmbrellaCommand","synthetic":false,"types":[]},{"text":"impl Copy for SubLibraryCommand","synthetic":false,"types":[]},{"text":"impl Copy for PreboundDylibCommand","synthetic":false,"types":[]},{"text":"impl Copy for DylinkerCommand","synthetic":false,"types":[]},{"text":"impl Copy for ThreadCommand","synthetic":false,"types":[]},{"text":"impl Copy for RoutinesCommand32","synthetic":false,"types":[]},{"text":"impl Copy for RoutinesCommand64","synthetic":false,"types":[]},{"text":"impl Copy for SymtabCommand","synthetic":false,"types":[]},{"text":"impl Copy for DysymtabCommand","synthetic":false,"types":[]},{"text":"impl Copy for DylibTableOfContents","synthetic":false,"types":[]},{"text":"impl Copy for DylibModule","synthetic":false,"types":[]},{"text":"impl Copy for DylibModule64","synthetic":false,"types":[]},{"text":"impl Copy for DylibReference","synthetic":false,"types":[]},{"text":"impl Copy for TwolevelHintsCommand","synthetic":false,"types":[]},{"text":"impl Copy for TwolevelHint","synthetic":false,"types":[]},{"text":"impl Copy for PrebindCksumCommand","synthetic":false,"types":[]},{"text":"impl Copy for UuidCommand","synthetic":false,"types":[]},{"text":"impl Copy for RpathCommand","synthetic":false,"types":[]},{"text":"impl Copy for LinkeditDataCommand","synthetic":false,"types":[]},{"text":"impl Copy for EncryptionInfoCommand32","synthetic":false,"types":[]},{"text":"impl Copy for EncryptionInfoCommand64","synthetic":false,"types":[]},{"text":"impl Copy for VersionMinCommand","synthetic":false,"types":[]},{"text":"impl Copy for DyldInfoCommand","synthetic":false,"types":[]},{"text":"impl Copy for LinkerOptionCommand","synthetic":false,"types":[]},{"text":"impl Copy for SymsegCommand","synthetic":false,"types":[]},{"text":"impl Copy for IdentCommand","synthetic":false,"types":[]},{"text":"impl Copy for FvmfileCommand","synthetic":false,"types":[]},{"text":"impl Copy for EntryPointCommand","synthetic":false,"types":[]},{"text":"impl Copy for SourceVersionCommand","synthetic":false,"types":[]},{"text":"impl Copy for DataInCodeEntry","synthetic":false,"types":[]},{"text":"impl Copy for RelocationInfo","synthetic":false,"types":[]},{"text":"impl Copy for Nlist32","synthetic":false,"types":[]},{"text":"impl Copy for Nlist64","synthetic":false,"types":[]},{"text":"impl Copy for SymbolsCtx","synthetic":false,"types":[]},{"text":"impl Copy for DataDirectory","synthetic":false,"types":[]},{"text":"impl Copy for DataDirectories","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Copy for DebugData&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Copy for ImageDebugDirectory","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Copy for CodeviewPDB70DebugInfo&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Copy for RuntimeFunction","synthetic":false,"types":[]},{"text":"impl Copy for Register","synthetic":false,"types":[]},{"text":"impl Copy for StackFrameOffset","synthetic":false,"types":[]},{"text":"impl Copy for UnwindOperation","synthetic":false,"types":[]},{"text":"impl Copy for UnwindCode","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Copy for UnwindHandler&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Copy for ExportDirectoryTable","synthetic":false,"types":[]},{"text":"impl Copy for DosHeader","synthetic":false,"types":[]},{"text":"impl Copy for CoffHeader","synthetic":false,"types":[]},{"text":"impl Copy for Header","synthetic":false,"types":[]},{"text":"impl Copy for StandardFields32","synthetic":false,"types":[]},{"text":"impl Copy for StandardFields64","synthetic":false,"types":[]},{"text":"impl Copy for StandardFields","synthetic":false,"types":[]},{"text":"impl Copy for WindowsFields32","synthetic":false,"types":[]},{"text":"impl Copy for WindowsFields64","synthetic":false,"types":[]},{"text":"impl Copy for OptionalHeader","synthetic":false,"types":[]},{"text":"impl Copy for Relocation","synthetic":false,"types":[]},{"text":"impl Copy for Symbol","synthetic":false,"types":[]},{"text":"impl Copy for AuxFunctionDefinition","synthetic":false,"types":[]},{"text":"impl Copy for AuxBeginAndEndFunction","synthetic":false,"types":[]},{"text":"impl Copy for AuxWeakExternal","synthetic":false,"types":[]},{"text":"impl Copy for AuxSectionDefinition","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Copy for Header&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["humantime"] = [{"text":"impl Copy for Error","synthetic":false,"types":[]},{"text":"impl Copy for Duration","synthetic":false,"types":[]},{"text":"impl Copy for Error","synthetic":false,"types":[]}];
implementors["itertools"] = [{"text":"impl&lt;T:&nbsp;Copy&gt; Copy for MinMaxResult&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Copy&gt; Copy for Position&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Copy&gt; Copy for FoldWhile&lt;T&gt;","synthetic":false,"types":[]}];
implementors["itoa"] = [{"text":"impl Copy for Buffer","synthetic":false,"types":[]}];
implementors["libc"] = [{"text":"impl Copy for DIR","synthetic":false,"types":[]},{"text":"impl Copy for group","synthetic":false,"types":[]},{"text":"impl Copy for utimbuf","synthetic":false,"types":[]},{"text":"impl Copy for timeval","synthetic":false,"types":[]},{"text":"impl Copy for timespec","synthetic":false,"types":[]},{"text":"impl Copy for rlimit","synthetic":false,"types":[]},{"text":"impl Copy for rusage","synthetic":false,"types":[]},{"text":"impl Copy for ipv6_mreq","synthetic":false,"types":[]},{"text":"impl Copy for hostent","synthetic":false,"types":[]},{"text":"impl Copy for iovec","synthetic":false,"types":[]},{"text":"impl Copy for pollfd","synthetic":false,"types":[]},{"text":"impl Copy for winsize","synthetic":false,"types":[]},{"text":"impl Copy for linger","synthetic":false,"types":[]},{"text":"impl Copy for sigval","synthetic":false,"types":[]},{"text":"impl Copy for itimerval","synthetic":false,"types":[]},{"text":"impl Copy for tms","synthetic":false,"types":[]},{"text":"impl Copy for servent","synthetic":false,"types":[]},{"text":"impl Copy for protoent","synthetic":false,"types":[]},{"text":"impl Copy for FILE","synthetic":false,"types":[]},{"text":"impl Copy for fpos_t","synthetic":false,"types":[]},{"text":"impl Copy for timezone","synthetic":false,"types":[]},{"text":"impl Copy for in_addr","synthetic":false,"types":[]},{"text":"impl Copy for ip_mreq","synthetic":false,"types":[]},{"text":"impl Copy for ip_mreq_source","synthetic":false,"types":[]},{"text":"impl Copy for sockaddr","synthetic":false,"types":[]},{"text":"impl Copy for sockaddr_in","synthetic":false,"types":[]},{"text":"impl Copy for sockaddr_in6","synthetic":false,"types":[]},{"text":"impl Copy for addrinfo","synthetic":false,"types":[]},{"text":"impl Copy for sockaddr_ll","synthetic":false,"types":[]},{"text":"impl Copy for fd_set","synthetic":false,"types":[]},{"text":"impl Copy for tm","synthetic":false,"types":[]},{"text":"impl Copy for sched_param","synthetic":false,"types":[]},{"text":"impl Copy for Dl_info","synthetic":false,"types":[]},{"text":"impl Copy for lconv","synthetic":false,"types":[]},{"text":"impl Copy for in_pktinfo","synthetic":false,"types":[]},{"text":"impl Copy for ifaddrs","synthetic":false,"types":[]},{"text":"impl Copy for in6_rtmsg","synthetic":false,"types":[]},{"text":"impl Copy for arpreq","synthetic":false,"types":[]},{"text":"impl Copy for arpreq_old","synthetic":false,"types":[]},{"text":"impl Copy for arphdr","synthetic":false,"types":[]},{"text":"impl Copy for mmsghdr","synthetic":false,"types":[]},{"text":"impl Copy for epoll_event","synthetic":false,"types":[]},{"text":"impl Copy for sockaddr_un","synthetic":false,"types":[]},{"text":"impl Copy for sockaddr_storage","synthetic":false,"types":[]},{"text":"impl Copy for utsname","synthetic":false,"types":[]},{"text":"impl Copy for sigevent","synthetic":false,"types":[]},{"text":"impl Copy for fpos64_t","synthetic":false,"types":[]},{"text":"impl Copy for rlimit64","synthetic":false,"types":[]},{"text":"impl Copy for glob_t","synthetic":false,"types":[]},{"text":"impl Copy for passwd","synthetic":false,"types":[]},{"text":"impl Copy for spwd","synthetic":false,"types":[]},{"text":"impl Copy for dqblk","synthetic":false,"types":[]},{"text":"impl Copy for signalfd_siginfo","synthetic":false,"types":[]},{"text":"impl Copy for itimerspec","synthetic":false,"types":[]},{"text":"impl Copy for fsid_t","synthetic":false,"types":[]},{"text":"impl Copy for packet_mreq","synthetic":false,"types":[]},{"text":"impl Copy for cpu_set_t","synthetic":false,"types":[]},{"text":"impl Copy for if_nameindex","synthetic":false,"types":[]},{"text":"impl Copy for msginfo","synthetic":false,"types":[]},{"text":"impl Copy for sembuf","synthetic":false,"types":[]},{"text":"impl Copy for input_event","synthetic":false,"types":[]},{"text":"impl Copy for input_id","synthetic":false,"types":[]},{"text":"impl Copy for input_absinfo","synthetic":false,"types":[]},{"text":"impl Copy for input_keymap_entry","synthetic":false,"types":[]},{"text":"impl Copy for input_mask","synthetic":false,"types":[]},{"text":"impl Copy for ff_replay","synthetic":false,"types":[]},{"text":"impl Copy for ff_trigger","synthetic":false,"types":[]},{"text":"impl Copy for ff_envelope","synthetic":false,"types":[]},{"text":"impl Copy for ff_constant_effect","synthetic":false,"types":[]},{"text":"impl Copy for ff_ramp_effect","synthetic":false,"types":[]},{"text":"impl Copy for ff_condition_effect","synthetic":false,"types":[]},{"text":"impl Copy for ff_periodic_effect","synthetic":false,"types":[]},{"text":"impl Copy for ff_rumble_effect","synthetic":false,"types":[]},{"text":"impl Copy for ff_effect","synthetic":false,"types":[]},{"text":"impl Copy for dl_phdr_info","synthetic":false,"types":[]},{"text":"impl Copy for Elf32_Ehdr","synthetic":false,"types":[]},{"text":"impl Copy for Elf64_Ehdr","synthetic":false,"types":[]},{"text":"impl Copy for Elf32_Sym","synthetic":false,"types":[]},{"text":"impl Copy for Elf64_Sym","synthetic":false,"types":[]},{"text":"impl Copy for Elf32_Phdr","synthetic":false,"types":[]},{"text":"impl Copy for Elf64_Phdr","synthetic":false,"types":[]},{"text":"impl Copy for Elf32_Shdr","synthetic":false,"types":[]},{"text":"impl Copy for Elf64_Shdr","synthetic":false,"types":[]},{"text":"impl Copy for Elf32_Chdr","synthetic":false,"types":[]},{"text":"impl Copy for Elf64_Chdr","synthetic":false,"types":[]},{"text":"impl Copy for ucred","synthetic":false,"types":[]},{"text":"impl Copy for mntent","synthetic":false,"types":[]},{"text":"impl Copy for posix_spawn_file_actions_t","synthetic":false,"types":[]},{"text":"impl Copy for posix_spawnattr_t","synthetic":false,"types":[]},{"text":"impl Copy for genlmsghdr","synthetic":false,"types":[]},{"text":"impl Copy for in6_pktinfo","synthetic":false,"types":[]},{"text":"impl Copy for arpd_request","synthetic":false,"types":[]},{"text":"impl Copy for inotify_event","synthetic":false,"types":[]},{"text":"impl Copy for fanotify_response","synthetic":false,"types":[]},{"text":"impl Copy for sockaddr_vm","synthetic":false,"types":[]},{"text":"impl Copy for regmatch_t","synthetic":false,"types":[]},{"text":"impl Copy for sock_extended_err","synthetic":false,"types":[]},{"text":"impl Copy for sockaddr_nl","synthetic":false,"types":[]},{"text":"impl Copy for dirent","synthetic":false,"types":[]},{"text":"impl Copy for dirent64","synthetic":false,"types":[]},{"text":"impl Copy for sockaddr_alg","synthetic":false,"types":[]},{"text":"impl Copy for af_alg_iv","synthetic":false,"types":[]},{"text":"impl Copy for mq_attr","synthetic":false,"types":[]},{"text":"impl Copy for statx","synthetic":false,"types":[]},{"text":"impl Copy for statx_timestamp","synthetic":false,"types":[]},{"text":"impl Copy for aiocb","synthetic":false,"types":[]},{"text":"impl Copy for __exit_status","synthetic":false,"types":[]},{"text":"impl Copy for __timeval","synthetic":false,"types":[]},{"text":"impl Copy for glob64_t","synthetic":false,"types":[]},{"text":"impl Copy for msghdr","synthetic":false,"types":[]},{"text":"impl Copy for cmsghdr","synthetic":false,"types":[]},{"text":"impl Copy for termios","synthetic":false,"types":[]},{"text":"impl Copy for mallinfo","synthetic":false,"types":[]},{"text":"impl Copy for nlmsghdr","synthetic":false,"types":[]},{"text":"impl Copy for nlmsgerr","synthetic":false,"types":[]},{"text":"impl Copy for nl_pktinfo","synthetic":false,"types":[]},{"text":"impl Copy for nl_mmap_req","synthetic":false,"types":[]},{"text":"impl Copy for nl_mmap_hdr","synthetic":false,"types":[]},{"text":"impl Copy for nlattr","synthetic":false,"types":[]},{"text":"impl Copy for rtentry","synthetic":false,"types":[]},{"text":"impl Copy for timex","synthetic":false,"types":[]},{"text":"impl Copy for ntptimeval","synthetic":false,"types":[]},{"text":"impl Copy for regex_t","synthetic":false,"types":[]},{"text":"impl Copy for utmpx","synthetic":false,"types":[]},{"text":"impl Copy for sigset_t","synthetic":false,"types":[]},{"text":"impl Copy for sysinfo","synthetic":false,"types":[]},{"text":"impl Copy for msqid_ds","synthetic":false,"types":[]},{"text":"impl Copy for sigaction","synthetic":false,"types":[]},{"text":"impl Copy for statfs","synthetic":false,"types":[]},{"text":"impl Copy for flock","synthetic":false,"types":[]},{"text":"impl Copy for flock64","synthetic":false,"types":[]},{"text":"impl Copy for siginfo_t","synthetic":false,"types":[]},{"text":"impl Copy for stack_t","synthetic":false,"types":[]},{"text":"impl Copy for stat","synthetic":false,"types":[]},{"text":"impl Copy for stat64","synthetic":false,"types":[]},{"text":"impl Copy for statfs64","synthetic":false,"types":[]},{"text":"impl Copy for statvfs64","synthetic":false,"types":[]},{"text":"impl Copy for pthread_attr_t","synthetic":false,"types":[]},{"text":"impl Copy for _libc_fpxreg","synthetic":false,"types":[]},{"text":"impl Copy for _libc_xmmreg","synthetic":false,"types":[]},{"text":"impl Copy for _libc_fpstate","synthetic":false,"types":[]},{"text":"impl Copy for user_regs_struct","synthetic":false,"types":[]},{"text":"impl Copy for user","synthetic":false,"types":[]},{"text":"impl Copy for mcontext_t","synthetic":false,"types":[]},{"text":"impl Copy for ipc_perm","synthetic":false,"types":[]},{"text":"impl Copy for shmid_ds","synthetic":false,"types":[]},{"text":"impl Copy for termios2","synthetic":false,"types":[]},{"text":"impl Copy for ip_mreqn","synthetic":false,"types":[]},{"text":"impl Copy for user_fpregs_struct","synthetic":false,"types":[]},{"text":"impl Copy for ucontext_t","synthetic":false,"types":[]},{"text":"impl Copy for statvfs","synthetic":false,"types":[]},{"text":"impl Copy for max_align_t","synthetic":false,"types":[]},{"text":"impl Copy for sem_t","synthetic":false,"types":[]},{"text":"impl Copy for pthread_mutexattr_t","synthetic":false,"types":[]},{"text":"impl Copy for pthread_rwlockattr_t","synthetic":false,"types":[]},{"text":"impl Copy for pthread_condattr_t","synthetic":false,"types":[]},{"text":"impl Copy for fanotify_event_metadata","synthetic":false,"types":[]},{"text":"impl Copy for pthread_cond_t","synthetic":false,"types":[]},{"text":"impl Copy for pthread_mutex_t","synthetic":false,"types":[]},{"text":"impl Copy for pthread_rwlock_t","synthetic":false,"types":[]},{"text":"impl Copy for in6_addr","synthetic":false,"types":[]}];
implementors["log"] = [{"text":"impl Copy for LogLevel","synthetic":false,"types":[]},{"text":"impl Copy for LogLevelFilter","synthetic":false,"types":[]},{"text":"impl Copy for LogLocation","synthetic":false,"types":[]}];
implementors["miniz_oxide"] = [{"text":"impl Copy for CompressionStrategy","synthetic":false,"types":[]},{"text":"impl Copy for TDEFLFlush","synthetic":false,"types":[]},{"text":"impl Copy for TDEFLStatus","synthetic":false,"types":[]},{"text":"impl Copy for CompressionLevel","synthetic":false,"types":[]},{"text":"impl Copy for TINFLStatus","synthetic":false,"types":[]},{"text":"impl Copy for MZFlush","synthetic":false,"types":[]},{"text":"impl Copy for MZStatus","synthetic":false,"types":[]},{"text":"impl Copy for MZError","synthetic":false,"types":[]},{"text":"impl Copy for DataFormat","synthetic":false,"types":[]},{"text":"impl Copy for StreamResult","synthetic":false,"types":[]}];
implementors["ndarray"] = [{"text":"impl Copy for ErrorKind","synthetic":false,"types":[]},{"text":"impl&lt;D:&nbsp;Copy&gt; Copy for Indices&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Dimension,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Copy for Slice","synthetic":false,"types":[]},{"text":"impl Copy for SliceOrIndex","synthetic":false,"types":[]},{"text":"impl&lt;T, D&gt; Copy for SliceInfo&lt;T, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Copy,<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Dimension,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Copy&gt; Copy for FoldWhile&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Copy for AxisDescription","synthetic":false,"types":[]},{"text":"impl&lt;'a, D&gt; Copy for Axes&lt;'a, D&gt;","synthetic":false,"types":[]},{"text":"impl Copy for Axis","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Copy + ?Sized&gt; Copy for Dim&lt;I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Copy&gt; Copy for RawViewRepr&lt;A&gt;","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Copy&gt; Copy for ViewRepr&lt;A&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;RawDataClone + Copy, D:&nbsp;Copy&gt; Copy for ArrayBase&lt;S, D&gt;","synthetic":false,"types":[]},{"text":"impl&lt;D:&nbsp;Copy&gt; Copy for Shape&lt;D&gt;","synthetic":false,"types":[]},{"text":"impl&lt;D:&nbsp;Copy&gt; Copy for StrideShape&lt;D&gt;","synthetic":false,"types":[]}];
implementors["ndarray_rand"] = [{"text":"impl&lt;S:&nbsp;Copy&gt; Copy for F32&lt;S&gt;","synthetic":false,"types":[]}];
implementors["num_bigint"] = [{"text":"impl Copy for Sign","synthetic":false,"types":[]}];
implementors["num_complex"] = [{"text":"impl&lt;T:&nbsp;Copy&gt; Copy for Complex&lt;T&gt;","synthetic":false,"types":[]}];
implementors["num_integer"] = [{"text":"impl&lt;A:&nbsp;Copy&gt; Copy for ExtendedGcd&lt;A&gt;","synthetic":false,"types":[]}];
implementors["ordered_float"] = [{"text":"impl&lt;T:&nbsp;Copy&gt; Copy for OrderedFloat&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Copy&gt; Copy for NotNan&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Copy for FloatIsNan","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Copy&gt; Copy for ParseNotNanError&lt;E&gt;","synthetic":false,"types":[]}];
implementors["parking_lot"] = [{"text":"impl Copy for WaitTimeoutResult","synthetic":false,"types":[]},{"text":"impl Copy for OnceState","synthetic":false,"types":[]}];
implementors["parking_lot_core"] = [{"text":"impl Copy for ParkResult","synthetic":false,"types":[]},{"text":"impl Copy for UnparkResult","synthetic":false,"types":[]},{"text":"impl Copy for RequeueOp","synthetic":false,"types":[]},{"text":"impl Copy for FilterOp","synthetic":false,"types":[]},{"text":"impl Copy for UnparkToken","synthetic":false,"types":[]},{"text":"impl Copy for ParkToken","synthetic":false,"types":[]}];
implementors["pest"] = [{"text":"impl Copy for Lookahead","synthetic":false,"types":[]},{"text":"impl Copy for Atomicity","synthetic":false,"types":[]},{"text":"impl Copy for MatchDir","synthetic":false,"types":[]},{"text":"impl Copy for Assoc","synthetic":false,"types":[]}];
implementors["pest_meta"] = [{"text":"impl Copy for RuleType","synthetic":false,"types":[]},{"text":"impl Copy for Rule","synthetic":false,"types":[]}];
implementors["plain"] = [{"text":"impl Copy for Error","synthetic":false,"types":[]}];
implementors["ppv_lite86"] = [{"text":"impl Copy for YesS3","synthetic":false,"types":[]},{"text":"impl Copy for NoS3","synthetic":false,"types":[]},{"text":"impl Copy for YesS4","synthetic":false,"types":[]},{"text":"impl Copy for NoS4","synthetic":false,"types":[]},{"text":"impl Copy for YesA1","synthetic":false,"types":[]},{"text":"impl Copy for NoA1","synthetic":false,"types":[]},{"text":"impl Copy for YesA2","synthetic":false,"types":[]},{"text":"impl Copy for NoA2","synthetic":false,"types":[]},{"text":"impl Copy for YesNI","synthetic":false,"types":[]},{"text":"impl Copy for NoNI","synthetic":false,"types":[]},{"text":"impl&lt;S3:&nbsp;Copy, S4:&nbsp;Copy, NI:&nbsp;Copy&gt; Copy for SseMachine&lt;S3, S4, NI&gt;","synthetic":false,"types":[]},{"text":"impl&lt;NI:&nbsp;Copy&gt; Copy for Avx2Machine&lt;NI&gt;","synthetic":false,"types":[]},{"text":"impl Copy for vec128_storage","synthetic":false,"types":[]},{"text":"impl Copy for vec256_storage","synthetic":false,"types":[]},{"text":"impl Copy for vec512_storage","synthetic":false,"types":[]}];
implementors["proc_macro2"] = [{"text":"impl Copy for Span","synthetic":false,"types":[]},{"text":"impl Copy for Delimiter","synthetic":false,"types":[]},{"text":"impl Copy for Spacing","synthetic":false,"types":[]}];
implementors["pyo3"] = [{"text":"impl Copy for ElementType","synthetic":false,"types":[]},{"text":"impl&lt;'p&gt; Copy for PyVisit&lt;'p&gt;","synthetic":false,"types":[]},{"text":"impl Copy for PyMethodType","synthetic":false,"types":[]},{"text":"impl Copy for PyMethodDef","synthetic":false,"types":[]},{"text":"impl Copy for PyClassAttributeDef","synthetic":false,"types":[]},{"text":"impl Copy for PyGetterDef","synthetic":false,"types":[]},{"text":"impl Copy for PySetterDef","synthetic":false,"types":[]},{"text":"impl Copy for PyMemAllocatorDomain","synthetic":false,"types":[]},{"text":"impl Copy for PyMemAllocatorEx","synthetic":false,"types":[]},{"text":"impl Copy for PyObject","synthetic":false,"types":[]},{"text":"impl Copy for PyVarObject","synthetic":false,"types":[]},{"text":"impl Copy for Py_buffer","synthetic":false,"types":[]},{"text":"impl Copy for PyNumberMethods","synthetic":false,"types":[]},{"text":"impl Copy for PySequenceMethods","synthetic":false,"types":[]},{"text":"impl Copy for PyMappingMethods","synthetic":false,"types":[]},{"text":"impl Copy for PyAsyncMethods","synthetic":false,"types":[]},{"text":"impl Copy for PyBufferProcs","synthetic":false,"types":[]},{"text":"impl Copy for PyTypeObject","synthetic":false,"types":[]},{"text":"impl Copy for PyHeapTypeObject","synthetic":false,"types":[]},{"text":"impl Copy for PyType_Slot","synthetic":false,"types":[]},{"text":"impl Copy for PyType_Spec","synthetic":false,"types":[]},{"text":"impl Copy for PyObjectArenaAllocator","synthetic":false,"types":[]},{"text":"impl Copy for PyHash_FuncDef","synthetic":false,"types":[]},{"text":"impl Copy for Py_complex","synthetic":false,"types":[]},{"text":"impl Copy for PyComplexObject","synthetic":false,"types":[]},{"text":"impl Copy for PyListObject","synthetic":false,"types":[]},{"text":"impl Copy for PyMethodDef","synthetic":false,"types":[]},{"text":"impl Copy for PyModuleDef_Base","synthetic":false,"types":[]},{"text":"impl Copy for PyModuleDef_Slot","synthetic":false,"types":[]},{"text":"impl Copy for PyModuleDef","synthetic":false,"types":[]},{"text":"impl Copy for PyGetSetDef","synthetic":false,"types":[]},{"text":"impl Copy for PyGenObject","synthetic":false,"types":[]},{"text":"impl Copy for PyStructSequence_Field","synthetic":false,"types":[]},{"text":"impl Copy for PyStructSequence_Desc","synthetic":false,"types":[]},{"text":"impl Copy for PyInterpreterState","synthetic":false,"types":[]},{"text":"impl Copy for PyThreadState","synthetic":false,"types":[]},{"text":"impl Copy for PyGILState_STATE","synthetic":false,"types":[]},{"text":"impl Copy for PyCompilerFlags","synthetic":false,"types":[]},{"text":"impl Copy for PyCodeObject","synthetic":false,"types":[]},{"text":"impl Copy for PyFutureFeatures","synthetic":false,"types":[]},{"text":"impl Copy for PyMemberDef","synthetic":false,"types":[]},{"text":"impl Copy for PyTryBlock","synthetic":false,"types":[]},{"text":"impl Copy for PyFrameObject","synthetic":false,"types":[]},{"text":"impl Copy for PyDateTime_CAPI","synthetic":false,"types":[]},{"text":"impl Copy for PyDateTime_Date","synthetic":false,"types":[]},{"text":"impl Copy for PyDateTime_Time","synthetic":false,"types":[]},{"text":"impl Copy for PyDateTime_DateTime","synthetic":false,"types":[]},{"text":"impl Copy for PyDateTime_Delta","synthetic":false,"types":[]},{"text":"impl&lt;'p&gt; Copy for Python&lt;'p&gt;","synthetic":false,"types":[]}];
implementors["rand"] = [{"text":"impl Copy for Bernoulli","synthetic":false,"types":[]},{"text":"impl Copy for BernoulliError","synthetic":false,"types":[]},{"text":"impl Copy for Binomial","synthetic":false,"types":[]},{"text":"impl Copy for Cauchy","synthetic":false,"types":[]},{"text":"impl Copy for Exp1","synthetic":false,"types":[]},{"text":"impl Copy for Exp","synthetic":false,"types":[]},{"text":"impl Copy for Gamma","synthetic":false,"types":[]},{"text":"impl Copy for ChiSquared","synthetic":false,"types":[]},{"text":"impl Copy for FisherF","synthetic":false,"types":[]},{"text":"impl Copy for StudentT","synthetic":false,"types":[]},{"text":"impl Copy for Beta","synthetic":false,"types":[]},{"text":"impl Copy for StandardNormal","synthetic":false,"types":[]},{"text":"impl Copy for Normal","synthetic":false,"types":[]},{"text":"impl Copy for LogNormal","synthetic":false,"types":[]},{"text":"impl Copy for Pareto","synthetic":false,"types":[]},{"text":"impl Copy for Poisson","synthetic":false,"types":[]},{"text":"impl Copy for Triangular","synthetic":false,"types":[]},{"text":"impl&lt;X:&nbsp;Copy + SampleUniform&gt; Copy for Uniform&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X::Sampler: Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;X:&nbsp;Copy&gt; Copy for UniformInt&lt;X&gt;","synthetic":false,"types":[]},{"text":"impl&lt;X:&nbsp;Copy&gt; Copy for UniformFloat&lt;X&gt;","synthetic":false,"types":[]},{"text":"impl Copy for UniformDuration","synthetic":false,"types":[]},{"text":"impl Copy for UnitCircle","synthetic":false,"types":[]},{"text":"impl Copy for UnitSphereSurface","synthetic":false,"types":[]},{"text":"impl Copy for Weibull","synthetic":false,"types":[]},{"text":"impl Copy for WeightedError","synthetic":false,"types":[]},{"text":"impl Copy for OpenClosed01","synthetic":false,"types":[]},{"text":"impl Copy for Open01","synthetic":false,"types":[]},{"text":"impl Copy for Standard","synthetic":false,"types":[]},{"text":"impl Copy for ThreadRng","synthetic":false,"types":[]}];
implementors["rand_core"] = [{"text":"impl Copy for OsRng","synthetic":false,"types":[]}];
implementors["rand_distr"] = [{"text":"impl Copy for UnitSphere","synthetic":false,"types":[]},{"text":"impl Copy for UnitBall","synthetic":false,"types":[]},{"text":"impl Copy for UnitCircle","synthetic":false,"types":[]},{"text":"impl Copy for UnitDisc","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Copy&gt; Copy for Gamma&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl Copy for Error","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Copy&gt; Copy for ChiSquared&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl Copy for ChiSquaredError","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Copy&gt; Copy for FisherF&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl Copy for FisherFError","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Copy&gt; Copy for StudentT&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Copy&gt; Copy for Beta&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl Copy for BetaError","synthetic":false,"types":[]},{"text":"impl Copy for StandardNormal","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Copy&gt; Copy for Normal&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl Copy for Error","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Copy&gt; Copy for LogNormal&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl Copy for Exp1","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Copy&gt; Copy for Exp&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl Copy for Error","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Copy&gt; Copy for Pareto&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl Copy for Error","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Copy&gt; Copy for Pert&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl Copy for PertError","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Copy&gt; Copy for Poisson&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl Copy for Error","synthetic":false,"types":[]},{"text":"impl Copy for Binomial","synthetic":false,"types":[]},{"text":"impl Copy for Error","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Copy&gt; Copy for Cauchy&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl Copy for Error","synthetic":false,"types":[]},{"text":"impl Copy for Error","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Copy&gt; Copy for Triangular&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl Copy for TriangularError","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Copy&gt; Copy for Weibull&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl Copy for Error","synthetic":false,"types":[]}];
implementors["regex"] = [{"text":"impl&lt;'t&gt; Copy for Match&lt;'t&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'t&gt; Copy for Match&lt;'t&gt;","synthetic":false,"types":[]}];
implementors["regex_syntax"] = [{"text":"impl Copy for Span","synthetic":false,"types":[]},{"text":"impl Copy for Position","synthetic":false,"types":[]},{"text":"impl Copy for ClassSetBinaryOpKind","synthetic":false,"types":[]},{"text":"impl Copy for Flag","synthetic":false,"types":[]},{"text":"impl Copy for ClassUnicodeRange","synthetic":false,"types":[]},{"text":"impl Copy for ClassBytesRange","synthetic":false,"types":[]},{"text":"impl Copy for Utf8Sequence","synthetic":false,"types":[]},{"text":"impl Copy for Utf8Range","synthetic":false,"types":[]}];
implementors["ryu"] = [{"text":"impl Copy for Buffer","synthetic":false,"types":[]}];
implementors["scroll"] = [{"text":"impl Copy for StrCtx","synthetic":false,"types":[]},{"text":"impl Copy for Endian","synthetic":false,"types":[]},{"text":"impl Copy for Uleb128","synthetic":false,"types":[]},{"text":"impl Copy for Sleb128","synthetic":false,"types":[]}];
implementors["serde"] = [{"text":"impl&lt;E&gt; Copy for UnitDeserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Copy for BoolDeserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Copy for I8Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Copy for I16Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Copy for I32Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Copy for I64Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Copy for IsizeDeserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Copy for U8Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Copy for U16Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Copy for U64Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Copy for UsizeDeserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Copy for F32Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Copy for F64Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Copy for CharDeserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Copy for I128Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Copy for U128Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Copy for U32Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'de, E&gt; Copy for StrDeserializer&lt;'de, E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'de, E&gt; Copy for BorrowedStrDeserializer&lt;'de, E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'de, E&gt; Copy for BorrowedBytesDeserializer&lt;'de, E&gt;","synthetic":false,"types":[]},{"text":"impl Copy for IgnoredAny","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Copy for Unexpected&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["serde_json"] = [{"text":"impl Copy for Category","synthetic":false,"types":[]}];
implementors["syn"] = [{"text":"impl Copy for Underscore","synthetic":false,"types":[]},{"text":"impl Copy for Abstract","synthetic":false,"types":[]},{"text":"impl Copy for As","synthetic":false,"types":[]},{"text":"impl Copy for Async","synthetic":false,"types":[]},{"text":"impl Copy for Auto","synthetic":false,"types":[]},{"text":"impl Copy for Await","synthetic":false,"types":[]},{"text":"impl Copy for Become","synthetic":false,"types":[]},{"text":"impl Copy for Box","synthetic":false,"types":[]},{"text":"impl Copy for Break","synthetic":false,"types":[]},{"text":"impl Copy for Const","synthetic":false,"types":[]},{"text":"impl Copy for Continue","synthetic":false,"types":[]},{"text":"impl Copy for Crate","synthetic":false,"types":[]},{"text":"impl Copy for Default","synthetic":false,"types":[]},{"text":"impl Copy for Do","synthetic":false,"types":[]},{"text":"impl Copy for Dyn","synthetic":false,"types":[]},{"text":"impl Copy for Else","synthetic":false,"types":[]},{"text":"impl Copy for Enum","synthetic":false,"types":[]},{"text":"impl Copy for Extern","synthetic":false,"types":[]},{"text":"impl Copy for Final","synthetic":false,"types":[]},{"text":"impl Copy for Fn","synthetic":false,"types":[]},{"text":"impl Copy for For","synthetic":false,"types":[]},{"text":"impl Copy for If","synthetic":false,"types":[]},{"text":"impl Copy for Impl","synthetic":false,"types":[]},{"text":"impl Copy for In","synthetic":false,"types":[]},{"text":"impl Copy for Let","synthetic":false,"types":[]},{"text":"impl Copy for Loop","synthetic":false,"types":[]},{"text":"impl Copy for Macro","synthetic":false,"types":[]},{"text":"impl Copy for Match","synthetic":false,"types":[]},{"text":"impl Copy for Mod","synthetic":false,"types":[]},{"text":"impl Copy for Move","synthetic":false,"types":[]},{"text":"impl Copy for Mut","synthetic":false,"types":[]},{"text":"impl Copy for Override","synthetic":false,"types":[]},{"text":"impl Copy for Priv","synthetic":false,"types":[]},{"text":"impl Copy for Pub","synthetic":false,"types":[]},{"text":"impl Copy for Ref","synthetic":false,"types":[]},{"text":"impl Copy for Return","synthetic":false,"types":[]},{"text":"impl Copy for SelfType","synthetic":false,"types":[]},{"text":"impl Copy for SelfValue","synthetic":false,"types":[]},{"text":"impl Copy for Static","synthetic":false,"types":[]},{"text":"impl Copy for Struct","synthetic":false,"types":[]},{"text":"impl Copy for Super","synthetic":false,"types":[]},{"text":"impl Copy for Trait","synthetic":false,"types":[]},{"text":"impl Copy for Try","synthetic":false,"types":[]},{"text":"impl Copy for Type","synthetic":false,"types":[]},{"text":"impl Copy for Typeof","synthetic":false,"types":[]},{"text":"impl Copy for Union","synthetic":false,"types":[]},{"text":"impl Copy for Unsafe","synthetic":false,"types":[]},{"text":"impl Copy for Unsized","synthetic":false,"types":[]},{"text":"impl Copy for Use","synthetic":false,"types":[]},{"text":"impl Copy for Virtual","synthetic":false,"types":[]},{"text":"impl Copy for Where","synthetic":false,"types":[]},{"text":"impl Copy for While","synthetic":false,"types":[]},{"text":"impl Copy for Yield","synthetic":false,"types":[]},{"text":"impl Copy for Add","synthetic":false,"types":[]},{"text":"impl Copy for AddEq","synthetic":false,"types":[]},{"text":"impl Copy for And","synthetic":false,"types":[]},{"text":"impl Copy for AndAnd","synthetic":false,"types":[]},{"text":"impl Copy for AndEq","synthetic":false,"types":[]},{"text":"impl Copy for At","synthetic":false,"types":[]},{"text":"impl Copy for Bang","synthetic":false,"types":[]},{"text":"impl Copy for Caret","synthetic":false,"types":[]},{"text":"impl Copy for CaretEq","synthetic":false,"types":[]},{"text":"impl Copy for Colon","synthetic":false,"types":[]},{"text":"impl Copy for Colon2","synthetic":false,"types":[]},{"text":"impl Copy for Comma","synthetic":false,"types":[]},{"text":"impl Copy for Div","synthetic":false,"types":[]},{"text":"impl Copy for DivEq","synthetic":false,"types":[]},{"text":"impl Copy for Dollar","synthetic":false,"types":[]},{"text":"impl Copy for Dot","synthetic":false,"types":[]},{"text":"impl Copy for Dot2","synthetic":false,"types":[]},{"text":"impl Copy for Dot3","synthetic":false,"types":[]},{"text":"impl Copy for DotDotEq","synthetic":false,"types":[]},{"text":"impl Copy for Eq","synthetic":false,"types":[]},{"text":"impl Copy for EqEq","synthetic":false,"types":[]},{"text":"impl Copy for Ge","synthetic":false,"types":[]},{"text":"impl Copy for Gt","synthetic":false,"types":[]},{"text":"impl Copy for Le","synthetic":false,"types":[]},{"text":"impl Copy for Lt","synthetic":false,"types":[]},{"text":"impl Copy for MulEq","synthetic":false,"types":[]},{"text":"impl Copy for Ne","synthetic":false,"types":[]},{"text":"impl Copy for Or","synthetic":false,"types":[]},{"text":"impl Copy for OrEq","synthetic":false,"types":[]},{"text":"impl Copy for OrOr","synthetic":false,"types":[]},{"text":"impl Copy for Pound","synthetic":false,"types":[]},{"text":"impl Copy for Question","synthetic":false,"types":[]},{"text":"impl Copy for RArrow","synthetic":false,"types":[]},{"text":"impl Copy for LArrow","synthetic":false,"types":[]},{"text":"impl Copy for Rem","synthetic":false,"types":[]},{"text":"impl Copy for RemEq","synthetic":false,"types":[]},{"text":"impl Copy for FatArrow","synthetic":false,"types":[]},{"text":"impl Copy for Semi","synthetic":false,"types":[]},{"text":"impl Copy for Shl","synthetic":false,"types":[]},{"text":"impl Copy for ShlEq","synthetic":false,"types":[]},{"text":"impl Copy for Shr","synthetic":false,"types":[]},{"text":"impl Copy for ShrEq","synthetic":false,"types":[]},{"text":"impl Copy for Star","synthetic":false,"types":[]},{"text":"impl Copy for Sub","synthetic":false,"types":[]},{"text":"impl Copy for SubEq","synthetic":false,"types":[]},{"text":"impl Copy for Tilde","synthetic":false,"types":[]},{"text":"impl Copy for Brace","synthetic":false,"types":[]},{"text":"impl Copy for Bracket","synthetic":false,"types":[]},{"text":"impl Copy for Paren","synthetic":false,"types":[]},{"text":"impl Copy for Group","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Copy for Cursor&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Copy for AttrStyle","synthetic":false,"types":[]},{"text":"impl Copy for BinOp","synthetic":false,"types":[]},{"text":"impl Copy for RangeLimits","synthetic":false,"types":[]},{"text":"impl Copy for TraitBoundModifier","synthetic":false,"types":[]},{"text":"impl Copy for UnOp","synthetic":false,"types":[]},{"text":"impl&lt;'c, 'a&gt; Copy for StepCursor&lt;'c, 'a&gt;","synthetic":false,"types":[]}];
implementors["termcolor"] = [{"text":"impl Copy for ColorChoice","synthetic":false,"types":[]},{"text":"impl Copy for Color","synthetic":false,"types":[]}];
implementors["tvm_sys"] = [{"text":"impl Copy for __fsid_t","synthetic":false,"types":[]},{"text":"impl Copy for DLContext","synthetic":false,"types":[]},{"text":"impl Copy for DLDataType","synthetic":false,"types":[]},{"text":"impl Copy for DLTensor","synthetic":false,"types":[]},{"text":"impl Copy for DLManagedTensor","synthetic":false,"types":[]},{"text":"impl Copy for TVMValue","synthetic":false,"types":[]},{"text":"impl Copy for TVMByteArray","synthetic":false,"types":[]},{"text":"impl Copy for TVMParallelGroupEnv","synthetic":false,"types":[]},{"text":"impl Copy for DeviceType","synthetic":false,"types":[]},{"text":"impl Copy for Context","synthetic":false,"types":[]},{"text":"impl Copy for DataType","synthetic":false,"types":[]}];
implementors["ucd_trie"] = [{"text":"impl&lt;'a&gt; Copy for TrieSetSlice&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["utf8_ranges"] = [{"text":"impl Copy for Utf8Sequence","synthetic":false,"types":[]},{"text":"impl Copy for Utf8Range","synthetic":false,"types":[]}];
implementors["zip"] = [{"text":"impl Copy for CompressionMethod","synthetic":false,"types":[]},{"text":"impl Copy for DateTime","synthetic":false,"types":[]},{"text":"impl Copy for FileOptions","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()