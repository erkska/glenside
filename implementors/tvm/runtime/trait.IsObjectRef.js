(function() {var implementors = {};
implementors["tvm"] = [{"text":"impl IsObjectRef for ConstIntBound","synthetic":false,"types":[]},{"text":"impl IsObjectRef for Attrs","synthetic":false,"types":[]},{"text":"impl IsObjectRef for BaseExpr","synthetic":false,"types":[]},{"text":"impl IsObjectRef for PrimExpr","synthetic":false,"types":[]},{"text":"impl IsObjectRef for GlobalVar","synthetic":false,"types":[]},{"text":"impl IsObjectRef for BaseFunc","synthetic":false,"types":[]},{"text":"impl IsObjectRef for IRModule","synthetic":false,"types":[]},{"text":"impl IsObjectRef for Op","synthetic":false,"types":[]},{"text":"impl IsObjectRef for Conv2DAttrs","synthetic":false,"types":[]},{"text":"impl IsObjectRef for BiasAddAttrs","synthetic":false,"types":[]},{"text":"impl IsObjectRef for DenseAttrs","synthetic":false,"types":[]},{"text":"impl IsObjectRef for GlobalPool2DAttrs","synthetic":false,"types":[]},{"text":"impl IsObjectRef for MaxPool2DAttrs","synthetic":false,"types":[]},{"text":"impl IsObjectRef for SoftmaxAttrs","synthetic":false,"types":[]},{"text":"impl IsObjectRef for ExpandDimsAttrs","synthetic":false,"types":[]},{"text":"impl IsObjectRef for Expr","synthetic":false,"types":[]},{"text":"impl IsObjectRef for Id","synthetic":false,"types":[]},{"text":"impl IsObjectRef for Constant","synthetic":false,"types":[]},{"text":"impl IsObjectRef for Tuple","synthetic":false,"types":[]},{"text":"impl IsObjectRef for Var","synthetic":false,"types":[]},{"text":"impl IsObjectRef for Call","synthetic":false,"types":[]},{"text":"impl IsObjectRef for Let","synthetic":false,"types":[]},{"text":"impl IsObjectRef for If","synthetic":false,"types":[]},{"text":"impl IsObjectRef for TupleGetItem","synthetic":false,"types":[]},{"text":"impl IsObjectRef for RefCreate","synthetic":false,"types":[]},{"text":"impl IsObjectRef for RefRead","synthetic":false,"types":[]},{"text":"impl IsObjectRef for RefWrite","synthetic":false,"types":[]},{"text":"impl IsObjectRef for Constructor","synthetic":false,"types":[]},{"text":"impl IsObjectRef for Pattern","synthetic":false,"types":[]},{"text":"impl IsObjectRef for PatternWildcard","synthetic":false,"types":[]},{"text":"impl IsObjectRef for PatternVar","synthetic":false,"types":[]},{"text":"impl IsObjectRef for PatternConstructor","synthetic":false,"types":[]},{"text":"impl IsObjectRef for PatternTuple","synthetic":false,"types":[]},{"text":"impl IsObjectRef for Clause","synthetic":false,"types":[]},{"text":"impl IsObjectRef for Match","synthetic":false,"types":[]},{"text":"impl IsObjectRef for Function","synthetic":false,"types":[]},{"text":"impl IsObjectRef for IntImm","synthetic":false,"types":[]},{"text":"impl IsObjectRef for Var","synthetic":false,"types":[]},{"text":"impl IsObjectRef for Add","synthetic":false,"types":[]},{"text":"impl IsObjectRef for Sub","synthetic":false,"types":[]},{"text":"impl IsObjectRef for Mul","synthetic":false,"types":[]},{"text":"impl IsObjectRef for Div","synthetic":false,"types":[]},{"text":"impl IsObjectRef for Mod","synthetic":false,"types":[]},{"text":"impl IsObjectRef for FloorDiv","synthetic":false,"types":[]},{"text":"impl IsObjectRef for FloorMod","synthetic":false,"types":[]},{"text":"impl IsObjectRef for Min","synthetic":false,"types":[]},{"text":"impl IsObjectRef for Max","synthetic":false,"types":[]},{"text":"impl IsObjectRef for Cast","synthetic":false,"types":[]},{"text":"impl IsObjectRef for Ramp","synthetic":false,"types":[]},{"text":"impl IsObjectRef for Select","synthetic":false,"types":[]},{"text":"impl IsObjectRef for Eq","synthetic":false,"types":[]},{"text":"impl IsObjectRef for Ne","synthetic":false,"types":[]},{"text":"impl IsObjectRef for Lt","synthetic":false,"types":[]},{"text":"impl IsObjectRef for Le","synthetic":false,"types":[]},{"text":"impl IsObjectRef for Gt","synthetic":false,"types":[]},{"text":"impl IsObjectRef for Ge","synthetic":false,"types":[]},{"text":"impl IsObjectRef for And","synthetic":false,"types":[]},{"text":"impl IsObjectRef for Or","synthetic":false,"types":[]},{"text":"impl IsObjectRef for Not","synthetic":false,"types":[]},{"text":"impl IsObjectRef for Let","synthetic":false,"types":[]},{"text":"impl IsObjectRef for Type","synthetic":false,"types":[]},{"text":"impl IsObjectRef for BaseTensorType","synthetic":false,"types":[]},{"text":"impl IsObjectRef for TensorType","synthetic":false,"types":[]},{"text":"impl IsObjectRef for PassInfo","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()